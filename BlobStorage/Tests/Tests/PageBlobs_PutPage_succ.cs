// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// 

using Microsoft.Rest;
using System;
using System.Diagnostics;
using System.Linq;
using System.IO;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Xml.Linq;
using Xunit;
using BlobStorageTest.Client;
using BlobStorageTest.Client.Models;
using BlobStorageTest.Tests;
using Microsoft.Rest.Azure;

//<dump disabled/>

public class Test000071 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000071_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000071_s.txt", Encoding.UTF8);

    public Test000071() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(@"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc6a096ade6acc4ddbb0b96fa8a2c2d3a4",
                        blob: "source",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000150 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000150_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000150_s.txt", Encoding.UTF8);

    public Test000150() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,42,95,76,239,191,189,30,97,239,191,189,44,48,239,191,189,113,239,191,189,207,164,71,53,239,191,189,239,191,189,239,191,189,205,177,121,239,191,189,60,239,191,189,57,37,239,191,189,239,191,189,239,191,189,126,117,97,239,191,189,239,191,189,43,106,119,119,47,239,191,189,18,239,191,189,28,239,191,189,239,191,189,239,191,189,0,203,129,110,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,16,239,191,189,239,191,189,60,64,239,191,189,52,103,239,191,189,111,239,191,189,239,191,189,27,239,191,189,33,59,108,240,158,144,140,239,191,189,1,88,36,239,191,189,17,239,191,189,230,140,159,239,191,189,239,191,189,115,90,119,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,49,10,8,239,191,189,239,191,189,76,92,124,209,161,31,43,239,191,189,239,191,189,239,191,189,24,91,239,191,189,239,191,189,239,191,189,110,239,191,189,29,239,191,189,239,191,189,112,239,191,189,239,191,189,121,83,36,239,191,189,239,191,189,239,191,189,239,191,189,78,28,53,91,65,239,191,189,16,239,191,189,23,239,191,189,72,239,191,189,122,6,239,191,189,64,239,191,189,14,51,78,96,239,191,189,10,7,70,239,191,189,239,191,189,2,126,125,68,83,239,191,189,44,61,239,191,189,38,44,100,239,191,189,94,2,5,34,95,239,191,189,47,239,191,189,239,191,189,18,51,205,164,118,112,97,17,46,21,239,191,189,239,191,189,14,79,239,191,189,239,191,189,239,191,189,6,77,239,191,189,239,191,189,26,197,169,59,239,191,189,93,239,191,189,232,167,163,115,16,100,107,73,118,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,33,80,239,191,189,107,239,191,189,106,239,191,189,239,191,189,218,190,239,191,189,109,36,105,239,191,189,18,122,41,239,191,189,113,42,197,169,239,191,189,80,32,69,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,25,239,191,189,239,191,189,123,93,61,6,239,191,189,54,239,191,189,115,239,191,189,82,70,201,169,97,239,191,189,113,239,191,189,239,191,189,92,239,191,189,239,191,189,27,106,37,239,191,189,80,239,191,189,239,191,189,213,191,65,79,239,191,189,104,239,191,189,239,191,189,72,107,239,191,189,239,191,189,3,113,116,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,8,70,239,191,189,239,191,189,239,191,189,96,239,191,189,23,31,65,71,221,157,28,17,239,191,189,239,191,189,65,99,239,191,189,40,58,4,205,162,93,239,191,189,239,191,189,37,239,191,189,105,99,239,191,189,36,239,191,189,239,191,189,239,191,189,236,141,158,239,191,189,49,75,86,71,38,239,191,189,87,239,191,189,8,7,239,191,189,39,65,239,191,189,239,191,189,65,239,191,189,87,125,239,191,189,87,239,191,189,36,239,191,189,239,191,189,74,121,100,21,100,239,191,189,239,191,189,239,191,189,27,239,191,189,239,173,134,123,239,191,189,79,239,191,189,29,239,191,189,239,191,189,60,81,239,191,189,233,185,161,239,191,189,15,239,191,189,63,38,126,98,239,191,189,90,239,191,189,16,239,191,189,98,37,239,191,189,222,147,105,239,191,189,239,191,189,105,120,239,191,189,49,20,239,191,189,239,191,189,239,191,189,123,92,239,191,189,98,239,191,189,223,154,239,191,189,239,191,189,47,35,239,191,189,47,92,55,121,239,191,189,239,191,189,239,191,189,43,12,10,37,56,239,191,189,28,124,8,106,239,191,189,105,239,191,189,239,191,189,125,119,74,239,191,189,77,239,191,189,239,191,189,239,191,189,22,100,70,60,239,191,189,12,65,91,78,67,239,191,189,239,191,189,239,191,189,113,54,239,191,189,239,191,189,239,191,189,99,239,191,189,77,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,87,239,191,189,52,239,191,189,239,191,189,239,191,189,123,88,111,239,191,189,15,239,191,189,37,239,191,189,22,239,191,189,6,19,86,3,239,191,189,32,239,191,189,239,191,189,67,239,191,189,222,129,18,39,84,239,191,189,26,239,191,189,118,44,239,191,189,124,117,239,191,189,46,47,239,191,189,239,191,189,61,44,239,191,189,121,239,191,189,4,239,191,189,239,191,189,65,49,239,191,189,54,239,191,189,239,191,189,239,191,189,35,19,239,191,189,70,72,115,76,239,191,189,102,120,239,191,189,17,239,191,189,239,191,189,239,191,189,213,150,44,47,76,22,239,191,189,100,239,191,189,13,71,123,239,191,189,239,191,189,1,63,239,191,189,239,191,189,239,191,189,82,239,191,189,51,239,191,189,87,239,191,189,57,1,239,191,189,239,191,189,86,58,239,191,189,91,39,10,119,92,239,191,189,37,239,191,189,30,56,0,239,191,189,202,163,101,56,100,30,239,191,189,76,57,239,191,189,239,191,189,239,191,189,239,191,189,91,117,239,191,189,99,33,26,239,191,189,64,239,191,189,239,191,189,239,191,189,53,13,239,191,189,48,44,239,191,189,21,239,191,189,239,191,189,95,38,239,191,189,239,191,189,239,191,189,85,212,152,239,191,189,74,239,191,189,121,239,191,189,239,191,189,1,37,97,75,239,191,189,29,15,239,191,189,239,191,189,22,239,191,189,3,87,239,191,189,239,191,189,31,100,239,191,189,239,191,189,239,191,189,121,52,120,239,191,189,239,191,189,70,88,82,239,191,189,239,191,189,97,239,191,189,110,239,191,189,11,203,137,24,239,191,189,239,191,189,239,191,189,89,239,191,189,74,239,191,189,239,191,189,76,12,239,191,189,239,191,189,46,123,239,191,189,38,205,172,114,239,191,189,49,215,182,100,25,67,41,86,239,191,189,239,191,189,84,239,191,189,115,106,60,239,191,189,218,145,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,205,164,239,191,189,239,191,189,71,239,191,189,95,89,239,191,189,239,191,189,239,191,189,66,64,239,191,189,32,109,21,89,239,191,189,122,11,239,191,189,16,116,85,239,191,189,27,239,191,189,239,191,189,100,239,191,189,105,239,191,189,75,239,191,189,67,91,239,191,189,43,33,239,191,189,1,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,213,135,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,122,97,239,191,189,5,239,191,189,18,116,45,106,127,10,44,97,27,239,191,189,89,45,72,113,239,191,189,62,239,191,189,216,137,239,191,189,110,211,175,87,239,191,189,111,2,11,239,191,189,239,191,189,45,239,191,189,239,191,189,85,66,113,87,239,191,189,239,191,189,239,191,189,115,107,43,123,22,67,239,191,189,211,158,209,137,107,81,110,62,239,191,189,214,141,15,8,33,239,191,189,61,239,191,189,239,191,189,69,239,191,189,27,107,239,191,189,81,78,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,43,116,56,51,12,239,191,189,57,239,191,189,56,22,125,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,208,163,113,103,208,128,59,239,191,189,91,115,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,92,49,239,191,189,123,239,191,189,103,4,239,191,189,50,239,191,189,239,191,189,36,90,23,58,239,191,189,21,239,191,189,239,191,189,3,239,191,189,98,239,191,189,104,239,191,189,59,239,191,189,64,60,239,191,189,2,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,75,33,59,108,121,239,191,189,239,191,189,103,116,0,92,239,191,189,78,239,191,189,239,191,189,92,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,196,178,239,191,189,239,191,189,62,9,239,191,189,239,191,189,62,86})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc85dc948338514bfaa5f449ef554097c7",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000147 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000147_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000147_s.txt", Encoding.UTF8);

    public Test000147() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,78,197,165,239,191,189,91,58,51,20,239,191,189,80,239,191,189,66,239,191,189,10,114,239,191,189,239,191,189,26,6,239,191,189,239,191,189,58,57,105,92,239,191,189,239,191,189,102,116,104,40,102,239,191,189,76,91,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,57,20,25,125,105,100,194,144,239,191,189,239,191,189,239,191,189,94,239,191,189,14,20,239,191,189,59,122,115,101,204,160,101,40,44,97,107,239,191,189,239,191,189,43,239,191,189,127,87,239,191,189,37,32,239,191,189,239,191,189,19,214,141,239,191,189,65,8,239,191,189,62,71,0,239,191,189,15,22,33,196,153,239,191,189,239,191,189,81,7,239,191,189,18,239,191,189,92,239,191,189,86,223,141,239,191,189,239,191,189,107,80,239,191,189,239,191,189,81,239,191,189,18,239,191,189,239,191,189,36,102,45,104,239,191,189,28,122,93,239,191,189,239,191,189,118,47,239,191,189,239,191,189,0,43,48,239,191,189,239,191,189,40,109,239,191,189,88,239,191,189,239,191,189,239,191,189,36,239,191,189,206,134,239,191,189,9,44,239,191,189,203,170,196,165,239,191,189,220,129,239,191,189,239,191,189,119,60,239,191,189,239,191,189,104,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,15,81,51,239,191,189,86,239,191,189,239,191,189,108,239,191,189,37,109,73,239,191,189,86,102,239,191,189,68,13,239,191,189,114,45,239,191,189,88,239,191,189,239,191,189,126,3,239,191,189,239,191,189,13,49,239,191,189,90,239,191,189,115,114,0,239,191,189,239,191,189,53,34,239,191,189,22,71,83,239,191,189,239,191,189,100,87,239,191,189,239,191,189,84,239,191,189,68,47,239,191,189,100,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,24,60,239,191,189,98,239,191,189,239,191,189,23,68,239,191,189,239,191,189,60,11,10,65,239,191,189,239,191,189,16,239,191,189,239,191,189,76,26,30,239,191,189,32,22,106,122,14,85,239,191,189,239,191,189,116,89,10,239,191,189,11,239,191,189,72,61,113,63,117,102,239,191,189,74,57,36,239,191,189,239,191,189,20,239,191,189,239,191,189,33,124,239,191,189,239,191,189,94,239,191,189,76,81,119,9,239,191,189,239,191,189,200,177,0,67,122,239,191,189,239,191,189,69,46,12,239,191,189,239,191,189,62,239,191,189,239,191,189,69,239,191,189,47,64,97,86,82,239,191,189,88,5,239,191,189,46,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,205,129,239,191,189,36,115,99,46,239,191,189,70,239,191,189,111,12,65,32,239,191,189,112,11,239,191,189,217,174,57,123,117,212,167,62,205,183,239,191,189,89,52,239,191,189,30,239,191,189,112,84,85,33,79,239,191,189,17,239,191,189,16,95,110,76,195,140,239,191,189,239,191,189,239,191,189,69,92,215,146,82,11,239,191,189,124,53,239,191,189,119,239,191,189,236,190,152,239,191,189,85,239,191,189,86,26,239,191,189,100,13,239,191,189,239,191,189,106,22,102,91,122,65,52,63,121,239,191,189,121,70,90,30,73,239,191,189,239,191,189,26,53,239,191,189,239,191,189,36,239,191,189,239,191,189,93,110,239,191,189,44,112,239,191,189,239,191,189,78,58,239,191,189,239,191,189,239,191,189,77,33,239,191,189,84,67,239,191,189,115,239,191,189,31,239,191,189,239,191,189,239,191,189,13,121,70,74,239,191,189,3,239,191,189,70,117,239,191,189,239,191,189,11,101,7,206,131,13,43,12,98,54,83,84,239,191,189,94,239,191,189,86,239,191,189,208,182,239,191,189,115,73,30,239,191,189,239,191,189,239,191,189,118,55,5,239,191,189,127,239,191,189,35,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,71,239,191,189,27,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,92,239,191,189,212,151,95,239,191,189,239,191,189,26,8,239,191,189,13,239,191,189,27,239,191,189,239,191,189,101,239,191,189,239,191,189,127,239,191,189,4,11,239,191,189,239,191,189,239,191,189,24,239,191,189,82,17,28,77,63,239,191,189,59,239,191,189,239,191,189,98,60,5,239,191,189,239,191,189,212,151,24,43,239,191,189,45,239,191,189,4,239,191,189,239,191,189,53,74,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,38,127,69,239,191,189,111,121,239,191,189,11,54,67,200,176,92,239,191,189,239,191,189,13,53,239,191,189,10,123,239,191,189,61,239,191,189,239,191,189,223,166,239,191,189,239,191,189,1,48,215,149,239,191,189,27,7,4,239,191,189,92,90,239,191,189,82,76,82,239,191,189,239,191,189,239,191,189,58,119,239,191,189,239,191,189,110,61,121,217,189,239,191,189,111,239,191,189,201,144,45,10,6,107,51,239,191,189,65,239,191,189,239,191,189,78,239,191,189,40,78,41,239,191,189,239,191,189,53,239,191,189,12,107,113,239,191,189,22,239,191,189,239,191,189,28,239,191,189,93,30,112,79,239,191,189,239,191,189,42,36,65,76,74,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,20,42,239,191,189,39,239,191,189,94,239,191,189,239,191,189,93,31,93,239,191,189,69,239,191,189,22,239,191,189,239,191,189,127,89,239,191,189,40,239,191,189,36,4,84,239,191,189,239,191,189,46,18,114,239,191,189,239,191,189,123,43,239,191,189,239,191,189,77,53,32,17,239,191,189,18,51,10,239,191,189,77,6,120,239,191,189,30,21,89,213,156,108,124,6,239,191,189,239,191,189,95,116,87,239,191,189,234,134,187,120,25,76,36,239,191,189,239,191,189,94,72,53,22,99,25,61,6,239,191,189,114,239,191,189,239,191,189,93,63,239,191,189,223,191,8,239,191,189,98,239,191,189,239,191,189,114,239,191,189,73,239,191,189,11,239,191,189,239,191,189,43,126,239,191,189,103,239,191,189,239,191,189,102,86,25,239,191,189,109,239,191,189,239,191,189,2,203,151,239,191,189,70,239,191,189,90,67,57,239,191,189,74,239,191,189,239,191,189,195,143,26,239,191,189,50,49,239,191,189,70,12,99,239,191,189,69,62,121,104,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,27,60,239,191,189,239,191,189,69,239,191,189,28,92,239,191,189,239,191,189,239,191,189,88,58,239,191,189,29,239,191,189,239,191,189,51,239,191,189,1,239,191,189,31,239,191,189,84,59,239,191,189,239,191,189,239,191,189,15,28,239,191,189,94,87,22,239,191,189,23,94,198,190,239,191,189,239,191,189,92,214,161,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,60,106,28,239,191,189,239,191,189,10,239,191,189,105,239,191,189,211,133,37,239,191,189,1,36,239,191,189,6,93,239,191,189,117,239,191,189,24,84,73,79,100,239,191,189,239,191,189,239,191,189,239,191,189,47,54,239,191,189,60,26,239,191,189,239,191,189,118,203,188,239,191,189,111,48,239,191,189,80,124,79,239,191,189,239,191,189,86,213,129,239,191,189,69,98,36,22,239,191,189,81,46,116,53,239,191,189,239,191,189,79,61,100,239,191,189,120,205,143,239,191,189,61,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,96,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,4,37,239,191,189,71,239,191,189,239,191,189,64,239,191,189,1,62,239,191,189,94,239,191,189,69,239,175,158,18,61,74,239,191,189,125,25,239,191,189,81,80,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,52,239,191,189,215,173,239,191,189,239,191,189,3,198,184,74,40,239,191,189,239,191,189,239,191,189,71,109,68,239,191,189,239,191,189,239,191,189,96,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,101,239,191,189,239,191,189,239,191,189,77,239,191,189,120,78,54,108,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,114,49,239,191,189,37,97,239,191,189,239,191,189,239,191,189,239,191,189,105,10,23,239,191,189,239,191,189,239,191,189,114,71,33,239,191,189,67,239,191,189,239,191,189,118,124,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,32,22,239,191,189,239,191,189,239,191,189,90,52,111,239,191,189,239,191,189,40,239,191,189,239,191,189,97,123,113,239,191,189,37,125,22,239,191,189,92,5,223,187,73,48,108,59,108,239,191,189,43,239,191,189,39,239,191,189,239,191,189,62,87,239,191,189,239,191,189,239,191,189,117,89,239,191,189,106,239,191,189,239,191,189,239,191,189,122,71,0,239,191,189,31,124,48,239,191,189,17,239,191,189,204,130,41,239,191,189,51,124,17,239,191,189,14,239,191,189,106,239,191,189,51,53,126,239,191,189,41,61,2,63,117,41,239,191,189,239,191,189,239,191,189,239,191,189,107,0,12,89,239,191,189,51,239,191,189,239,191,189,239,191,189,36,239,191,189,35,65,220,180,109,239,191,189,33,40,239,191,189,20,239,191,189,104,239,191,189,82,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,63,16,17,239,191,189,54,19,239,191,189,239,191,189,89,239,191,189,6,239,191,189,38,239,191,189,7,239,191,189,109,117,53,223,160,239,191,189,125,7,3,115,239,191,189,101,239,191,189,48,54,76,1,204,163,125,239,191,189,126,239,191,189,120,32,14,239,191,189,76,239,191,189,239,191,189,70,41,239,191,189,239,191,189,21,239,191,189,96,112,121,114,239,191,189,239,191,189,239,191,189,57,54,239,191,189,41,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,239,132,140,103,239,191,189,239,191,189,239,191,189,239,191,189,11,216,146,60,239,191,189,32,239,191,189,239,191,189,91,41,11,34,239,191,189,46,111,65,92,239,191,189,40,239,191,189,239,191,189,64,95,239,191,189,37,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,128,118,15,88,239,191,189,239,191,189,127,239,191,189,16,86,29,37,35,239,191,189,239,191,189,40,13,239,191,189,51,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,108,57,86,48,74,67,239,191,189,71,239,191,189,101,239,191,189,239,191,189,239,191,189,66,239,191,189,31,112,239,191,189,58,239,191,189,239,191,189,239,191,189,75,31,200,134,82,115,92,19,110,239,191,189,121,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,18,85,221,159,63,239,191,189,104,85,239,191,189,125,84,239,191,189,84,239,191,189,213,161,239,191,189,55,104,239,191,189,239,191,189,84,239,191,189,112,239,191,189,239,191,189,9,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,43,12,60,35,30,239,191,189,239,191,189,223,190,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,1,33,0,239,191,189,47,73,23,239,191,189,114,239,191,189,117,239,191,189,105,239,191,189,44,239,191,189,239,191,189,117,239,191,189,239,191,189,69,239,191,189,239,191,189,115,11,239,191,189,16,57,46,27,239,191,189,239,191,189,5,207,191,6,239,191,189,2,239,191,189,239,191,189,37,239,191,189,239,191,189,87,107,88,85,29,101,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,91,45,239,191,189,239,191,189,125,56,239,191,189,108,87,239,191,189,239,191,189,239,191,189,7,38,90,239,191,189,120,31,213,189,239,191,189,239,191,189,8,239,191,189,92,239,191,189,239,191,189,78,32,69,239,191,189,13,239,191,189,100,239,191,189,21,26,126,239,191,189,70,26,85,115,123,214,186,21,63,239,191,189,29,2,239,191,189,33,26,98,239,191,189,239,191,189,52,33,68,11,30,54,239,191,189,30,116,239,191,189,239,191,189,77,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,41,239,191,189,220,161,221,147,239,191,189,3,67,59,239,191,189,239,191,189,2,72,239,191,189,239,191,189,93,69,59,239,191,189,30,239,191,189,92,98,24,113,239,191,189,64,90,8,0,239,191,189,119,239,191,189,103,239,191,189,87,127,103,119,85,51,91,239,191,189,196,161,5,239,191,189,221,156,78,82,239,191,189,239,191,189,84,49,122,239,191,189,108,239,191,189,239,191,189,239,191,189,59,58,88,101,68,239,191,189,239,191,189,239,191,189,239,191,189,196,167,239,191,189,121,121,239,191,189,83,239,191,189,239,191,189,124,107,239,191,189,65,239,191,189,55,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,204,138,31,239,191,189,47,95,93,36,23,79,239,191,189,112,239,191,189,239,191,189,239,191,189,218,184,239,191,189,53,239,191,189,239,191,189,239,191,189,44,207,136,23,239,191,189,12,239,191,189,216,176,239,191,189,239,191,189,239,191,189,239,191,189,97,89,208,170,239,191,189,114,239,191,189,118,45,239,191,189,65,239,191,189,212,156,57,11,61,239,191,189,94,30,239,191,189,93,80,31,24,239,191,189,80,86,63,239,191,189,215,140,239,191,189,34,57,239,191,189,239,191,189,239,191,189,65,41,239,191,189,239,191,189,34,71,99,239,191,189,112,239,191,189,239,191,189,115,37,239,191,189,239,191,189,10,3,9,239,191,189,239,191,189,40,34,112,55,239,191,189,213,180,20,239,191,189,99,239,191,189,35,71,239,191,189,53,48,75,95,45,216,180,12,239,191,189,239,191,189,114,43,239,191,189,8,239,191,189,24,53,118,54,99,24,6,125,78,111,77,239,191,189,78,13,12,219,168,43,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,66,239,191,189,239,191,189,99,35,239,191,189,71,239,191,189,45,66,239,191,189,239,191,189,103,47,239,191,189,239,191,189,239,191,189,239,191,189,70,101,239,191,189,239,191,189,239,191,189,239,191,189,0,12,239,191,189,45,89,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,207,137,12,41,239,191,189,7,115,222,153,239,191,189,70,61,31,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,28,110,239,191,189,239,191,189,98,23,239,191,189,25,63,239,191,189,239,191,189,239,191,189,95,107,106,239,191,189,115,239,191,189,96,93,239,191,189,239,191,189,77,13,239,191,189,206,153,64,239,191,189,221,159,239,191,189,13,239,191,189,86,8,239,191,189,239,191,189,18,239,191,189,239,191,189,51,66,239,191,189,44,239,191,189,210,181,10,77,239,191,189,68,50,26,239,191,189,120,122,239,191,189,72,89,217,167,239,191,189,8,239,191,189,82,239,191,189,20,239,191,189,239,191,189,58,239,191,189,109,111,88,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,53,74,12,90,239,191,189,239,191,189,80,221,142,239,191,189,0,201,152,20,239,191,189,239,191,189,239,191,189,103,239,191,189,71,239,191,189,47,104,239,191,189,239,191,189,196,171,55,239,191,189,30,11,239,191,189,76,117,239,191,189,92,239,191,189,239,191,189,42,95,58,55,76})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc85dc948338514bfaa5f449ef554097c7",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000156 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000156_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000156_s.txt", Encoding.UTF8);

    public Test000156() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,36,239,191,189,107,239,191,189,239,191,189,85,74,111,239,191,189,239,191,189,35,32,96,23,98,239,191,189,103,34,239,191,189,239,191,189,20,239,191,189,239,191,189,219,172,239,191,189,239,191,189,239,191,189,36,239,191,189,101,239,191,189,239,191,189,72,239,191,189,68,112,239,191,189,239,191,189,239,191,189,76,25,239,191,189,96,30,208,149,239,191,189,239,191,189,74,57,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,1,239,191,189,239,191,189,63,102,206,134,239,191,189,239,191,189,122,239,191,189,11,239,191,189,239,191,189,41,122,239,191,189,239,191,189,5,81,239,191,189,239,191,189,108,106,239,191,189,84,239,191,189,9,70,239,191,189,8,18,239,191,189,239,191,189,24,207,162,239,191,189,105,239,191,189,31,7,83,239,191,189,21,72,239,191,189,207,168,239,191,189,26,239,191,189,207,166,239,191,189,100,239,191,189,83,239,191,189,18,22,125,86,47,113,239,191,189,62,239,191,189,89,216,175,112,63,50,121,72,239,191,189,84,68,117,239,191,189,97,195,172,67,66,37,239,191,189,239,191,189,61,78,44,87,239,191,189,239,191,189,239,191,189,36,77,67,10,239,191,189,37,78,239,191,189,107,84,239,191,189,116,110,28,239,191,189,239,191,189,109,239,191,189,45,27,239,191,189,239,191,189,46,239,191,189,24,239,191,189,239,191,189,27,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,36,95,17,58,121,239,191,189,18,25,65,238,178,177,239,191,189,239,191,189,89,79,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,31,239,191,189,239,191,189,21,47,50,32,239,191,189,59,0,239,191,189,239,191,189,239,191,189,239,191,189,50,35,106,9,122,64,63,239,191,189,102,89,95,239,191,189,59,239,191,189,94,13,10,239,191,189,239,191,189,63,94,73,100,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,22,124,239,191,189,97,239,191,189,213,138,239,191,189,239,191,189,111,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,118,69,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,44,239,191,189,114,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,9,32,95,239,191,189,239,191,189,239,191,189,239,191,189,111,19,51,213,189,239,191,189,239,191,189,40,239,191,189,208,162,239,191,189,63,83,33,121,84,239,191,189,239,191,189,73,16,239,191,189,11,239,191,189,22,239,191,189,75,239,191,189,86,239,191,189,7,43,22,21,239,191,189,109,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,96,9,239,191,189,239,191,189,58,239,191,189,11,239,191,189,239,191,189,95,239,191,189,239,191,189,8,69,239,191,189,239,191,189,239,191,189,239,191,189,209,167,239,191,189,118,239,191,189,42,239,191,189,239,191,189,195,157,58,77,239,191,189,120,32,1,88,38,69,16,8,239,191,189,239,191,189,39,94,239,191,189,98,239,191,189,101,112,239,191,189,239,191,189,239,191,189,239,191,189,198,185,63,30,47,239,191,189,239,191,189,52,239,191,189,109,239,191,189,127,239,191,189,58,239,191,189,6,239,191,189,124,239,191,189,239,191,189,34,203,162,23,9,239,191,189,239,191,189,77,83,239,191,189,239,191,189,81,61,239,191,189,103,239,191,189,57,239,191,189,239,191,189,110,239,191,189,239,191,189,110,239,191,189,239,191,189,28,40,239,191,189,94,239,191,189,93,48,98,239,191,189,239,191,189,239,191,189,6,38,239,191,189,239,191,189,239,191,189,239,191,189,23,45,93,239,191,189,103,68,239,191,189,239,191,189,239,191,189,42,34,86,93,31,56,239,191,189,239,191,189,239,191,189,239,191,189,72,92,239,191,189,14,121,35,51,239,191,189,239,191,189,239,191,189,60,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,25,207,188,108,55,111,77,239,191,189,125,239,191,189,57,38,0,239,191,189,239,191,189,125,239,191,189,62,239,191,189,121,239,191,189,33,239,191,189,239,191,189,210,141,54,26,239,191,189,239,191,189,239,191,189,45,239,191,189,60,239,191,189,0,239,191,189,239,191,189,60,239,191,189,239,191,189,100,239,191,189,203,155,239,191,189,124,42,239,191,189,115,13,38,239,191,189,239,191,189,79,235,154,169,57,50,239,191,189,239,191,189,71,11,39,239,191,189,34,239,191,189,239,191,189,203,134,116,239,191,189,5,123,27,56,6,239,191,189,66,239,191,189,239,191,189,6,19,32,216,148,220,176,239,191,189,85,13,3,239,191,189,13,239,191,189,28,239,191,189,239,191,189,239,191,189,209,189,57,239,191,189,239,191,189,110,239,191,189,125,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,52,239,191,189,79,47,70,14,79,118,120,113,41,239,191,189,239,191,189,239,191,189,239,191,189,98,26,112,239,191,189,82,34,37,239,191,189,105,239,191,189,94,124,239,191,189,239,191,189,86,12,239,191,189,239,191,189,27,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,109,116,39,69,239,191,189,239,191,189,53,7,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,14,99,239,191,189,61,239,191,189,98,239,191,189,34,100,48,57,239,191,189,22,10,14,114,239,191,189,48,105,239,191,189,239,191,189,96,36,71,127,70,230,143,185,239,191,189,67,239,191,189,124,239,191,189,62,109,106,239,191,189,28,239,191,189,239,191,189,82,239,191,189,20,113,93,31,239,191,189,34,42,239,191,189,239,191,189,239,191,189,239,191,189,93,2,239,191,189,239,191,189,104,75,124,37,105,239,191,189,239,191,189,120,5,60,204,160,7,66,20,239,191,189,239,191,189,94,239,191,189,15,239,191,189,33,39,239,191,189,109,239,191,189,239,191,189,45,239,191,189,124,59,239,191,189,117,58,239,191,189,11,239,191,189,239,191,189,239,191,189,39,239,191,189,87,239,191,189,47,239,191,189,34,93,113,239,191,189,239,191,189,239,191,189,101,239,191,189,31,71,35,239,191,189,239,191,189,239,191,189,239,191,189,47,74,115,239,191,189,239,191,189,239,191,189,7,66,239,191,189,105,117,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,107,239,191,189,76,123,239,191,189,125,239,191,189,239,191,189,85,239,191,189,120,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,85,46,219,131,239,191,189,239,191,189,239,191,189,67,125,239,191,189,239,191,189,239,191,189,111,111,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,61,19,239,191,189,94,239,191,189,102,239,191,189,239,191,189,46,239,191,189,35,28,95,239,191,189,50,30,239,191,189,33,239,191,189,40,48,18,118,206,160,16,239,191,189,126,21,239,191,189,21,239,191,189,239,191,189,82,66,239,191,189,125,239,191,189,34,239,191,189,239,191,189,20,239,191,189,239,191,189,239,191,189,107,239,191,189,60,239,191,189,47,239,191,189,78,239,191,189,239,191,189,43,239,191,189,198,189,124,239,191,189,76,239,191,189,79,239,191,189,68,58,205,136,239,191,189,34,43,239,191,189,69,87,239,191,189,239,191,189,20,239,191,189,11,66,80,239,191,189,105,239,191,189,78,239,191,189,39,239,191,189,209,191,121,91,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,11,75,62,12,239,191,189,125,77,114,46,239,191,189,239,191,189,239,191,189,215,188,10,239,191,189,239,191,189,102,239,191,189,239,191,189,5,97,76,239,191,189,98,239,191,189,118,239,191,189,91,55,21,239,191,189,99,7,0,239,191,189,18,239,191,189,239,191,189,19,0,85,239,191,189,239,191,189,31,231,161,159,239,191,189,113,37,98,195,149})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc85dc948338514bfaa5f449ef554097c7",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000153 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000153_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000153_s.txt", Encoding.UTF8);

    public Test000153() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{14,117,239,191,189,118,105,4,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,17,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,216,172,239,191,189,239,191,189,239,191,189,6,239,191,189,31,9,80,1,26,36,127,205,152,53,239,191,189,100,83,217,149,92,91,72,70,97,14,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,4,239,191,189,65,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,17,125,2,72,86,63,66,79,48,109,239,191,189,239,191,189,239,191,189,71,21,15,45,66,46,225,128,172,239,191,189,239,191,189,18,93,239,191,189,95,239,191,189,122,88,80,103,239,191,189,118,62,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,68,75,3,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,46,37,100,239,191,189,16,239,191,189,67,239,191,189,102,239,191,189,239,191,189,97,84,70,239,191,189,239,191,189,209,162,239,191,189,120,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,127,40,56,113,239,191,189,239,191,189,34,65,97,123,45,239,191,189,61,239,191,189,239,191,189,12,13,81,239,191,189,75,239,191,189,5,28,10,239,191,189,70,239,191,189,239,191,189,115,239,191,189,104,239,191,189,196,185,45,126,239,191,189,4,239,191,189,50,5,32,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,10,52,118,51,85,239,191,189,35,83,122,239,191,189,239,191,189,239,191,189,42,121,25,198,142,53,77,34,124,70,239,191,189,239,191,189,121,102,71,239,191,189,19,41,239,191,189,210,171,201,143,67,239,191,189,40,11,239,191,189,115,239,191,189,100,51,101,239,191,189,121,9,239,191,189,239,191,189,233,174,158,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,101,219,178,103,119,94,239,191,189,25,97,239,191,189,239,191,189,239,191,189,101,41,108,239,191,189,239,191,189,239,191,189,94,124,239,191,189,239,191,189,61,21,70,63,239,191,189,51,16,59,239,191,189,95,239,191,189,77,239,191,189,5,239,191,189,79,239,191,189,239,191,189,122,239,191,189,23,32,239,191,189,0,239,191,189,239,191,189,50,239,191,189,239,191,189,11,239,191,189,239,191,189,64,120,239,191,189,239,191,189,33,55,125,239,191,189,9,38,71,118,35,24,239,191,189,103,239,191,189,117,239,191,189,2,239,191,189,239,191,189,29,95,70,239,191,189,92,1,37,114,239,191,189,239,191,189,239,191,189,13,45,103,34,46,239,191,189,88,194,187,239,191,189,239,191,189,63,239,191,189,107,1,239,191,189,239,191,189,82,23,239,191,189,239,191,189,104,239,191,189,239,191,189,62,239,191,189,123,32,239,191,189,227,179,176,239,191,189,79,11,86,0,239,191,189,71,61,49,64,28,239,191,189,68,31,105,79,91,54,42,32,127,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,83,58,55,11,239,191,189,62,40,239,191,189,239,191,189,96,239,191,189,239,191,189,46,11,239,191,189,201,145,76,239,191,189,59,30,112,43,239,191,189,127,239,191,189,239,191,189,49,239,191,189,76,103,239,191,189,24,239,191,189,239,191,189,3,239,191,189,52,68,239,191,189,27,124,239,191,189,239,191,189,108,239,191,189,20,239,191,189,20,113,87,203,171,239,191,189,239,191,189,14,114,239,191,189,30,239,191,189,239,191,189,239,191,189,63,239,191,189,223,177,69,24,239,191,189,239,191,189,92,8,25,31,239,191,189,239,191,189,60,20,19,239,191,189,126,239,191,189,239,191,189,239,191,189,15,0,109,35,16,239,191,189,38,239,191,189,36,239,191,189,239,191,189,239,191,189,209,186,239,191,189,239,191,189,239,191,189,69,20,78,239,191,189,239,191,189,35,78,239,191,189,93,121,96,44,106,62,100,239,191,189,239,191,189,68,34,8,239,191,189,71,239,191,189,239,191,189,31,239,191,189,12,239,191,189,70,67,88,7,239,191,189,239,191,189,98,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,34,43,47,239,191,189,205,186,87,56,12,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,97,108,239,191,189,239,191,189,22,87,239,191,189,25,32,89,239,191,189,239,191,189,219,157,40,239,191,189,99,34,70,239,191,189,27,239,191,189,28,82,64,239,191,189,239,191,189,57,81,239,191,189,116,239,191,189,239,191,189,100,101,84,239,191,189,80,239,191,189,105,239,191,189,17,14,108,35,13,123,239,191,189,239,191,189,97,19,112,239,191,189,47,239,191,189,239,191,189,80,64,80,96,239,191,189,81,239,191,189,63,239,191,189,26,239,191,189,119,56,239,191,189,239,191,189,18,57,239,191,189,38,10,116,239,191,189,47,51,57,35,86,239,191,189,239,191,189,3,226,160,129,239,191,189,3,123,239,191,189,239,191,189,239,191,189,69,72,207,135,8,47,4,98,14,239,191,189,0,55,239,191,189,8,239,191,189,104,239,191,189,16,29,38,118,239,191,189,239,191,189,113,239,191,189,55,60,239,191,189,239,191,189,239,191,189,90,19,239,191,189,12,239,191,189,239,191,189,239,191,189,40,38,3,53,239,191,189,71,100,239,191,189,239,191,189,18,239,191,189,239,191,189,31,99,106,239,191,189,98,90,74,112,94,239,191,189,239,191,189,239,191,189,14,239,191,189,61,48,239,191,189,239,191,189,39,22,239,191,189,119,239,191,189,25,239,191,189,116,239,191,189,21,37,239,191,189,76,239,191,189,109,239,191,189,48,78,239,191,189,239,191,189,81,71,239,191,189,85,16,39,15,9,51,239,191,189,68,78,113,239,191,189,92,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,32,239,191,189,64,239,191,189,57,17,239,191,189,239,191,189,123,239,191,189,9,201,166,239,191,189,64,239,191,189,239,191,189,239,191,189,49,239,191,189,52,239,191,189,111,103,239,191,189,13,239,191,189,85,239,191,189,239,191,189,239,191,189,102,239,191,189,56,239,191,189,34,11,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,7,239,191,189,80,239,191,189,86,92,4,239,191,189,110,239,191,189,239,191,189,239,191,189,72,99,239,191,189,113,77,239,191,189,197,155,80,239,191,189,83,239,191,189,239,191,189,239,191,189,53,14,18,239,191,189,239,191,189,53,214,162,94,2,239,191,189,33,204,175,55,79,96,239,191,189,239,191,189,0,119,68,71,122,109,84,239,191,189,56,239,191,189,29,239,191,189,239,191,189,77,239,191,189,38,239,191,189,126,239,191,189,86,239,191,189,20,239,191,189,4,239,191,189,239,191,189,44,239,191,189,22,99,1,239,191,189,96,239,191,189,239,191,189,47,239,191,189,199,151,44,66,61,239,191,189,239,191,189,64,106,30,239,191,189,29,239,191,189,65,208,140,239,191,189,48,239,191,189,239,191,189,63,239,191,189,239,191,189,65,127,239,191,189,239,191,189,203,147,55,60,239,191,189,127,53,46,239,191,189,19,239,191,189,118,239,191,189,239,191,189,74,107,87,239,191,189,239,191,189,34,48,239,191,189,239,191,189,93,239,191,189,93,239,191,189,53,239,191,189,239,191,189,239,191,189,91,239,191,189,10,239,191,189,50,239,191,189,11,239,191,189,83,18,239,191,189,227,138,164,117,1,124,71,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,116,239,191,189,49,34,239,191,189,239,191,189,64,239,191,189,79,48,239,191,189,239,191,189,22,23,239,191,189,76,25,58,15,71})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc85dc948338514bfaa5f449ef554097c7",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000438 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000438_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000438_s.txt", Encoding.UTF8);

    public Test000438() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000422 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000422_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000422_s.txt", Encoding.UTF8);

    public Test000422() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000430 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000430_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000430_s.txt", Encoding.UTF8);

    public Test000430() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000496 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000496_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000496_s.txt", Encoding.UTF8);

    public Test000496() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000416 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000416_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000416_s.txt", Encoding.UTF8);

    public Test000416() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,81,239,191,189,11,199,152,110,121,88,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,22,239,191,189,97,43,239,191,189,3,55,75,239,191,189,214,179,239,191,189,1,32,88,239,191,189,42,239,191,189,239,191,189,18,113,239,191,189,239,191,189,75,42,27,110,239,191,189,101,239,191,189,105,239,191,189,18,8,239,191,189,239,191,189,120,239,191,189,119,239,191,189,114,5,239,191,189,53,20,239,191,189,109,89,0,11,239,191,189,56,84,239,191,189,114,97,239,191,189,21,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,101,239,191,189,18,124,45,52,239,191,189,108,239,191,189,239,191,189,54,239,191,189,239,191,189,21,239,191,189,90,22,48,111,53,239,191,189,89,239,191,189,99,239,191,189,239,191,189,4,239,191,189,31,3,239,191,189,36,239,191,189,116,239,191,189,115,239,191,189,74,11,31,61,6,239,191,189,35,239,191,189,126,5,127,44,239,191,189,239,191,189,60,239,191,189,239,191,189,99,11,239,191,189,239,191,189,239,191,189,105,47,239,191,189,76,239,191,189,239,191,189,17,239,191,189,58,33,18,97,239,191,189,36,79,239,191,189,239,191,189,239,191,189,204,132,47,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,33,16,239,191,189,239,191,189,73,123,239,191,189,239,191,189,93,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,94,26,42,22,23,49,239,191,189,239,191,189,92,239,191,189,43,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,100,109,239,191,189,41,57,58,23,80,239,191,189,94,239,191,189,213,187,239,191,189,239,191,189,104,239,191,189,38,121,106,9,115,114,112,59,239,191,189,6,30,239,191,189,239,191,189,69,17,1,96,239,191,189,95,48,239,191,189,37,239,191,189,18,198,148,239,191,189,22,239,191,189,239,191,189,55,116,54,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,37,239,191,189,52,239,191,189,116,239,191,189,25,239,191,189,239,191,189,91,239,191,189,87,56,81,1,239,191,189,87,67,223,160,89,60,239,191,189,206,169,239,191,189,61,239,191,189,63,239,191,189,239,191,189,239,191,189,100,10,239,191,189,120,239,191,189,24,81,7,239,191,189,239,191,189,43,69,109,28,239,191,189,103,239,191,189,55,239,191,189,71,17,90,203,177,239,191,189,101,79,239,191,189,79,88,73,31,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,97,239,191,189,239,191,189,239,191,189,62,7,239,191,189,239,191,189,239,191,189,9,62,2,239,191,189,69,200,130,239,191,189,97,67,11,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,72,239,191,189,86,58,116,239,191,189,239,191,189,27,3,239,191,189,41,121,25,65,98,239,191,189,33,239,191,189,239,191,189,209,169,118,111,31,239,191,189,239,191,189,5,239,191,189,239,191,189,98,239,191,189,12,67,239,191,189,6,55,239,191,189,239,191,189,63,99,239,191,189,66,5,88,63,71,2,239,191,189,239,191,189,95,64,239,191,189,46,40,239,191,189,64,239,191,189,26,239,191,189,118,239,191,189,52,35,96,84,109,213,130,91,239,191,189,239,191,189,83,239,191,189,55,54,103,112,22,239,191,189,61,239,191,189,92,32,239,191,189,34,239,191,189,239,191,189,27,33,239,191,189,80,118,239,191,189,239,191,189,239,191,189,103,30,239,191,189,3,239,191,189,113,127,77,4,239,191,189,239,191,189,51,239,191,189,239,191,189,55,239,191,189,239,191,189,58,239,191,189,239,191,189,60,20,239,191,189,62,98,239,191,189,239,191,189,97,239,191,189,113,24,239,191,189,239,191,189,110,239,191,189,72,239,191,189,18,14,239,191,189,6,15,27,239,191,189,52,239,191,189,239,191,189,41,239,191,189,239,191,189,127,60,239,191,189,217,140,83,124,103,239,191,189,66,239,191,189,30,239,191,189,239,191,189,239,191,189,64,77,239,191,189,35,239,191,189,5,239,191,189,44,239,191,189,239,191,189,45,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,219,182,13,239,191,189,123,239,191,189,98,112,239,191,189,20,239,191,189,87,239,191,189,239,191,189,239,191,189,114,93,5,239,191,189,239,191,189,239,191,189,15,17,239,191,189,95,90,239,191,189,94,239,191,189,239,191,189,38,239,191,189,25,239,191,189,220,137,63,239,191,189,239,191,189,34,239,191,189,76,96,239,191,189,1,239,191,189,112,239,191,189,20,48,76,239,191,189,123,239,191,189,47,203,165,29,239,191,189,33,65,4,113,51,239,191,189,64,62,239,191,189,27,106,50,239,191,189,94,239,191,189,78,117,239,191,189,65,239,191,189,239,191,189,73,239,191,189,76,239,191,189,43,107,114,16,239,191,189,34,36,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,221,170,239,191,189,239,191,189,44,239,191,189,95,239,191,189,28,99,46,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,82,20,239,191,189,114,11,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,45,239,191,189,94,239,191,189,239,191,189,208,181,110,239,191,189,11,239,191,189,239,191,189,239,191,189,43,77,49,239,191,189,56,70,239,191,189,239,191,189,239,191,189,24,239,191,189,36,239,191,189,4,84,239,191,189,239,191,189,31,239,191,189,4,1,8,239,191,189,239,191,189,27,239,191,189,49,239,191,189,199,185,23,5,27,102,239,191,189,239,191,189,239,191,189,98,58,208,128,44,69,239,191,189,122,239,191,189,26,239,191,189,92,239,191,189,88,124,239,191,189,35,115,52,239,191,189,102,21,239,191,189,33,239,191,189,94,239,191,189,30,210,158,239,191,189,239,191,189,239,191,189,96,51,239,191,189,219,148,27,239,191,189,239,191,189,127,201,174,106,32,239,191,189,239,191,189,41,66,22,239,191,189,5,239,191,189,36,38,94,46,239,191,189,38,92,16,18,80,239,191,189,122,239,191,189,239,191,189,72,113,71,239,191,189,24,39,118,239,191,189,239,191,189,115,239,191,189,62,239,191,189,239,191,189,239,191,189,91,239,191,189,82,239,191,189,239,191,189,59,13,34,239,191,189,239,191,189,239,191,189,67,239,191,189,109,120,239,191,189,239,191,189,67,239,191,189,65,239,191,189,239,191,189,55,121,222,133,239,191,189,69,235,155,167,43,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,59,78,239,191,189,49,35,239,191,189,40,103,239,191,189,239,191,189,239,191,189,50,83,239,191,189,95,123,239,191,189,239,191,189,59,239,191,189,239,191,189,55,17,5,239,191,189,123,120,239,191,189,239,191,189,16,83,40,12,6,105,97,5,86,239,191,189,239,191,189,102,239,191,189,45,239,191,189,239,191,189,239,191,189,116,117,87,34,203,158,239,191,189,14,115,23,239,191,189,44,89,103,30,114,239,191,189,239,191,189,78,239,191,189,37,77,239,191,189,239,191,189,118,239,191,189,3,76,69,239,191,189,9,23,88,239,191,189,6,2,94,239,191,189,68,239,191,189,72,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,88,239,191,189,72,239,191,189,239,191,189,201,136,13,112,211,137,96,27,20,239,191,189,103,239,191,189,239,191,189,39,239,191,189,52,37,239,191,189,239,191,189,112,124,81,239,191,189,239,191,189,108,127,239,191,189,239,191,189,20,5,13,239,191,189,26,239,191,189,53,10,69,104,5,114,51,239,191,189,239,191,189,124,24,18,79,239,191,189,109,239,191,189,51,13,239,191,189,42,22,119,239,191,189,3,84,239,191,189,239,191,189,6,14,239,191,189,107,126,239,191,189,239,191,189,239,188,152,19,60,239,191,189,114,29,112,89,48,78,112,91,239,191,189,0,57,239,191,189,29,239,191,189,100,239,191,189,228,177,174,209,182,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,119,116,239,191,189,239,191,189,79,5,239,191,189,20,239,191,189,36,63,16,239,191,189,60,239,191,189,49,239,191,189,54,52,239,191,189,46,87,239,191,189,47,239,191,189,24,239,191,189,103,239,191,189,197,182,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,2,79,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,123,6,67,239,191,189,45,239,191,189,32,239,191,189,127,97,55,100,105,81,239,191,189,109,239,191,189,95,25,239,191,189,58,239,191,189,239,191,189,239,191,189,123,69,239,191,189,239,191,189,90,239,191,189,239,191,189,21,11,118,71,239,191,189,114,13,239,191,189,239,191,189,56,239,191,189,12,239,191,189,23,84,239,191,189,91,239,191,189,31,239,191,189,65,233,177,182,239,191,189,122,92,10,239,191,189,24,239,191,189,49,239,191,189,118,34,88,239,191,189,9,37,239,191,189,239,191,189,239,191,189,34,239,191,189,59,239,191,189,239,191,189,239,191,189,39,97,38,239,191,189,59,239,191,189,239,191,189,43,90,239,191,189,114,68,22,3,239,191,189,221,180,239,191,189,23,42,239,191,189,239,191,189,239,191,189,81,239,191,189,36,92,103,239,191,189,7,122,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,61,68,239,191,189,110,239,191,189,239,191,189,239,191,189,43,112,239,191,189,20,23,51,67,99,83,70,55,239,191,189,239,191,189,31,22,239,191,189,239,191,189,214,178,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,41,239,191,189,17,11,239,191,189,207,178,239,191,189,22,29,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,95,44,89,122,38,88,0,239,191,189,239,191,189,97,239,191,189,46,239,191,189,25,68,239,191,189,114,25,239,191,189,65,58,125,239,191,189,239,191,189,104,0,239,191,189,75,239,191,189,239,191,189,239,191,189,107,82,239,191,189,92,239,191,189,239,191,189,71,3,41,16,115,239,191,189,109,215,137,101,3,101,8,239,191,189,111,239,191,189,105,239,191,189,239,191,189,71,239,191,189,18,38,239,191,189,239,191,189,239,191,189,77,239,191,189,112,239,191,189,220,189,239,191,189,239,191,189,42,21,239,191,189,49,199,147,118,0,222,154,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,34,122,93,101,52,220,159,90,210,156,239,191,189,103,239,191,189,239,191,189,70,239,191,189,24,239,191,189,89,239,191,189,56,239,191,189,77,208,129,51,239,191,189,239,191,189,208,177,239,191,189,39,239,191,189,239,191,189,66,66,239,191,189,239,191,189,57,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,16,239,191,189,30,239,191,189,46,11,239,191,189,239,191,189,56,44,239,191,189,239,191,189,0,80,223,138,32,17,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,32,239,191,189,97,239,191,189,86,59,239,191,189,1,123,59,239,191,189,239,191,189,92,27,239,191,189,67,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,56,75,239,191,189,239,191,189,239,191,189,239,191,189,120,66,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,78,67,239,191,189,80,239,191,189,239,191,189,212,164,239,191,189,70,239,191,189,239,191,189,239,191,189,118,77,239,191,189,239,191,189,239,191,189,55,239,191,189,22,32,114,96,239,191,189,239,191,189,57,239,191,189,22,239,191,189,239,191,189,48,33,239,191,189,61,64,101,239,191,189,239,191,189,20,239,191,189,114,239,191,189,46,61,53,1,239,191,189,239,191,189,97,239,191,189,45,56,35,99,239,191,189,239,191,189,117,239,191,189,239,191,189,195,180,239,191,189,109,239,191,189,239,191,189,15,239,191,189,104,57,239,191,189,34,23,239,191,189,239,191,189,67,34,202,135,69,38,73,48,239,191,189,125,239,191,189,26,239,191,189,116,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,67,207,162,239,191,189,239,191,189,239,191,189,100,40,56,239,191,189,22,239,191,189,239,191,189,32,239,191,189,48,239,191,189,85,239,191,189,121,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,109,239,191,189,239,191,189,83,40,7,96,63,239,191,189,8,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,53,85,58,239,191,189,3,239,191,189,239,191,189,21,111,239,191,189,8,233,168,160,239,191,189,33,122,8,239,191,189,239,191,189,239,191,189,239,191,189,123,95,4,239,191,189,239,191,189,106,21,78,6,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,115,36,77,113,41,116,104,239,191,189,2,53,239,191,189,239,191,189,239,191,189,43,120,239,191,189,46,96,239,191,189,239,191,189,239,191,189,239,191,189,65,27,239,191,189,0,33,239,191,189,107,100,32,239,191,189,115,92,6,227,152,132,91,32,19,239,191,189,1,239,191,189,22,239,191,189,124,34,239,191,189,239,191,189,85,38,31,239,191,189,239,191,189,239,191,189,49,239,191,189,41,82,239,191,189,53,239,191,189,20,239,191,189,65,60,36,239,191,189,20,239,191,189,5,127,239,191,189,28,217,181,5,205,131,239,191,189,11,125,15,239,191,189,239,191,189,239,191,189,114,110,0,103,239,191,189,50,239,191,189,68,239,191,189,99,119,112,117,63,239,191,189,239,191,189,217,170,33,239,191,189,239,191,189,205,191,45,44,30,239,191,189,83,194,184,239,191,189,26,239,191,189,87,202,182,239,191,189,239,191,189,19,211,177,239,191,189,239,191,189,117,62,239,191,189,88,68,1,19,239,191,189,101,239,191,189,34,39,239,191,189,239,191,189,239,191,189,58,120,239,191,189,122,239,191,189,239,191,189,239,191,189,92,239,191,189,30,117,71,99,44,239,191,189,78,239,191,189,64,57,73,239,191,189,239,191,189,96,82,239,191,189,21,40,66,239,191,189,47,37,7,239,191,189,114,239,191,189,69,55,239,191,189,195,159,239,191,189,9,57,207,185,239,191,189,118,205,137,52,239,191,189,106,101,228,163,178,44,39,210,187,239,191,189,26,239,191,189,239,191,189,80,64,239,191,189,239,191,189,239,191,189,8,239,191,189,64,118,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,15,45,8,239,191,189,239,191,189,63,74,127,121,13,239,191,189,208,129,125,239,191,189,239,191,189,239,191,189,21,37,239,191,189,239,191,189,239,191,189,28,81,97,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,19,110,239,191,189,70,78,66,18,30,239,191,189,239,191,189,55,16,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,126,127,90,239,191,189,102,4,239,191,189,239,191,189,239,191,189,72,210,187,239,191,189,214,147,239,191,189,5,239,191,189,239,191,189,239,191,189,113,239,191,189,59,239,191,189,41,42,5,208,184,239,191,189,48,81,111,39,239,191,189,239,191,189,21,239,191,189,73,239,191,189,40,67,239,191,189,14,206,165,58,13,63,239,191,189,118,239,191,189,239,191,189,239,191,189,14,121,239,191,189,239,191,189,60,218,158,25,35,239,191,189,239,191,189,105,34,239,191,189,239,191,189,4})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testca481f5bd5a5245328f32715d90e7a20c",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000456 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000456_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000456_s.txt", Encoding.UTF8);

    public Test000456() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000476 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000476_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000476_s.txt", Encoding.UTF8);

    public Test000476() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000693 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000693_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000693_s.txt", Encoding.UTF8);

    public Test000693() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{62,5,239,191,189,102,49,107,95,124,28,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,104,239,191,189,239,191,189,239,191,189,16,6,15,49,96,124,30,239,191,189,239,191,189,239,191,189,239,191,189,84,206,185,239,191,189,24,239,191,189,239,191,189,239,191,189,222,156,239,191,189,126,215,167,112,57,239,191,189,78,239,191,189,122,7,119,239,191,189,239,191,189,87,0,11,239,191,189,94,114,239,191,189,73,11,239,191,189,45,33,239,191,189,80,7,101,239,191,189,239,191,189,116,101,239,191,189,89,239,191,189,11,239,191,189,239,191,189,66,50,239,191,189,239,191,189,239,191,189,239,191,189,84,23,239,191,189,239,191,189,66,108,239,191,189,87,114,239,191,189,20,67,24,45,239,191,189,239,191,189,20,36,239,191,189,239,191,189,95,199,167,83,239,191,189,121,126,11,7,239,191,189,13,239,191,189,83,44,50,57,113,194,159,124,239,191,189,13,30,107,239,191,189,239,191,189,239,191,189,198,170,239,191,189,29,239,191,189,78,88,239,191,189,239,191,189,112,66,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,52,82,239,191,189,18,239,191,189,81,239,191,189,60,239,191,189,15,239,191,189,239,191,189,97,107,239,191,189,86,102,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,213,142,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,49,60,99,67,239,191,189,51,239,191,189,239,191,189,29,54,124,239,191,189,221,138,239,191,189,239,191,189,84,86,239,191,189,6,90,239,191,189,239,191,189,71,239,191,189,36,239,191,189,107,55,239,191,189,239,191,189,123,3,239,191,189,36,41,239,191,189,84,239,191,189,239,191,189,239,191,189,59,239,191,189,87,48,217,166,239,191,189,75,239,191,189,116,239,191,189,97,112,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,39,239,191,189,80,74,1,239,191,189,239,191,189,101,239,191,189,92,239,191,189,239,191,189,102,106,30,239,191,189,43,22,239,191,189,125,239,191,189,31,83,63,119,239,191,189,239,191,189,127,239,191,189,112,124,239,191,189,0,19,115,239,191,189,103,13,47,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,223,130,239,191,189,81,239,191,189,239,191,189,4,239,191,189,67,239,191,189,8,48,17,239,191,189,110,63,109,239,191,189,93,239,191,189,91,239,191,189,83,239,191,189,102,239,191,189,30,239,191,189,239,191,189,239,191,189,25,239,191,189,204,179,239,191,189,15,239,191,189,45,24,239,191,189,120,239,191,189,239,191,189,69,107,239,191,189,86,58,239,191,189,239,191,189,76,239,191,189,31,239,191,189,48,74,47,239,191,189,239,191,189,239,191,189,111,29,52,127,239,191,189,101,99,93,59,95,239,191,189,63,239,191,189,122,103,239,191,189,239,191,189,14,239,191,189,239,191,189,56,239,191,189,38,9,119,66,239,191,189,37,239,191,189,76,239,191,189,66,29,115,90,121,62,239,191,189,5,35,239,191,189,239,191,189,97,35,12,45,239,191,189,63,239,191,189,115,32,115,11,194,139,239,191,189,42,7,113,239,191,189,62,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,7,13,52,239,191,189,125,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,107,21,239,191,189,239,191,189,239,191,189,217,191,56,55,91,239,191,189,99,78,54,30,35,239,191,189,29,16,239,191,189,58,15,239,191,189,239,191,189,49,78,219,162,239,191,189,78,239,191,189,239,191,189,50,69,239,191,189,92,4,88,239,191,189,21,239,191,189,239,191,189,239,191,189,48,31,239,191,189,239,191,189,98,95,99,239,191,189,34,239,191,189,239,191,189,91,116,65,239,191,189,239,191,189,239,191,189,28,75,239,191,189,239,191,189,65,48,9,239,191,189,239,191,189,30,239,191,189,66,239,191,189,34,239,191,189,74,112,125,239,191,189,104,120,67,239,191,189,119,96,239,191,189,80,239,191,189,65,239,191,189,194,163,41,23,239,191,189,100,239,191,189,88,239,191,189,121,239,191,189,200,157,68,75,239,191,189,216,191,32,17,4,239,191,189,44,72,239,191,189,239,191,189,239,191,189,113,119,111,239,191,189,110,88,239,191,189,92,239,191,189,24,239,191,189,126,37,109,23,239,191,189,14,239,191,189,239,191,189,239,191,189,69,44,239,191,189,239,191,189,239,191,189,122,48,239,191,189,239,191,189,119,239,191,189,203,163,107,239,191,189,110,239,191,189,109,112,239,191,189,239,191,189,98,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,35,30,239,191,189,239,191,189,49,123,69,239,191,189,117,78,239,191,189,39,239,191,189,93,113,55,81,239,191,189,239,191,189,2,54,49,116,30,63,239,191,189,94,201,184,4,78,127,239,191,189,239,191,189,239,191,189,88,36,239,191,189,239,191,189,39,37,239,191,189,239,191,189,75,120,72,203,138,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,242,170,157,150,77,29,123,62,113,239,191,189,117,239,191,189,239,191,189,239,191,189,24,19,239,191,189,25,90,239,191,189,77,57,40,239,191,189,239,191,189,24,239,191,189,239,191,189,41,97,239,191,189,7,239,191,189,65,232,174,134,38,75,10,239,191,189,239,191,189,239,191,189,75,3,239,191,189,239,191,189,7,239,191,189,124,14,118,30,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,53,73,239,191,189,21,16,64,109,239,191,189,239,191,189,239,191,189,106,239,191,189,110,239,191,189,79,51,239,191,189,239,191,189,220,162,71,76,239,191,189,1,239,191,189,83,73,239,191,189,40,239,191,189,46,44,239,191,189,239,191,189,22,239,191,189,7,239,191,189,118,11,239,191,189,239,191,189,13,108,109,239,159,168,206,144,239,191,189,7,239,191,189,85,88,239,191,189,124,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,107,61,239,191,189,232,182,142,44,11,59,239,191,189,12,72,62,96,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,17,39,239,191,189,57,45,45,68,102,44,239,191,189,21,16,121,39,0,47,239,191,189,239,191,189,63,99,239,191,189,239,191,189,239,191,189,73,16,239,191,189,28,13,239,191,189,9,85,106,239,191,189,239,191,189,67,239,191,189,196,186,239,191,189,74,239,191,189,223,129,239,191,189,239,191,189,239,191,189,23,95,100,239,191,189,239,191,189,239,191,189,239,191,189,52,85,92,239,191,189,239,191,189,29,239,191,189,39,89,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,122,45,239,191,189,104,239,191,189,239,191,189,239,191,189,73,23,77,65,239,191,189,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,127,239,191,189,0,212,156,6,35,108,94,239,191,189,239,191,189,85,65,196,161,239,191,189,239,191,189,70,239,191,189,121,18,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,24,23,239,191,189,239,191,189,239,191,189,121,88,96,97,239,191,189,49,125,120,26,239,191,189,0,239,191,189,27,239,191,189,69,12,96,239,191,189,33,5,239,191,189,99,50,239,191,189,22,239,191,189,239,191,189,239,191,189,45,239,191,189,62,108,239,191,189,239,191,189,112,68,239,191,189,239,191,189,19,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,77,239,191,189,88,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,21,38,239,191,189,74,24,116,239,191,189,74,54,239,191,189,239,191,189,239,191,189,79,78,0,109,123,239,191,189,239,191,189,8,59,239,191,189,239,191,189,239,191,189,107,239,191,189,103,239,191,189,44,208,185,34,239,191,189,90,30})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000466 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000466_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000466_s.txt", Encoding.UTF8);

    public Test000466() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000486 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000486_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000486_s.txt", Encoding.UTF8);

    public Test000486() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000711 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000711_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000711_s.txt", Encoding.UTF8);

    public Test000711() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,35,239,191,189,239,191,189,30,12,42,48,64,239,191,189,111,239,191,189,91,14,76,239,191,189,239,191,189,36,239,191,189,79,239,191,189,115,112,62,239,191,189,4,80,45,57,103,239,191,189,239,191,189,239,191,189,239,191,189,201,169,239,191,189,74,34,239,191,189,239,191,189,102,239,191,189,39,47,105,239,191,189,239,191,189,50,67,239,191,189,24,239,191,189,239,191,189,68,239,191,189,51,239,191,189,37,239,191,189,19,239,191,189,8,1,239,191,189,107,100,239,191,189,74,34,239,191,189,116,239,191,189,17,13,239,191,189,22,239,191,189,26,109,107,239,191,189,239,191,189,114,114,239,191,189,239,191,189,55,239,191,189,11,98,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,38,127,239,191,189,50,5,239,191,189,33,27,239,191,189,239,191,189,222,162,239,191,189,239,191,189,120,111,239,191,189,116,24,195,150,239,191,189,239,191,189,239,191,189,45,91,63,239,191,189,25,119,239,191,189,94,239,191,189,239,191,189,60,28,59,101,19,239,191,189,86,239,191,189,239,191,189,214,148,239,191,189,239,191,189,81,68,74,92,239,191,189,44,239,191,189,239,191,189,70,4,239,191,189,239,191,189,97,2,44,13,66,68,239,191,189,239,191,189,59,82,124,14,5,239,191,189,63,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,50,239,191,189,62,115,239,191,189,89,115,239,191,189,54,239,191,189,106,114,84,239,191,189,239,191,189,80,41,239,191,189,239,191,189,239,191,189,59,87,239,191,189,239,191,189,239,191,189,13,101,107,52,239,191,189,58,239,191,189,101,3,239,191,189,4,60,239,191,189,124,69,83,239,191,189,124,239,191,189,31,239,191,189,77,72,76,239,191,189,39,239,191,189,106,108,239,191,189,119,202,131,101,113,203,134,123,239,191,189,26,239,191,189,239,191,189,239,191,189,127,36,239,191,189,229,130,130,239,191,189,127,2,239,191,189,64,23,34,239,191,189,34,99,112,239,191,189,239,191,189,28,89,58,239,191,189,99,11,122,239,191,189,31,239,191,189,239,191,189,120,70,239,191,189,239,191,189,39,27,66,71,239,191,189,42,239,191,189,239,191,189,239,191,189,37,89,239,191,189,239,191,189,89,239,191,189,239,191,189,22,239,191,189,116,37,239,191,189,239,191,189,239,191,189,118,7,26,239,191,189,239,191,189,50,61,239,191,189,91,88,239,191,189,7,33,41,239,191,189,116,239,191,189,97,115,239,191,189,62,239,191,189,239,191,189,47,239,191,189,15,37,98,239,191,189,72,239,191,189,61,34,239,191,189,239,191,189,239,191,189,106,239,191,189,12,239,191,189,239,191,189,43,239,191,189,79,239,191,189,82,99,239,191,189,109,25,239,191,189,239,191,189,118,12,68,239,191,189,54,239,191,189,239,191,189,239,191,189,13,239,191,189,65,18,239,191,189,239,191,189,239,191,189,97,88,239,191,189,10,100,85,239,191,189,90,18,239,191,189,239,191,189,82,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,123,12,239,191,189,127,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,89,110,1,40,239,191,189,15,30,110,239,191,189,239,191,189,49,15,239,191,189,239,191,189,100,47,104,239,191,189,75,211,187,239,191,189,239,191,189,75,31,239,191,189,239,191,189,36,86,239,191,189,40,239,191,189,239,191,189,239,191,189,4,239,191,189,124,80,239,191,189,239,191,189,114,46,100,73,239,191,189,239,191,189,239,191,189,81,2,31,239,191,189,70,239,191,189,199,158,239,191,189,27,220,132,239,191,189,111,73,65,12,9,70,205,159,96,239,191,189,239,191,189,20,239,191,189,97,239,191,189,105,239,191,189,79,42,239,191,189,93,34,55,239,191,189,239,191,189,40,31,90,100,239,191,189,239,191,189,239,191,189,9,57,41,239,191,189,87,63,239,191,189,39,72,239,191,189,125,52,60,49,239,191,189,101,16,54,126,239,191,189,90,239,191,189,18,39,10,56,39,30,239,191,189,68,239,191,189,239,191,189,74,239,191,189,11,106,56,239,191,189,17,93,239,191,189,2,90,108,239,191,189,2,239,191,189,239,191,189,43,239,191,189,73,45,16,19,113,39,38,1,239,191,189,31,24,239,191,189,122,4,239,191,189,239,191,189,239,191,189,116,38,239,191,189,45,112,37,33,239,191,189,88,239,191,189,239,191,189,239,191,189,8,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,86,239,191,189,67,54,239,191,189,239,191,189,68,1,239,191,189,86,119,28,24,35,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,31,25,239,191,189,239,191,189,127,239,191,189,126,239,191,189,239,191,189,239,191,189,9,38,239,191,189,239,191,189,29,66,79,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,49,46,101,239,191,189,125,239,191,189,89,104,32,239,191,189,239,191,189,23,61,67,239,191,189,239,191,189,239,191,189,115,239,191,189,92,1,76,80,122,100,5,70,73,239,191,189,39,239,191,189,17,44,72,110,83,26,239,191,189,1,239,191,189,75,29,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,204,190,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,114,239,191,189,17,239,191,189,99,239,191,189,239,191,189,239,191,189,38,71,239,191,189,83,91,22,217,150,122,239,191,189,117,47,94,239,191,189,8,58,74,239,191,189,112,197,178,239,191,189,41,31,239,191,189,239,191,189,75,67,239,191,189,239,191,189,239,191,189,27,239,191,189,81,97,85,127,239,191,189,239,191,189,11,83,122,76,239,191,189,109,239,191,189,239,191,189,239,191,189,215,153,115,127,10,22,59,29,239,191,189,239,191,189,239,191,189,203,149,17,239,191,189,7,239,191,189,19,239,191,189,56,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,95,112,239,191,189,38,54,50,99,88,239,191,189,80,14,110,17,239,191,189,21,68,239,191,189,239,191,189,18,14,117,65,239,191,189,68,114,89,1,239,191,189,69,239,191,189,239,191,189,33,239,191,189,80,239,191,189,239,191,189,64,117,121,88,103,61,100,63,239,191,189,24,2,239,191,189,34,98,42,239,191,189,64,239,191,189,67,29,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,3,69,86,239,191,189,239,191,189,56,221,170,75,89,87,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,13,239,191,189,68,239,191,189,239,191,189,239,191,189,38,239,191,189,42,239,191,189,239,191,189,12,239,191,189,66,239,191,189,239,191,189,94,228,164,134,239,191,189,11,64,239,191,189,77,90,239,191,189,32,38,48,239,191,189,11,36,239,191,189,91,6,92,239,191,189,239,191,189,239,191,189,239,191,189,13,52,239,191,189,63,239,191,189,21,22,239,191,189,239,191,189,239,191,189,48,91,127,1,89,105,89,102,23,6,239,191,189,239,191,189,239,191,189,16,0,109,239,191,189,239,191,189,239,191,189,2,96,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,14,239,191,189,112,10,112,239,191,189,14,124,239,191,189,239,191,189,239,191,189,2,239,191,189,2,30,239,191,189,239,191,189,99,18,125,239,191,189,62,89,239,191,189,119,228,129,131,69,104,239,191,189,3,77,122,75,210,167,239,191,189,29,77,239,191,189,239,191,189,79,239,191,189,220,156,51,239,191,189,66,72,101,239,191,189,239,191,189,18,239,191,189,58,233,146,140,43,239,191,189,55})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000726 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000726_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000726_s.txt", Encoding.UTF8);

    public Test000726() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{68,239,191,189,239,191,189,49,239,191,189,76,120,99,239,191,189,239,191,189,20,239,191,189,239,191,189,19,73,71,87,41,30,63,239,191,189,239,191,189,40,97,239,191,189,239,191,189,77,239,191,189,107,123,239,191,189,239,191,189,103,122,72,239,191,189,0,239,191,189,78,239,191,189,110,239,191,189,239,191,189,118,239,191,189,87,66,57,239,191,189,239,191,189,126,83,239,191,189,74,125,114,118,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,55,239,191,189,116,50,94,202,143,70,239,191,189,218,135,239,191,189,239,191,189,239,191,189,105,79,115,20,239,191,189,108,239,191,189,73,31,29,239,191,189,239,191,189,66,125,74,34,239,191,189,239,191,189,239,191,189,122,239,191,189,37,239,191,189,110,103,239,191,189,239,191,189,120,239,191,189,120,239,191,189,239,191,189,239,191,189,24,58,239,191,189,239,191,189,53,239,191,189,58,239,191,189,84,20,96,239,191,189,76,239,191,189,56,239,191,189,239,191,189,61,10,39,56,239,191,189,42,239,191,189,239,191,189,61,239,191,189,1,239,191,189,38,239,191,189,120,69,127,100,15,106,239,191,189,93,98,127,239,191,189,46,16,239,191,189,122,26,239,191,189,239,191,189,239,191,189,9,58,121,105,239,191,189,49,16,42,69,239,191,189,239,191,189,57,239,191,189,45,111,239,191,189,239,191,189,100,40,77,66,223,168,239,191,189,110,239,191,189,26,11,42,34,239,191,189,62,15,29,106,239,191,189,239,191,189,239,191,189,50,239,191,189,64,104,101,239,191,189,70,239,191,189,0,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,116,239,191,189,90,239,191,189,239,191,189,28,121,239,191,189,30,26,239,191,189,17,239,191,189,239,191,189,15,5,239,191,189,239,191,189,239,191,189,49,40,13,239,191,189,122,29,97,239,191,189,239,191,189,122,112,94,239,191,189,59,239,191,189,239,191,189,86,15,45,26,214,185,9,33,77,239,191,189,122,75,21,239,191,189,239,191,189,114,88,113,103,239,191,189,239,191,189,96,239,191,189,239,191,189,123,239,191,189,239,191,189,0,239,191,189,87,55,239,191,189,239,191,189,239,191,189,239,191,189,3,120,31,239,191,189,239,191,189,21,113,239,191,189,223,191,101,98,239,191,189,49,51,106,46,122,239,191,189,65,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,65,111,239,191,189,82,123,96,239,191,189,16,74,36,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,37,3,78,239,191,189,65,239,191,189,239,191,189,127,239,191,189,120,239,191,189,91,239,191,189,33,239,191,189,239,191,189,60,239,191,189,36,239,191,189,1,223,184,9,57,105,111,28,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,218,180,66,239,191,189,96,239,191,189,2,102,239,191,189,18,40,239,191,189,106,95,37,49,239,191,189,239,191,189,70,75,69,239,191,189,215,143,239,191,189,239,191,189,239,191,189,239,191,189,107,77,83,239,191,189,239,191,189,97,21,239,191,189,70,239,191,189,30,239,191,189,239,191,189,239,191,189,87,70,239,191,189,239,191,189,239,191,189,94,10,69,239,191,189,239,191,189,239,191,189,239,191,189,75,220,179,6,239,191,189,31,14,239,191,189,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,80,100,82,39,239,191,189,239,191,189,239,191,189,73,27,239,191,189,14,239,191,189,239,191,189,37,239,191,189,239,191,189,40,2,22,56,46,63,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,112,239,191,189,206,148,78,239,191,189,239,191,189,107,96,239,191,189,2,91,92,106,239,191,189,239,191,189,16,120,239,191,189,8,52,10,239,191,189,239,191,189,239,191,189,239,191,189,33,37,239,191,189,40,239,191,189,127,239,191,189,239,191,189,106,32,122,71,239,191,189,69,36,106,47,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,46,5,104,94,101,239,191,189,11,239,191,189,119,239,191,189,239,191,189,239,191,189,55,10,91,239,191,189,111,239,191,189,239,191,189,208,150,49,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,44,239,191,189,94,239,191,189,239,191,189,58,239,191,189,239,191,189,23,239,191,189,115,108,20,239,191,189,239,191,189,96,239,191,189,74,51,37,239,191,189,239,191,189,109,49,239,191,189,0,87,239,191,189,9,239,191,189,78,239,191,189,124,72,239,191,189,124,58,239,191,189,25,239,191,189,73,239,191,189,239,191,189,239,191,189,30,20,239,191,189,239,191,189,97,239,191,189,57,239,191,189,108,93,30,78,239,191,189,44,239,191,189,239,191,189,239,191,189,195,151,114,64,239,191,189,239,191,189,239,191,189,76,82,38,239,191,189,49,53,239,191,189,239,191,189,24,239,191,189,19,239,191,189,68,239,191,189,239,191,189,110,106,239,191,189,88,30,42,49,239,191,189,14,239,191,189,88,26,239,191,189,33,82,239,191,189,113,35,239,191,189,125,15,117,239,191,189,239,191,189,55,239,191,189,50,54,239,191,189,24,61,124,85,40,41,7,239,191,189,84,209,160,27,98,24,239,191,189,239,191,189,26,85,239,191,189,239,191,189,239,191,189,239,191,189,83,16,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,75,239,191,189,28,81,79,98,239,191,189,92,239,191,189,28,43,105,112,18,118,239,191,189,40,69,239,191,189,48,54,239,191,189,51,52,239,191,189,31,114,35,4,239,191,189,85,239,191,189,239,191,189,122,4,239,191,189,74,4,239,191,189,223,156,239,191,189,59,4,112,239,191,189,239,191,189,239,191,189,126,13,239,191,189,127,239,191,189,239,191,189,21,39,239,191,189,29,239,191,189,66,57,57,239,191,189,239,191,189,51,239,191,189,239,191,189,13,239,191,189,87,36,239,191,189,239,191,189,239,191,189,74,239,191,189,46,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,56,10,101,221,157,45,93,107,239,191,189,98,10,126,61,61,239,191,189,239,191,189,208,141,239,191,189,239,191,189,239,191,189,3,50,202,160,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,47,83,42,239,191,189,44,22,49,64,7,239,191,189,34,239,191,189,239,191,189,23,65,239,191,189,239,191,189,52,215,154,61,239,191,189,239,191,189,209,189,1,239,191,189,31,13,76,66,107,5,239,191,189,57,239,191,189,198,188,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,124,239,191,189,239,191,189,3,198,180,239,191,189,239,191,189,112,86,239,191,189,111,21,99,32,239,191,189,239,191,189,67,239,191,189,239,191,189,36,222,181,239,191,189,49,71,239,191,189,16,239,191,189,26,1,103,14,32,81,118,90,73,124,239,191,189,15,239,191,189,239,191,189,52,239,191,189,76,215,158,105,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,78,86,85,239,191,189,96,239,191,189,17,239,191,189,239,191,189,90,239,191,189,0,239,191,189,118,22,239,191,189,38,239,191,189,111,56,239,191,189,4,239,191,189,113,239,191,189,90,100,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,43,95,113,239,191,189,65,239,191,189,239,191,189,239,191,189,0,239,191,189,199,178,239,191,189,69,239,191,189,113,239,191,189,239,191,189,15,239,191,189,61,73,97,239,191,189,239,191,189,6,239,191,189,94,37,0,239,191,189,239,191,189,39,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,43,239,191,189,2,239,191,189,31,42,18,9})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000708 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000708_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000708_s.txt", Encoding.UTF8);

    public Test000708() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,23,60,34,101,239,191,189,108,239,191,189,239,191,189,32,239,191,189,21,239,191,189,120,239,191,189,120,23,197,170,121,127,37,106,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,12,34,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,18,113,239,191,189,32,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,75,43,239,191,189,239,191,189,119,116,218,128,239,191,189,239,191,189,7,205,160,239,191,189,200,159,115,2,121,239,191,189,223,154,18,239,191,189,239,191,189,239,191,189,231,151,169,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,124,239,191,189,42,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,88,76,6,239,191,189,52,239,191,189,24,67,87,239,191,189,239,191,189,66,239,191,189,37,239,191,189,22,239,191,189,239,191,189,74,17,239,191,189,91,87,239,191,189,222,180,239,191,189,53,239,191,189,89,2,4,63,93,239,191,189,82,239,191,189,4,40,230,158,182,239,191,189,7,239,191,189,83,239,191,189,4,239,191,189,107,16,239,191,189,71,239,191,189,239,191,189,80,56,17,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,121,239,191,189,239,191,189,90,212,151,100,114,239,191,189,79,13,59,96,52,48,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,37,9,239,191,189,41,239,191,189,103,103,239,191,189,239,191,189,7,127,118,239,191,189,121,51,212,184,15,1,42,214,162,239,191,189,239,191,189,239,191,189,16,239,191,189,27,10,194,182,239,191,189,239,191,189,239,191,189,114,90,239,191,189,239,191,189,239,191,189,232,165,155,239,191,189,44,239,191,189,109,86,121,56,36,239,191,189,239,191,189,0,89,27,239,191,189,97,9,127,239,191,189,239,191,189,75,239,191,189,23,80,239,191,189,239,191,189,239,191,189,6,239,191,189,29,239,191,189,54,25,239,191,189,59,27,123,1,59,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,69,38,47,89,6,111,220,180,204,162,114,94,7,12,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,8,67,239,191,189,239,191,189,104,239,191,189,83,107,122,35,239,191,189,23,239,191,189,110,239,191,189,16,239,191,189,43,52,239,191,189,239,191,189,77,110,23,195,132,223,183,72,239,191,189,239,191,189,239,191,189,19,239,191,189,2,45,239,191,189,239,191,189,87,28,112,57,239,191,189,239,191,189,90,126,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,206,155,35,239,191,189,122,8,239,191,189,239,191,189,200,170,239,191,189,62,58,220,142,46,19,239,191,189,99,104,5,71,87,239,191,189,239,191,189,0,57,239,191,189,239,191,189,239,191,189,44,76,239,191,189,12,239,191,189,239,191,189,77,90,46,239,191,189,202,177,207,181,239,191,189,239,191,189,110,239,191,189,46,23,239,191,189,15,126,88,222,134,67,101,63,122,239,191,189,239,191,189,0,239,191,189,125,239,191,189,82,45,83,12,225,184,151,239,191,189,239,191,189,84,120,239,191,189,21,223,146,106,239,191,189,239,191,189,67,29,205,147,46,3,62,239,191,189,27,239,191,189,239,191,189,5,239,191,189,239,191,189,55,17,108,65,123,33,54,239,191,189,119,198,186,239,191,189,14,239,191,189,79,96,239,191,189,100,41,75,239,191,189,96,200,190,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,218,151,239,191,189,239,191,189,106,4,115,81,239,191,189,122,126,84,239,191,189,6,216,164,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,101,87,239,191,189,72,239,191,189,66,43,83,61,81,239,191,189,239,191,189,35,239,191,189,54,75,239,191,189,117,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,90,91,49,97,239,191,189,24,98,239,191,189,63,46,239,191,189,239,191,189,239,191,189,14,239,191,189,38,64,2,17,26,239,191,189,239,191,189,108,102,76,239,191,189,51,2,44,239,191,189,17,29,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,111,123,239,191,189,102,239,191,189,88,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,48,239,191,189,239,191,189,239,191,189,21,20,239,191,189,96,239,191,189,239,191,189,29,117,52,239,191,189,38,239,191,189,4,100,239,191,189,239,191,189,239,191,189,78,24,19,195,187,239,191,189,239,191,189,80,239,191,189,11,239,191,189,116,239,191,189,76,239,191,189,88,239,191,189,91,239,191,189,40,239,191,189,239,191,189,59,45,92,42,97,239,191,189,239,191,189,39,239,191,189,18,21,239,191,189,239,191,189,6,89,109,57,15,239,191,189,79,1,83,101,239,191,189,18,239,191,189,239,191,189,55,0,104,119,25,216,150,95,124,74,239,191,189,30,239,191,189,28,97,203,181,239,191,189,6,81,109,239,191,189,92,25,239,191,189,98,239,191,189,43,8,196,135,239,191,189,216,137,122,18,239,191,189,105,104,2,112,239,191,189,239,191,189,239,191,189,125,206,184,51,239,191,189,239,191,189,239,191,189,15,11,90,49,72,239,191,189,79,239,191,189,239,191,189,239,191,189,106,86,239,191,189,239,191,189,239,191,189,70,89,239,191,189,79,30,75,98,4,239,191,189,114,239,191,189,109,239,191,189,27,239,191,189,239,191,189,239,191,189,127,19,120,239,191,189,125,88,49,110,92,220,177,21,5,239,191,189,56,44,239,191,189,239,191,189,95,239,191,189,80,105,100,239,191,189,6,121,239,191,189,75,54,239,191,189,113,13,51,239,191,189,214,164,74,68,239,191,189,1,113,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,2,239,191,189,74,40,60,21,239,191,189,203,154,4,239,191,189,239,191,189,56,239,191,189,106,239,191,189,239,191,189,39,204,147,239,191,189,83,239,191,189,93,31,110,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,103,239,191,189,239,191,189,26,5,12,12,239,191,189,1,50,94,239,191,189,239,191,189,239,191,189,8,239,191,189,110,239,191,189,207,131,102,239,191,189,96,66,239,191,189,239,191,189,239,191,189,215,132,11,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,198,140,239,191,189,239,191,189,10,239,191,189,239,191,189,83,239,191,189,2,10,239,191,189,2,239,191,189,82,60,239,191,189,38,92,239,191,189,42,101,37,120,42,53,47,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,116,6,239,191,189,239,191,189,239,191,189,120,126,239,191,189,13,239,191,189,239,191,189,13,213,175,239,191,189,97,239,191,189,239,191,189,239,191,189,57,105,96,103,119,239,191,189,213,184,239,191,189,239,191,189,239,191,189,239,191,189,50,222,141,239,191,189,112,114,206,174,239,191,189,2,29,239,191,189,49,239,191,189,29,96,239,191,189,59,51,71,239,191,189,57,239,191,189,11,239,191,189,122,81,28,239,191,189,239,191,189,239,191,189,78,14,239,191,189,79,46,71,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,54,75,239,191,189,53,239,191,189,239,191,189,117,56,239,191,189,239,191,189,84,123,239,191,189,33,239,191,189,40,239,191,189,32,239,191,189,11,25,65,207,171})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000717 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000717_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000717_s.txt", Encoding.UTF8);

    public Test000717() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{124,100,37,13,239,191,189,239,191,189,59,21,44,87,239,191,189,66,239,191,189,239,191,189,49,43,200,190,31,86,87,54,239,191,189,239,191,189,239,191,189,89,239,191,189,58,125,239,191,189,104,239,191,189,18,239,191,189,239,191,189,239,191,189,62,239,191,189,81,77,62,61,239,191,189,116,99,239,191,189,38,24,63,74,239,191,189,239,191,189,239,191,189,17,85,70,239,191,189,39,102,99,11,0,239,191,189,239,191,189,239,191,189,15,47,60,4,81,239,191,189,239,191,189,109,239,191,189,24,26,239,191,189,20,239,191,189,239,191,189,50,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,1,98,239,191,189,3,23,239,191,189,239,191,189,65,61,239,191,189,20,239,191,189,83,239,191,189,239,191,189,19,239,191,189,93,239,191,189,53,7,239,191,189,59,239,191,189,199,140,121,49,99,6,100,239,191,189,40,45,46,239,191,189,89,77,239,191,189,52,127,239,191,189,239,191,189,116,107,239,191,189,70,99,72,239,191,189,12,239,191,189,216,144,239,191,189,9,39,239,191,189,59,239,191,189,29,239,191,189,239,191,189,55,64,65,92,38,91,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,28,239,191,189,89,56,69,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,36,239,191,189,115,18,74,23,194,178,239,191,189,52,42,50,32,7,56,239,191,189,108,77,25,239,191,189,100,239,191,189,96,239,191,189,2,70,6,239,191,189,14,62,239,191,189,70,239,191,189,239,191,189,54,92,70,239,191,189,62,239,191,189,239,191,189,239,191,189,120,239,191,189,46,6,36,15,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,56,82,239,191,189,15,4,16,239,191,189,102,239,191,189,239,191,189,110,77,239,191,189,219,146,239,191,189,15,114,239,191,189,115,239,191,189,94,239,191,189,33,239,191,189,33,23,239,191,189,110,101,6,239,191,189,239,191,189,10,95,126,57,239,191,189,3,31,18,15,74,239,191,189,239,191,189,62,239,191,189,99,239,191,189,51,110,239,191,189,77,197,132,239,191,189,18,239,191,189,24,206,140,239,191,189,20,126,104,103,239,191,189,239,191,189,50,96,239,191,189,239,191,189,239,191,189,96,239,191,189,19,100,74,239,191,189,75,239,191,189,4,59,239,191,189,48,239,191,189,56,239,191,189,239,191,189,108,87,125,52,239,191,189,94,239,191,189,239,191,189,47,111,108,5,48,77,93,239,191,189,239,191,189,239,191,189,100,239,191,189,117,239,191,189,239,191,189,95,239,191,189,216,175,216,134,55,207,153,75,91,239,191,189,125,93,239,191,189,239,191,189,1,239,191,189,70,53,239,191,189,76,69,239,191,189,239,191,189,239,191,189,100,62,239,191,189,211,191,97,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,33,69,239,191,189,239,191,189,211,186,239,191,189,89,239,191,189,52,66,239,191,189,99,1,46,120,239,191,189,19,61,84,239,191,189,239,191,189,34,239,191,189,3,197,140,239,191,189,52,239,191,189,63,239,191,189,51,83,239,191,189,0,60,58,121,239,191,189,239,191,189,93,239,191,189,47,239,191,189,239,191,189,112,239,191,189,50,70,1,10,116,102,239,191,189,38,35,239,191,189,239,191,189,13,45,239,191,189,36,32,239,191,189,68,239,191,189,16,94,46,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,84,239,191,189,239,191,189,239,191,189,52,239,191,189,204,157,124,239,191,189,62,239,191,189,107,93,239,191,189,56,239,191,189,58,239,191,189,67,96,94,4,10,126,113,239,191,189,239,191,189,26,42,49,1,239,191,189,239,191,189,95,20,53,99,239,191,189,239,191,189,239,191,189,114,239,191,189,81,239,191,189,239,191,189,46,84,239,191,189,98,31,239,191,189,68,239,191,189,239,191,189,112,239,191,189,239,191,189,62,239,191,189,239,191,189,12,239,191,189,81,239,191,189,60,20,239,191,189,239,191,189,239,191,189,2,121,122,239,191,189,102,239,191,189,123,239,191,189,13,239,191,189,67,110,239,191,189,10,121,239,191,189,239,191,189,239,191,189,239,191,189,82,81,37,239,191,189,239,191,189,239,191,189,239,144,165,239,191,189,239,191,189,123,85,20,95,239,191,189,61,71,106,6,239,191,189,14,214,166,239,191,189,89,31,239,191,189,70,49,127,92,239,191,189,15,107,239,191,189,84,126,9,239,191,189,239,191,189,239,191,189,13,76,239,191,189,239,191,189,24,239,191,189,87,101,60,117,77,239,191,189,239,191,189,68,122,126,123,239,191,189,239,191,189,35,73,116,65,117,239,191,189,69,239,191,189,239,191,189,81,239,191,189,61,239,191,189,7,9,0,239,191,189,239,191,189,64,70,116,239,191,189,239,191,189,10,14,47,21,39,54,239,191,189,2,111,239,191,189,218,161,239,191,189,11,80,58,239,191,189,47,239,191,189,19,125,55,119,239,191,189,239,191,189,67,239,191,189,239,191,189,90,107,239,191,189,104,126,54,102,93,48,239,191,189,120,123,239,191,189,239,191,189,239,191,189,45,104,102,127,239,191,189,125,109,22,239,191,189,239,191,189,119,211,151,121,35,239,191,189,69,56,62,21,118,43,56,27,239,191,189,239,191,189,221,162,239,191,189,47,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,113,12,70,239,191,189,84,239,191,189,7,99,239,191,189,239,191,189,13,239,191,189,51,66,125,239,191,189,124,1,47,75,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,53,239,191,189,107,19,239,191,189,6,239,191,189,43,239,191,189,40,33,71,239,191,189,19,112,25,239,191,189,239,191,189,17,239,191,189,86,68,239,191,189,7,239,191,189,89,239,191,189,239,191,189,101,239,191,189,33,239,191,189,72,100,82,239,191,189,239,191,189,239,191,189,114,239,191,189,94,22,239,191,189,239,191,189,90,239,191,189,239,191,189,55,58,239,191,189,239,191,189,54,87,239,191,189,239,191,189,113,239,191,189,12,103,65,115,14,239,191,189,82,7,53,239,191,189,58,239,191,189,120,93,4,34,121,239,191,189,63,239,191,189,29,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,234,149,169,239,191,189,239,191,189,59,239,191,189,239,191,189,49,35,80,80,50,239,191,189,37,239,191,189,85,118,239,191,189,47,239,191,189,19,239,191,189,1,239,191,189,239,191,189,239,191,189,95,239,191,189,119,25,239,191,189,239,191,189,84,28,239,191,189,85,239,191,189,239,191,189,61,239,191,189,119,239,191,189,85,77,239,140,146,239,191,189,18,115,239,191,189,202,167,91,215,184,239,191,189,239,191,189,46,239,191,189,79,239,191,189,10,239,191,189,97,239,191,189,110,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,43,34,239,191,189,239,191,189,239,191,189,37,12,216,135,4,53,239,191,189,71,239,191,189,69,239,191,189,209,178,239,191,189,94,239,191,189,56,75,126,239,191,189,239,191,189,36,1,239,191,189,239,191,189,77,70,38,47,239,191,189,48,239,191,189,51,8,239,191,189,119,106,239,191,189,239,191,189,22,26,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,60,53,35,118,239,191,189,239,191,189,239,191,189,49,239,191,189,113,32,201,144,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,26,239,191,189,118,103,115,239,191,189,239,191,189,100,239,191,189,3,105,98,3,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,49,58,239,191,189,59,239,191,189,102,239,191,189,205,175})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000447 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000447_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000447_s.txt", Encoding.UTF8);

    public Test000447() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "aba69e68335d4b92be74e78a868bbf76-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000814 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000814_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000814_s.txt", Encoding.UTF8);

    public Test000814() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000758 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000758_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000758_s.txt", Encoding.UTF8);

    public Test000758() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000720 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000720_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000720_s.txt", Encoding.UTF8);

    public Test000720() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,73,119,239,191,189,239,191,189,58,239,191,189,112,120,38,104,56,93,239,191,189,13,29,239,191,189,58,239,191,189,112,239,191,189,120,239,191,189,239,191,189,63,97,29,239,191,189,77,1,124,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,218,138,239,191,189,104,67,80,33,75,239,191,189,239,191,189,239,191,189,46,64,220,137,11,104,101,38,99,239,191,189,118,31,28,11,35,118,239,191,189,239,191,189,239,191,189,239,191,189,215,146,82,17,239,191,189,239,191,189,8,87,39,196,167,239,191,189,126,50,239,191,189,13,37,239,191,189,56,64,239,191,189,22,69,99,106,239,191,189,93,32,239,191,189,119,239,191,189,12,43,18,239,191,189,239,191,189,239,191,189,239,191,189,47,96,14,239,191,189,239,191,189,239,191,189,219,161,239,191,189,124,22,80,239,191,189,33,94,118,31,123,13,239,191,189,68,239,191,189,239,191,189,55,77,77,26,239,191,189,83,31,239,191,189,31,90,25,109,239,191,189,50,239,191,189,119,102,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,32,239,191,189,29,239,191,189,49,239,191,189,215,177,81,239,191,189,77,78,202,138,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,101,3,239,191,189,36,123,11,239,191,189,44,196,139,239,191,189,223,158,44,239,191,189,63,60,239,191,189,60,33,91,8,37,239,191,189,59,123,41,86,19,239,191,189,36,239,191,189,40,111,239,191,189,28,57,239,191,189,25,37,239,191,189,239,191,189,239,191,189,20,109,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,118,100,239,191,189,93,239,191,189,4,239,191,189,239,191,189,239,191,189,115,25,49,103,239,191,189,239,191,189,47,239,191,189,239,191,189,6,67,106,23,54,239,191,189,27,95,239,191,189,239,191,189,203,138,239,191,189,93,239,191,189,12,65,195,134,48,62,52,14,26,67,119,239,191,189,239,191,189,94,29,239,191,189,239,191,189,0,1,239,191,189,117,239,191,189,95,46,56,65,125,117,28,51,87,213,187,88,91,239,191,189,239,191,189,109,120,239,191,189,52,80,211,190,32,96,1,112,23,75,239,191,189,239,191,189,239,191,189,99,93,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,3,103,239,191,189,215,146,239,191,189,239,191,189,65,93,239,191,189,112,24,239,191,189,124,5,5,239,191,189,239,191,189,56,14,239,191,189,239,191,189,239,191,189,94,91,126,239,191,189,18,66,105,239,191,189,27,75,239,191,189,239,191,189,8,84,116,239,191,189,20,239,191,189,34,0,86,37,53,13,67,239,191,189,239,191,189,239,191,189,32,106,239,191,189,110,6,239,191,189,100,124,19,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,126,239,191,189,239,191,189,116,239,191,189,35,63,239,191,189,239,191,189,124,56,37,113,116,88,85,107,198,177,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,67,4,35,12,239,191,189,239,191,189,104,40,196,189,60,239,191,189,75,70,239,191,189,239,191,189,9,24,43,86,239,191,189,92,114,239,191,189,239,191,189,222,163,72,86,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,104,239,191,189,73,239,191,189,239,191,189,24,239,191,189,123,106,239,191,189,239,191,189,239,191,189,91,196,161,66,239,191,189,122,239,191,189,239,191,189,44,31,239,191,189,61,52,124,13,92,101,76,239,191,189,24,77,195,152,88,239,191,189,214,145,239,191,189,98,56,74,101,239,191,189,45,239,191,189,219,172,239,191,189,239,191,189,51,109,239,191,189,59,239,191,189,119,113,103,239,191,189,239,191,189,30,5,239,191,189,1,239,191,189,14,1,8,239,191,189,56,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,107,239,191,189,7,239,191,189,50,239,191,189,106,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,59,111,239,191,189,239,191,189,68,51,239,191,189,99,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,71,239,191,189,12,239,191,189,95,27,239,191,189,111,239,191,189,14,70,43,239,191,189,121,14,10,239,191,189,76,239,191,189,10,44,239,191,189,59,7,239,191,189,239,191,189,95,239,191,189,239,191,189,113,27,239,191,189,64,49,239,191,189,110,15,239,191,189,48,213,152,239,191,189,29,239,191,189,102,239,191,189,196,183,196,161,85,239,191,189,90,239,191,189,239,191,189,4,239,191,189,119,239,191,189,66,239,191,189,239,191,189,88,239,191,189,16,239,191,189,57,239,191,189,54,239,191,189,60,27,239,191,189,87,39,239,191,189,239,191,189,77,239,191,189,5,239,191,189,54,239,191,189,20,27,239,191,189,115,239,191,189,239,191,189,207,133,239,191,189,68,239,191,189,83,239,191,189,51,72,239,191,189,124,71,239,191,189,53,100,58,239,191,189,3,94,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,75,13,67,239,191,189,122,118,127,56,102,9,239,191,189,239,191,189,239,191,189,3,239,191,189,124,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,90,198,181,232,162,181,70,8,239,191,189,239,191,189,11,5,199,175,26,43,239,191,189,100,239,191,189,0,239,191,189,96,120,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,217,142,6,36,113,239,191,189,32,2,33,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,3,239,191,189,239,191,189,239,191,189,124,44,111,124,102,61,20,239,191,189,239,191,189,82,114,60,91,239,191,189,124,239,191,189,239,191,189,61,105,10,239,191,189,66,25,6,239,191,189,239,191,189,99,25,239,191,189,239,191,189,239,191,189,239,191,189,217,165,93,97,239,191,189,239,191,189,11,115,12,80,61,82,239,191,189,239,191,189,50,96,63,0,83,239,191,189,48,121,49,57,19,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,98,117,98,239,191,189,86,26,104,239,191,189,50,239,191,189,239,191,189,109,5,239,191,189,125,75,239,191,189,3,239,191,189,239,191,189,41,239,191,189,95,115,35,78,46,33,119,239,191,189,17,239,191,189,51,239,191,189,18,72,123,9,36,239,191,189,87,239,191,189,58,124,239,191,189,52,76,239,191,189,58,239,191,189,239,191,189,33,211,130,57,239,191,189,2,66,50,239,191,189,58,217,186,92,239,191,189,239,191,189,239,191,189,239,191,189,107,3,36,239,191,189,239,191,189,86,47,239,191,189,239,191,189,239,191,189,239,191,189,1,66,239,191,189,239,191,189,240,187,177,181,105,69,57,239,191,189,88,94,126,239,191,189,221,144,239,191,189,99,117,239,191,189,54,239,191,189,239,191,189,107,124,82,239,191,189,23,31,239,191,189,67,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,36,31,33,2,239,191,189,239,191,189,35,93,239,191,189,239,191,189,239,191,189,239,191,189,83,203,139,239,191,189,194,176,239,191,189,239,191,189,62,94,16,81,38,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,69,239,191,189,239,191,189,67,83,126,120,239,191,189,14,239,191,189,239,191,189,239,191,189,99,239,191,189,199,183,62,52,65,127,239,191,189,118,239,191,189,239,191,189,16,239,191,189,239,191,189,68,239,191,189,207,144})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000696 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000696_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000696_s.txt", Encoding.UTF8);

    public Test000696() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,19,34,66,118,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,73,239,191,189,78,93,4,99,239,191,189,7,75,42,62,75,239,191,189,91,199,148,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,108,125,127,46,106,17,31,239,191,189,239,191,189,28,220,147,33,6,120,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,33,239,191,189,31,239,191,189,61,32,101,239,191,189,239,191,189,223,132,53,80,239,191,189,44,52,103,46,239,191,189,199,165,239,191,189,56,239,191,189,84,53,1,100,221,136,239,191,189,239,191,189,23,239,191,189,42,239,191,189,80,223,187,46,37,36,239,191,189,3,112,239,191,189,239,191,189,84,239,191,189,124,201,162,207,173,239,191,189,239,191,189,37,50,7,31,0,31,89,89,239,191,189,239,191,189,57,4,2,94,22,79,64,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,68,11,16,41,12,239,191,189,62,239,191,189,105,93,109,239,191,189,29,215,156,45,5,239,191,189,63,95,210,183,239,191,189,81,85,101,121,98,54,45,42,28,46,79,239,191,189,19,239,191,189,239,191,189,77,239,191,189,101,239,191,189,207,167,239,191,189,239,191,189,239,191,189,119,239,191,189,107,122,239,191,189,96,239,191,189,16,239,191,189,26,239,191,189,211,166,67,219,145,60,50,80,239,191,189,239,191,189,20,239,191,189,61,15,126,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,108,2,239,191,189,202,178,239,191,189,239,191,189,239,191,189,62,54,239,191,189,49,35,239,191,189,89,239,191,189,69,239,191,189,116,68,41,42,98,26,46,106,31,239,191,189,239,191,189,21,239,191,189,239,191,189,1,41,57,64,28,199,137,239,191,189,239,191,189,239,191,189,222,143,11,239,191,189,239,191,189,73,111,239,191,189,84,239,191,189,120,127,65,239,191,189,239,191,189,239,191,189,71,109,239,191,189,239,191,189,41,239,191,189,39,48,239,191,189,109,24,110,126,10,206,176,62,239,191,189,239,191,189,239,191,189,34,126,72,116,45,94,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,43,65,56,239,191,189,239,191,189,102,76,104,239,191,189,239,191,189,106,48,1,56,74,6,239,191,189,64,239,191,189,27,26,121,239,191,189,37,239,191,189,239,191,189,239,191,189,65,42,239,191,189,78,117,119,239,191,189,83,200,150,25,78,52,55,33,71,239,191,189,239,191,189,68,43,38,5,239,191,189,239,191,189,106,81,239,191,189,93,239,191,189,120,18,13,34,239,191,189,11,62,51,239,191,189,239,191,189,239,191,189,10,239,191,189,111,239,191,189,239,191,189,114,239,191,189,239,191,189,49,61,71,68,239,191,189,239,191,189,59,51,239,191,189,239,191,189,35,239,191,189,80,239,191,189,12,43,239,191,189,44,239,191,189,20,239,191,189,239,191,189,32,65,239,191,189,239,191,189,17,120,222,160,101,239,191,189,58,239,191,189,200,129,239,191,189,239,191,189,10,75,239,191,189,239,191,189,239,191,189,113,67,49,239,191,189,239,191,189,218,184,20,29,87,94,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,107,69,81,52,33,22,239,191,189,68,239,191,189,239,191,189,93,239,191,189,239,191,189,38,23,197,175,239,191,189,82,239,191,189,110,239,191,189,4,239,191,189,81,99,239,191,189,108,15,0,239,191,189,23,93,116,84,239,191,189,116,61,34,27,52,94,28,57,90,59,83,48,71,239,191,189,239,191,189,99,101,18,103,239,191,189,64,104,239,191,189,50,76,52,239,191,189,10,69,123,85,210,139,80,114,239,191,189,54,102,16,239,191,189,202,141,22,15,239,191,189,36,29,46,50,239,191,189,75,12,239,191,189,75,12,90,100,239,191,189,239,191,189,41,114,47,21,239,191,189,239,191,189,94,239,191,189,239,191,189,95,239,191,189,46,239,191,189,86,36,117,239,191,189,204,174,239,191,189,39,23,123,215,147,48,72,55,64,68,23,119,78,125,239,191,189,35,239,191,189,120,86,17,84,105,123,206,171,239,191,189,239,191,189,239,191,189,117,239,191,189,49,239,191,189,239,191,189,104,239,191,189,18,239,191,189,88,239,191,189,239,191,189,239,191,189,38,123,93,71,15,239,191,189,46,111,1,239,191,189,98,118,239,191,189,44,239,191,189,239,191,189,239,191,189,44,16,239,191,189,239,191,189,239,191,189,106,19,239,191,189,239,191,189,239,191,189,239,191,189,44,67,239,191,189,239,191,189,91,45,239,191,189,29,239,191,189,239,191,189,239,191,189,112,69,115,239,191,189,239,191,189,22,24,59,2,118,73,43,113,239,191,189,34,100,16,74,239,191,189,78,239,191,189,113,239,191,189,212,151,106,239,191,189,65,239,191,189,239,191,189,126,37,239,191,189,108,33,77,78,111,67,115,239,191,189,239,191,189,239,191,189,93,239,191,189,23,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,99,100,103,239,191,189,61,50,239,191,189,35,239,191,189,4,239,191,189,239,191,189,21,239,191,189,7,73,239,191,189,79,239,191,189,62,239,191,189,127,239,191,189,239,191,189,8,53,239,191,189,91,68,239,191,189,34,239,191,189,239,191,189,12,239,191,189,12,239,191,189,109,239,191,189,101,239,191,189,125,239,191,189,239,191,189,100,239,191,189,61,204,129,239,191,189,90,71,107,239,191,189,239,191,189,127,239,191,189,239,191,189,7,64,76,239,191,189,86,65,239,191,189,48,101,239,191,189,40,60,239,191,189,239,191,189,47,239,191,189,49,2,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,155,104,239,191,189,56,2,40,95,239,191,189,3,101,71,24,239,191,189,38,63,49,52,78,239,191,189,239,191,189,69,239,191,189,119,24,239,191,189,123,239,191,189,27,239,191,189,42,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,99,107,200,175,239,191,189,124,239,191,189,239,191,189,59,239,191,189,36,239,191,189,111,51,10,59,239,191,189,239,191,189,239,191,189,194,165,239,191,189,71,68,7,239,191,189,223,187,239,191,189,7,108,102,83,60,239,191,189,61,219,149,5,239,191,189,49,239,191,189,64,4,239,191,189,239,191,189,239,191,189,82,239,191,189,50,90,239,191,189,239,191,189,28,82,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,44,22,52,111,239,191,189,117,51,72,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,66,77,74,30,239,191,189,58,120,239,191,189,120,126,54,239,191,189,14,25,86,239,191,189,16,93,4,239,191,189,11,239,191,189,57,70,239,191,189,10,239,191,189,239,191,189,91,50,239,191,189,127,239,191,189,239,191,189,54,93,239,191,189,17,239,191,189,239,191,189,62,62,74,57,239,191,189,9,18,239,191,189,239,191,189,239,191,189,23,58,239,191,189,20,3,239,191,189,239,191,189,239,191,189,239,191,189,81,70,239,191,189,239,191,189,105,121,55,32,239,191,189,57,76,19,30,239,191,189,239,191,189,239,191,189,7,61,239,191,189,0,239,191,189,72,239,191,189,89,239,191,189,104,90,51,34,90,62,239,191,189,108,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,119,76,121,239,191,189,239,191,189,16,26,239,191,189,90})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000699 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000699_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000699_s.txt", Encoding.UTF8);

    public Test000699() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,204,191,18,25,239,191,189,104,24,239,191,189,19,239,191,189,52,239,191,189,30,239,191,189,81,52,16,29,67,239,191,189,239,191,189,239,191,189,69,75,53,51,239,191,189,239,191,189,50,114,87,16,239,191,189,10,16,239,191,189,239,191,189,89,121,239,191,189,239,191,189,239,191,189,239,191,189,109,214,145,71,237,142,191,66,239,191,189,68,12,239,191,189,59,121,239,191,189,239,191,189,90,239,191,189,51,239,191,189,239,191,189,50,36,239,191,189,19,239,191,189,114,115,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,117,239,191,189,239,191,189,86,115,47,239,191,189,204,142,40,239,191,189,101,239,191,189,117,31,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,51,68,28,75,239,191,189,239,191,189,84,106,72,239,191,189,81,62,110,37,239,191,189,27,114,113,88,89,239,191,189,239,191,189,12,121,65,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,57,39,239,191,189,239,191,189,15,58,239,191,189,239,191,189,196,168,54,239,191,189,239,191,189,239,191,189,221,138,239,191,189,90,80,73,111,16,239,191,189,73,109,31,93,239,191,189,82,3,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,206,161,72,31,44,72,71,239,191,189,10,239,191,189,239,191,189,17,239,191,189,107,239,191,189,104,239,191,189,110,239,191,189,41,85,89,98,239,191,189,239,191,189,239,191,189,57,239,191,189,24,239,191,189,239,191,189,5,66,239,191,189,39,17,49,29,38,239,191,189,0,63,239,191,189,71,76,74,239,191,189,46,38,239,191,189,71,239,191,189,121,239,191,189,116,62,88,66,89,15,239,191,189,239,191,189,23,239,191,189,239,191,189,207,184,239,191,189,239,191,189,86,121,81,239,191,189,96,85,26,201,168,239,191,189,239,191,189,82,239,191,189,239,191,189,89,239,191,189,61,239,191,189,74,71,239,191,189,239,191,189,239,191,189,23,67,71,39,239,191,189,117,125,239,191,189,55,239,191,189,239,191,189,31,239,191,189,239,191,189,24,73,90,117,239,191,189,239,191,189,210,188,239,191,189,198,189,36,239,191,189,6,109,104,196,156,239,191,189,239,191,189,239,191,189,29,13,239,191,189,8,51,18,239,191,189,26,18,33,58,239,191,189,68,239,191,189,1,239,191,189,115,10,59,239,191,189,90,81,239,191,189,105,239,191,189,239,191,189,118,37,207,189,51,239,191,189,103,63,239,191,189,59,103,109,124,239,191,189,220,161,223,165,239,191,189,102,79,86,107,123,80,239,191,189,79,239,191,189,94,203,140,239,191,189,108,82,239,191,189,239,191,189,75,85,239,191,189,86,5,239,191,189,198,133,6,239,191,189,239,191,189,20,239,191,189,114,239,191,189,239,191,189,53,239,191,189,31,239,191,189,84,108,239,191,189,69,239,191,189,239,191,189,47,239,191,189,239,191,189,0,42,4,12,86,239,191,189,239,191,189,239,191,189,15,74,239,191,189,239,191,189,239,191,189,74,3,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,54,239,191,189,124,22,239,191,189,239,191,189,75,95,239,191,189,37,239,191,189,22,239,191,189,5,100,239,191,189,7,97,239,191,189,36,6,38,71,126,20,94,34,239,191,189,239,191,189,66,58,239,191,189,239,191,189,56,239,191,189,104,239,191,189,239,191,189,95,239,191,189,107,127,239,191,189,36,27,239,191,189,77,68,239,191,189,29,239,191,189,68,113,239,191,189,239,191,189,16,122,239,191,189,1,239,191,189,198,173,239,191,189,73,239,191,189,24,111,58,239,191,189,15,17,2,70,239,191,189,239,191,189,239,191,189,34,98,239,191,189,17,239,191,189,239,191,189,116,239,191,189,239,191,189,99,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,218,190,239,191,189,57,57,106,118,239,191,189,10,239,191,189,13,110,65,43,239,191,189,23,109,87,239,191,189,123,239,191,189,239,191,189,89,239,191,189,239,191,189,77,239,191,189,213,128,12,239,191,189,28,60,107,239,191,189,239,191,189,105,239,191,189,239,191,189,16,51,239,191,189,91,102,82,239,191,189,55,239,191,189,239,191,189,77,239,191,189,239,191,189,121,63,239,191,189,16,89,239,191,189,68,28,239,191,189,8,239,191,189,239,191,189,239,191,189,82,5,239,191,189,239,191,189,67,3,111,239,191,189,106,84,22,82,239,191,189,53,65,22,6,82,50,117,239,191,189,239,191,189,239,191,189,122,239,191,189,123,239,191,189,239,191,189,239,191,189,63,43,73,239,191,189,239,191,189,0,239,191,189,119,239,191,189,63,73,40,74,14,239,191,189,219,190,102,123,2,6,201,181,87,34,239,191,189,8,69,239,191,189,239,191,189,75,239,191,189,239,191,189,43,40,204,142,19,53,239,191,189,239,191,189,66,19,239,191,189,76,78,239,191,189,18,239,191,189,42,20,60,239,191,189,239,191,189,117,117,239,191,189,239,191,189,81,239,191,189,50,239,191,189,119,239,191,189,93,239,191,189,239,191,189,239,191,189,14,47,83,70,112,104,239,191,189,239,191,189,109,213,160,25,239,191,189,239,191,189,199,178,14,40,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,108,112,239,191,189,239,191,189,239,191,189,204,177,80,239,191,189,239,191,189,239,191,189,239,191,189,49,108,239,191,189,210,132,239,191,189,79,55,239,191,189,239,191,189,11,239,191,189,239,191,189,52,239,191,189,46,14,52,65,47,99,239,191,189,239,191,189,22,7,239,191,189,239,191,189,239,191,189,104,239,191,189,23,239,191,189,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,86,33,211,171,58,239,191,189,101,239,191,189,239,191,189,239,191,189,61,239,191,189,65,91,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,1,239,191,189,123,239,191,189,11,114,63,239,191,189,239,191,189,61,7,103,45,239,191,189,31,92,239,191,189,73,26,239,191,189,47,239,191,189,43,239,191,189,239,191,189,99,239,191,189,17,94,239,191,189,75,23,239,191,189,21,84,60,87,239,191,189,47,110,37,3,35,125,54,27,20,125,239,191,189,53,239,191,189,98,85,38,239,191,189,122,239,191,189,239,191,189,234,167,182,45,116,82,239,191,189,239,191,189,121,23,239,191,189,239,191,189,5,239,191,189,26,239,191,189,239,191,189,44,99,239,191,189,95,239,191,189,78,63,119,41,239,191,189,239,191,189,239,191,189,239,191,189,122,217,130,113,239,191,189,239,191,189,239,191,189,209,139,69,239,191,189,239,191,189,239,191,189,48,239,191,189,72,239,191,189,239,191,189,111,23,10,239,191,189,33,88,118,239,191,189,75,239,191,189,8,46,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,35,26,38,81,76,239,191,189,239,191,189,239,191,189,239,191,189,25,45,11,239,191,189,119,239,191,189,239,191,189,47,65,66,68,41,239,191,189,22,239,191,189,96,67,86,239,191,189,20,239,191,189,239,191,189,6,209,133,239,191,189,107,239,191,189,7,42,239,191,189,81,239,191,189,103,21,239,191,189,239,191,189,239,191,189,239,191,189,26,97,239,191,189,80,89,104,239,191,189,3,52,239,191,189,8,106,92,239,191,189,239,191,189,100,38,57,61,239,191,189,239,191,189,239,191,189,40,23,77,239,191,189,44,26,1,110,239,191,189,86,109,239,191,189,239,191,189,84,2,239,191,189,120,29,69,104,239,191,189,22,33,239,191,189,239,191,189,101,125,239,191,189,92,88,239,191,189,88,39,68,57,239,191,189,2,102,59,239,191,189,1,239,191,189,34,239,191,189,239,191,189,103,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000807 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000807_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000807_s.txt", Encoding.UTF8);

    public Test000807() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000702 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000702_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000702_s.txt", Encoding.UTF8);

    public Test000702() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,55,239,191,189,210,173,37,239,191,189,70,239,191,189,103,239,191,189,23,239,191,189,94,239,191,189,15,3,239,191,189,97,126,115,239,191,189,47,239,191,189,18,239,191,189,15,239,191,189,26,239,191,189,7,6,57,8,94,239,191,189,239,191,189,11,239,191,189,4,239,191,189,239,191,189,20,118,80,53,0,239,191,189,89,239,191,189,239,191,189,96,111,67,38,49,8,205,191,239,191,189,21,30,44,239,191,189,96,239,191,189,222,171,0,239,191,189,29,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,44,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,37,76,30,239,191,189,105,239,191,189,46,22,239,191,189,86,84,239,191,189,239,191,189,98,202,151,18,77,239,191,189,239,191,189,79,30,239,191,189,196,154,242,146,168,186,16,239,191,189,239,191,189,211,150,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,94,239,191,189,4,239,191,189,239,191,189,239,191,189,94,55,114,15,239,191,189,239,191,189,67,239,191,189,239,191,189,6,106,89,83,118,44,239,191,189,91,239,191,189,109,239,191,189,239,191,189,55,105,30,239,191,189,239,191,189,239,191,189,70,239,191,189,26,90,37,239,191,189,239,191,189,90,53,239,191,189,239,191,189,65,239,191,189,75,239,191,189,239,191,189,64,80,27,21,239,191,189,239,191,189,70,106,25,20,37,39,239,191,189,83,35,239,191,189,239,191,189,110,65,239,191,189,239,191,189,15,52,239,191,189,239,191,189,239,191,189,80,239,191,189,13,43,4,117,70,119,222,155,239,191,189,239,191,189,56,110,102,239,191,189,65,17,239,191,189,108,239,191,189,225,136,170,89,24,10,239,191,189,6,49,28,124,51,203,135,239,191,189,93,239,191,189,15,239,191,189,239,191,189,86,117,239,191,189,88,60,53,210,146,60,239,191,189,34,15,118,68,111,40,98,239,191,189,239,191,189,107,79,113,239,191,189,126,11,119,109,239,191,189,239,191,189,82,83,2,222,140,54,107,0,82,29,239,191,189,55,101,239,191,189,98,239,191,189,108,239,191,189,239,191,189,23,109,239,191,189,27,35,68,239,191,189,239,191,189,239,191,189,9,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,32,48,239,191,189,13,3,40,16,239,191,189,9,51,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,88,55,222,154,239,191,189,82,239,191,189,239,191,189,5,87,25,77,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,120,20,69,239,191,189,102,25,17,239,191,189,61,127,239,191,189,239,191,189,11,239,191,189,26,94,239,191,189,66,65,239,191,189,239,191,189,96,49,11,93,239,191,189,239,191,189,70,239,191,189,97,239,191,189,99,239,191,189,110,239,191,189,29,110,239,191,189,197,136,84,20,35,114,87,76,56,50,69,79,239,191,189,239,191,189,239,191,189,228,189,179,20,239,191,189,8,41,43,96,119,29,239,191,189,74,36,115,94,64,34,113,124,14,239,191,189,239,191,189,60,239,191,189,239,191,189,16,239,191,189,239,191,189,0,118,239,191,189,20,239,191,189,2,239,191,189,7,9,239,191,189,200,156,93,239,191,189,6,239,191,189,13,40,239,191,189,239,191,189,5,44,52,26,239,191,189,75,21,119,85,41,239,191,189,113,119,95,1,97,196,139,33,239,191,189,87,54,239,191,189,239,191,189,223,176,239,191,189,11,54,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,42,229,149,154,239,191,189,212,130,6,2,124,206,154,239,191,189,59,239,191,189,10,64,47,239,191,189,15,126,239,191,189,100,239,191,189,239,191,189,239,191,189,98,106,39,198,130,43,215,180,239,191,189,16,112,239,191,189,80,36,239,191,189,239,191,189,99,44,239,191,189,239,191,189,239,191,189,66,16,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,77,48,239,191,189,239,191,189,10,31,239,191,189,219,181,75,111,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,94,46,239,191,189,53,55,7,239,191,189,12,32,90,239,191,189,118,239,191,189,71,22,8,126,223,140,239,191,189,70,4,69,21,239,191,189,239,191,189,64,71,55,39,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,68,63,77,40,239,191,189,125,239,191,189,239,191,189,13,239,191,189,90,239,191,189,121,239,191,189,86,199,149,239,191,189,239,191,189,223,160,239,191,189,89,194,131,239,191,189,102,239,191,189,239,191,189,72,5,4,239,191,189,109,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,42,239,191,189,239,191,189,239,191,189,239,191,189,21,88,41,6,98,239,191,189,106,239,191,189,102,26,239,191,189,54,239,191,189,93,17,79,85,239,191,189,26,195,175,239,191,189,26,109,27,239,191,189,29,76,239,191,189,239,191,189,71,239,191,189,68,239,191,189,126,31,239,191,189,239,191,189,43,3,239,191,189,239,191,189,239,191,189,39,85,243,138,165,188,239,191,189,239,191,189,239,191,189,117,239,191,189,101,109,15,239,191,189,71,239,191,189,76,239,191,189,239,191,189,65,74,95,239,191,189,195,147,48,86,66,125,23,36,239,191,189,91,239,191,189,24,39,45,120,239,191,189,239,191,189,18,77,97,101,52,17,15,100,90,62,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,103,239,191,189,18,239,191,189,127,239,191,189,124,94,239,191,189,104,18,28,239,191,189,31,239,191,189,239,191,189,23,13,46,239,191,189,239,191,189,38,239,191,189,239,191,189,32,239,191,189,239,191,189,62,95,45,26,11,21,34,239,191,189,101,101,3,66,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,126,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,64,56,239,191,189,107,239,191,189,239,191,189,62,239,191,189,239,191,189,77,6,7,94,94,90,110,20,202,159,44,239,191,189,122,239,191,189,239,191,189,45,14,239,191,189,239,191,189,124,77,69,239,191,189,54,43,239,191,189,44,214,152,239,191,189,239,191,189,4,31,127,239,191,189,239,191,189,239,191,189,36,117,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,119,12,61,126,239,191,189,126,239,191,189,63,8,27,239,191,189,50,239,191,189,45,239,191,189,123,21,239,191,189,239,191,189,239,191,189,91,66,239,191,189,65,239,191,189,209,155,7,239,191,189,58,106,239,191,189,48,239,191,189,239,191,189,239,191,189,91,54,6,20,239,191,189,239,191,189,118,239,191,189,27,82,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,25,5,106,52,239,191,189,239,191,189,239,191,189,28,239,191,189,122,239,191,189,206,177,78,2,36,119,239,191,189,32,222,164,239,191,189,116,123,203,174,38,55,211,163,42,50,68,239,191,189,105,43,80,239,191,189,73,95,65,239,191,189,48,7,34,239,191,189,44,239,191,189,80,217,128,14,46,22,48,239,191,189,239,191,189,239,191,189,104,239,191,189,212,189,72,63,80,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,108,88,35,239,191,189,89,239,191,189,239,191,189,35,27,4,46,99,214,153})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000798 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000798_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000798_s.txt", Encoding.UTF8);

    public Test000798() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000705 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000705_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000705_s.txt", Encoding.UTF8);

    public Test000705() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,83,210,176,239,191,189,239,191,189,239,191,189,239,191,189,48,206,181,68,40,239,191,189,74,4,239,191,189,239,191,189,239,191,189,46,127,77,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,38,2,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,28,35,239,191,189,43,77,26,77,239,191,189,239,191,189,239,191,189,205,186,60,28,64,65,33,239,191,189,121,106,27,239,191,189,211,143,23,91,10,239,191,189,41,239,191,189,44,239,191,189,68,81,239,191,189,239,191,189,56,3,50,51,239,191,189,44,239,191,189,239,191,189,46,239,191,189,75,10,239,191,189,74,239,191,189,99,92,239,191,189,239,191,189,239,191,189,80,47,19,239,191,189,16,239,191,189,96,239,191,189,239,191,189,118,239,191,189,110,121,8,30,102,70,239,191,189,239,191,189,239,191,189,239,191,189,96,27,15,0,11,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,40,119,8,239,191,189,64,35,25,204,166,76,54,239,191,189,96,239,191,189,71,66,118,239,191,189,22,202,168,239,191,189,102,239,191,189,239,191,189,239,191,189,16,117,239,191,189,239,191,189,239,191,189,125,239,191,189,48,70,1,239,191,189,47,37,35,239,191,189,34,87,239,191,189,42,239,191,189,239,191,189,100,195,156,239,191,189,239,191,189,99,239,191,189,18,239,191,189,16,58,239,191,189,95,18,239,191,189,74,239,191,189,119,239,191,189,239,191,189,48,84,69,66,71,239,191,189,239,191,189,20,239,191,189,47,200,164,99,50,239,191,189,239,191,189,239,191,189,117,9,26,239,191,189,30,239,191,189,239,191,189,239,191,189,56,239,191,189,16,18,216,169,38,113,239,191,189,127,15,125,90,59,239,191,189,112,202,141,113,72,239,191,189,239,191,189,44,103,239,191,189,100,56,109,239,191,189,239,191,189,17,239,191,189,84,125,14,16,239,191,189,1,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,52,239,191,189,57,21,239,191,189,35,239,191,189,51,239,191,189,46,239,191,189,239,191,189,239,191,189,32,116,112,239,191,189,239,191,189,16,109,96,40,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,99,10,122,203,189,239,191,189,239,191,189,87,239,191,189,239,191,189,124,239,191,189,78,104,118,56,239,191,189,56,22,239,191,189,95,119,69,59,11,239,191,189,12,50,26,90,239,191,189,73,2,202,155,31,239,191,189,98,239,191,189,113,96,239,191,189,104,239,191,189,239,191,189,124,239,191,189,239,191,189,108,86,239,191,189,212,188,4,239,191,189,53,239,191,189,239,191,189,43,239,191,189,37,239,191,189,77,239,191,189,51,239,191,189,239,191,189,239,191,189,87,89,126,239,191,189,239,191,189,239,191,189,239,191,189,15,87,87,239,191,189,31,71,239,191,189,239,191,189,115,7,116,70,239,191,189,7,239,191,189,78,239,191,189,110,127,59,5,26,29,239,191,189,239,191,189,10,239,191,189,20,239,191,189,104,10,47,51,239,191,189,239,191,189,239,191,189,56,35,12,239,191,189,94,21,239,191,189,200,190,99,239,191,189,239,191,189,109,11,239,191,189,46,37,77,123,239,191,189,58,239,191,189,239,191,189,21,80,239,191,189,239,191,189,11,239,191,189,69,19,65,239,191,189,12,22,239,191,189,98,239,191,189,239,191,189,239,191,189,64,84,239,191,189,111,75,49,239,191,189,239,191,189,239,191,189,9,239,191,189,8,239,191,189,239,191,189,239,191,189,103,239,191,189,89,239,191,189,78,239,191,189,239,191,189,121,80,124,66,96,239,191,189,65,239,191,189,81,112,239,191,189,239,191,189,239,191,189,76,239,191,189,30,10,239,191,189,113,32,59,46,57,239,191,189,106,239,191,189,38,108,122,48,239,191,189,114,239,191,189,120,31,239,191,189,239,191,189,71,239,191,189,88,16,239,191,189,116,125,221,188,239,191,189,26,45,59,239,191,189,121,92,239,191,189,61,34,67,80,239,191,189,112,27,95,239,191,189,64,239,191,189,65,93,60,44,239,191,189,47,239,191,189,239,191,189,25,15,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,11,62,63,239,191,189,39,21,239,191,189,59,239,191,189,239,191,189,239,191,189,82,239,191,189,60,239,191,189,239,191,189,52,239,191,189,239,191,189,95,239,191,189,239,191,189,51,12,239,191,189,67,239,191,189,239,191,189,104,239,191,189,58,71,239,191,189,16,32,239,191,189,239,191,189,239,191,189,43,127,0,47,108,239,191,189,112,76,239,191,189,94,239,191,189,239,191,189,40,121,78,10,29,10,51,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,5,100,10,239,191,189,44,239,191,189,75,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,123,112,83,102,60,24,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,21,99,3,59,89,60,126,239,191,189,103,44,101,239,191,189,239,191,189,239,191,189,86,3,87,9,110,107,95,68,239,191,189,62,51,107,6,106,239,191,189,239,191,189,239,191,189,18,8,57,122,239,191,189,127,239,191,189,22,239,191,189,32,34,95,79,10,204,182,109,239,191,189,239,191,189,7,239,191,189,239,191,189,81,239,191,189,209,172,239,191,189,8,239,191,189,53,20,239,191,189,239,191,189,239,191,189,83,126,118,84,110,239,191,189,239,191,189,239,191,189,239,191,189,74,60,239,191,189,103,51,102,239,191,189,239,191,189,239,191,189,210,158,234,136,183,239,191,189,239,191,189,58,239,191,189,239,191,189,40,110,12,57,239,191,189,198,183,77,64,24,83,91,69,197,190,6,87,239,191,189,69,239,191,189,239,191,189,57,239,191,189,108,22,34,239,191,189,239,191,189,239,191,189,208,172,51,239,191,189,54,239,191,189,92,62,2,71,239,191,189,124,25,116,239,191,189,84,119,89,37,201,177,78,239,191,189,239,191,189,40,239,191,189,239,191,189,210,160,35,122,40,239,191,189,112,107,31,239,191,189,14,239,191,189,98,239,191,189,85,239,191,189,239,191,189,20,239,191,189,239,191,189,26,23,239,191,189,239,191,189,120,1,21,239,191,189,239,191,189,62,239,191,189,75,220,137,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,3,21,53,239,191,189,74,43,103,239,191,189,239,191,189,20,80,20,97,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,121,239,191,189,239,191,189,239,191,189,29,239,191,189,42,117,239,191,189,44,239,191,189,239,191,189,239,191,189,4,239,191,189,127,76,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,91,27,199,166,32,21,239,191,189,83,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,59,35,239,191,189,107,103,239,191,189,239,191,189,239,191,189,49,99,79,68,101,239,191,189,239,191,189,99,239,191,189,106,7,21,26,239,191,189,101,239,191,189,213,171,105,239,191,189,239,191,189,239,191,189,62,12,110,5,239,191,189,239,191,189,239,191,189,126,75,30,110,239,191,189,239,191,189,99,86,220,176,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,124,239,191,189,239,191,189,239,191,189,239,191,189,74,25,4,57,37,67,239,191,189,96,239,191,189,42,102,89,30,233,167,135,239,191,189,1,239,191,189,239,191,189,239,191,189,106,45,50,73,239,191,189,239,191,189,197,155,37,10,73,239,191,189,239,191,189,85,239,191,189,239,191,189,62,19,6,79,3,53,43,84,239,191,189,239,191,189,1,225,167,189,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,138,189,16,239,191,189,239,191,189,31,28,112,239,191,189,21})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000791 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000791_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000791_s.txt", Encoding.UTF8);

    public Test000791() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000771 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000771_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000771_s.txt", Encoding.UTF8);

    public Test000771() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000723 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000723_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000723_s.txt", Encoding.UTF8);

    public Test000723() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{62,239,191,189,216,184,40,239,191,189,88,239,191,189,38,20,66,239,191,189,97,126,239,191,189,239,191,189,39,77,43,198,191,2,239,191,189,87,239,191,189,2,124,239,191,189,239,191,189,218,180,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,239,191,189,6,239,191,189,95,16,239,191,189,78,198,137,61,87,239,191,189,239,191,189,1,117,79,59,49,239,191,189,239,191,189,37,22,124,239,191,189,76,95,48,4,239,191,189,239,191,189,239,191,189,239,191,189,112,48,71,239,191,189,35,239,191,189,239,191,189,239,191,189,111,60,239,191,189,47,34,17,67,52,111,239,191,189,55,239,191,189,239,191,189,205,138,239,191,189,18,239,191,189,81,73,239,191,189,70,109,58,98,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,22,29,60,30,239,191,189,239,191,189,100,109,239,191,189,239,191,189,56,121,53,57,239,191,189,239,191,189,37,83,61,86,46,239,191,189,239,191,189,87,239,191,189,7,239,191,189,239,191,189,239,191,189,46,13,239,191,189,239,191,189,239,191,189,239,191,189,115,50,239,191,189,64,81,217,187,239,191,189,41,64,127,239,191,189,6,239,191,189,37,102,239,191,189,239,191,189,239,191,189,40,124,239,191,189,52,239,191,189,239,191,189,113,37,239,191,189,42,208,138,101,239,191,189,127,82,239,191,189,18,239,191,189,125,115,112,239,191,189,23,13,20,239,191,189,97,102,239,191,189,119,239,191,189,34,239,191,189,239,191,189,239,191,189,108,83,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,107,26,239,191,189,199,131,239,191,189,11,116,239,191,189,239,191,189,38,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,12,104,120,205,136,239,191,189,75,115,38,21,239,191,189,116,239,191,189,239,191,189,24,239,191,189,101,70,239,191,189,0,239,191,189,239,191,189,22,119,22,18,239,191,189,44,18,9,87,239,191,189,61,75,99,239,191,189,21,239,191,189,239,191,189,239,191,189,124,16,239,191,189,239,191,189,239,191,189,67,77,7,14,6,86,239,191,189,43,239,191,189,239,191,189,67,81,1,239,191,189,117,41,30,97,28,239,191,189,6,54,76,68,239,191,189,112,199,179,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,196,181,30,11,239,191,189,239,191,189,239,191,189,127,239,191,189,31,59,20,239,191,189,28,239,191,189,93,239,191,189,239,191,189,56,239,191,189,13,1,195,130,239,191,189,239,191,189,21,239,191,189,57,239,191,189,77,49,32,239,191,189,116,239,191,189,86,105,46,90,239,191,189,239,191,189,36,80,92,239,191,189,239,191,189,38,52,62,239,191,189,79,239,191,189,239,191,189,239,191,189,116,36,121,39,70,239,191,189,239,191,189,9,239,191,189,1,107,79,94,88,77,10,54,86,64,239,191,189,49,58,239,191,189,126,239,191,189,19,239,191,189,15,73,239,191,189,31,239,191,189,99,239,191,189,68,239,191,189,51,112,17,82,70,104,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,110,239,191,189,83,106,58,117,239,191,189,239,191,189,50,5,239,191,189,239,191,189,34,239,191,189,125,239,191,189,239,191,189,119,8,84,3,239,191,189,46,76,239,191,189,239,191,189,239,191,189,82,14,74,239,191,189,30,108,239,191,189,239,191,189,106,46,239,191,189,239,191,189,207,186,239,191,189,61,11,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,21,239,191,189,84,7,126,104,239,191,189,239,191,189,119,239,191,189,56,239,191,189,83,106,48,18,239,191,189,0,239,191,189,57,239,191,189,85,239,191,189,34,239,191,189,100,239,191,189,211,165,72,124,105,55,239,191,189,41,22,38,122,61,41,18,53,85,239,191,189,239,191,189,50,239,191,189,204,154,38,205,146,239,191,189,239,191,189,239,191,189,239,191,189,49,74,25,239,191,189,239,191,189,3,47,107,239,191,189,108,112,239,191,189,7,239,191,189,120,239,191,189,239,191,189,15,239,191,189,31,83,79,239,191,189,50,239,191,189,6,10,33,239,191,189,214,137,239,191,189,239,191,189,73,239,191,189,239,191,189,96,96,87,15,6,239,191,189,3,127,239,191,189,19,197,158,239,191,189,71,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,122,239,191,189,44,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,123,239,191,189,22,239,191,189,36,51,239,191,189,120,25,105,75,81,112,239,191,189,65,108,115,102,239,191,189,239,191,189,66,239,191,189,3,97,121,51,239,191,189,22,239,191,189,44,11,239,191,189,70,45,7,239,191,189,18,35,239,191,189,239,191,189,239,191,189,34,239,191,189,41,119,239,191,189,239,191,189,239,191,189,239,191,189,86,31,239,191,189,239,191,189,0,19,58,239,191,189,0,44,97,33,61,63,239,191,189,42,112,58,239,191,189,96,67,13,5,239,191,189,239,191,189,239,191,189,109,56,1,239,191,189,2,239,191,189,93,239,191,189,239,191,189,87,239,191,189,7,116,239,191,189,119,202,185,239,191,189,100,239,191,189,86,116,77,31,79,239,191,189,58,18,18,239,191,189,78,239,191,189,101,239,191,189,1,239,191,189,92,42,239,191,189,239,191,189,103,83,15,239,191,189,239,191,189,51,112,239,191,189,239,191,189,67,76,19,87,239,191,189,22,195,180,239,191,189,239,191,189,239,191,189,34,239,191,189,217,178,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,125,2,101,122,56,28,55,239,191,189,70,206,166,59,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,119,239,191,189,239,191,189,121,93,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,213,189,93,239,191,189,56,19,94,57,75,239,191,189,239,191,189,113,124,11,11,239,191,189,15,239,191,189,62,239,191,189,216,150,23,239,191,189,239,191,189,217,136,7,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,119,124,223,187,239,191,189,239,191,189,72,48,39,110,81,239,191,189,54,239,191,189,99,27,38,63,239,191,189,239,191,189,239,191,189,95,239,191,189,86,239,191,189,89,11,21,115,53,17,34,239,191,189,52,122,239,191,189,239,191,189,28,9,54,120,206,177,26,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,32,239,191,189,67,64,33,24,239,191,189,51,50,239,191,189,51,239,191,189,239,191,189,92,47,11,2,36,239,191,189,100,10,53,110,36,239,191,189,112,239,191,189,210,158,31,239,191,189,20,87,222,175,19,98,239,191,189,46,239,191,189,239,191,189,97,69,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,200,145,126,22,239,191,189,239,191,189,28,55,106,239,191,189,239,191,189,96,239,191,189,239,191,189,80,43,239,191,189,5,80,92,239,191,189,239,191,189,239,191,189,54,32,94,13,239,191,189,239,191,189,239,191,189,24,40,239,191,189,87,81,19,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,77,69,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,54,77,239,191,189,6,239,191,189,71,239,191,189,38,239,191,189,60,94,123,239,191,189,239,191,189,56,239,191,189,94,239,191,189,24,239,191,189,50,71,239,191,189,18,202,131,239,191,189,27,97,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,26,81,239,191,189,239,191,189,9,239,191,189,65,86,125})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000763 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000763_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000763_s.txt", Encoding.UTF8);

    public Test000763() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000777 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000777_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000777_s.txt", Encoding.UTF8);

    public Test000777() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000714 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000714_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000714_s.txt", Encoding.UTF8);

    public Test000714() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{74,239,191,189,239,191,189,31,239,191,189,27,239,191,189,239,191,189,105,96,239,191,189,8,239,191,189,3,239,191,189,26,239,191,189,80,239,191,189,93,4,75,75,57,239,191,189,239,191,189,47,121,3,37,239,191,189,16,31,239,191,189,64,82,110,239,191,189,40,239,191,189,239,191,189,195,159,239,191,189,121,68,103,74,239,191,189,239,191,189,114,85,18,3,70,239,191,189,239,191,189,71,239,191,189,78,239,191,189,19,239,191,189,68,239,191,189,239,191,189,239,191,189,34,239,191,189,54,239,191,189,239,191,189,40,83,239,191,189,64,239,191,189,78,239,191,189,59,59,239,191,189,239,191,189,57,239,191,189,69,239,191,189,28,116,239,191,189,239,191,189,39,94,217,154,239,191,189,13,91,55,239,191,189,92,69,239,191,189,96,30,239,191,189,45,239,191,189,86,5,239,191,189,70,239,191,189,99,19,8,49,124,239,191,189,127,239,191,189,203,173,31,121,239,191,189,54,78,239,191,189,16,51,81,22,42,239,191,189,239,191,189,92,239,191,189,27,239,191,189,24,64,239,191,189,111,239,191,189,119,239,191,189,239,191,189,197,145,107,239,191,189,202,184,239,191,189,239,191,189,239,191,189,103,231,153,167,239,191,189,5,70,210,158,48,91,239,191,189,29,239,191,189,239,191,189,97,239,191,189,102,239,191,189,4,61,107,2,239,191,189,60,239,191,189,39,239,191,189,239,191,189,239,191,189,93,122,78,94,239,191,189,239,191,189,239,191,189,46,58,59,239,191,189,239,191,189,21,70,68,118,239,191,189,239,191,189,47,14,81,12,239,191,189,90,239,191,189,239,191,189,107,85,221,161,48,23,239,191,189,239,191,189,53,239,191,189,239,191,189,24,239,191,189,44,105,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,114,120,12,109,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,109,239,191,189,116,98,64,239,191,189,48,239,191,189,79,239,191,189,36,239,191,189,9,239,191,189,239,191,189,42,21,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,115,239,191,189,239,191,189,100,20,239,191,189,71,11,239,191,189,51,88,70,61,239,191,189,239,191,189,17,72,35,239,191,189,239,191,189,202,184,74,84,239,191,189,239,191,189,30,112,239,191,189,41,239,191,189,95,239,191,189,239,191,189,239,191,189,46,115,60,58,239,191,189,221,151,101,239,191,189,76,239,191,189,239,191,189,31,124,239,191,189,109,239,191,189,239,191,189,222,169,239,191,189,112,104,239,191,189,95,239,191,189,239,191,189,73,122,239,191,189,239,191,189,239,191,189,78,239,191,189,201,157,12,239,191,189,61,9,51,83,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,21,239,191,189,239,191,189,69,18,239,191,189,10,96,239,191,189,13,7,77,239,191,189,2,83,75,239,191,189,103,239,191,189,239,191,189,97,239,191,189,106,239,191,189,117,103,239,191,189,97,55,239,191,189,239,191,189,239,191,189,19,239,191,189,110,65,239,191,189,8,239,191,189,11,239,191,189,239,191,189,13,48,2,239,191,189,104,239,191,189,239,191,189,88,82,239,191,189,64,73,90,100,76,239,191,189,208,171,17,239,191,189,41,88,96,37,58,43,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,57,210,143,239,191,189,239,191,189,239,191,189,47,22,239,191,189,239,191,189,100,10,239,191,189,239,191,189,56,239,191,189,239,191,189,232,129,181,239,191,189,220,171,60,45,239,191,189,239,191,189,239,191,189,212,152,239,191,189,239,191,189,18,39,65,239,191,189,39,239,191,189,75,40,73,239,191,189,112,199,138,28,239,191,189,72,198,174,114,52,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,10,8,94,66,9,219,191,73,239,191,189,239,191,189,78,239,191,189,239,191,189,53,239,191,189,239,191,189,89,58,117,239,191,189,239,191,189,30,239,191,189,13,239,191,189,123,111,210,169,49,93,239,191,189,107,239,191,189,66,239,191,189,7,122,239,191,189,7,64,58,16,81,120,219,134,239,191,189,97,225,156,168,76,24,239,191,189,239,191,189,239,191,189,52,30,95,79,118,56,116,239,191,189,99,103,239,191,189,239,191,189,239,191,189,239,191,189,223,165,109,98,75,14,55,239,191,189,14,239,191,189,113,113,199,149,239,191,189,239,191,189,82,109,88,239,191,189,239,191,189,91,53,239,191,189,239,191,189,1,239,191,189,239,191,189,21,116,239,191,189,11,239,191,189,97,239,191,189,2,222,181,56,220,157,239,191,189,16,106,239,191,189,5,112,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,203,173,239,191,189,111,239,191,189,239,191,189,74,113,239,191,189,127,239,191,189,103,102,239,191,189,102,215,177,239,191,189,239,191,189,52,124,87,51,75,239,191,189,239,191,189,197,144,239,191,189,239,191,189,81,95,0,112,212,180,57,239,191,189,41,29,239,191,189,106,29,31,117,2,120,51,10,7,50,3,120,88,30,116,121,56,239,191,189,239,191,189,211,185,239,191,189,239,191,189,46,59,102,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,127,69,17,57,20,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,81,95,58,0,239,191,189,76,73,53,239,191,189,112,239,191,189,58,239,191,189,239,191,189,54,88,104,20,108,239,191,189,18,13,58,101,99,239,191,189,123,66,51,239,191,189,13,239,191,189,83,239,191,189,239,191,189,239,191,189,119,239,191,189,48,74,53,16,90,239,191,189,35,239,191,189,44,239,191,189,90,45,78,239,191,189,239,191,189,239,191,189,67,37,212,156,18,239,191,189,7,2,239,191,189,98,16,239,191,189,239,191,189,221,153,239,191,189,239,191,189,239,191,189,33,239,191,189,2,239,191,189,112,66,200,175,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,100,39,96,119,239,191,189,1,29,121,45,14,239,191,189,103,18,239,191,189,79,0,239,191,189,75,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,50,31,239,191,189,10,239,191,189,16,239,191,189,239,191,189,124,34,63,239,191,189,197,167,239,191,189,239,191,189,18,9,47,20,96,239,191,189,39,239,191,189,42,239,191,189,64,57,239,191,189,239,191,189,239,191,189,15,44,239,191,189,71,14,17,239,191,189,239,191,189,2,50,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,23,239,191,189,239,191,189,125,239,191,189,98,239,191,189,3,239,191,189,239,191,189,66,239,191,189,5,239,191,189,72,34,239,191,189,96,47,239,191,189,11,96,239,191,189,239,191,189,124,239,191,189,45,239,191,189,239,191,189,26,239,191,189,239,191,189,111,239,191,189,40,239,191,189,239,191,189,82,21,239,191,189,108,239,191,189,239,191,189,21,206,181,239,191,189,49,239,191,189,119,239,191,189,62,239,191,189,31,214,182,15,239,191,189,0,42,52,239,191,189,60,122,112,239,191,189,113,12,239,191,189,239,191,189,46,89,74,239,191,189,47,83,239,191,189,113,20,239,191,189,0,239,191,189,239,191,189,79,67,74,239,191,189,79,34,114,239,191,189,54,81,239,191,189,120,239,191,189,123,55,239,191,189,57,68,116,239,191,189,67,73,125,239,191,189,90,239,191,189,7,239,191,189,239,191,189,57,41,56,239,191,189,239,191,189,55,38,239,191,189,33,239,191,189,53,18,239,191,189,7,94,9,239,191,189,239,191,189,119,239,191,189,218,131,239,191,189,114,239,191,189,6,239,191,189,86,119,95,239,191,189,106,239,191,189,239,191,189,24})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000784 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000784_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000784_s.txt", Encoding.UTF8);

    public Test000784() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("LeaseTestBlobContent\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "224d402e649e4f859da9dda7ba35ba2b-lease-tests",
                        blob: "LeasedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001220 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001220_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001220_s.txt", Encoding.UTF8);

    public Test001220() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(@"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8c7124f764f04d48bf7b2dadfc57326a",
                        blob: "source",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001299 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001299_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001299_s.txt", Encoding.UTF8);

    public Test001299() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("blob\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc7af05eb93fa04815a478675b009858ea",
                        blob: "pageblob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001282 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001282_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001282_s.txt", Encoding.UTF8);

    public Test001282() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,67,64,239,191,189,239,191,189,80,19,72,239,191,189,62,239,191,189,108,114,96,8,14,106,80,59,239,191,189,93,239,191,189,112,239,191,189,239,191,189,82,239,191,189,124,239,191,189,1,111,239,191,189,83,66,239,191,189,121,50,95,82,239,191,189,239,191,189,239,191,189,7,14,2,239,191,189,239,191,189,239,191,189,51,239,191,189,108,7,32,239,191,189,239,191,189,239,191,189,210,150,38,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,4,25,47,124,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,103,239,191,189,98,239,191,189,239,191,189,123,239,191,189,72,7,239,191,189,103,216,160,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,85,239,191,189,41,63,239,191,189,239,191,189,239,191,189,75,239,191,189,3,97,9,239,191,189,239,191,189,62,110,112,239,191,189,110,25,239,191,189,78,88,73,102,44,120,239,191,189,239,191,189,239,191,189,65,239,191,189,64,239,191,189,105,239,191,189,94,34,239,191,189,4,239,191,189,125,239,191,189,3,51,94,62,239,191,189,94,127,53,239,191,189,202,163,1,7,62,239,191,189,239,191,189,239,191,189,58,20,239,191,189,239,191,189,194,143,239,191,189,11,239,191,189,109,15,78,71,106,68,119,239,191,189,84,22,8,239,191,189,239,191,189,52,16,239,191,189,239,191,189,8,239,191,189,239,191,189,98,239,191,189,126,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,51,38,239,191,189,111,239,191,189,100,95,95,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,9,44,239,191,189,43,125,37,219,145,5,112,239,191,189,239,191,189,239,191,189,239,191,189,19,114,115,239,191,189,239,191,189,67,239,191,189,239,191,189,49,239,191,189,62,3,6,239,191,189,239,191,189,120,239,191,189,89,239,191,189,20,239,191,189,20,29,105,239,191,189,1,21,239,191,189,239,191,189,239,191,189,239,191,189,211,152,239,191,189,87,93,41,204,157,11,61,239,191,189,239,191,189,239,191,189,121,30,50,219,141,126,71,239,191,189,239,191,189,239,191,189,239,191,189,84,9,4,239,191,189,45,239,191,189,239,191,189,61,239,191,189,98,48,110,239,191,189,93,27,200,140,67,9,239,191,189,24,63,123,60,239,191,189,239,191,189,1,84,117,119,56,49,239,191,189,239,191,189,2,83,37,42,112,72,84,239,191,189,239,191,189,73,239,191,189,95,126,113,239,191,189,239,191,189,95,239,191,189,69,239,191,189,20,239,191,189,200,191,73,239,191,189,239,191,189,239,191,189,115,42,239,191,189,239,191,189,239,191,189,90,199,163,98,239,191,189,239,191,189,76,90,76,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,153,109,239,191,189,239,191,189,239,191,189,92,106,38,239,191,189,239,191,189,239,191,189,127,97,73,239,191,189,101,35,239,191,189,17,88,239,191,189,239,191,189,239,191,189,239,191,189,200,157,213,141,239,191,189,61,239,191,189,7,239,191,189,81,102,77,9,108,2,71,239,191,189,239,191,189,58,239,191,189,99,204,143,239,191,189,61,30,96,56,239,191,189,100,76,239,191,189,117,101,38,40,239,191,189,239,191,189,97,73,13,239,191,189,239,191,189,15,239,191,189,92,239,191,189,239,191,189,239,191,189,96,223,156,107,40,239,191,189,13,44,80,239,191,189,239,191,189,121,89,82,4,239,191,189,216,163,70,217,191,26,75,239,191,189,127,117,3,127,197,149,194,170,239,191,189,239,191,189,3,109,37,9,61,42,26,91,239,191,189,239,191,189,108,239,191,189,239,191,189,119,11,63,207,184,111,239,191,189,10,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,50,239,191,189,118,78,239,191,189,127,239,191,189,102,27,239,191,189,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,10,58,239,191,189,216,189,239,191,189,122,29,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,30,41,116,239,191,189,0,82,83,15,239,191,189,239,191,189,4,37,239,191,189,239,191,189,106,25,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,49,111,239,191,189,239,191,189,75,65,239,191,189,99,239,191,189,239,191,189,197,184,239,191,189,49,5,239,191,189,84,29,239,191,189,239,191,189,115,19,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,117,107,239,191,189,54,239,191,189,74,217,189,17,6,26,28,46,33,17,117,107,239,191,189,233,176,147,36,30,239,191,189,92,221,187,10,239,191,189,64,239,191,189,72,9,118,66,122,239,191,189,239,191,189,8,239,191,189,122,95,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,48,13,21,14,239,191,189,11,239,191,189,81,77,32,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,19,239,191,189,222,150,239,191,189,112,239,191,189,95,53,51,126,92,101,102,45,239,191,189,217,176,43,239,191,189,123,239,191,189,239,191,189,239,191,189,45,239,191,189,33,239,191,189,239,191,189,239,191,189,96,212,134,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,110,213,135,239,191,189,239,191,189,115,239,191,189,239,191,189,78,239,191,189,239,191,189,86,21,239,191,189,239,191,189,104,239,191,189,79,239,191,189,100,239,191,189,211,170,239,191,189,221,131,52,239,191,189,63,68,239,191,189,48,13,40,52,30,60,239,191,189,239,191,189,239,191,189,73,239,191,189,17,46,6,49,239,191,189,239,191,189,15,49,124,85,239,191,189,9,76,239,191,189,40,26,239,191,189,239,191,189,207,182,9,31,79,73,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,123,208,172,239,191,189,56,239,191,189,13,239,191,189,49,62,3,220,128,239,191,189,34,26,239,191,189,55,122,239,191,189,8,15,239,191,189,239,191,189,239,191,189,52,64,6,239,191,189,239,191,189,77,239,191,189,120,239,191,189,74,49,59,239,191,189,239,191,189,239,191,189,65,239,191,189,17,69,17,71,239,191,189,9,239,191,189,239,191,189,109,239,191,189,211,185,108,25,239,191,189,239,191,189,4,239,191,189,7,66,125,239,191,189,20,99,239,191,189,74,239,191,189,232,129,177,124,87,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,57,64,48,109,101,239,191,189,108,239,191,189,239,191,189,113,32,49,239,191,189,239,191,189,239,191,189,49,239,191,189,98,239,191,189,35,124,239,191,189,75,117,33,6,23,39,10,239,191,189,239,191,189,17,197,191,83,9,239,191,189,123,28,48,15,239,191,189,199,175,239,191,189,112,32,50,239,191,189,203,180,108,35,43,39,70,239,191,189,76,94,106,69,239,191,189,101,239,191,189,15,108,239,191,189,102,239,191,189,239,191,189,121,70,239,191,189,19,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,76,63,239,191,189,65,237,153,151,13,21,239,191,189,47,239,191,189,239,191,189,239,191,189,32,97,239,191,189,115,4,50,239,191,189,87,64,58,38,239,191,189,24,97,27,88,200,155,120,239,191,189,239,191,189,86,127,239,191,189,33,239,191,189,86,88,110,239,191,189,74,239,191,189,239,191,189,72,239,191,189,201,176,126,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,27,84,239,191,189,54})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001279 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001279_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001279_s.txt", Encoding.UTF8);

    public Test001279() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,220,156,99,239,191,189,71,239,191,189,1,239,191,189,3,239,191,189,21,84,76,76,239,191,189,113,26,239,191,189,123,239,191,189,96,239,191,189,239,191,189,116,102,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,62,93,198,164,239,191,189,239,191,189,239,133,177,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,27,99,239,191,189,64,13,239,191,189,45,59,239,191,189,31,239,191,189,40,30,8,239,191,189,239,191,189,51,34,91,13,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,199,130,239,191,189,239,191,189,239,191,189,92,16,33,239,191,189,35,239,191,189,239,191,189,125,13,239,191,189,83,239,191,189,37,239,191,189,5,43,239,191,189,99,239,191,189,239,191,189,50,48,239,191,189,239,191,189,95,239,191,189,48,65,34,103,239,191,189,61,239,191,189,239,191,189,239,191,189,12,71,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,98,41,239,191,189,239,191,189,37,67,46,239,191,189,60,239,191,189,76,239,191,189,239,191,189,38,239,191,189,55,30,79,99,239,191,189,239,191,189,68,63,121,67,125,17,239,191,189,72,239,191,189,54,64,239,191,189,239,191,189,239,191,189,29,44,19,34,239,191,189,239,191,189,26,239,191,189,5,239,191,189,3,65,239,191,189,33,239,191,189,125,239,191,189,239,191,189,52,239,191,189,239,191,189,39,239,191,189,239,191,189,49,239,191,189,88,239,191,189,239,191,189,11,239,191,189,239,191,189,80,239,191,189,10,11,44,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,64,60,105,239,191,189,239,191,189,39,239,191,189,125,239,191,189,62,239,191,189,124,5,94,122,239,191,189,56,239,191,189,26,81,239,191,189,40,123,87,127,239,191,189,114,111,28,60,239,191,189,82,101,105,116,107,239,191,189,239,191,189,239,191,189,111,24,239,191,189,71,239,191,189,96,36,5,239,191,189,239,191,189,28,239,191,189,239,191,189,120,239,191,189,14,24,239,191,189,18,12,239,191,189,43,96,86,78,239,191,189,22,239,191,189,239,191,189,15,239,191,189,65,1,239,191,189,56,33,239,191,189,239,191,189,239,191,189,90,239,191,189,197,189,0,124,4,239,191,189,124,90,92,239,191,189,239,191,189,239,191,189,205,185,239,191,189,46,239,191,189,56,239,191,189,13,105,194,162,89,126,239,191,189,205,176,239,191,189,55,239,191,189,27,239,191,189,83,239,191,189,109,95,239,191,189,74,196,153,66,239,191,189,100,13,87,51,239,191,189,75,239,191,189,239,191,189,52,76,53,2,27,239,191,189,239,191,189,26,12,239,191,189,108,36,222,153,56,121,239,191,189,127,239,191,189,22,239,191,189,239,191,189,116,39,52,61,76,38,239,191,189,239,191,189,101,239,191,189,71,16,239,191,189,101,29,239,191,189,82,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,105,239,191,189,115,31,239,191,189,40,239,191,189,36,239,191,189,239,191,189,54,239,191,189,14,239,191,189,239,191,189,90,239,191,189,100,48,103,114,239,191,189,205,178,239,191,189,91,239,191,189,45,21,58,239,191,189,69,239,191,189,81,203,183,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,109,66,239,191,189,239,191,189,15,31,116,94,3,202,135,101,99,239,191,189,239,191,189,239,191,189,75,94,76,239,191,189,15,239,191,189,14,239,191,189,49,239,191,189,2,38,239,191,189,239,191,189,105,126,206,157,111,239,191,189,2,71,75,239,191,189,239,191,189,239,191,189,55,239,191,189,65,239,191,189,63,239,191,189,24,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,52,239,191,189,90,83,29,77,239,191,189,51,97,9,239,191,189,239,191,189,28,45,239,191,189,4,19,239,191,189,239,191,189,87,103,25,51,239,191,189,239,191,189,239,191,189,39,104,20,239,191,189,24,239,191,189,214,161,86,67,239,191,189,239,191,189,239,191,189,107,239,191,189,4,239,191,189,239,191,189,239,191,189,40,35,239,191,189,90,239,191,189,239,191,189,239,191,189,22,110,102,26,239,191,189,106,239,191,189,90,38,115,30,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,123,24,26,239,191,189,121,124,99,239,191,189,126,71,239,191,189,239,191,189,85,14,92,67,65,239,191,189,104,59,59,239,191,189,239,191,189,115,69,69,102,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,223,159,111,239,191,189,239,191,189,2,239,191,189,14,34,239,191,189,239,191,189,101,239,191,189,80,239,191,189,8,239,191,189,63,239,191,189,196,150,239,191,189,239,191,189,51,21,126,239,191,189,239,191,189,99,107,239,191,189,90,46,239,191,189,239,191,189,91,30,118,56,239,191,189,239,191,189,95,239,191,189,239,191,189,116,1,35,239,191,189,20,219,178,105,96,27,9,239,191,189,60,105,220,131,12,83,239,191,189,116,239,191,189,118,54,4,124,84,239,191,189,16,6,239,191,189,27,54,19,32,239,191,189,20,91,217,166,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,11,30,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,31,239,191,189,239,191,189,239,191,189,30,49,239,191,189,239,191,189,98,109,239,191,189,210,181,27,239,191,189,239,191,189,40,51,239,191,189,56,239,191,189,55,124,35,80,113,53,52,118,81,88,199,151,239,191,189,90,239,191,189,74,60,239,191,189,239,191,189,23,43,239,191,189,20,239,191,189,85,3,11,210,140,103,239,191,189,103,100,239,191,189,239,191,189,239,191,189,205,191,239,191,189,239,191,189,43,16,20,55,59,239,191,189,239,191,189,239,191,189,125,239,191,189,199,162,239,191,189,11,239,191,189,14,111,28,50,40,239,191,189,239,191,189,239,191,189,32,47,239,191,189,239,191,189,64,239,191,189,110,239,191,189,92,239,191,189,239,191,189,26,119,220,165,239,191,189,66,34,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,87,239,191,189,239,191,189,75,35,23,12,50,239,191,189,239,191,189,125,239,191,189,106,201,182,239,191,189,121,49,202,136,239,191,189,6,78,37,22,64,106,239,191,189,73,239,191,189,11,16,67,4,68,101,239,191,189,83,197,153,97,78,121,123,34,54,117,239,191,189,10,239,191,189,23,102,239,191,189,27,104,239,191,189,56,37,13,215,161,99,239,191,189,239,191,189,239,191,189,108,96,102,239,191,189,81,34,37,108,48,39,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,111,195,184,239,191,189,239,191,189,124,40,239,191,189,239,191,189,45,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,14,117,239,191,189,110,239,191,189,239,191,189,99,239,191,189,239,191,189,0,101,35,45,11,49,239,191,189,239,191,189,97,40,239,191,189,56,239,191,189,239,191,189,35,121,239,191,189,126,56,41,239,191,189,13,37,75,9,239,191,189,239,191,189,10,73,239,191,189,239,191,189,25,52,213,182,200,133,25,239,191,189,239,191,189,93,239,191,189,30,239,191,189,198,158,67,239,191,189,239,191,189,239,191,189,19,123,42,239,191,189,239,191,189,239,191,189,63,239,191,189,35,78,55,239,191,189,239,191,189,239,191,189,125,239,191,189,4,239,191,189,25,91,239,191,189,196,155,114,239,191,189,76,239,160,133,107,120,84,116,83,239,191,189,48,239,191,189,105,12,195,136,239,191,189,239,191,189,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001264 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001264_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001264_s.txt", Encoding.UTF8);

    public Test001264() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{62,46,25,239,191,189,31,13,56,44,120,239,191,189,27,126,126,239,191,189,95,15,239,191,189,23,239,191,189,110,239,191,189,239,191,189,62,221,150,62,21,239,191,189,239,191,189,48,239,191,189,103,47,239,191,189,92,217,184,113,18,239,191,189,86,239,191,189,109,27,239,191,189,104,239,191,189,239,191,189,239,191,189,8,239,191,189,82,95,84,119,239,191,189,60,56,239,191,189,239,191,189,112,59,72,217,151,22,79,239,191,189,3,54,43,239,191,189,199,189,108,239,191,189,239,191,189,194,159,239,191,189,88,41,40,39,15,49,7,239,191,189,106,108,239,191,189,127,239,191,189,25,64,27,239,191,189,239,191,189,239,191,189,239,191,189,24,12,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,123,30,122,239,191,189,11,239,191,189,71,19,32,239,191,189,101,15,115,70,239,191,189,239,191,189,239,191,189,21,239,191,189,125,80,121,61,62,239,191,189,239,191,189,76,239,191,189,239,191,189,74,217,166,101,239,191,189,239,191,189,78,33,239,191,189,121,239,191,189,8,97,239,191,189,29,209,165,239,191,189,4,239,191,189,48,32,239,191,189,36,239,191,189,2,239,191,189,60,239,191,189,78,84,239,191,189,126,239,191,189,241,191,169,129,88,72,120,198,144,51,239,191,189,71,23,116,32,239,191,189,24,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,65,91,239,191,189,109,239,191,189,12,55,37,63,239,191,189,239,191,189,239,191,189,94,39,36,109,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,79,239,191,189,107,27,239,191,189,53,239,191,189,48,239,191,189,56,239,191,189,104,37,107,218,146,239,191,189,88,13,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,25,239,191,189,40,30,239,191,189,11,2,2,239,191,189,32,1,87,15,239,191,189,208,159,103,239,191,189,239,191,189,1,239,191,189,239,191,189,55,239,191,189,90,239,191,189,94,239,191,189,88,37,65,239,191,189,99,239,191,189,11,15,239,191,189,239,191,189,25,105,239,191,189,200,152,87,239,191,189,53,22,239,191,189,239,191,189,90,6,239,191,189,23,239,191,189,42,239,191,189,239,191,189,70,121,239,191,189,52,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,197,144,239,191,189,239,191,189,239,191,189,8,38,23,239,191,189,239,191,189,37,123,239,191,189,239,191,189,239,191,189,31,76,239,191,189,119,239,191,189,12,30,87,127,239,191,189,198,164,86,239,191,189,239,191,189,19,239,191,189,57,239,191,189,109,239,191,189,12,17,127,239,191,189,3,239,191,189,17,239,191,189,32,239,191,189,239,191,189,99,116,239,191,189,114,5,53,61,239,191,189,113,55,122,68,239,191,189,100,239,191,189,122,71,211,157,66,239,191,189,99,49,19,59,30,239,191,189,239,191,189,36,13,239,191,189,94,239,191,189,239,191,189,64,239,191,189,239,191,189,37,13,83,239,191,189,60,239,191,189,239,191,189,239,191,189,205,173,126,50,109,239,191,189,199,131,239,191,189,80,0,66,239,191,189,55,230,160,162,239,191,189,100,123,27,239,191,189,10,35,239,191,189,33,239,191,189,74,71,114,103,239,191,189,239,191,189,110,113,22,105,239,191,189,67,239,191,189,239,191,189,239,191,189,119,64,239,191,189,239,191,189,239,191,189,39,239,191,189,89,239,191,189,239,191,189,25,119,42,239,191,189,90,67,239,191,189,239,191,189,1,57,116,221,152,239,191,189,71,239,191,189,117,239,191,189,56,239,191,189,33,239,191,189,63,239,191,189,239,191,189,239,191,189,79,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,208,131,9,67,205,187,37,1,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,40,32,239,191,189,117,239,191,189,55,111,16,120,239,191,189,239,191,189,115,99,239,191,189,239,191,189,18,239,191,189,34,62,239,191,189,239,191,189,239,191,189,19,220,134,239,191,189,239,191,189,74,239,191,189,58,86,13,16,239,191,189,110,239,191,189,2,91,239,191,189,239,191,189,211,189,67,49,11,39,239,191,189,0,239,191,189,239,191,189,239,191,189,115,239,191,189,11,89,13,239,191,189,239,191,189,239,191,189,239,191,189,36,22,61,239,191,189,239,191,189,99,120,51,239,191,189,15,109,49,107,239,191,189,239,191,189,239,191,189,239,191,189,95,3,239,191,189,96,114,91,239,191,189,239,191,189,115,239,191,189,21,239,191,189,21,108,239,191,189,57,239,191,189,239,191,189,6,239,191,189,35,239,191,189,22,239,191,189,48,119,114,239,191,189,7,239,191,189,34,239,191,189,43,28,239,191,189,239,191,189,239,191,189,196,163,239,191,189,28,77,239,191,189,29,239,191,189,239,191,189,1,64,50,3,65,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,218,147,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,3,36,119,239,191,189,239,191,189,126,239,191,189,54,125,113,100,239,191,189,239,191,189,239,191,189,70,239,191,189,111,239,191,189,15,42,239,191,189,239,191,189,239,191,189,66,239,191,189,101,239,191,189,239,191,189,100,1,37,75,239,191,189,24,62,97,239,191,189,239,191,189,239,191,189,110,33,239,191,189,125,119,117,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,19,86,91,43,53,28,110,239,191,189,239,191,189,239,191,189,124,75,25,239,191,189,205,161,239,191,189,7,239,191,189,47,239,191,189,8,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,211,172,120,62,102,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,86,239,191,189,71,38,1,43,92,239,191,189,239,191,189,59,28,239,191,189,239,191,189,68,10,239,191,189,48,239,191,189,104,32,239,191,189,239,191,189,6,37,4,13,239,191,189,0,10,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,117,41,85,112,31,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,8,239,191,189,239,191,189,56,239,191,189,239,191,189,34,64,0,239,191,189,30,239,191,189,239,191,189,239,191,189,125,110,72,16,239,191,189,109,73,69,6,85,239,191,189,0,239,191,189,239,191,189,80,40,123,239,191,189,239,191,189,42,2,11,34,46,69,46,239,191,189,239,191,189,117,43,54,239,191,189,66,32,67,72,239,191,189,120,239,191,189,239,191,189,239,191,189,195,172,54,63,239,191,189,239,191,189,59,239,191,189,215,130,239,191,189,25,239,191,189,239,191,189,113,75,26,202,176,239,191,189,239,191,189,239,191,189,239,191,189,30,50,239,191,189,239,191,189,239,191,189,7,116,3,239,191,189,219,158,63,95,239,191,189,239,191,189,68,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,13,239,191,189,73,239,191,189,239,191,189,99,127,239,191,189,61,19,239,191,189,17,96,43,30,108,63,56,50,49,127,239,191,189,44,73,239,191,189,10,239,191,189,85,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,42,239,191,189,110,126,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,222,136,41,239,191,189,94,56,62,239,191,189,239,191,189,73,77,113,93,239,191,189,239,191,189,7,239,191,189,22,239,191,189,125,16,109,107,239,191,189,92,33,79,239,191,189,239,191,189,58,89,34,239,191,189,26,201,177,0,18,15,70,239,191,189,61,15,37})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001258 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001258_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001258_s.txt", Encoding.UTF8);

    public Test001258() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,105,9,7,239,191,189,71,239,191,189,95,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,86,33,239,191,189,239,191,189,124,194,134,124,239,191,189,48,40,78,239,191,189,239,191,189,7,239,191,189,51,239,191,189,239,191,189,115,239,191,189,14,58,124,207,163,119,45,14,239,191,189,78,106,239,191,189,96,239,191,189,52,239,191,189,108,91,74,7,239,191,189,89,239,191,189,121,239,191,189,239,191,189,116,239,191,189,239,191,189,117,239,191,189,118,91,19,239,191,189,41,25,239,191,189,75,88,109,23,225,189,140,65,239,191,189,239,191,189,95,199,130,239,191,189,107,14,239,191,189,99,3,213,181,2,122,45,239,191,189,217,176,74,5,239,191,189,88,82,239,191,189,239,191,189,239,191,189,127,66,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,11,77,94,67,37,68,35,72,239,191,189,63,30,8,12,66,60,17,68,7,117,0,239,191,189,239,191,189,239,191,189,113,110,71,105,9,239,191,189,239,191,189,239,191,189,33,239,191,189,126,63,239,191,189,239,191,189,74,50,14,94,239,191,189,239,191,189,63,36,239,191,189,42,111,110,239,191,189,121,98,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,67,239,191,189,239,191,189,33,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,79,76,239,191,189,239,191,189,63,239,191,189,19,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,84,51,68,239,191,189,239,191,189,40,239,191,189,32,39,239,191,189,224,161,164,239,191,189,80,239,191,189,98,111,239,191,189,83,69,239,191,189,239,191,189,239,191,189,69,95,61,44,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,51,93,239,191,189,94,239,191,189,36,239,191,189,120,23,239,191,189,51,92,239,191,189,195,163,239,191,189,239,191,189,239,191,189,239,191,189,33,14,239,191,189,239,191,189,61,71,76,239,191,189,101,22,98,239,191,189,28,35,239,191,189,239,191,189,239,191,189,3,239,191,189,124,239,191,189,204,132,239,191,189,127,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,2,99,113,239,191,189,239,191,189,239,191,189,23,85,58,22,19,0,75,75,63,107,239,191,189,239,191,189,7,239,191,189,239,191,189,120,239,191,189,66,20,239,191,189,93,124,111,21,239,191,189,239,191,189,99,229,185,178,44,89,80,239,191,189,118,66,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,101,127,216,182,239,191,189,64,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,107,107,239,191,189,101,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,71,53,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,23,239,191,189,60,239,191,189,34,90,217,130,239,191,189,239,191,189,106,50,239,191,189,119,239,191,189,77,24,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,0,86,239,191,189,85,239,191,189,239,191,189,60,91,5,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,10,239,191,189,54,41,239,191,189,75,109,239,191,189,239,191,189,118,58,120,205,188,239,191,189,107,63,239,191,189,239,191,189,72,41,5,239,191,189,219,174,117,15,44,218,157,239,191,189,239,191,189,75,239,191,189,239,191,189,117,116,239,191,189,219,180,239,191,189,78,239,191,189,108,108,126,110,239,191,189,115,87,239,191,189,8,239,191,189,239,191,189,239,191,189,5,239,191,189,91,122,48,60,64,239,191,189,32,239,191,189,103,44,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,60,95,239,191,189,110,239,191,189,111,48,6,112,239,191,189,239,191,189,2,239,191,189,73,239,191,189,58,239,191,189,239,191,189,25,12,239,191,189,120,239,191,189,126,118,239,191,189,4,81,120,239,191,189,88,96,239,191,189,41,77,36,239,191,189,239,191,189,42,239,191,189,73,41,203,135,76,29,239,191,189,30,100,239,191,189,59,91,221,171,51,196,182,92,239,191,189,239,191,189,106,222,142,239,191,189,96,35,32,239,191,189,239,191,189,239,191,189,120,39,239,191,189,45,195,130,239,191,189,32,50,89,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,54,239,191,189,239,191,189,110,101,239,191,189,87,239,191,189,106,239,191,189,1,38,41,239,191,189,109,35,239,191,189,66,19,198,176,239,191,189,24,239,191,189,42,239,191,189,25,239,191,189,239,191,189,239,191,189,96,100,239,191,189,239,191,189,114,52,19,239,191,189,61,239,191,189,88,239,191,189,239,191,189,9,92,77,239,191,189,42,121,87,53,239,191,189,77,67,113,239,191,189,59,0,61,239,191,189,120,200,160,194,137,18,211,177,239,191,189,47,239,191,189,239,191,189,4,239,191,189,239,191,189,109,239,191,189,32,65,239,191,189,239,191,189,239,191,189,88,9,47,204,156,86,0,91,216,136,0,239,191,189,239,191,189,31,10,56,127,73,121,17,239,191,189,74,204,172,206,189,121,4,61,26,239,191,189,113,59,239,191,189,111,239,191,189,239,191,189,239,191,189,118,125,239,191,189,50,87,1,239,191,189,86,239,191,189,239,191,189,98,99,239,191,189,239,191,189,82,239,191,189,42,14,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,201,143,114,46,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,97,106,239,191,189,239,191,189,35,119,13,207,161,239,191,189,121,239,191,189,30,239,191,189,239,191,189,97,91,15,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,86,78,239,191,189,27,113,95,239,191,189,239,191,189,12,91,68,68,3,113,239,191,189,77,23,239,191,189,3,59,91,239,191,189,87,89,239,191,189,42,239,191,189,239,191,189,212,177,27,239,191,189,239,191,189,239,191,189,60,239,191,189,70,239,191,189,57,199,148,88,239,191,189,84,52,239,191,189,239,191,189,216,173,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,52,239,191,189,68,56,239,191,189,41,239,191,189,98,239,191,189,239,191,189,239,191,189,7,44,239,191,189,239,191,189,116,239,191,189,85,239,191,189,5,94,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,204,155,93,239,191,189,12,124,72,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,68,17,117,52,74,239,191,189,127,239,191,189,89,239,191,189,17,239,191,189,54,239,191,189,239,191,189,15,239,191,189,239,191,189,32,104,239,191,189,239,191,189,107,239,191,189,239,191,189,91,239,191,189,239,191,189,72,239,191,189,239,191,189,44,239,191,189,239,191,189,66,239,191,189,80,125,199,140,239,191,189,239,191,189,239,191,189,73,239,191,189,111,239,191,189,39,2,64,113,34,239,191,189,219,144,239,191,189,201,162,239,191,189,97,239,191,189,239,191,189,17,209,144,239,191,189,239,191,189,61,104,69,239,191,189,7,239,191,189,239,191,189,126,239,191,189,239,191,189,33,239,191,189,114,239,191,189,101,239,191,189,7,76,94,239,191,189,239,191,189,29,239,191,189,206,173,127,102,239,191,189,26,239,191,189,33,239,191,189,55,231,129,190,239,191,189,239,191,189,106,102,239,191,189,93,239,191,189,239,191,189,239,191,189,215,138,196,141,13,9,239,191,189,49,3,239,191,189,32,239,191,189,118,16,239,191,189,84,239,191,189,99,239,191,189,239,191,189,104,239,191,189,239,191,189,27,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001267 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001267_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001267_s.txt", Encoding.UTF8);

    public Test001267() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{14,32,61,239,191,189,239,191,189,92,5,26,111,239,191,189,239,191,189,118,239,191,189,90,123,213,140,96,239,191,189,7,239,191,189,119,239,191,189,52,55,234,165,134,239,191,189,102,27,3,86,11,58,58,47,74,219,177,77,36,239,191,189,239,191,189,124,239,191,189,79,119,23,239,191,189,85,88,9,86,239,191,189,239,191,189,42,9,239,191,189,213,182,126,51,8,239,191,189,239,191,189,31,121,31,65,239,191,189,65,239,191,189,22,239,191,189,239,191,189,239,191,189,113,239,191,189,80,239,191,189,45,111,18,16,239,191,189,239,191,189,0,121,239,191,189,15,37,239,191,189,6,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,87,239,191,189,46,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,67,58,239,191,189,14,32,239,191,189,239,191,189,239,191,189,31,239,191,189,123,49,239,191,189,239,191,189,127,28,239,191,189,122,127,46,239,191,189,239,191,189,214,154,239,191,189,239,191,189,239,191,189,6,99,126,1,87,239,191,189,115,239,191,189,113,239,191,189,208,130,34,239,191,189,239,191,189,239,191,189,220,164,239,191,189,239,191,189,83,214,176,86,39,57,34,239,191,189,116,239,191,189,116,60,239,191,189,239,191,189,239,191,189,121,218,171,23,239,191,189,239,191,189,44,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,115,239,191,189,47,239,191,189,40,239,191,189,30,239,191,189,239,191,189,87,239,191,189,75,239,191,189,239,191,189,68,239,191,189,239,191,189,84,98,239,191,189,3,114,239,191,189,43,239,191,189,239,191,189,46,220,135,217,133,239,191,189,126,7,239,191,189,65,239,191,189,8,88,239,191,189,239,191,189,239,191,189,94,92,239,191,189,239,191,189,64,113,24,239,191,189,239,191,189,239,191,189,239,191,189,44,50,0,239,191,189,4,47,239,191,189,239,191,189,65,43,239,191,189,239,191,189,5,205,140,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,13,10,19,68,62,239,191,189,65,239,191,189,196,140,239,191,189,239,191,189,33,81,213,135,68,239,191,189,217,178,239,191,189,122,239,191,189,126,239,191,189,239,191,189,18,239,191,189,114,21,26,19,239,191,189,239,191,189,30,39,239,191,189,197,139,101,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,119,239,191,189,34,9,74,208,147,60,239,191,189,239,191,189,87,239,191,189,239,191,189,73,239,191,189,114,239,191,189,77,76,51,239,191,189,239,191,189,239,191,189,239,191,189,78,76,3,239,191,189,47,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,86,239,191,189,10,83,4,239,191,189,239,191,189,88,239,191,189,109,239,191,189,214,165,239,191,189,43,45,239,191,189,239,191,189,72,10,239,191,189,50,42,239,191,189,239,191,189,204,150,13,18,19,84,239,191,189,239,191,189,78,88,122,239,191,189,239,191,189,72,239,191,189,239,191,189,65,239,191,189,239,191,189,84,118,93,47,3,84,13,107,78,239,191,189,29,36,239,191,189,79,86,55,239,191,189,239,191,189,69,239,191,189,24,239,191,189,67,87,116,239,191,189,105,239,191,189,79,239,191,189,72,239,191,189,239,191,189,239,191,189,102,239,191,189,111,102,10,239,191,189,6,233,172,162,49,52,239,191,189,116,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,113,85,50,6,239,191,189,81,239,191,189,111,28,239,191,189,239,191,189,239,191,189,127,44,239,191,189,239,191,189,200,142,210,134,239,191,189,47,82,239,191,189,38,64,4,239,191,189,239,191,189,62,239,191,189,98,239,191,189,4,46,16,83,104,239,191,189,239,191,189,211,150,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,37,18,117,239,191,189,66,2,239,191,189,239,191,189,122,76,239,191,189,116,239,191,189,239,191,189,69,239,191,189,123,239,191,189,239,191,189,123,95,239,191,189,26,239,191,189,78,97,85,239,191,189,118,239,191,189,239,191,189,105,39,239,191,189,239,191,189,80,41,72,239,191,189,13,239,191,189,239,191,189,48,107,239,191,189,34,239,191,189,57,239,191,189,239,191,189,58,239,191,189,239,191,189,87,239,191,189,66,239,191,189,239,191,189,108,239,191,189,239,191,189,105,239,191,189,200,140,76,239,191,189,239,191,189,239,191,189,239,191,189,50,17,204,186,214,178,239,191,189,239,191,189,44,113,28,239,191,189,81,2,239,191,189,239,191,189,12,239,191,189,87,102,239,191,189,11,96,239,191,189,30,65,239,191,189,80,239,191,189,8,58,239,191,189,20,7,112,239,191,189,18,239,191,189,74,239,191,189,64,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,124,239,191,189,82,87,6,108,239,191,189,112,11,239,191,189,86,104,239,191,189,48,239,191,189,74,239,191,189,239,191,189,51,239,191,189,239,191,189,13,121,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,123,89,45,239,191,189,34,194,176,105,121,239,191,189,89,31,63,104,239,191,189,6,239,191,189,239,191,189,44,83,51,1,72,239,191,189,239,191,189,217,187,107,239,191,189,11,90,239,191,189,45,9,239,191,189,59,35,13,209,153,40,89,123,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,32,14,49,80,239,191,189,122,17,77,52,239,191,189,239,191,189,239,191,189,239,191,189,220,171,239,191,189,82,17,95,239,191,189,203,138,239,191,189,90,239,191,189,10,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,10,239,191,189,123,239,191,189,40,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,42,125,208,160,127,239,191,189,239,191,189,239,191,189,201,150,81,215,150,239,191,189,239,191,189,68,13,124,239,191,189,33,239,191,189,40,96,239,191,189,239,191,189,214,141,239,191,189,1,221,154,66,114,20,239,191,189,42,239,191,189,239,191,189,56,3,23,70,12,239,191,189,81,239,191,189,229,188,166,239,191,189,115,239,191,189,198,187,2,28,33,201,169,48,239,191,189,239,191,189,239,191,189,239,191,189,14,100,239,191,189,239,191,189,239,191,189,71,110,68,239,191,189,10,239,191,189,27,123,2,239,191,189,239,191,189,20,90,239,191,189,39,239,191,189,239,191,189,88,239,191,189,13,239,191,189,212,143,239,191,189,54,239,191,189,32,239,191,189,239,191,189,99,39,19,95,113,47,216,188,24,239,191,189,30,68,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,115,239,191,189,41,223,155,108,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,108,239,191,189,239,191,189,239,191,189,75,105,27,51,20,41,53,58,71,120,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,43,8,239,191,189,107,97,221,176,239,191,189,239,191,189,239,191,189,46,239,191,189,9,222,176,106,4,239,191,189,126,61,99,82,56,239,191,189,9,239,191,189,125,239,191,189,6,72,12,93,3,239,191,189,66,239,191,189,239,191,189,239,191,189,55,120,108,82,96,73,66,205,155,45,126,239,191,189,36,239,191,189,123,73,239,191,189,239,191,189,67,98,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,209,172,36,51,109,239,191,189,84,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,226,184,136,85,239,191,189,204,136,239,191,189,239,191,189,114,90,77,37,215,172,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,103,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001261 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001261_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001261_s.txt", Encoding.UTF8);

    public Test001261() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,119,239,191,189,239,191,189,100,96,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,54,239,191,189,110,239,191,189,117,121,110,34,239,191,189,5,16,239,191,189,239,191,189,239,191,189,18,239,191,189,47,239,191,189,90,30,65,239,191,189,6,69,76,239,191,189,239,191,189,7,55,239,191,189,98,90,17,118,239,191,189,77,61,91,112,9,239,191,189,78,239,191,189,83,239,191,189,125,212,152,239,191,189,239,191,189,30,52,239,191,189,94,80,59,103,239,191,189,40,239,191,189,26,105,64,239,191,189,77,239,191,189,65,53,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,35,239,191,189,239,191,189,206,178,73,80,239,191,189,239,191,189,45,94,239,191,189,38,239,191,189,239,191,189,50,126,124,239,191,189,239,191,189,83,239,191,189,106,239,191,189,98,10,239,191,189,239,191,189,74,239,191,189,220,184,24,239,191,189,3,90,63,67,239,191,189,203,154,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,68,81,107,239,191,189,220,178,239,191,189,13,33,239,191,189,31,239,191,189,69,239,191,189,11,239,191,189,121,239,191,189,110,239,191,189,48,239,191,189,239,191,189,63,56,239,191,189,25,239,191,189,37,123,4,120,239,191,189,68,99,73,239,191,189,76,0,6,73,239,191,189,239,191,189,115,32,93,239,191,189,214,142,239,191,189,117,12,239,191,189,11,239,191,189,239,191,189,121,43,97,1,239,191,189,21,239,191,189,239,191,189,23,1,239,191,189,239,191,189,3,45,239,191,189,104,63,239,191,189,239,191,189,99,31,239,191,189,87,67,43,239,191,189,6,239,191,189,239,191,189,194,175,239,191,189,207,179,239,191,189,239,191,189,109,51,239,191,189,59,239,191,189,120,69,239,191,189,68,203,153,72,54,68,239,191,189,12,239,191,189,22,12,239,191,189,239,191,189,85,239,191,189,95,239,191,189,239,191,189,239,191,189,85,81,239,191,189,239,191,189,79,66,239,191,189,239,191,189,11,200,142,209,166,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,85,23,73,96,239,191,189,239,191,189,239,191,189,239,191,189,48,124,239,191,189,73,6,96,73,239,191,189,67,65,68,101,239,191,189,239,191,189,86,239,191,189,113,239,191,189,40,85,95,239,191,189,239,191,189,58,239,191,189,222,129,239,191,189,239,191,189,104,239,191,189,41,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,60,52,95,239,191,189,116,65,113,127,239,191,189,239,191,189,239,191,189,126,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,102,239,191,189,239,191,189,77,27,92,77,49,239,191,189,4,239,191,189,43,239,191,189,25,42,78,19,239,191,189,102,108,1,34,4,120,59,239,191,189,239,191,189,18,33,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,54,239,191,189,107,88,239,191,189,36,78,239,191,189,35,239,191,189,239,191,189,45,103,51,239,191,189,239,191,189,59,239,191,189,239,191,189,68,239,191,189,98,17,112,239,191,189,58,15,0,28,201,156,69,67,239,191,189,202,168,109,239,191,189,72,239,191,189,52,74,85,239,191,189,239,191,189,239,191,189,54,15,239,191,189,211,165,239,191,189,60,34,89,239,191,189,75,239,191,189,62,239,191,189,89,239,191,189,113,239,191,189,115,105,239,191,189,107,239,191,189,115,41,16,239,191,189,12,98,124,4,239,191,189,33,239,191,189,12,2,200,159,239,191,189,239,191,189,239,191,189,78,239,191,189,52,94,116,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,66,239,191,189,12,96,124,239,191,189,239,191,189,22,239,191,189,107,71,90,29,35,239,191,189,86,38,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,2,16,239,191,189,239,191,189,89,86,239,191,189,239,191,189,103,239,191,189,104,34,49,42,239,191,189,87,24,239,191,189,3,86,35,27,239,191,189,239,191,189,239,191,189,116,124,195,156,239,191,189,239,191,189,75,198,184,239,191,189,5,84,113,239,191,189,4,239,191,189,239,191,189,41,96,239,191,189,239,191,189,5,239,191,189,47,78,205,152,16,94,239,191,189,239,191,189,106,9,75,239,191,189,239,191,189,239,191,189,239,191,189,112,28,91,121,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,213,135,239,191,189,68,239,191,189,239,191,189,111,239,191,189,78,239,191,189,239,191,189,58,104,18,239,191,189,239,191,189,74,38,9,42,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,75,37,239,191,189,17,239,191,189,29,239,191,189,37,47,75,116,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,112,84,56,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,84,41,239,191,189,239,191,189,239,191,189,117,26,219,149,60,101,22,239,191,189,109,239,191,189,96,36,243,179,147,164,239,191,189,59,94,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,46,239,191,189,21,113,80,123,239,191,189,239,191,189,96,239,191,189,198,190,239,191,189,239,191,189,121,75,239,191,189,6,59,111,38,239,191,189,237,128,173,38,239,191,189,36,59,5,73,16,125,239,191,189,62,7,74,239,191,189,239,191,189,56,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,84,239,191,189,239,191,189,25,41,239,191,189,124,202,148,239,191,189,41,239,191,189,121,106,91,79,239,191,189,65,203,168,113,0,12,98,3,121,39,111,74,239,191,189,35,72,239,191,189,239,191,189,239,191,189,52,92,239,191,189,83,22,239,191,189,61,239,191,189,239,191,189,121,96,124,239,191,189,239,191,189,84,239,191,189,71,19,64,12,83,196,137,21,239,191,189,239,191,189,13,127,239,191,189,239,191,189,239,191,189,28,211,131,39,239,191,189,239,191,189,239,191,189,51,75,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,52,121,239,191,189,239,191,189,112,239,191,189,239,191,189,120,239,191,189,239,191,189,9,78,239,191,189,68,239,191,189,17,239,191,189,97,33,89,94,90,239,191,189,8,239,191,189,239,191,189,114,239,191,189,11,239,191,189,239,191,189,239,191,189,197,172,239,191,189,57,239,191,189,32,239,191,189,74,60,50,117,65,239,191,189,80,94,84,239,191,189,200,149,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,49,110,239,191,189,109,47,53,102,239,191,189,239,191,189,111,33,9,64,67,15,34,39,99,239,191,189,239,191,189,80,20,93,239,191,189,239,191,189,239,191,189,67,214,131,120,99,239,191,189,239,191,189,110,90,239,191,189,3,64,239,191,189,69,99,239,191,189,239,191,189,96,239,191,189,84,239,191,189,114,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,114,64,239,191,189,69,22,29,239,191,189,239,191,189,28,81,212,180,83,36,35,239,191,189,239,191,189,86,120,40,239,191,189,239,191,189,25,239,191,189,34,239,191,189,28,239,191,189,239,191,189,14,20,239,191,189,239,191,189,239,191,189,49,239,191,189,77,239,191,189,239,163,163,2,206,189,96,239,191,189,57,239,191,189,94,239,191,189,3,26,239,191,189,118,239,191,189,239,191,189,117,239,191,189,239,191,189,30,32,66,239,191,189,239,191,189,103,239,191,189,36})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001393 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001393_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001393_s.txt", Encoding.UTF8);

    public Test001393() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{37,239,191,189,34,239,191,189,239,191,189,122,6,239,191,189,239,191,189,111,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,88,239,191,189,109,30,239,191,189,239,191,189,9,239,191,189,239,191,189,34,111,65,2,239,191,189,4,15,61,112,92,239,191,189,97,239,191,189,80,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,61,90,3,109,18,112,85,239,191,189,41,77,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,36,61,239,191,189,239,191,189,5,28,98,32,239,191,189,14,30,239,191,189,239,191,189,74,83,239,191,189,23,239,191,189,239,191,189,11,239,191,189,94,239,191,189,194,184,3,239,191,189,115,239,191,189,46,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,61,239,191,189,77,31,98,54,239,191,189,72,3,239,191,189,82,239,191,189,15,38,239,191,189,82,239,191,189,81,42,51,77,25,194,172,10,239,191,189,93,239,191,189,62,239,191,189,117,239,191,189,33,239,191,189,108,107,239,191,189,63,239,191,189,73,5,111,239,191,189,239,191,189,32,30,30,239,191,189,61,80,239,191,189,239,191,189,239,191,189,239,191,189,35,222,161,20,239,191,189,239,191,189,239,191,189,10,108,84,239,191,189,239,191,189,239,191,189,239,191,189,111,207,134,239,191,189,239,191,189,45,239,191,189,26,239,191,189,239,191,189,239,191,189,194,141,239,191,189,239,191,189,239,191,189,96,239,191,189,72,239,191,189,239,191,189,42,7,112,19,101,239,191,189,239,191,189,116,118,239,191,189,239,191,189,205,128,102,239,191,189,239,191,189,12,9,239,191,189,22,39,239,191,189,21,101,28,239,191,189,107,239,191,189,72,239,191,189,113,239,191,189,239,191,189,92,239,191,189,112,26,119,239,191,189,107,22,118,44,239,191,189,108,66,36,239,191,189,204,143,63,239,191,189,239,191,189,2,71,91,239,191,189,73,239,191,189,21,239,191,189,45,239,191,189,110,239,191,189,10,2,123,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,70,239,191,189,124,94,50,72,37,89,122,21,108,46,239,191,189,85,117,72,239,191,189,115,239,191,189,239,191,189,56,34,115,82,239,191,189,239,191,189,20,239,191,189,81,239,191,189,39,8,239,191,189,79,206,189,239,191,189,73,60,239,191,189,108,239,191,189,239,191,189,101,13,102,239,191,189,48,239,191,189,105,15,239,191,189,239,191,189,239,191,189,72,36,113,41,100,117,51,90,7,239,191,189,239,191,189,99,239,191,189,103,239,191,189,239,191,189,239,191,189,59,54,52,111,239,191,189,239,191,189,13,69,239,191,189,239,191,189,239,191,189,64,239,191,189,103,56,239,191,189,7,239,191,189,76,239,191,189,239,191,189,239,191,189,109,18,239,191,189,239,191,189,119,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,212,137,239,191,189,100,239,191,189,239,191,189,99,239,191,189,208,132,79,25,31,35,239,191,189,42,239,191,189,96,239,191,189,107,15,85,112,239,191,189,93,239,191,189,217,149,239,191,189,239,191,189,239,191,189,59,110,22,239,191,189,222,157,97,69,32,239,191,189,20,66,30,239,191,189,239,191,189,239,191,189,239,191,189,127,2,3,239,191,189,103,239,191,189,126,24,239,191,189,7,239,191,189,239,191,189,73,14,239,191,189,20,239,191,189,9,83,239,191,189,239,191,189,109,27,239,191,189,239,191,189,108,65,46,239,191,189,100,82,59,239,191,189,27,239,191,189,239,191,189,111,7,84,81,239,191,189,239,191,189,90,96,112,26,90,5,75,10,78,239,191,189,74,74,239,191,189,239,191,189,15,239,191,189,86,61,239,191,189,45,239,191,189,239,191,189,116,42,46,79,108,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,19,239,191,189,75,104,17,59,239,191,189,22,239,191,189,239,191,189,89,40,42,239,191,189,95,34,239,191,189,20,219,153,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,101,239,191,189,239,191,189,72,104,45,239,191,189,45,239,191,189,123,68,1,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,36,239,191,189,69,239,191,189,239,191,189,239,191,189,5,43,92,239,191,189,78,120,239,191,189,3,55,107,6,239,191,189,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,19,239,191,189,9,41,13,122,30,38,239,191,189,21,32,41,20,91,98,1,36,63,118,2,94,123,4,88,33,239,191,189,239,191,189,239,191,189,10,123,84,239,191,189,239,191,189,239,191,189,239,191,189,50,34,51,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,23,66,239,191,189,77,239,191,189,239,191,189,239,191,189,53,36,239,191,189,91,239,191,189,207,176,8,83,239,191,189,61,28,22,239,191,189,118,79,22,239,191,189,48,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,23,65,239,191,189,199,141,83,17,239,191,189,31,239,191,189,53,239,191,189,67,98,113,42,239,191,189,52,28,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,92,25,239,191,189,213,129,239,191,189,239,191,189,16,239,191,189,111,42,239,191,189,18,239,191,189,10,33,239,191,189,239,191,189,26,117,61,239,191,189,110,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,74,4,56,239,191,189,50,239,191,189,2,0,0,33,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,2,19,113,239,191,189,103,239,191,189,239,191,189,63,239,191,189,81,239,191,189,19,239,191,189,87,239,191,189,239,191,189,11,35,107,239,191,189,239,191,189,76,89,100,239,191,189,95,239,191,189,17,239,191,189,50,103,75,239,191,189,71,239,191,189,239,191,189,36,239,191,189,239,191,189,51,239,191,189,95,239,191,189,62,239,191,189,239,191,189,52,239,191,189,239,191,189,214,130,107,64,8,48,239,191,189,23,92,124,109,239,191,189,46,28,30,239,191,189,239,191,189,46,15,239,191,189,25,106,64,69,56,6,114,123,26,239,191,189,239,191,189,43,41,25,239,191,189,239,191,189,239,191,189,11,239,191,189,22,40,239,191,189,239,191,189,78,112,84,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,107,66,38,8,1,239,191,189,76,239,191,189,124,239,191,189,66,239,191,189,21,111,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,116,47,239,191,189,104,36,33,6,95,58,65,109,239,191,189,3,239,191,189,88,220,178,76,239,191,189,45,239,191,189,123,239,191,189,67,34,239,191,189,40,44,239,191,189,116,239,191,189,79,81,36,239,191,189,239,191,189,239,191,189,239,191,189,87,108,59,85,239,191,189,45,0,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,85,50,239,191,189,68,239,191,189,91,239,191,189,70,38,239,191,189,239,191,189,103,239,191,189,120,30,239,191,189,239,191,189,239,191,189,239,191,189,88,30,239,191,189,83,239,191,189,73,239,191,189,239,191,189,67,103,67,10,239,191,189,1,239,191,189,116,29,239,191,189,239,191,189,50,239,191,189,78,49,115,97,239,191,189,20,239,191,189,239,191,189,53,239,191,189,35,212,157,239,191,189,96,222,181,239,191,189,88,239,191,189,66,239,191,189,239,191,189,239,191,189,77,101,9,4,0,239,191,189,239,191,189,102,239,191,189,90,239,191,189,239,191,189,223,144,90,239,191,189,239,191,189,96,49,104,239,191,189,100,35,19,62,239,191,189,239,191,189,59,124,239,191,189,111,79,239,191,189,20,239,191,189,10,239,191,189,239,191,189,90,221,188,60,66,201,157,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,122,8,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,23,43,27,239,191,189,96,115,91,124,210,130,64,126,215,138,41,123,33,90,117,64,239,191,189,70,111,239,191,189,239,191,189,239,191,189,239,191,189,124,126,239,191,189,35,239,191,189,31,115,197,145,33,239,191,189,104,42,239,191,189,239,191,189,239,191,189,73,239,191,189,99,239,191,189,239,191,189,239,191,189,26,223,140,122,239,191,189,25,209,188,98,195,158,239,191,189,239,191,189,239,191,189,74,94,239,191,189,94,99,196,152,90,125,239,191,189,75,239,191,189,36,120,38,54,119,239,191,189,239,191,189,99,239,191,189,239,191,189,69,239,191,189,89,239,191,189,213,190,239,191,189,201,139,197,171,239,191,189,239,191,189,2,5,114,42,69,239,191,189,98,239,191,189,47,239,191,189,239,191,189,89,239,191,189,43,76,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,59,239,191,189,10,239,191,189,195,155,239,191,189,40,239,191,189,239,191,189,120,239,191,189,59,52,114,122,239,191,189,89,239,191,189,69,239,191,189,22,239,191,189,99,239,191,189,63,239,191,189,239,191,189,22,211,133,18,239,191,189,35,239,191,189,68,103,90,239,191,189,37,239,191,189,114,111,14,125,99,90,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,93,239,191,189,37,7,239,191,189,53,239,191,189,8,9,17,239,191,189,81,102,21,24,109,45,18,96,239,191,189,125,127,239,191,189,239,191,189,239,191,189,239,191,189,55,228,155,185,239,191,189,214,159,27,239,191,189,89,239,191,189,61,239,191,189,36,239,191,189,29,239,191,189,96,239,191,189,239,191,189,23,78,66,239,191,189,239,191,189,38,239,191,189,14,121,239,191,189,62,126,92,239,191,189,239,191,189,239,191,189,108,80,50,21,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,81,59,239,191,189,96,239,191,189,42,35,239,191,189,239,191,189,239,191,189,16,11,239,191,189,57,239,191,189,239,191,189,239,191,189,27,34,239,191,189,0,38,93,239,191,189,108,45,109,11,204,187,239,191,189,239,191,189,239,191,189,239,191,189,97,52,24,25,20,91,110,239,191,189,21,239,191,189,91,68,122,239,191,189,32,239,191,189,239,191,189,239,191,189,14,81,20,125,239,191,189,87,239,191,189,239,191,189,239,191,189,2,45,31,82,78,239,191,189,239,191,189,92,239,191,189,239,191,189,7,239,191,189,114,14,17,96,84,39,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,21,239,191,189,239,191,189,76,239,191,189,105,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,4,239,191,189,31,97,239,191,189,239,191,189,67,2,29,91,48,73,35,239,191,189,239,191,189,94,62,61,239,191,189,97,239,191,189,239,191,189,32,239,191,189,239,191,189,33,239,191,189,30,41,239,191,189,75,49,28,239,191,189,38,4,109,68,51,18,63,73,239,191,189,13,239,191,189,206,130,239,191,189,17,239,191,189,239,191,189,239,191,189,86,53,120,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,216,154,15,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,34,65,11,18,55,32,239,191,189,83,13,239,191,189,239,191,189,127,239,191,189,239,191,189,20,9,5,213,151,115,92,26,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,19,55,18,239,191,189,96,239,191,189,32,98,22,56,239,191,189,239,191,189,35,70,239,191,189,239,191,189,239,191,189,27,98,239,191,189,48,7,239,191,189,12,20,239,191,189,127,239,191,189,239,191,189,239,191,189,7,61,239,191,189,17,239,191,189,239,191,189,239,191,189,24,116,12,83,239,191,189,4,56,71,109,111,91,105,239,191,189,97,125,67,43,239,191,189,11,103,5,216,188,12,108,239,191,189,64,49,122,239,191,189,18,114,239,191,189,209,188,239,191,189,85,66,54,3,239,191,189,197,167,52,35,74,239,191,189,116,239,191,189,239,191,189,239,191,189,121,239,191,189,117,239,191,189,64,239,191,189,239,191,189,239,191,189,41,239,191,189,6,205,154,93,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,97,8,239,191,189,64,48,239,191,189,239,191,189,34,58,203,168,127,65,239,191,189,239,191,189,46,239,191,189,124,239,191,189,86,91,13,63,239,191,189,239,191,189,12,239,191,189,59,239,191,189,109,207,177,12,239,191,189,23,239,191,189,239,191,189,239,191,189,15,49,22,239,191,189,239,191,189,239,191,189,93,77,89,239,191,189,60,239,191,189,73,40,233,150,141,84,239,191,189,61,72,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,46,109,239,191,189,64,239,191,189,30,70,52,239,191,189,239,191,189,18,239,191,189,239,191,189,35,239,191,189,239,191,189,118,27,239,191,189,239,191,189,105,104,239,191,189,105,39,33,239,191,189,102,239,191,189,239,191,189,67,79,14,27,239,191,189,45,86,239,191,189,53,239,191,189,8,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,83,46,239,191,189,124,239,191,189,239,191,189,30,197,130,58,239,191,189,111,239,191,189,72,239,191,189,239,191,189,239,191,189,207,175,239,191,189,8,239,191,189,31,37,239,191,189,114,97,239,191,189,122,239,191,189,119,119,239,191,189,56,239,191,189,68,239,191,189,88,239,191,189,85,55,239,191,189,127,239,191,189,56,57,58,239,191,189,125,239,191,189,239,191,189,208,160,101,239,191,189,239,191,189,87,48,239,191,189,239,191,189,239,191,189,7,84,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,86,239,178,182,239,191,189,239,191,189,239,191,189,85,57,38,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,68,239,191,189,0,239,191,189,85,239,191,189,50,91,47,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,207,132,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,75,239,191,189,239,191,189,10,61,95,80,239,191,189,90,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,8,60,13,239,191,189,239,191,189,239,191,189,36,46,239,191,189,19,239,191,189,233,149,183,239,191,189,50,121,239,191,189,239,191,189,95,36,97,4,63,3,64,239,191,189,239,191,189,13,239,191,189,37,36,239,191,189,40,239,191,189,0,239,191,189,56,239,191,189,22,239,191,189,220,170,76,239,191,189,239,191,189,239,191,189,57,46,239,191,189,122,239,191,189,32,239,191,189,97,239,191,189,55,206,159,93,239,191,189,60,32,3,239,191,189,82,108,239,191,189,195,134,64,219,133,239,191,189,72,239,191,189,239,191,189,239,191,189,61,123,123,239,191,189,126,21,43,3,239,191,189,239,191,189,61,239,191,189,221,153,79,74,239,191,189,239,191,189,239,191,189,94,239,191,189,114,89,102,107,7,57,30,239,191,189,111,25,239,191,189,24,97,239,191,189,80,239,191,189,239,191,189,239,191,189,194,158,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,16,89,239,191,189,239,191,189,34,20,78,118,239,191,189,12,103,46,239,191,189,77,72,239,191,189,55,109,239,191,189,25,25,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,112,95,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,38,75,239,191,189,239,191,189,60,51,43,17})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc5e0a273e309143b691604ee0ccb14645",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001270 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001270_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001270_s.txt", Encoding.UTF8);

    public Test001270() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,10,239,191,189,12,123,239,191,189,200,139,239,191,189,239,191,189,4,239,191,189,57,221,170,97,239,191,189,4,82,38,82,239,191,189,239,191,189,95,239,191,189,23,119,41,45,1,94,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,123,239,191,189,33,239,191,189,123,39,27,123,239,191,189,118,59,17,239,191,189,108,19,17,67,239,191,189,100,114,239,191,189,94,239,191,189,38,239,191,189,45,239,191,189,44,239,191,189,103,239,191,189,122,103,60,239,191,189,26,215,137,15,239,191,189,92,239,191,189,239,191,189,239,191,189,34,56,239,191,189,62,239,191,189,201,182,239,191,189,37,121,73,29,239,191,189,239,191,189,28,78,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,112,115,21,239,191,189,239,191,189,51,4,239,191,189,61,79,239,191,189,6,239,191,189,239,191,189,84,239,191,189,239,191,189,68,239,191,189,108,239,191,189,87,109,1,90,239,191,189,97,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,99,87,79,239,191,189,239,191,189,239,191,189,16,72,96,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,219,179,93,78,239,191,189,27,239,191,189,239,191,189,114,110,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,209,176,15,13,91,239,191,189,239,191,189,239,191,189,209,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,52,83,239,191,189,48,239,191,189,118,45,239,191,189,73,239,191,189,49,4,113,17,118,125,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,34,239,191,189,239,191,189,69,7,239,191,189,11,239,191,189,52,239,191,189,109,239,191,189,40,239,191,189,109,239,191,189,45,7,239,191,189,43,239,191,189,239,191,189,91,239,191,189,48,239,191,189,239,191,189,34,239,191,189,64,239,191,189,239,191,189,239,191,189,13,239,191,189,127,239,191,189,239,191,189,94,239,191,189,99,239,191,189,239,191,189,239,191,189,84,125,239,191,189,2,103,239,191,189,229,130,129,105,125,22,239,191,189,239,191,189,64,239,191,189,239,191,189,99,76,239,191,189,239,191,189,114,239,191,189,23,70,64,65,108,60,239,191,189,118,60,239,191,189,239,191,189,44,239,191,189,31,105,239,191,189,239,191,189,36,6,239,191,189,75,104,93,239,191,189,30,60,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,33,84,239,191,189,21,69,239,191,189,6,218,178,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,200,154,239,191,189,88,239,191,189,239,191,189,80,35,48,239,191,189,125,239,191,189,86,239,191,189,39,34,239,191,189,52,72,86,37,14,239,191,189,35,68,239,191,189,239,191,189,239,191,189,10,239,191,189,41,114,239,191,189,239,191,189,47,25,59,239,191,189,60,56,4,239,191,189,239,191,189,3,40,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,74,205,185,217,171,20,31,62,93,24,239,191,189,91,10,239,191,189,100,239,191,189,14,239,191,189,79,239,191,189,16,82,239,191,189,40,1,32,27,11,239,191,189,31,24,1,239,191,189,239,191,189,239,191,189,36,117,63,239,191,189,239,191,189,28,239,191,189,239,191,189,104,91,99,239,191,189,66,31,33,239,191,189,11,85,97,239,191,189,239,191,189,41,239,191,189,216,139,239,191,189,20,103,61,239,191,189,239,191,189,239,191,189,73,57,63,59,239,191,189,86,239,191,189,239,191,189,23,239,191,189,60,205,157,39,239,191,189,239,191,189,90,13,239,191,189,110,32,239,191,189,239,191,189,239,191,189,103,5,239,191,189,8,239,191,189,105,104,239,191,189,216,175,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,58,99,30,41,239,191,189,239,191,189,239,191,189,239,191,189,28,40,239,191,189,67,86,103,81,45,210,133,66,239,191,189,239,191,189,239,191,189,120,239,191,189,11,239,191,189,100,88,23,239,191,189,104,14,33,45,239,191,189,118,239,191,189,223,133,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,102,239,191,189,3,10,25,239,191,189,117,239,191,189,78,29,239,191,189,126,239,191,189,239,191,189,53,239,191,189,28,53,53,58,239,191,189,239,191,189,239,191,189,92,3,9,239,191,189,76,111,62,239,191,189,239,191,189,50,239,191,189,93,239,191,189,87,239,191,189,239,191,189,39,239,191,189,239,191,189,7,239,191,189,48,239,191,189,239,191,189,104,103,91,83,239,191,189,239,191,189,239,191,189,94,77,239,191,189,239,191,189,107,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,20,3,239,191,189,239,191,189,63,221,130,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,211,130,239,191,189,239,191,189,7,239,191,189,63,2,112,53,16,56,239,191,189,75,239,191,189,37,18,87,94,54,28,239,191,189,239,191,189,239,191,189,39,125,208,185,31,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,38,102,17,239,191,189,200,174,7,76,54,63,105,31,82,87,74,239,191,189,239,191,189,5,58,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,98,239,191,189,7,108,239,191,189,55,239,191,189,10,239,191,189,46,239,191,189,32,49,239,191,189,122,239,191,189,112,98,65,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,93,117,239,191,189,47,239,191,189,72,55,10,239,191,189,211,129,98,239,191,189,239,191,189,32,122,239,191,189,15,239,191,189,63,239,191,189,51,23,11,44,112,29,54,11,99,121,239,191,189,35,239,191,189,55,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,33,119,239,191,189,239,191,189,32,239,191,189,6,41,93,239,191,189,2,65,42,0,239,191,189,74,90,239,191,189,63,12,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,81,17,217,178,120,21,239,191,189,212,159,239,191,189,126,239,191,189,13,100,26,239,191,189,239,191,189,239,191,189,239,191,189,22,56,107,62,19,239,191,189,30,239,191,189,239,191,189,10,46,40,92,121,12,239,191,189,40,239,191,189,239,191,189,239,191,189,107,118,239,191,189,21,239,191,189,109,121,239,191,189,112,239,191,189,239,191,189,55,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,1,89,81,239,191,189,23,239,191,189,119,85,67,239,191,189,87,86,239,191,189,111,8,215,171,194,177,40,83,67,239,191,189,239,191,189,123,239,191,189,56,239,191,189,112,239,191,189,3,39,239,191,189,99,239,191,189,88,239,191,189,239,191,189,95,38,239,191,189,106,42,239,191,189,26,73,98,47,239,191,189,239,191,189,52,239,191,189,114,239,191,189,239,191,189,239,191,189,43,83,92,239,191,189,239,191,189,122,239,191,189,47,102,76,239,191,189,61,239,191,189,99,239,191,189,239,191,189,239,191,189,25,239,191,189,38,97,122,239,191,189,199,143,239,191,189,78,239,191,189,69,239,191,189,206,164,17,239,191,189,11,239,191,189,28,239,191,189,239,191,189,86,115,239,191,189,239,191,189,127,239,191,189,239,191,189,1,81,239,191,189,32,239,191,189,239,191,189,239,191,189,98,239,191,189,216,134,239,191,189,85,239,191,189,65,59,33,91,20,10,44,78,87,239,191,189,110,99,104,104,239,191,189,239,191,189,125,86,71,239,191,189,239,191,189,239,191,189,74,36,104,41,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001276 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001276_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001276_s.txt", Encoding.UTF8);

    public Test001276() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{71,12,115,239,191,189,22,239,191,189,114,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,27,83,239,191,189,37,103,30,118,239,191,189,239,191,189,239,191,189,111,8,239,191,189,5,239,191,189,66,11,7,239,191,189,102,239,191,189,239,191,189,39,85,92,239,191,189,239,191,189,22,239,191,189,14,104,239,191,189,9,127,101,32,38,239,191,189,79,239,191,189,25,239,191,189,82,14,239,191,189,108,239,191,189,83,18,239,191,189,239,191,189,81,123,239,191,189,43,48,200,170,239,191,189,96,239,191,189,228,129,129,75,239,191,189,66,34,239,191,189,20,86,23,205,128,239,191,189,3,78,43,48,49,125,239,191,189,239,191,189,60,106,239,191,189,239,191,189,58,239,191,189,93,72,29,239,191,189,239,191,189,52,9,239,191,189,194,156,239,191,189,49,44,239,191,189,89,58,239,191,189,1,239,191,189,44,122,127,80,46,62,239,191,189,239,191,189,69,239,191,189,101,239,191,189,8,49,239,191,189,239,191,189,57,40,239,191,189,75,239,191,189,51,239,191,189,239,191,189,74,239,191,189,76,239,191,189,37,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,68,239,191,189,239,191,189,54,92,239,191,189,239,191,189,239,191,189,239,191,189,32,18,223,182,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,24,239,191,189,98,239,191,189,239,191,189,239,191,189,93,109,239,191,189,3,108,103,14,239,191,189,79,239,191,189,239,191,189,89,239,191,189,239,191,189,76,43,90,239,191,189,29,0,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,52,239,191,189,41,47,239,191,189,239,191,189,59,239,191,189,239,191,189,199,180,239,191,189,209,183,239,191,189,81,66,239,191,189,24,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,42,239,191,189,71,64,202,169,126,123,239,191,189,32,239,191,189,239,191,189,44,239,191,189,14,114,47,239,191,189,5,120,239,191,189,66,239,191,189,118,40,70,98,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,79,239,191,189,14,99,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,85,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,71,239,191,189,239,191,189,124,239,191,189,42,239,191,189,239,191,189,239,191,189,0,14,239,191,189,239,191,189,3,239,191,189,239,191,189,83,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,21,239,191,189,122,105,239,191,189,239,191,189,239,191,189,114,92,239,191,189,30,228,187,145,19,239,191,189,27,239,191,189,239,191,189,17,239,191,189,67,73,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,66,8,239,191,189,64,239,191,189,123,35,55,73,239,191,189,5,239,191,189,89,239,191,189,31,239,191,189,239,191,189,101,101,31,239,191,189,68,63,63,33,239,191,189,74,239,191,189,107,36,239,191,189,125,204,135,239,191,189,22,88,122,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,12,239,191,189,234,135,185,91,239,191,189,239,191,189,3,239,191,189,39,239,191,189,239,191,189,75,30,25,48,239,191,189,239,191,189,36,239,191,189,21,239,191,189,62,9,72,123,239,191,189,205,139,239,191,189,239,191,189,51,110,239,191,189,239,191,189,239,191,189,16,239,191,189,69,122,70,96,239,191,189,76,13,92,239,191,189,103,16,24,53,210,132,239,191,189,25,72,239,191,189,18,35,239,191,189,53,239,191,189,94,19,70,23,239,191,189,50,109,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,112,239,191,189,239,191,189,59,31,48,101,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,54,239,191,189,97,107,68,75,1,113,6,239,191,189,239,191,189,91,239,191,189,116,93,239,191,189,47,118,206,168,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,127,239,191,189,94,239,191,189,104,239,191,189,100,239,191,189,102,239,191,189,60,56,202,131,110,71,239,191,189,68,115,239,191,189,107,6,82,30,239,191,189,56,2,36,239,191,189,65,38,93,239,191,189,115,239,191,189,83,19,111,239,191,189,239,191,189,239,191,189,7,14,239,191,189,89,239,191,189,239,191,189,74,57,71,62,239,191,189,239,191,189,239,191,189,100,121,91,64,22,47,239,191,189,63,7,36,239,191,189,239,191,189,119,86,239,191,189,27,52,70,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,196,137,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,15,82,239,191,189,239,191,189,88,94,239,191,189,239,191,189,239,191,189,8,122,127,85,239,191,189,30,19,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,124,239,191,189,239,191,189,36,84,99,33,3,19,239,191,189,70,101,35,96,239,191,189,88,239,191,189,38,100,14,239,191,189,73,10,55,37,204,144,11,239,191,189,239,191,189,239,191,189,15,239,191,189,78,87,203,187,239,191,189,98,239,191,189,239,191,189,4,103,239,191,189,14,44,239,191,189,239,191,189,9,239,191,189,53,209,155,113,239,191,189,50,239,191,189,107,239,191,189,239,191,189,239,191,189,22,76,49,239,191,189,55,239,191,189,239,191,189,9,34,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,23,40,239,191,189,239,191,189,239,191,189,1,52,239,191,189,34,115,96,80,37,72,80,239,191,189,239,191,189,201,177,239,191,189,53,90,215,152,37,239,191,189,239,191,189,239,191,189,78,12,239,191,189,42,89,79,107,67,5,239,191,189,239,191,189,21,23,239,191,189,117,239,191,189,51,239,191,189,239,191,189,239,191,189,76,25,239,191,189,239,191,189,239,191,189,236,172,188,80,96,239,191,189,54,26,77,93,21,239,191,189,53,239,191,189,239,191,189,239,191,189,13,239,191,189,34,214,156,239,191,189,239,191,189,239,191,189,18,101,239,191,189,239,191,189,12,239,191,189,52,33,213,150,108,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,40,95,37,239,191,189,239,191,189,15,239,191,189,63,80,239,191,189,40,239,191,189,75,239,191,189,239,191,189,62,239,191,189,10,114,13,239,191,189,40,239,191,189,202,159,239,191,189,50,45,26,35,23,24,239,191,189,214,134,239,191,189,239,191,189,103,20,239,191,189,15,91,239,191,189,89,239,191,189,239,191,189,33,239,191,189,215,179,239,191,189,1,74,239,191,189,23,0,108,91,94,2,239,191,189,239,191,189,36,45,239,191,189,15,86,117,118,82,81,239,191,189,239,191,189,239,191,189,239,191,189,87,67,239,191,189,29,1,105,239,191,189,86,103,120,21,206,179,239,191,189,239,191,189,24,239,191,189,8,17,239,191,189,63,55,239,191,189,239,191,189,239,191,189,71,239,191,189,47,239,191,189,98,23,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,93,239,191,189,78,121,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,242,128,185,189,94,239,191,189,4,96,10,64,239,191,189,239,191,189,239,191,189,71,84,239,191,189,120,239,191,189,239,191,189,122,2,12,91,239,191,189,239,191,189,63,74,239,191,189,239,191,189,39,239,191,189,50,239,191,189,47,223,189,239,191,189,239,191,189,239,191,189,84,239,191,189,0,239,191,189,36,239,191,189,107,239,191,189,107,91,239,191,189,239,191,189,239,191,189,239,191,189,36,21,239,191,189,30,239,191,189,97,239,191,189,226,152,144,92,239,191,189,103,239,191,189,6,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001255 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001255_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001255_s.txt", Encoding.UTF8);

    public Test001255() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,118,239,191,189,12,0,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,91,239,191,189,34,58,91,49,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,123,239,191,189,239,191,189,239,191,189,209,176,239,191,189,239,191,189,239,191,189,26,29,239,191,189,239,191,189,18,48,16,239,191,189,117,239,191,189,55,94,239,191,189,19,239,191,189,239,191,189,239,191,189,4,239,191,189,110,14,232,178,153,124,239,191,189,70,239,191,189,124,239,191,189,37,69,108,239,191,189,7,29,239,191,189,239,191,189,73,239,191,189,239,191,189,32,95,239,191,189,26,49,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,50,106,24,43,239,191,189,239,191,189,49,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,65,102,239,191,189,239,191,189,239,191,189,239,191,189,126,74,239,191,189,239,191,189,239,191,189,114,17,122,69,239,191,189,213,178,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,62,239,191,189,239,191,189,47,239,191,189,122,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,76,239,191,189,113,88,239,191,189,6,80,53,24,239,191,189,9,239,191,189,9,14,239,191,189,239,191,189,239,191,189,86,11,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,48,17,239,191,189,44,46,239,191,189,124,239,191,189,239,191,189,74,58,107,239,191,189,124,55,239,191,189,94,22,23,113,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,110,46,239,191,189,15,239,191,189,239,191,189,123,239,191,189,8,234,186,141,66,106,195,191,64,79,239,191,189,239,191,189,226,180,158,239,191,189,37,239,191,189,36,70,239,191,189,47,239,191,189,239,191,189,239,191,189,78,112,239,191,189,42,239,191,189,239,191,189,0,66,10,86,44,93,228,174,161,8,63,239,191,189,69,105,0,239,191,189,121,239,191,189,125,239,191,189,53,87,239,191,189,239,191,189,239,191,189,80,7,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,126,217,145,239,191,189,94,113,53,64,239,191,189,61,111,114,84,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,155,239,191,189,239,191,189,21,124,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,198,143,111,239,191,189,27,239,191,189,72,117,75,239,191,189,113,239,191,189,103,239,191,189,239,191,189,64,50,2,88,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,67,48,239,191,189,70,239,191,189,103,239,191,189,239,191,189,54,12,239,191,189,48,99,99,79,239,191,189,34,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,95,113,239,191,189,56,239,191,189,104,50,26,239,191,189,42,239,191,189,0,110,4,9,38,39,40,239,191,189,116,239,191,189,91,239,191,189,50,205,180,72,239,191,189,239,191,189,55,239,191,189,6,51,239,191,189,90,239,191,189,25,239,191,189,60,239,191,189,49,53,239,191,189,239,191,189,239,191,189,20,114,239,191,189,239,191,189,97,125,118,57,239,191,189,79,3,239,191,189,239,191,189,107,63,32,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,195,170,68,12,239,191,189,239,191,189,67,94,125,239,191,189,97,239,191,189,65,239,191,189,239,191,189,71,239,191,189,49,239,191,189,117,90,86,47,89,55,239,191,189,218,133,239,191,189,29,117,23,72,239,191,189,239,191,189,110,84,239,191,189,239,191,189,239,191,189,123,239,191,189,94,239,191,189,239,191,189,106,239,191,189,42,5,81,239,191,189,86,105,83,20,239,191,189,76,238,176,189,239,191,189,96,110,74,112,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,29,239,191,189,105,239,191,189,125,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,23,35,43,239,191,189,69,239,191,189,90,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,37,67,20,66,107,239,191,189,115,56,68,239,191,189,239,191,189,93,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,16,4,72,75,30,127,76,56,10,81,21,9,30,60,19,239,191,189,57,239,191,189,66,239,191,189,239,191,189,57,95,239,191,189,119,92,239,191,189,69,18,239,191,189,239,191,189,227,173,189,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,31,100,104,239,191,189,47,239,191,189,239,191,189,32,239,191,189,239,191,189,93,210,133,92,111,215,164,117,239,191,189,239,191,189,239,191,189,7,38,71,104,49,92,97,239,191,189,239,191,189,239,191,189,64,239,191,189,127,116,108,239,191,189,120,239,191,189,213,172,115,88,58,101,21,94,81,77,213,172,104,36,51,239,191,189,23,62,33,126,239,191,189,69,79,239,191,189,42,10,28,239,191,189,5,239,191,189,2,7,44,239,191,189,239,191,189,22,119,239,191,189,239,191,189,239,191,189,82,239,191,189,11,19,239,191,189,21,101,27,239,191,189,239,191,189,93,46,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,45,48,72,50,88,105,75,206,128,239,191,189,38,29,96,103,81,62,43,42,58,59,239,191,189,20,239,191,189,1,38,94,239,191,189,239,191,189,88,51,43,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,112,239,191,189,124,84,33,11,25,239,191,189,71,12,239,191,189,239,191,189,119,117,76,107,239,191,189,100,239,191,189,229,149,165,11,239,191,189,239,191,189,116,239,191,189,126,239,191,189,11,239,191,189,23,239,191,189,239,191,189,239,191,189,101,239,191,189,27,239,191,189,239,191,189,104,48,82,19,239,191,189,239,191,189,80,118,72,98,63,59,122,15,70,239,191,189,239,191,189,205,187,239,191,189,33,239,191,189,239,191,189,60,239,191,189,239,191,189,72,239,191,189,239,191,189,231,188,155,239,191,189,66,125,101,82,239,191,189,45,239,191,189,35,116,54,115,239,191,189,76,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,95,239,191,189,104,239,191,189,122,21,239,191,189,239,191,189,123,239,191,189,239,191,189,97,239,191,189,239,191,189,111,55,239,191,189,239,191,189,120,202,160,231,137,172,100,66,112,57,68,239,191,189,239,191,189,114,68,239,191,189,59,239,191,189,218,175,239,191,189,61,105,239,191,189,89,84,239,191,189,239,191,189,239,191,189,39,239,191,189,101,239,191,189,206,163,239,191,189,65,119,97,239,191,189,105,55,239,191,189,85,91,239,191,189,239,191,189,117,28,239,191,189,104,239,191,189,93,239,191,189,239,191,189,59,96,18,239,191,189,53,32,239,191,189,117,72,92,239,191,189,239,191,189,1,239,191,189,107,239,191,189,239,191,189,127,31,70,239,191,189,239,191,189,20,50,239,191,189,84,22,239,191,189,1,239,191,189,78,7,18,239,191,189,104,120,46,239,191,189,44,239,191,189,239,191,189,239,191,189,93,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,15,62,239,191,189,67,239,191,189,76,239,191,189,239,191,189,239,191,189,10,239,191,189,116,239,191,189,13,215,188,41,102,239,191,189,106,239,191,189,82,239,191,189,108,239,191,189,57,26,239,191,189,239,191,189,87,110,6,239,191,189,27,63,239,191,189,118,239,191,189,239,191,189,44,78,239,191,189,76,239,191,189,2,77,239,191,189,239,191,189,45,239,191,189,65,239,191,189,239,191,189,202,188,239,191,189,47,82,106,49,42,52,239,191,189,239,191,189,208,165,109,239,191,189,13,69,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001252 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001252_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001252_s.txt", Encoding.UTF8);

    public Test001252() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{79,50,60,30,207,133,239,191,189,113,239,191,189,239,191,189,239,191,189,209,140,106,101,239,191,189,123,20,239,191,189,219,131,239,191,189,239,191,189,27,221,186,43,239,191,189,72,125,66,239,191,189,239,191,189,23,27,3,49,239,191,189,239,191,189,83,239,191,189,239,191,189,15,239,191,189,111,80,2,239,191,189,122,239,191,189,63,72,239,191,189,239,191,189,51,77,2,239,191,189,239,191,189,239,191,189,239,191,189,40,36,69,12,239,191,189,117,78,98,239,191,189,239,191,189,62,239,191,189,67,239,191,189,239,191,189,241,172,141,183,127,47,95,239,191,189,3,56,1,75,239,191,189,46,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,99,115,239,191,189,93,24,28,239,191,189,0,239,191,189,239,191,189,63,67,92,86,100,19,67,239,191,189,239,191,189,70,66,239,191,189,239,191,189,42,102,239,191,189,239,191,189,95,52,10,239,191,189,239,191,189,5,57,73,25,42,34,22,67,49,2,239,191,189,82,12,239,191,189,89,239,191,189,48,239,191,189,76,239,191,189,6,239,191,189,117,239,191,189,239,191,189,99,239,191,189,108,127,77,203,162,9,239,191,189,61,34,13,75,239,191,189,33,239,191,189,239,191,189,21,63,73,239,191,189,29,239,191,189,82,239,191,189,46,60,239,191,189,211,183,98,196,185,127,239,191,189,42,239,191,189,239,191,189,239,191,189,55,239,191,189,73,239,191,189,102,55,239,191,189,239,191,189,14,43,31,239,191,189,239,191,189,53,70,17,69,53,26,239,191,189,30,239,191,189,239,191,189,53,239,191,189,239,191,189,93,84,239,191,189,34,239,191,189,9,239,191,189,48,8,97,63,239,191,189,91,27,239,191,189,74,46,239,191,189,239,191,189,54,212,143,115,110,239,191,189,239,191,189,239,191,189,10,198,167,2,19,239,191,189,239,191,189,239,191,189,117,25,239,191,189,53,22,239,191,189,94,44,239,191,189,210,179,239,191,189,239,191,189,239,191,189,239,191,189,96,82,239,191,189,239,191,189,6,239,191,189,239,191,189,93,239,191,189,0,120,239,191,189,105,96,94,44,239,191,189,239,191,189,65,239,191,189,49,65,92,239,191,189,118,118,98,239,191,189,239,191,189,239,191,189,26,239,191,189,78,239,191,189,71,239,191,189,239,191,189,44,239,191,189,11,239,191,189,239,191,189,75,52,239,191,189,9,239,191,189,203,134,239,191,189,239,191,189,10,239,191,189,54,239,191,189,30,239,191,189,239,191,189,29,239,191,189,107,82,239,191,189,239,191,189,239,191,189,239,191,189,104,118,25,239,191,189,239,191,189,239,191,189,75,53,239,191,189,117,239,191,189,39,239,191,189,109,239,191,189,239,191,189,8,239,191,189,239,191,189,15,239,191,189,23,80,40,239,191,189,239,191,189,15,239,191,189,66,239,191,189,119,78,239,191,189,239,191,189,126,239,191,189,239,191,189,10,60,239,191,189,239,191,189,69,44,40,239,191,189,239,191,189,14,239,191,189,74,239,191,189,239,191,189,239,191,189,19,80,37,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,121,126,239,191,189,71,239,191,189,2,239,191,189,48,239,191,189,80,75,239,191,189,35,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,49,239,191,189,120,239,191,189,80,89,239,191,189,239,191,189,26,239,191,189,104,243,151,178,169,239,191,189,239,191,189,239,191,189,12,239,191,189,25,239,191,189,55,239,191,189,239,191,189,126,1,239,191,189,12,44,54,113,201,181,72,239,191,189,95,239,191,189,124,239,191,189,35,79,239,191,189,8,239,191,189,87,59,112,86,239,191,189,36,122,239,191,189,239,191,189,239,191,189,82,89,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,112,239,191,189,42,239,191,189,106,239,191,189,239,191,189,239,191,189,104,98,239,191,189,239,191,189,13,47,239,191,189,112,67,239,191,189,239,191,189,26,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,201,170,81,84,121,239,191,189,239,191,189,45,89,6,239,191,189,90,42,17,118,13,21,68,42,82,106,239,191,189,239,191,189,51,239,191,189,239,191,189,95,59,11,116,39,41,48,239,191,189,17,120,80,43,239,191,189,239,191,189,66,239,191,189,0,239,191,189,220,170,34,239,191,189,239,191,189,239,191,189,105,26,95,28,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,114,48,239,191,189,84,100,239,191,189,239,191,189,24,239,191,189,239,191,189,39,239,191,189,61,51,239,191,189,10,9,61,91,75,194,190,15,209,161,239,191,189,87,239,191,189,49,239,191,189,31,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,74,239,191,189,239,191,189,239,191,189,119,55,119,75,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,1,207,179,33,40,239,191,189,239,191,189,61,51,239,191,189,222,131,239,191,189,8,70,239,191,189,109,39,239,191,189,127,16,81,42,232,152,154,41,60,107,239,191,189,66,239,191,189,203,186,239,191,189,39,239,191,189,109,239,191,189,239,191,189,239,191,189,13,199,176,239,191,189,239,191,189,96,111,4,70,84,239,191,189,38,212,133,239,191,189,239,191,189,203,137,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,3,239,191,189,28,109,31,239,191,189,0,108,14,239,191,189,3,239,191,189,121,239,191,189,57,239,191,189,56,36,123,122,239,191,189,239,191,189,52,239,191,189,13,239,191,189,45,27,66,58,100,11,239,191,189,59,68,1,239,191,189,122,84,91,23,54,239,191,189,38,43,239,191,189,239,191,189,84,239,191,189,102,239,191,189,239,191,189,43,78,239,191,189,231,131,156,239,191,189,28,63,239,191,189,90,239,191,189,36,110,239,191,189,105,239,191,189,82,239,191,189,39,31,239,191,189,239,191,189,239,191,189,239,191,189,86,50,239,191,189,239,191,189,77,219,140,125,239,191,189,122,93,125,72,239,191,189,55,27,36,219,185,1,239,191,189,239,191,189,122,96,21,20,4,239,191,189,12,239,191,189,239,191,189,52,239,191,189,70,239,191,189,29,102,239,191,189,126,60,239,191,189,239,191,189,84,239,191,189,59,9,239,191,189,239,191,189,3,120,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,120,56,199,135,239,191,189,239,191,189,239,191,189,123,40,239,191,189,2,48,26,239,191,189,126,93,125,90,46,239,191,189,239,191,189,239,191,189,239,191,189,11,22,239,191,189,8,57,25,60,239,191,189,239,191,189,58,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,96,114,109,126,6,239,191,189,239,191,189,78,239,191,189,239,191,189,122,102,106,239,191,189,239,191,189,239,191,189,94,239,191,189,113,239,191,189,203,186,97,239,191,189,85,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,114,116,43,25,91,91,4,89,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,66,116,239,191,189,62,15,239,191,189,66,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,2,239,191,189,23,239,191,189,17,123,239,191,189,42,36,18,239,191,189,239,191,189,1,239,191,189,239,191,189,123,239,191,189,239,191,189,8,217,155,82,239,191,189,239,191,189,49,85,239,191,189,17,239,191,189,76,239,191,189,239,191,189,239,191,189,12,67,42,239,191,189,239,191,189,42,65,86,239,191,189,239,191,189,69,114,0,239,191,189,55,41,120,112,20,239,191,189,122,103,100,239,191,189,82,239,191,189,37,31,25,127,198,167,31,239,191,189,239,191,189,102,92,123,239,191,189,91,198,131})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001273 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001273_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001273_s.txt", Encoding.UTF8);

    public Test001273() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{4,239,191,189,11,239,191,189,239,191,189,60,239,191,189,239,191,189,42,81,239,191,189,73,120,239,191,189,239,191,189,90,239,191,189,239,191,189,92,34,100,239,191,189,239,191,189,36,125,239,191,189,59,239,191,189,239,191,189,53,41,239,191,189,8,28,58,16,78,239,191,189,239,191,189,67,73,239,191,189,239,191,189,31,52,239,191,189,18,125,1,75,48,239,191,189,239,191,189,93,102,239,191,189,239,191,189,105,57,1,6,239,191,189,239,191,189,28,239,191,189,111,112,211,168,73,112,239,191,189,239,191,189,239,191,189,27,239,191,189,94,5,72,239,191,189,40,26,239,191,189,86,4,239,191,189,35,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,61,239,191,189,41,123,108,197,129,62,212,183,219,143,239,191,189,239,191,189,66,123,55,239,191,189,32,239,191,189,239,191,189,239,191,189,50,24,12,75,239,191,189,30,4,31,239,191,189,231,182,161,116,239,191,189,226,152,131,28,239,191,189,69,49,123,117,239,191,189,75,104,57,109,71,239,191,189,31,239,191,189,80,239,191,189,239,191,189,99,96,121,239,191,189,32,208,151,79,239,191,189,66,54,206,185,84,73,239,191,189,126,238,166,134,239,191,189,239,191,189,94,0,92,239,191,189,239,191,189,239,191,189,200,189,80,239,191,189,239,191,189,127,55,9,96,239,191,189,117,239,191,189,43,239,191,189,106,20,239,191,189,239,191,189,24,239,191,189,39,239,191,189,10,239,191,189,105,64,239,191,189,1,121,95,59,57,239,191,189,239,191,189,223,133,239,191,189,73,239,191,189,239,191,189,17,239,191,189,29,37,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,126,217,158,39,239,191,189,239,191,189,27,239,191,189,239,191,189,54,239,191,189,1,239,191,189,59,218,161,239,191,189,239,191,189,47,81,239,191,189,66,236,148,131,239,191,189,120,125,239,191,189,239,191,189,13,239,191,189,239,191,189,215,186,239,191,189,239,191,189,239,191,189,62,46,102,21,239,191,189,3,28,239,191,189,239,191,189,18,239,191,189,239,191,189,15,239,191,189,112,239,191,189,59,239,191,189,9,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,40,2,99,239,191,189,239,191,189,239,191,189,53,18,239,191,189,35,41,45,17,239,191,189,102,77,239,191,189,106,239,191,189,0,239,191,189,239,191,189,45,3,126,239,191,189,239,191,189,20,5,16,239,191,189,239,191,189,62,239,191,189,0,239,191,189,239,191,189,116,30,52,239,191,189,239,191,189,239,191,189,77,239,191,189,14,239,191,189,120,62,127,239,191,189,51,9,239,191,189,42,48,54,239,191,189,2,239,191,189,239,191,189,33,12,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,108,14,76,239,191,189,76,0,7,239,191,189,89,112,30,105,213,133,101,92,239,191,189,104,239,191,189,208,131,45,114,36,96,239,191,189,239,191,189,239,191,189,18,31,124,239,191,189,18,239,191,189,239,191,189,114,239,191,189,42,41,86,89,239,191,189,239,191,189,106,75,239,191,189,122,54,14,239,191,189,215,191,41,62,239,191,189,40,54,239,191,189,16,28,38,71,81,239,191,189,239,191,189,68,114,239,191,189,117,22,239,191,189,93,239,191,189,45,239,191,189,239,191,189,72,239,191,189,71,105,111,239,191,189,3,239,191,189,239,191,189,40,103,239,191,189,0,239,191,189,59,239,191,189,26,12,47,18,63,57,239,191,189,6,20,239,191,189,239,191,189,239,191,189,239,191,189,121,24,239,191,189,106,239,191,189,239,191,189,65,114,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,88,220,158,200,183,239,191,189,15,67,239,191,189,239,191,189,239,191,189,239,191,189,15,12,65,84,239,191,189,239,191,189,11,239,191,189,43,16,107,105,69,239,191,189,239,191,189,92,115,95,239,191,189,206,135,61,239,191,189,41,117,239,191,189,9,28,239,191,189,54,125,239,191,189,239,191,189,25,239,191,189,53,49,81,239,191,189,239,191,189,56,239,191,189,239,191,189,72,112,53,239,191,189,239,191,189,239,191,189,239,191,189,58,112,239,191,189,25,239,191,189,123,23,239,191,189,213,183,239,191,189,91,239,191,189,239,191,189,109,239,191,189,43,14,239,191,189,43,33,113,239,191,189,239,191,189,239,191,189,108,72,239,191,189,64,101,49,57,239,191,189,101,66,239,191,189,239,191,189,0,239,191,189,239,191,189,25,114,24,41,73,106,218,181,3,117,87,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,93,87,101,50,94,239,191,189,111,239,191,189,239,191,189,119,239,191,189,79,239,191,189,10,42,16,10,18,239,191,189,88,239,191,189,76,86,239,191,189,239,191,189,239,191,189,239,191,189,14,104,27,92,239,191,189,121,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,211,168,239,191,189,239,191,189,239,191,189,74,101,36,107,44,239,191,189,19,116,0,112,68,16,0,211,160,239,191,189,239,191,189,97,29,239,191,189,26,239,191,189,239,191,189,23,239,191,189,239,191,189,119,239,191,189,87,219,175,221,183,99,70,44,239,191,189,95,239,191,189,8,239,191,189,8,239,191,189,72,239,191,189,239,191,189,239,191,189,17,239,191,189,71,239,191,189,239,191,189,239,191,189,113,239,191,189,13,239,191,189,239,191,189,64,239,191,189,29,37,239,191,189,103,89,239,191,189,239,191,189,115,25,116,127,108,239,191,189,50,34,206,148,104,217,179,239,191,189,70,239,191,189,104,86,239,191,189,239,191,189,213,157,239,191,189,239,191,189,55,111,120,202,145,71,27,239,191,189,11,55,114,239,191,189,239,191,189,239,191,189,25,106,239,191,189,78,239,191,189,120,81,208,141,239,191,189,239,191,189,73,88,16,239,191,189,17,239,191,189,214,150,239,191,189,72,239,191,189,23,104,239,191,189,239,191,189,121,121,239,191,189,123,42,77,81,239,191,189,61,81,239,191,189,239,191,189,10,83,102,239,191,189,239,191,189,71,239,191,189,10,81,239,191,189,239,191,189,239,191,189,98,239,191,189,126,28,82,61,239,191,189,56,239,191,189,239,191,189,2,18,200,137,239,191,189,239,191,189,239,191,189,75,44,48,239,191,189,239,191,189,124,239,191,189,26,239,191,189,117,74,239,191,189,111,40,239,191,189,239,191,189,239,191,189,239,191,189,34,32,239,191,189,239,191,189,201,164,11,122,99,208,189,104,79,55,54,5,239,191,189,79,239,191,189,239,191,189,62,239,191,189,1,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,46,23,59,239,191,189,97,239,191,189,239,191,189,76,239,191,189,102,84,239,191,189,1,126,74,239,191,189,12,239,191,189,97,56,34,7,239,191,189,239,191,189,21,88,239,191,189,31,62,239,191,189,87,4,122,239,191,189,53,239,191,189,239,191,189,239,191,189,238,162,131,239,191,189,72,239,191,189,79,85,60,29,239,191,189,239,191,189,120,62,87,239,191,189,38,107,82,239,191,189,8,14,239,191,189,14,239,191,189,15,80,5,54,73,239,191,189,82,65,11,239,191,189,239,191,189,105,239,191,189,194,153,239,191,189,27,104,104,81,38,239,191,189,239,191,189,34,60,14,77,47,66,239,191,189,239,191,189,239,191,189,239,191,189,79,6,239,191,189,37,239,191,189,120,108,127,239,191,189,36,104,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,125,48,239,191,189,239,191,189,239,191,189,59,67,34,239,191,189,38,41,196,191,24,239,191,189,111,21,239,191,189,66,239,191,189,239,191,189,114,70,127,24,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001395 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001395_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001395_s.txt", Encoding.UTF8);

    public Test001395() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{37,239,191,189,34,239,191,189,239,191,189,122,6,239,191,189,239,191,189,111,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,88,239,191,189,109,30,239,191,189,239,191,189,9,239,191,189,239,191,189,34,111,65,2,239,191,189,4,15,61,112,92,239,191,189,97,239,191,189,80,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,61,90,3,109,18,112,85,239,191,189,41,77,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,36,61,239,191,189,239,191,189,5,28,98,32,239,191,189,14,30,239,191,189,239,191,189,74,83,239,191,189,23,239,191,189,239,191,189,11,239,191,189,94,239,191,189,194,184,3,239,191,189,115,239,191,189,46,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,61,239,191,189,77,31,98,54,239,191,189,72,3,239,191,189,82,239,191,189,15,38,239,191,189,82,239,191,189,81,42,51,77,25,194,172,10,239,191,189,93,239,191,189,62,239,191,189,117,239,191,189,33,239,191,189,108,107,239,191,189,63,239,191,189,73,5,111,239,191,189,239,191,189,32,30,30,239,191,189,61,80,239,191,189,239,191,189,239,191,189,239,191,189,35,222,161,20,239,191,189,239,191,189,239,191,189,10,108,84,239,191,189,239,191,189,239,191,189,239,191,189,111,207,134,239,191,189,239,191,189,45,239,191,189,26,239,191,189,239,191,189,239,191,189,194,141,239,191,189,239,191,189,239,191,189,96,239,191,189,72,239,191,189,239,191,189,42,7,112,19,101,239,191,189,239,191,189,116,118,239,191,189,239,191,189,205,128,102,239,191,189,239,191,189,12,9,239,191,189,22,39,239,191,189,21,101,28,239,191,189,107,239,191,189,72,239,191,189,113,239,191,189,239,191,189,92,239,191,189,112,26,119,239,191,189,107,22,118,44,239,191,189,108,66,36,239,191,189,204,143,63,239,191,189,239,191,189,2,71,91,239,191,189,73,239,191,189,21,239,191,189,45,239,191,189,110,239,191,189,10,2,123,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,70,239,191,189,124,94,50,72,37,89,122,21,108,46,239,191,189,85,117,72,239,191,189,115,239,191,189,239,191,189,56,34,115,82,239,191,189,239,191,189,20,239,191,189,81,239,191,189,39,8,239,191,189,79,206,189,239,191,189,73,60,239,191,189,108,239,191,189,239,191,189,101,13,102,239,191,189,48,239,191,189,105,15,239,191,189,239,191,189,239,191,189,72,36,113,41,100,117,51,90,7,239,191,189,239,191,189,99,239,191,189,103,239,191,189,239,191,189,239,191,189,59,54,52,111,239,191,189,239,191,189,13,69,239,191,189,239,191,189,239,191,189,64,239,191,189,103,56,239,191,189,7,239,191,189,76,239,191,189,239,191,189,239,191,189,109,18,239,191,189,239,191,189,119,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,212,137,239,191,189,100,239,191,189,239,191,189,99,239,191,189,208,132,79,25,31,35,239,191,189,42,239,191,189,96,239,191,189,107,15,85,112,239,191,189,93,239,191,189,217,149,239,191,189,239,191,189,239,191,189,59,110,22,239,191,189,222,157,97,69,32,239,191,189,20,66,30,239,191,189,239,191,189,239,191,189,239,191,189,127,2,3,239,191,189,103,239,191,189,126,24,239,191,189,7,239,191,189,239,191,189,73,14,239,191,189,20,239,191,189,9,83,239,191,189,239,191,189,109,27,239,191,189,239,191,189,108,65,46,239,191,189,100,82,59,239,191,189,27,239,191,189,239,191,189,111,7,84,81,239,191,189,239,191,189,90,96,112,26,90,5,75,10,78,239,191,189,74,74,239,191,189,239,191,189,15,239,191,189,86,61,239,191,189,45,239,191,189,239,191,189,116,42,46,79,108,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,19,239,191,189,75,104,17,59,239,191,189,22,239,191,189,239,191,189,89,40,42,239,191,189,95,34,239,191,189,20,219,153,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,101,239,191,189,239,191,189,72,104,45,239,191,189,45,239,191,189,123,68,1,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,36,239,191,189,69,239,191,189,239,191,189,239,191,189,5,43,92,239,191,189,78,120,239,191,189,3,55,107,6,239,191,189,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,19,239,191,189,9,41,13,122,30,38,239,191,189,21,32,41,20,91,98,1,36,63,118,2,94,123,4,88,33,239,191,189,239,191,189,239,191,189,10,123,84,239,191,189,239,191,189,239,191,189,239,191,189,50,34,51,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,23,66,239,191,189,77,239,191,189,239,191,189,239,191,189,53,36,239,191,189,91,239,191,189,207,176,8,83,239,191,189,61,28,22,239,191,189,118,79,22,239,191,189,48,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,23,65,239,191,189,199,141,83,17,239,191,189,31,239,191,189,53,239,191,189,67,98,113,42,239,191,189,52,28,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,92,25,239,191,189,213,129,239,191,189,239,191,189,16,239,191,189,111,42,239,191,189,18,239,191,189,10,33,239,191,189,239,191,189,26,117,61,239,191,189,110,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,74,4,56,239,191,189,50,239,191,189,2,0,0,33,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,2,19,113,239,191,189,103,239,191,189,239,191,189,63,239,191,189,81,239,191,189,19,239,191,189,87,239,191,189,239,191,189,11,35,107,239,191,189,239,191,189,76,89,100,239,191,189,95,239,191,189,17,239,191,189,50,103,75,239,191,189,71,239,191,189,239,191,189,36,239,191,189,239,191,189,51,239,191,189,95,239,191,189,62,239,191,189,239,191,189,52,239,191,189,239,191,189,214,130,107,64,8,48,239,191,189,23,92,124,109,239,191,189,46,28,30,239,191,189,239,191,189,46,15,239,191,189,25,106,64,69,56,6,114,123,26,239,191,189,239,191,189,43,41,25,239,191,189,239,191,189,239,191,189,11,239,191,189,22,40,239,191,189,239,191,189,78,112,84,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,107,66,38,8,1,239,191,189,76,239,191,189,124,239,191,189,66,239,191,189,21,111,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,116,47,239,191,189,104,36,33,6,95,58,65,109,239,191,189,3,239,191,189,88,220,178,76,239,191,189,45,239,191,189,123,239,191,189,67,34,239,191,189,40,44,239,191,189,116,239,191,189,79,81,36,239,191,189,239,191,189,239,191,189,239,191,189,87,108,59,85,239,191,189,45,0,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,85,50,239,191,189,68,239,191,189,91,239,191,189,70,38,239,191,189,239,191,189,103,239,191,189,120,30,239,191,189,239,191,189,239,191,189,239,191,189,88,30,239,191,189,83,239,191,189,73,239,191,189,239,191,189,67,103,67,10,239,191,189,1,239,191,189,116,29,239,191,189,239,191,189,50,239,191,189,78,49,115,97,239,191,189,20,239,191,189,239,191,189,53,239,191,189,35,212,157,239,191,189,96,222,181,239,191,189,88,239,191,189,66,239,191,189,239,191,189,239,191,189,77,101,9,4,0,239,191,189,239,191,189,102,239,191,189,90,239,191,189,239,191,189,223,144,90,239,191,189,239,191,189,96,49,104,239,191,189,100,35,19,62,239,191,189,239,191,189,59,124,239,191,189,111,79,239,191,189,20,239,191,189,10,239,191,189,239,191,189,90,221,188,60,66,201,157,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,122,8,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,23,43,27,239,191,189,96,115,91,124,210,130,64,126,215,138,41,123,33,90,117,64,239,191,189,70,111,239,191,189,239,191,189,239,191,189,239,191,189,124,126,239,191,189,35,239,191,189,31,115,197,145,33,239,191,189,104,42,239,191,189,239,191,189,239,191,189,73,239,191,189,99,239,191,189,239,191,189,239,191,189,26,223,140,122,239,191,189,25,209,188,98,195,158,239,191,189,239,191,189,239,191,189,74,94,239,191,189,94,99,196,152,90,125,239,191,189,75,239,191,189,36,120,38,54,119,239,191,189,239,191,189,99,239,191,189,239,191,189,69,239,191,189,89,239,191,189,213,190,239,191,189,201,139,197,171,239,191,189,239,191,189,2,5,114,42,69,239,191,189,98,239,191,189,47,239,191,189,239,191,189,89,239,191,189,43,76,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,59,239,191,189,10,239,191,189,195,155,239,191,189,40,239,191,189,239,191,189,120,239,191,189,59,52,114,122,239,191,189,89,239,191,189,69,239,191,189,22,239,191,189,99,239,191,189,63,239,191,189,239,191,189,22,211,133,18,239,191,189,35,239,191,189,68,103,90,239,191,189,37,239,191,189,114,111,14,125,99,90,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,93,239,191,189,37,7,239,191,189,53,239,191,189,8,9,17,239,191,189,81,102,21,24,109,45,18,96,239,191,189,125,127,239,191,189,239,191,189,239,191,189,239,191,189,55,228,155,185,239,191,189,214,159,27,239,191,189,89,239,191,189,61,239,191,189,36,239,191,189,29,239,191,189,96,239,191,189,239,191,189,23,78,66,239,191,189,239,191,189,38,239,191,189,14,121,239,191,189,62,126,92,239,191,189,239,191,189,239,191,189,108,80,50,21,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,81,59,239,191,189,96,239,191,189,42,35,239,191,189,239,191,189,239,191,189,16,11,239,191,189,57,239,191,189,239,191,189,239,191,189,27,34,239,191,189,0,38,93,239,191,189,108,45,109,11,204,187,239,191,189,239,191,189,239,191,189,239,191,189,97,52,24,25,20,91,110,239,191,189,21,239,191,189,91,68,122,239,191,189,32,239,191,189,239,191,189,239,191,189,14,81,20,125,239,191,189,87,239,191,189,239,191,189,239,191,189,2,45,31,82,78,239,191,189,239,191,189,92,239,191,189,239,191,189,7,239,191,189,114,14,17,96,84,39,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,21,239,191,189,239,191,189,76,239,191,189,105,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,4,239,191,189,31,97,239,191,189,239,191,189,67,2,29,91,48,73,35,239,191,189,239,191,189,94,62,61,239,191,189,97,239,191,189,239,191,189,32,239,191,189,239,191,189,33,239,191,189,30,41,239,191,189,75,49,28,239,191,189,38,4,109,68,51,18,63,73,239,191,189,13,239,191,189,206,130,239,191,189,17,239,191,189,239,191,189,239,191,189,86,53,120,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,216,154,15,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,34,65,11,18,55,32,239,191,189,83,13,239,191,189,239,191,189,127,239,191,189,239,191,189,20,9,5,213,151,115,92,26,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,19,55,18,239,191,189,96,239,191,189,32,98,22,56,239,191,189,239,191,189,35,70,239,191,189,239,191,189,239,191,189,27,98,239,191,189,48,7,239,191,189,12,20,239,191,189,127,239,191,189,239,191,189,239,191,189,7,61,239,191,189,17,239,191,189,239,191,189,239,191,189,24,116,12,83,239,191,189,4,56,71,109,111,91,105,239,191,189,97,125,67,43,239,191,189,11,103,5,216,188,12,108,239,191,189,64,49,122,239,191,189,18,114,239,191,189,209,188,239,191,189,85,66,54,3,239,191,189,197,167,52,35,74,239,191,189,116,239,191,189,239,191,189,239,191,189,121,239,191,189,117,239,191,189,64,239,191,189,239,191,189,239,191,189,41,239,191,189,6,205,154,93,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,97,8,239,191,189,64,48,239,191,189,239,191,189,34,58,203,168,127,65,239,191,189,239,191,189,46,239,191,189,124,239,191,189,86,91,13,63,239,191,189,239,191,189,12,239,191,189,59,239,191,189,109,207,177,12,239,191,189,23,239,191,189,239,191,189,239,191,189,15,49,22,239,191,189,239,191,189,239,191,189,93,77,89,239,191,189,60,239,191,189,73,40,233,150,141,84,239,191,189,61,72,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,46,109,239,191,189,64,239,191,189,30,70,52,239,191,189,239,191,189,18,239,191,189,239,191,189,35,239,191,189,239,191,189,118,27,239,191,189,239,191,189,105,104,239,191,189,105,39,33,239,191,189,102,239,191,189,239,191,189,67,79,14,27,239,191,189,45,86,239,191,189,53,239,191,189,8,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,83,46,239,191,189,124,239,191,189,239,191,189,30,197,130,58,239,191,189,111,239,191,189,72,239,191,189,239,191,189,239,191,189,207,175,239,191,189,8,239,191,189,31,37,239,191,189,114,97,239,191,189,122,239,191,189,119,119,239,191,189,56,239,191,189,68,239,191,189,88,239,191,189,85,55,239,191,189,127,239,191,189,56,57,58,239,191,189,125,239,191,189,239,191,189,208,160,101,239,191,189,239,191,189,87,48,239,191,189,239,191,189,239,191,189,7,84,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,86,239,178,182,239,191,189,239,191,189,239,191,189,85,57,38,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,68,239,191,189,0,239,191,189,85,239,191,189,50,91,47,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,207,132,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,75,239,191,189,239,191,189,10,61,95,80,239,191,189,90,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,8,60,13,239,191,189,239,191,189,239,191,189,36,46,239,191,189,19,239,191,189,233,149,183,239,191,189,50,121,239,191,189,239,191,189,95,36,97,4,63,3,64,239,191,189,239,191,189,13,239,191,189,37,36,239,191,189,40,239,191,189,0,239,191,189,56,239,191,189,22,239,191,189,220,170,76,239,191,189,239,191,189,239,191,189,57,46,239,191,189,122,239,191,189,32,239,191,189,97,239,191,189,55,206,159,93,239,191,189,60,32,3,239,191,189,82,108,239,191,189,195,134,64,219,133,239,191,189,72,239,191,189,239,191,189,239,191,189,61,123,123,239,191,189,126,21,43,3,239,191,189,239,191,189,61,239,191,189,221,153,79,74,239,191,189,239,191,189,239,191,189,94,239,191,189,114,89,102,107,7,57,30,239,191,189,111,25,239,191,189,24,97,239,191,189,80,239,191,189,239,191,189,239,191,189,194,158,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,16,89,239,191,189,239,191,189,34,20,78,118,239,191,189,12,103,46,239,191,189,77,72,239,191,189,55,109,239,191,189,25,25,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,112,95,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,38,75,239,191,189,239,191,189,60,51,43,17})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc5e0a273e309143b691604ee0ccb14645",
                        blob: "blob2",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001285 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001285_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001285_s.txt", Encoding.UTF8);

    public Test001285() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,196,168,239,191,189,53,239,191,189,239,191,189,73,75,10,239,191,189,201,178,114,64,7,49,239,191,189,69,239,191,189,112,125,109,110,117,239,191,189,85,234,165,162,70,239,191,189,110,239,191,189,78,239,191,189,72,102,239,191,189,239,191,189,71,239,191,189,37,239,191,189,76,239,191,189,239,191,189,239,191,189,53,68,65,239,191,189,239,191,189,239,191,189,239,191,189,73,86,57,15,106,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,17,35,104,239,191,189,239,191,189,36,239,191,189,98,239,191,189,88,239,191,189,34,239,191,189,41,239,191,189,239,191,189,96,96,73,70,239,191,189,9,5,239,191,189,14,87,81,80,73,32,124,239,191,189,78,42,239,191,189,239,191,189,205,134,118,239,191,189,239,191,189,55,239,191,189,239,191,189,110,22,30,64,239,191,189,72,66,72,123,239,191,189,239,191,189,8,30,239,191,189,115,239,191,189,87,25,239,191,189,239,191,189,39,239,191,189,197,153,239,191,189,239,191,189,239,191,189,239,191,189,113,93,239,191,189,30,19,20,239,191,189,56,16,239,191,189,0,239,191,189,52,69,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,3,4,239,191,189,30,95,22,70,66,88,239,191,189,239,191,189,96,103,94,9,89,239,191,189,239,191,189,11,210,184,59,239,191,189,239,191,189,24,239,191,189,239,191,189,239,191,189,61,34,18,124,0,4,239,191,189,109,239,191,189,125,239,191,189,239,191,189,205,181,239,191,189,105,216,159,118,239,191,189,60,61,239,191,189,239,191,189,113,21,29,239,191,189,65,239,191,189,6,239,191,189,111,100,5,54,239,191,189,65,95,98,120,239,191,189,239,191,189,108,43,14,4,2,92,89,239,191,189,120,55,209,165,0,105,116,11,239,191,189,239,191,189,31,43,239,191,189,119,11,239,191,189,105,239,191,189,239,191,189,212,150,64,19,93,239,191,189,239,191,189,77,113,99,16,27,106,239,191,189,239,191,189,123,239,191,189,239,191,189,4,239,191,189,32,54,115,123,89,112,239,191,189,239,191,189,32,239,191,189,239,191,189,82,239,191,189,239,191,189,81,56,36,116,5,80,28,2,239,191,189,239,191,189,204,180,68,18,239,191,189,239,170,171,219,179,96,204,151,3,47,28,88,81,239,191,189,117,200,182,98,239,191,189,84,86,42,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,112,239,191,189,51,195,176,239,191,189,101,3,239,191,189,239,191,189,122,239,191,189,57,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,51,239,191,189,95,3,239,191,189,78,239,191,189,81,239,191,189,33,222,144,239,191,189,239,191,189,202,185,239,191,189,239,191,189,110,239,191,189,51,239,191,189,239,191,189,74,6,116,86,239,191,189,239,191,189,239,191,189,239,191,189,61,31,56,239,191,189,17,209,151,117,239,191,189,116,239,191,189,239,191,189,30,81,212,173,111,11,13,118,61,38,9,0,59,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,113,49,83,239,191,189,239,191,189,36,239,191,189,17,239,191,189,119,127,83,83,202,136,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,57,111,22,22,56,106,88,24,1,239,191,189,239,191,189,239,191,189,88,113,239,191,189,239,191,189,78,239,191,189,74,98,239,191,189,239,191,189,198,167,239,191,189,239,191,189,113,48,239,191,189,100,18,239,191,189,196,150,55,239,191,189,61,111,119,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,88,239,191,189,239,191,189,239,191,189,201,156,93,239,191,189,239,191,189,111,97,239,191,189,239,191,189,40,88,239,191,189,239,191,189,239,191,189,43,239,191,189,58,43,239,191,189,222,134,239,191,189,19,2,239,191,189,239,191,189,80,239,191,189,24,239,191,189,196,129,72,239,191,189,102,239,191,189,239,191,189,25,239,191,189,14,239,191,189,239,191,189,39,239,191,189,73,82,239,191,189,57,57,30,111,59,4,67,12,74,239,191,189,5,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,27,64,21,239,191,189,32,239,191,189,17,239,191,189,207,154,239,191,189,239,191,189,96,93,239,191,189,239,191,189,23,120,239,191,189,38,239,191,189,124,5,239,191,189,28,239,191,189,239,191,189,90,8,239,191,189,19,239,191,189,14,45,17,239,191,189,117,25,112,93,72,53,239,191,189,63,94,239,191,189,239,191,189,38,25,239,191,189,96,239,191,189,108,10,239,191,189,59,58,239,191,189,112,41,239,191,189,239,191,189,208,135,239,191,189,86,82,47,239,191,189,194,162,95,239,191,189,239,191,189,64,71,92,239,191,189,239,191,189,30,239,191,189,52,239,191,189,5,239,191,189,239,191,189,39,3,239,191,189,213,175,205,168,71,239,191,189,94,100,34,82,8,62,120,239,191,189,86,86,0,94,239,191,189,239,191,189,88,223,157,239,191,189,81,75,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,78,239,191,189,239,191,189,19,212,182,66,34,239,191,189,239,191,189,57,73,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,54,239,191,189,17,239,191,189,86,239,191,189,35,101,239,191,189,77,95,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,74,28,239,191,189,239,191,189,117,239,191,189,84,53,114,239,191,189,239,191,189,97,27,34,87,239,191,189,20,106,239,191,189,2,239,191,189,95,70,239,191,189,124,72,239,191,189,239,191,189,239,191,189,239,140,167,85,45,103,127,2,82,239,191,189,80,239,191,189,239,191,189,239,191,189,21,54,4,126,42,8,45,239,191,189,109,51,64,239,191,189,239,191,189,213,130,107,44,239,191,189,106,88,239,191,189,89,69,11,239,191,189,216,169,194,170,106,69,68,123,49,239,191,189,120,239,191,189,239,191,189,239,191,189,18,31,116,20,239,191,189,125,239,191,189,127,230,147,150,82,84,96,239,191,189,239,191,189,239,191,189,239,191,189,111,47,239,191,189,26,239,191,189,239,191,189,239,191,189,75,111,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,112,58,239,191,189,239,191,189,80,62,46,41,239,191,189,22,239,191,189,239,191,189,239,191,189,26,118,239,191,189,127,59,81,239,191,189,42,239,191,189,92,239,191,189,25,82,13,5,239,191,189,239,191,189,49,239,191,189,201,170,239,191,189,31,2,63,48,0,90,62,239,191,189,239,191,189,8,91,84,45,239,191,189,115,38,239,191,189,214,128,119,239,191,189,37,239,191,189,239,191,189,48,41,101,239,191,189,239,191,189,53,41,69,41,239,191,189,239,191,189,125,239,191,189,32,239,191,189,207,186,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,42,120,239,191,189,239,191,189,37,66,0,239,191,189,239,191,189,87,199,190,239,191,189,22,42,56,42,239,191,189,43,239,191,189,37,239,191,189,239,191,189,44,110,239,191,189,6,119,81,239,191,189,102,239,191,189,62,54,26,239,191,189,82,239,191,189,87,239,191,189,32,239,191,189,239,191,189,98,239,191,189,239,191,189,50,225,142,159,239,191,189,239,191,189,239,191,189,113,239,191,189,121,239,191,189,118,239,191,189,90,59,239,191,189,239,191,189,114,239,191,189,237,128,169,239,191,189,121,239,191,189,107,239,191,189,113,101,76,239,191,189,90,67,118,239,191,189,37})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        blob: "blob1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00394 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00394_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00394_s.txt", Encoding.UTF8);

    public Test00394() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa5215e60dfcd49019bbb0b1920120471",
                        blob: "Blobf14f4258f2f14978b2244698f718bf7e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00393 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00393_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00393_s.txt", Encoding.UTF8);

    public Test00393() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa5215e60dfcd49019bbb0b1920120471",
                        blob: "Blobf14f4258f2f14978b2244698f718bf7e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00395 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00395_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00395_s.txt", Encoding.UTF8);

    public Test00395() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa5215e60dfcd49019bbb0b1920120471",
                        blob: "Blobf14f4258f2f14978b2244698f718bf7e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00407 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00407_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00407_s.txt", Encoding.UTF8);

    public Test00407() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{94,239,191,189,83,239,191,189,56,239,191,189,239,191,189,239,191,189,94,223,172,239,191,189,239,191,189,103,239,191,189,6,120,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,239,191,189,72,239,191,189,239,191,189,239,191,189,103,239,191,189,28,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,81,239,191,189,37,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,73,239,191,189,239,191,189,121,239,191,189,70,2,239,191,189,239,191,189,75,8,239,191,189,239,191,189,239,191,189,21,123,16,239,191,189,76,2,70,82,239,191,189,112,34,239,191,189,72,3,239,191,189,21,79,239,191,189,239,191,189,239,191,189,23,6,29,27,5,239,191,189,239,191,189,239,191,189,6,239,191,189,120,25,239,191,189,239,191,189,6,239,191,189,30,14,195,174,239,191,189,239,191,189,115,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,33,239,191,189,117,239,191,189,71,122,80,239,191,189,239,191,189,239,191,189,208,177,114,222,130,49,117,239,191,189,67,239,191,189,76,239,191,189,239,191,189,60,7,239,191,189,66,239,191,189,10,239,191,189,95,120,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,93,89,5,239,191,189,239,191,189,15,76,239,191,189,239,191,189,81,239,191,189,15,74,93,239,191,189,239,191,189,239,191,189,43,85,64,239,191,189,13,239,191,189,239,191,189,239,191,189,75,87,60,239,191,189,77,225,164,174,239,191,189,239,191,189,71,70,13,27,45,239,191,189,239,191,189,109,239,191,189,64,239,191,189,20,27,239,191,189,239,191,189,117,55,239,191,189,86,80,239,191,189,76,239,191,189,97,239,191,189,15,239,191,189,239,191,189,112,38,97,239,191,189,120,56,106,239,191,189,15,40,239,191,189,239,191,189,239,191,189,46,121,2,54,60,71,239,191,189,239,191,189,107,108,39,47,239,191,189,239,191,189,239,191,189,119,239,191,189,117,239,191,189,77,239,191,189,31,26,239,191,189,81,239,191,189,239,191,189,119,239,191,189,101,15,1,96,239,191,189,109,210,147,42,123,199,175,239,191,189,4,239,191,189,57,239,191,189,239,191,189,111,92,85,239,191,189,217,168,239,191,189,15,94,117,228,153,139,239,191,189,239,191,189,5,93,38,239,191,189,239,191,189,61,39,239,191,189,239,191,189,239,191,189,239,191,189,26,96,82,239,191,189,239,191,189,47,7,126,16,92,39,239,191,189,239,191,189,94,115,29,70,239,191,189,60,41,37,239,191,189,91,19,239,191,189,239,191,189,79,72,120,198,184,239,191,189,10,239,191,189,239,191,189,239,191,189,35,38,239,191,189,91,126,68,239,191,189,1,239,191,189,24,239,191,189,223,179,239,191,189,73,23,239,191,189,116,239,191,189,27,4,62,239,191,189,239,191,189,239,191,189,6,74,239,191,189,49,239,191,189,56,105,117,239,191,189,31,8,239,191,189,239,191,189,9,90,20,239,191,189,13,111,239,191,189,239,191,189,124,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,22,122,239,191,189,62,239,191,189,94,239,191,189,108,239,191,189,117,62,239,191,189,41,15,239,191,189,239,191,189,239,191,189,17,239,191,189,42,79,239,191,189,112,42,85,239,191,189,2,239,191,189,22,82,239,191,189,124,22,239,191,189,239,191,189,101,239,191,189,94,239,191,189,71,62,87,239,191,189,86,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,97,10,239,191,189,239,191,189,239,191,189,91,239,191,189,85,99,239,191,189,194,182,54,29,97,239,191,189,83,239,191,189,239,191,189,239,191,189,16,93,118,239,191,189,112,121,113,90,74,99,239,191,189,44,91,23,239,191,189,91,85,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,21,239,191,189,46,29,115,39,239,191,189,19,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,120,100,239,191,189,10,0,27,239,191,189,90,30,239,191,189,5,239,191,189,239,191,189,51,12,239,191,189,39,105,96,63,66,92,239,191,189,51,94,199,181,239,191,189,239,191,189,75,239,191,189,199,148,64,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,98,0,239,191,189,81,239,191,189,239,191,189,51,239,191,189,54,7,239,191,189,94,239,191,189,57,102,9,239,191,189,239,191,189,2,61,239,191,189,90,23,86,239,191,189,72,118,102,64,110,94,23,17,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,19,9,20,239,191,189,108,50,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,109,239,191,189,239,191,189,62,239,191,189,91,35,239,191,189,64,200,169,239,191,189,76,239,191,189,114,239,191,189,18,239,191,189,42,16,239,191,189,239,191,189,81,3,239,191,189,78,22,239,191,189,239,191,189,74,113,50,52,45,239,191,189,32,13,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,64,107,239,191,189,32,239,191,189,71,3,239,191,189,89,0,239,191,189,58,239,191,189,84,196,178,70,69,102,239,191,189,239,191,189,87,118,239,191,189,30,33,82,239,191,189,89,6,239,191,189,67,239,191,189,15,16,239,191,189,239,191,189,46,239,191,189,117,239,191,189,103,24,50,97,239,191,189,3,239,191,189,72,6,87,6,102,239,191,189,239,191,189,239,191,189,239,191,189,85,1,97,239,191,189,127,239,191,189,83,33,239,191,189,89,123,67,44,29,23,239,191,189,239,191,189,43,239,191,189,63,68,63,43,29,239,191,189,59,83,239,191,189,239,191,189,239,191,189,20,51,39,239,191,189,64,45,50,239,191,189,79,239,191,189,239,191,189,16,209,153,239,191,189,239,191,189,27,239,191,189,63,84,117,239,191,189,77,239,191,189,239,191,189,21,239,191,189,67,111,68,55,239,191,189,73,239,191,189,69,72,27,239,191,189,239,191,189,239,191,189,127,112,219,177,122,52,109,239,191,189,239,191,189,239,191,189,31,106,111,239,191,189,102,114,239,191,189,124,239,191,189,42,88,239,191,189,17,11,239,191,189,32,239,191,189,30,84,64,109,239,191,189,12,84,239,191,189,5,198,156,48,124,239,191,189,66,239,191,189,115,37,239,191,189,52,239,191,189,76,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,11,89,110,79,62,84,239,191,189,239,191,189,93,27,239,191,189,97,239,191,189,73,76,118,239,191,189,21,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,210,129,239,191,189,239,191,189,239,191,189,90,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,14,88,4,90,239,191,189,111,25,25,239,191,189,39,25,83,32,47,125,81,239,191,189,239,191,189,50,109,110,124,239,191,189,119,239,191,189,239,191,189,3,88,104,239,191,189,239,191,189,239,191,189,117,103,42,16,239,191,189,77,105,239,191,189,239,191,189,239,191,189,90,239,191,189,122,239,191,189,42,69,239,191,189,239,191,189,10,94,104,239,191,189,239,191,189,72,239,191,189,35,7,107,239,191,189,239,191,189,49,113,96,221,184,5,108,108,5,239,191,189,200,155,239,191,189,239,191,189,98,239,191,189,69,239,191,189,239,191,189,19,117,210,171,89,12,239,191,189,78,239,191,189,1,239,191,189,70,239,191,189,17,53,239,191,189,239,191,189,99,239,191,189,34,37,216,134,239,191,189,110,239,191,189,239,191,189,22,69,239,191,189,47,239,191,189,81,239,191,189,239,191,189,58,94,239,191,189,7,239,191,189,239,191,189,106,111,86,201,137,82,239,191,189,121,80,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,61,239,191,189,62,239,191,189,8,239,191,189,209,185,239,191,189,108,100,239,191,189,87,35,91,239,191,189,50,111,51,28,114,23,239,191,189,68,239,191,189,101,108,239,191,189,53,239,191,189,239,191,189,113,76,108,239,191,189,68,239,191,189,63,239,191,189,194,152,239,191,189,96,93,36,87,239,191,189,85,239,191,189,239,191,189,96,68,8,239,191,189,127,37,239,191,189,239,191,189,239,191,189,118,239,191,189,54,239,191,189,239,191,189,239,191,189,23,58,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,112,31,107,239,191,189,22,239,191,189,88,94,239,191,189,104,121,239,191,189,99,78,239,191,189,81,10,76,239,191,189,50,41,239,191,189,49,239,191,189,239,191,189,239,191,189,220,162,108,239,191,189,239,191,189,78,239,191,189,110,239,191,189,219,129,239,191,189,95,6,42,239,191,189,239,191,189,52,239,191,189,55,201,162,239,191,189,239,191,189,36,220,138,239,191,189,239,191,189,239,191,189,239,191,189,64,91,15,239,191,189,239,191,189,23,239,191,189,43,42,239,191,189,200,187,239,191,189,69,239,191,189,7,80,219,167,116,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,115,114,56,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,115,239,191,189,219,184,9,239,191,189,66,0,239,191,189,239,191,189,113,55,59,239,191,189,60,239,191,189,70,78,239,191,189,239,191,189,239,191,189,239,191,189,38,76,94,239,191,189,239,191,189,20,239,191,189,239,191,189,17,239,191,189,232,169,147,105,0,239,191,189,106,239,191,189,65,18,24,239,191,189,89,59,54,239,191,189,239,191,189,31,239,191,189,112,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,90,80,239,191,189,45,28,24,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,211,149,239,191,189,45,239,191,189,35,239,191,189,59,112,239,191,189,38,239,191,189,220,186,239,191,189,215,169,114,239,191,189,26,239,191,189,20,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,91,80,239,191,189,15,239,191,189,17,28,239,191,189,239,191,189,55,206,165,239,191,189,88,239,191,189,31,212,149,239,191,189,24,41,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,56,239,191,189,117,239,191,189,104,239,191,189,19,239,191,189,34,239,191,189,239,191,189,21,239,191,189,93,75,70,88,239,191,189,12,25,239,191,189,85,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,39,23,29,124,239,191,189,78,239,191,189,239,191,189,47,28,239,191,189,28,11,7,114,69,94,20,123,101,125,239,191,189,40,86,239,191,189,239,191,189,120,239,191,189,29,239,191,189,239,191,189,95,72,79,239,191,189,11,239,191,189,62,119,239,191,189,94,92,22,59,239,191,189,239,191,189,13,239,191,189,239,191,189,122,79,239,191,189,239,191,189,39,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,104,35,239,191,189,211,188,97,103,239,191,189,31,239,191,189,239,191,189,7,33,239,191,189,236,168,163,204,171,239,191,189,239,191,189,119,101,239,191,189,33,8,31,27,239,191,189,85,239,191,189,239,191,189,66,239,191,189,239,191,189,24,29,28,81,106,123,239,191,189,47,239,191,189,239,191,189,32,37,239,191,189,3,31,69,239,191,189,43,29,46,240,190,191,178,239,191,189,66,75,12,239,191,189,239,191,189,65,196,150,239,191,189,211,138,239,191,189,123,64,239,191,189,239,191,189,71,111,53,0,239,191,189,37,24,239,191,189,16,239,191,189,239,191,189,37,91,239,191,189,90,94,106,239,191,189,40,47,239,191,189,101,13,90,91,239,191,189,27,47,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersbf2702cde30a4f168205f97253956233",
                        blob: "Blob91de83c1997d42a98ad8fe3a29ddc747",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1535",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00991 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00991_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00991_s.txt", Encoding.UTF8);

    public Test00991() : base(recordedRequest, recordedResponse, "accounts8d439fdfbe45573")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{111,67,34,239,191,189,113,114,46,113,239,191,189,21,78,19,88,18,239,191,189,47,6,239,191,189,118,239,191,189,239,191,189,52,39,124,239,191,189,239,191,189,105,239,191,189,239,191,189,223,141,30,76,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,127,118,73,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,61,239,191,189,15,239,191,189,87,114,239,191,189,239,191,189,239,191,189,24,53,239,191,189,239,191,189,12,18,73,239,191,189,239,191,189,239,191,189,86,72,239,191,189,239,191,189,203,128,0,116,239,191,189,49,101,239,191,189,66,14,88,66,239,191,189,43,239,191,189,86,30,107,103,64,239,191,189,239,191,189,112,221,171,239,191,189,12,239,191,189,36,72,239,191,189,94,81,28,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,6,32,88,110,99,116,239,191,189,239,191,189,124,85,15,15,34,239,191,189,4,36,221,138,239,191,189,39,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,206,146,239,191,189,112,118,9,114,35,239,191,189,215,180,25,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,123,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,215,191,21,239,191,189,239,191,189,219,141,239,191,189,88,96,11,239,191,189,5,239,191,189,239,191,189,35,44,112,239,191,189,239,191,189,37,44,125,27,239,191,189,36,239,191,189,118,70,239,191,189,239,191,189,125,239,191,189,81,239,191,189,100,239,191,189,36,239,191,189,61,51,46,239,191,189,28,239,191,189,239,191,189,117,68,96,99,239,191,189,82,46,239,191,189,239,191,189,239,191,189,66,239,191,189,12,239,191,189,43,22,95,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,7,116,239,191,189,239,191,189,239,191,189,239,191,189,96,82,239,191,189,239,191,189,108,22,239,191,189,21,107,78,51,239,191,189,239,191,189,33,239,191,189,23,102,18,28,239,191,189,7,122,59,239,191,189,239,191,189,66,239,191,189,207,160,221,168,37,239,191,189,32,239,191,189,78,239,191,189,0,124,239,191,189,54,63,239,191,189,239,191,189,17,120,239,191,189,239,191,189,14,115,122,40,239,191,189,239,191,189,22,239,191,189,239,191,189,42,80,19,117,239,191,189,239,191,189,13,33,239,191,189,63,239,191,189,200,128,83,28,82,239,191,189,67,239,191,189,61,239,191,189,48,77,208,175,239,191,189,53,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,15,239,191,189,239,191,189,239,191,189,239,191,189,65,57,16,39,239,191,189,31,93,239,191,189,0,239,191,189,25,239,191,189,33,239,191,189,3,66,197,190,112,97,239,191,189,49,67,92,62,239,191,189,239,191,189,109,239,191,189,115,239,191,189,99,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,65,22,77,239,191,189,239,191,189,90,119,4,216,155,239,191,189,38,73,239,191,189,40,77,38,16,239,191,189,239,191,189,239,191,189,7,96,239,191,189,239,191,189,7,239,191,189,239,191,189,41,10,239,191,189,60,125,90,19,15,239,191,189,239,191,189,239,191,189,57,239,191,189,35,239,191,189,239,191,189,41,239,191,189,59,65,239,191,189,239,191,189,29,12,239,191,189,58,239,191,189,93,239,191,189,17,82,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,12,109,239,191,189,57,22,125,12,206,174,88,60,46,41,98,87,123,239,191,189,88,44,239,191,189,117,239,191,189,66,239,191,189,239,191,189,94,239,191,189,239,191,189,36,44,239,191,189,239,191,189,5,30,29,67,108,8,239,191,189,96,16,62,239,191,189,239,191,189,121,46,239,191,189,239,191,189,239,191,189,69,88,85,100,239,191,189,46,111,42,42,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,89,239,191,189,41,10,69,20,14,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,97,41,239,191,189,239,191,189,211,154,239,191,189,212,169,46,26,239,191,189,24,66,239,191,189,2,100,239,191,189,239,191,189,110,239,191,189,239,191,189,4,125,104,239,191,189,55,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,40,239,191,189,203,174,239,191,189,123,14,26,239,191,189,239,191,189,239,191,189,40,239,191,189,103,38,239,191,189,61,239,191,189,89,239,191,189,88,106,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,79,65,239,191,189,32,59,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,98,239,191,189,239,191,189,107,239,191,189,27,48,3,82,239,191,189,239,191,189,122,239,191,189,239,191,189,39,36,239,191,189,239,191,189,239,191,189,29,33,239,191,189,239,191,189,239,191,189,239,191,189,122,43,103,239,191,189,124,1,5,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,102,239,191,189,100,95,239,191,189,13,239,191,189,125,239,191,189,239,191,189,59,26,111,239,191,189,65,37,63,239,191,189,239,191,189,4,239,191,189,120,9,239,191,189,239,191,189,37,96,239,191,189,239,191,189,239,191,189,126,48,122,72,76,239,191,189,239,191,189,239,191,189,53,64,231,149,179,239,191,189,115,239,191,189,91,239,191,189,53,97,81,46,90,113,239,191,189,31,5,88,54,239,191,189,92,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,86,239,191,189,66,239,191,189,6,12,58,221,178,215,140,26,239,191,189,28,239,191,189,75,239,191,189,239,191,189,239,191,189,115,239,191,189,86,239,191,189,120,227,180,164,11,238,149,148,107,117,119,11,239,191,189,239,191,189,106,239,191,189,239,191,189,39,239,191,189,94,48,66,127,239,191,189,239,191,189,123,239,191,189,24,239,191,189,239,191,189,239,191,189,0,48,239,191,189,239,191,189,82,104,47,239,191,189,28,67,32,239,191,189,58,17,88,95,92,112,10,239,191,189,239,191,189,239,191,189,59,72,239,191,189,52,239,191,189,65,114,239,191,189,123,115,239,191,189,239,191,189,11,85,35,239,191,189,24,239,191,189,239,191,189,56,239,191,189,27,16,239,191,189,68,239,191,189,113,27,239,191,189,239,191,189,239,191,189,76,41,79,239,191,189,239,191,189,67,29,239,191,189,239,191,189,124,118,199,173,9,239,191,189,5,2,60,239,191,189,88,239,191,189,239,191,189,125,39,32,55,3,239,191,189,13,239,191,189,87,18,211,132,78,110,239,191,189,96,239,191,189,104,239,191,189,239,191,189,200,187,18,84,99,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,80,104,115,239,191,189,40,239,191,189,73,64,45,239,191,189,28,36,100,239,191,189,40,239,191,189,53,74,239,191,189,239,191,189,71,92,239,191,189,15,239,191,189,20,239,191,189,239,191,189,111,78,79,97,120,47,239,191,189,27,239,191,189,194,146,239,191,189,88,40,239,191,189,97,239,191,189,239,191,189,239,191,189,96,58,239,191,189,108,114,239,191,189,68,239,191,189,239,191,189,239,191,189,99,239,191,189,19,9,116,239,191,189,239,191,189,59,239,191,189,239,191,189,52,112,12,239,191,189,115,239,191,189,21,65,31,239,191,189,56,99,42,102,107,239,191,189,239,191,189,239,191,189,220,148,52,239,191,189,239,191,189,76,118,239,191,189,126,239,191,189,239,191,189,87,239,191,189,37,239,191,189,239,191,189,121,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,2,124,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,94,38,119,239,191,189,239,191,189,239,191,189,106,239,191,189,56,239,191,189,93})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fdfbe45573",
                        container: "containers60c0da27f37e4fdcace0e40cc5d82ae8",
                        blob: "Blobb2f854b0b19d4efe8c586f9656da5f5e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test01212 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\01212_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\01212_s.txt", Encoding.UTF8);

    public Test01212() : base(recordedRequest, recordedResponse, "accounts8d439fe6f8e5f9a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe6f8e5f9a",
                        container: "containersa743d245598f412ea86e3e2193458d7b",
                        blob: "PageBlob5cd238cfdc234d10b5f9bbc12d81c2ef",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test01116 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\01116_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\01116_s.txt", Encoding.UTF8);

    public Test01116() : base(recordedRequest, recordedResponse, "accounts8d439fe1570e3a2")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{39,81,239,191,189,10,239,191,189,86,239,191,189,35,206,191,41,239,191,189,239,191,189,15,239,191,189,124,239,191,189,239,191,189,66,61,85,73,239,191,189,4,239,191,189,98,6,42,0,83,239,191,189,239,191,189,116,40,8,239,191,189,239,191,189,239,191,189,197,134,239,191,189,239,191,189,76,122,239,191,189,17,239,191,189,239,191,189,8,239,191,189,28,80,123,239,191,189,8,239,191,189,5,239,191,189,239,191,189,239,191,189,34,122,239,191,189,60,43,239,191,189,7,17,238,185,188,239,191,189,239,191,189,108,239,191,189,122,73,239,191,189,120,93,84,239,191,189,118,206,156,239,191,189,86,0,239,191,189,239,191,189,239,191,189,209,158,6,239,191,189,209,166,127,239,191,189,80,239,191,189,239,191,189,25,36,96,239,191,189,239,191,189,101,11,105,239,191,189,40,123,239,191,189,59,42,4,5,239,191,189,51,67,7,109,103,239,191,189,239,191,189,29,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,82,110,8,36,239,191,189,239,191,189,59,239,191,189,239,191,189,85,20,202,155,204,161,223,178,12,239,191,189,86,239,191,189,95,117,118,51,239,191,189,223,149,239,191,189,54,83,207,171,76,239,191,189,239,191,189,239,191,189,14,82,18,50,239,191,189,239,191,189,239,191,189,9,239,191,189,9,94,50,239,191,189,63,27,31,57,44,239,191,189,239,191,189,239,191,189,239,191,189,49,21,239,191,189,215,149,1,68,31,79,26,10,71,239,191,189,239,191,189,239,191,189,36,21,103,239,191,189,109,93,239,191,189,239,191,189,98,7,239,191,189,56,239,191,189,113,32,239,191,189,239,191,189,5,30,33,239,191,189,239,191,189,239,191,189,98,239,191,189,196,182,239,191,189,68,40,239,191,189,239,191,189,97,239,191,189,21,22,239,191,189,24,36,239,191,189,122,239,191,189,67,207,157,201,148,239,191,189,47,90,108,65,239,191,189,239,191,189,239,191,189,239,191,189,79,5,76,239,191,189,239,191,189,239,191,189,60,58,100,91,239,191,189,25,92,9,53,239,191,189,225,140,166,103,72,239,191,189,239,191,189,239,191,189,48,8,239,191,189,239,191,189,98,23,239,191,189,9,124,199,133,239,191,189,124,239,191,189,126,88,9,107,66,239,191,189,123,81,38,36,239,191,189,96,239,191,189,239,191,189,36,79,90,64,239,191,189,119,239,191,189,113,82,127,1,68,13,15,239,191,189,66,239,191,189,239,191,189,100,239,191,189,40,15,63,239,191,189,239,191,189,216,181,239,191,189,100,239,191,189,239,191,189,2,30,239,191,189,239,191,189,45,108,68,74,4,75,12,5,239,191,189,105,239,191,189,239,191,189,107,114,239,191,189,116,47,239,191,189,87,239,191,189,21,15,208,190,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,37,54,42,239,191,189,239,191,189,107,109,95,85,28,9,239,191,189,31,239,191,189,239,191,189,74,68,239,191,189,80,239,191,189,6,239,191,189,14,239,191,189,29,239,191,189,239,191,189,239,191,189,66,98,239,191,189,119,239,191,189,105,217,173,64,239,191,189,14,8,194,156,1,239,191,189,11,89,239,191,189,58,239,191,189,120,239,191,189,239,191,189,62,7,239,191,189,93,40,91,239,191,189,57,239,191,189,239,191,189,29,239,191,189,28,239,191,189,215,182,239,191,189,70,9,239,191,189,114,71,239,191,189,106,239,191,189,97,239,191,189,239,191,189,239,191,189,76,239,191,189,202,190,115,57,239,191,189,112,123,239,191,189,239,191,189,43,239,191,189,34,239,191,189,127,13,239,191,189,120,239,191,189,239,191,189,239,191,189,111,110,31,25,239,191,189,38,239,191,189,239,191,189,198,150,239,191,189,79,239,191,189,239,191,189,82,52,239,191,189,89,0,69})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe1570e3a2",
                        container: "containers31b38a5cd89644379db9490d83b56e06",
                        blob: "a97f6500-a0d9-4da4-8abf-9154d465aa50.vhd",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03068 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03068_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03068_s.txt", Encoding.UTF8);

    public Test03068() : base(recordedRequest, recordedResponse, "accounts8d439fe9941dec3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9941dec3",
                        container: "containers5d7a470959294d369fbaba8be7bdb1de",
                        blob: "Blob25e9883d34aa48499f33ae60276545c4",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03028 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03028_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03028_s.txt", Encoding.UTF8);

    public Test03028() : base(recordedRequest, recordedResponse, "accounts8d439fe98deaf49")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe98deaf49",
                        container: "containers69903a03584f4b3d976576a40bf04154",
                        blob: "Blobad9a7005fd464fb199b22c0ac6e08172",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03045 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03045_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03045_s.txt", Encoding.UTF8);

    public Test03045() : base(recordedRequest, recordedResponse, "accounts8d439fe98f9d8a3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{44,239,191,189,79,239,191,189,239,191,189,239,191,189,127,66,84,11,239,191,189,239,191,189,239,191,189,111,100,239,191,189,120,0,47,239,191,189,239,191,189,9,239,191,189,11,239,191,189,50,93,239,191,189,239,191,189,69,239,191,189,63,82,239,191,189,94,239,191,189,69,5,239,191,189,239,191,189,239,191,189,97,239,191,189,31,108,80,34,239,191,189,107,239,191,189,121,239,191,189,239,191,189,49,34,239,191,189,68,68,239,191,189,46,239,191,189,85,239,191,189,239,191,189,90,72,239,191,189,239,191,189,5,239,191,189,50,239,191,189,109,19,239,191,189,239,191,189,37,239,191,189,50,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,19,89,32,118,239,191,189,239,191,189,0,59,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,36,239,191,189,76,239,191,189,239,191,189,125,30,209,134,122,239,191,189,88,18,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,71,239,191,189,94,115,77,50,239,191,189,239,191,189,83,41,239,191,189,23,38,13,60,239,191,189,239,191,189,239,191,189,1,78,239,191,189,239,191,189,239,191,189,40,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,20,125,53,26,239,191,189,114,79,239,191,189,239,191,189,68,126,92,239,191,189,239,191,189,50,4,239,191,189,3,104,239,191,189,212,171,82,102,239,191,189,98,239,191,189,37,68,108,57,239,191,189,124,239,191,189,2,239,191,189,239,191,189,33,1,88,239,191,189,113,239,191,189,239,191,189,9,62,99,92,239,191,189,232,167,157,36,239,191,189,28,104,42,239,191,189,42,239,191,189,239,191,189,42,75,80,10,239,191,189,224,169,140,239,191,189,43,239,191,189,1,15,92,99,26,239,191,189,93,239,191,189,239,191,189,44,47,91,196,155,239,191,189,239,191,189,211,153,126,10,239,191,189,118,110,106,37,64,239,191,189,81,93,239,191,189,239,191,189,109,239,191,189,29,239,191,189,21,95,239,191,189,78,239,191,189,112,121,239,191,189,239,191,189,239,191,189,239,191,189,110,22,32,239,191,189,239,191,189,10,33,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,11,84,69,92,194,159,239,191,189,0,239,191,189,97,26,75,239,191,189,239,191,189,125,239,191,189,111,53,239,191,189,55,58,60,239,191,189,239,191,189,98,239,191,189,239,191,189,15,116,108,122,115,239,191,189,100,36,71,96,56,80,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,21,239,191,189,239,191,189,8,38,239,191,189,239,191,189,23,98,127,95,3,28,239,191,189,24,239,191,189,239,191,189,107,52,88,239,191,189,81,54,239,191,189,239,191,189,200,175,125,38,54,79,19,116,109,239,191,189,239,191,189,113,77,198,147,13,239,191,189,239,191,189,239,191,189,76,239,191,189,125,114,239,191,189,28,207,168,82,239,191,189,0,239,191,189,76,36,86,239,191,189,33,239,191,189,59,73,16,239,167,130,239,191,189,11,46,239,191,189,239,191,189,239,191,189,75,239,191,189,112,92,239,191,189,6,74,61,239,191,189,9,103,239,191,189,239,191,189,239,191,189,108,239,191,189,77,239,191,189,239,191,189,113,115,239,191,189,239,191,189,239,191,189,93,32,239,191,189,223,191,239,191,189,69,3,239,191,189,112,68,44,239,191,189,79,239,191,189,239,191,189,239,191,189,49,239,191,189,105,47,239,191,189,22,239,191,189,110,239,191,189,239,191,189,47,239,191,189,18,217,147,58,239,191,189,79,93,239,191,189,27,33,239,191,189,15,71,39,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,119,239,191,189,95,46,49,239,191,189,52,80,13,239,191,189,39,239,191,189,239,191,189,50,83,91,81,105,97,239,191,189,239,191,189,22,239,191,189,239,191,189,31})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe98f9d8a3",
                        container: "containersb77803cf048e41bb98e06fd2204e4db0",
                        blob: "Blob331abea0dc5e49b2a5e1cab126779eef",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03148 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03148_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03148_s.txt", Encoding.UTF8);

    public Test03148() : base(recordedRequest, recordedResponse, "accounts8d439fe9a173186")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9a173186",
                        container: "containers80ba6232224f4a33a981c6e0dd222d8b",
                        blob: "Blob01f06070a1f8423d88bfbe664f0d4bd7",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03085 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03085_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03085_s.txt", Encoding.UTF8);

    public Test03085() : base(recordedRequest, recordedResponse, "accounts8d439fe995d07ec")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{33,47,239,191,189,82,239,191,189,104,239,191,189,199,148,65,59,239,191,189,53,15,53,239,191,189,239,191,189,40,14,31,27,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,42,239,191,189,239,191,189,110,123,239,191,189,1,50,33,100,239,191,189,50,114,81,111,59,46,99,54,127,239,191,189,239,191,189,36,66,4,9,195,147,127,239,191,189,100,66,38,116,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,20,100,31,239,191,189,239,191,189,205,172,101,91,28,239,191,189,72,2,103,239,191,189,239,191,189,105,113,57,110,239,191,189,124,0,102,11,239,191,189,239,191,189,92,239,191,189,91,239,191,189,78,74,21,239,191,189,239,191,189,35,14,109,239,191,189,239,191,189,25,73,71,104,239,191,189,113,27,239,191,189,14,105,78,239,191,189,239,191,189,42,239,191,189,99,239,191,189,239,191,189,239,191,189,79,239,191,189,0,120,239,191,189,239,191,189,239,191,189,239,191,189,125,90,3,67,239,191,189,239,191,189,50,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,124,239,191,189,85,239,191,189,239,191,189,239,191,189,23,91,107,36,239,191,189,239,191,189,239,191,189,63,73,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,14,74,107,63,239,191,189,101,239,191,189,239,191,189,239,191,189,17,75,117,93,14,35,239,191,189,120,2,239,191,189,117,18,54,51,75,239,191,189,89,239,191,189,239,191,189,32,76,7,79,41,239,191,189,239,191,189,10,51,69,88,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,33,239,191,189,58,239,191,189,239,191,189,104,239,191,189,239,191,189,58,126,239,191,189,23,31,79,56,124,239,191,189,239,191,189,112,9,239,191,189,76,114,43,25,239,191,189,50,239,191,189,239,191,189,239,191,189,97,239,191,189,115,239,191,189,239,191,189,119,239,191,189,62,47,227,133,141,239,191,189,108,10,239,191,189,19,239,191,189,32,53,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,110,15,239,191,189,57,54,239,191,189,239,191,189,117,28,10,239,191,189,127,239,191,189,239,191,189,206,129,106,239,191,189,239,191,189,109,93,6,32,38,239,191,189,60,239,191,189,239,191,189,239,191,189,75,213,189,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,79,239,191,189,78,239,191,189,115,95,103,109,239,191,189,107,49,66,120,104,239,191,189,107,239,191,189,239,191,189,79,25,239,191,189,239,191,189,53,230,144,138,239,191,189,47,239,191,189,116,239,191,189,215,179,239,191,189,33,239,191,189,16,239,191,189,41,81,103,239,191,189,105,239,191,189,239,191,189,126,239,191,189,239,191,189,65,97,239,191,189,92,239,191,189,239,191,189,126,239,191,189,104,3,239,191,189,56,239,191,189,55,239,191,189,89,239,191,189,239,191,189,239,191,189,205,147,239,191,189,47,38,239,191,189,56,49,239,191,189,90,239,191,189,11,22,127,239,191,189,19,43,123,19,10,56,86,112,13,239,191,189,25,239,191,189,103,239,191,189,49,29,239,191,189,239,191,189,239,191,189,221,132,54,216,160,76,239,191,189,13,31,220,145,239,191,189,4,36,97,239,191,189,123,239,191,189,120,119,35,118,78,239,191,189,239,191,189,106,239,191,189,239,191,189,40,239,191,189,33,39,239,191,189,239,191,189,53,239,191,189,69,59,106,239,191,189,87,98,239,191,189,4,239,191,189,97,239,191,189,67,124,83,239,191,189,95,118,106,239,191,189,102,53,239,191,189,41,53,239,191,189,17,239,191,189,89,239,191,189,105,25,30,238,185,153,64,32,239,191,189,32,239,191,189,239,191,189,73,239,191,189,77,239,191,189,239,191,189,113,239,191,189,36,194,176,51,90})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe995d07ec",
                        container: "containers05bdb739f7394bb3ad4563bb3e9c324b",
                        blob: "Blob463ed955f813421baffe84665e5bc057",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03245 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03245_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03245_s.txt", Encoding.UTF8);

    public Test03245() : base(recordedRequest, recordedResponse, "accounts8d439fe9b26a7ac")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{81,54,42,239,191,189,82,239,191,189,65,239,191,189,39,239,191,189,239,191,189,239,191,189,113,239,191,189,11,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,113,58,239,191,189,93,239,191,189,115,34,239,191,189,117,239,191,189,28,45,239,191,189,239,191,189,114,86,52,239,191,189,239,191,189,1,209,160,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,48,66,52,37,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,54,31,100,239,191,189,239,191,189,239,191,189,207,134,239,191,189,79,111,49,108,239,191,189,239,191,189,209,168,33,116,77,239,191,189,38,239,191,189,68,239,191,189,239,191,189,8,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,99,68,239,191,189,17,239,191,189,41,9,14,83,52,26,239,191,189,90,239,191,189,106,108,32,239,191,189,199,153,239,191,189,34,79,239,191,189,117,239,191,189,26,239,191,189,239,191,189,239,191,189,62,91,239,191,189,55,194,181,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,34,202,139,58,88,239,191,189,2,239,191,189,239,191,189,239,191,189,81,23,239,191,189,64,239,191,189,239,191,189,239,191,189,15,15,239,191,189,43,112,239,191,189,239,191,189,239,191,189,35,54,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,62,59,96,49,239,191,189,96,63,68,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,85,52,239,191,189,78,239,191,189,30,48,104,97,239,191,189,65,111,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,25,85,87,76,239,191,189,113,239,191,189,43,239,191,189,53,239,191,189,33,19,239,191,189,36,239,191,189,64,81,209,159,97,239,191,189,96,239,191,189,35,23,239,191,189,239,191,189,239,191,189,91,59,239,191,189,119,79,11,58,239,191,189,72,121,239,191,189,93,239,191,189,3,15,239,191,189,20,58,239,191,189,116,239,191,189,239,191,189,239,191,189,88,40,239,191,189,100,202,140,90,239,191,189,239,191,189,218,140,239,191,189,239,191,189,81,24,239,191,189,75,239,191,189,239,191,189,37,221,148,239,191,189,239,191,189,115,239,191,189,2,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,30,38,22,239,191,189,42,51,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,0,239,191,189,34,239,191,189,40,16,3,239,191,189,122,239,191,189,94,118,86,6,87,52,121,239,191,189,32,239,191,189,239,191,189,126,42,1,239,191,189,33,94,239,191,189,239,191,189,227,187,166,118,239,191,189,63,239,191,189,66,96,239,191,189,239,191,189,242,163,146,184,95,239,191,189,44,239,191,189,85,239,191,189,239,191,189,207,153,239,191,189,239,191,189,239,191,189,32,239,191,189,7,239,191,189,104,36,239,191,189,216,184,239,191,189,106,239,191,189,24,239,191,189,55,239,191,189,119,51,239,191,189,218,151,73,239,191,189,77,50,5,70,98,239,191,189,239,191,189,239,191,189,58,2,239,191,189,120,100,89,239,191,189,66,239,191,189,12,239,191,189,239,191,189,96,105,239,191,189,125,239,191,189,73,67,87,102,207,168,0,239,191,189,77,239,191,189,127,98,239,191,189,52,239,191,189,239,191,189,34,48,127,112,35,239,191,189,65,239,191,189,239,191,189,20,239,191,189,239,191,189,74,48,228,135,136,239,191,189,25,239,191,189,127,118,106,89,239,191,189,239,191,189,23,239,191,189,119,239,191,189,239,191,189,216,190,29,61,56,42,12,239,191,189,119,1,239,191,189,116,239,191,189,239,191,189,34,239,191,189,28,239,191,189,239,191,189,239,191,189,80,26,97,98,239,191,189,239,191,189,37})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9b26a7ac",
                        container: "containers14f4ddebd24f463889808b8e47221446",
                        blob: "Blobb891832925b7420c95c7370eed468568",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03268 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03268_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03268_s.txt", Encoding.UTF8);

    public Test03268() : base(recordedRequest, recordedResponse, "accounts8d439fe9b84f51d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9b84f51d",
                        container: "containers6444553fc96a4181bfda45f3c0a04a47",
                        blob: "Blobd96cfea672824f328a65eabb1a4c71f0",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03165 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03165_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03165_s.txt", Encoding.UTF8);

    public Test03165() : base(recordedRequest, recordedResponse, "accounts8d439fe9a35b63a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,0,239,191,189,41,239,191,189,26,40,19,58,239,191,189,239,191,189,239,191,189,200,162,85,239,191,189,239,191,189,204,182,45,114,124,38,108,0,23,239,191,189,22,5,239,191,189,239,191,189,199,148,1,239,191,189,205,178,239,191,189,239,191,189,41,104,12,107,198,149,239,191,189,239,191,189,239,191,189,92,99,57,41,217,190,40,239,191,189,90,40,239,191,189,239,191,189,17,14,126,239,191,189,50,76,239,191,189,199,135,40,239,191,189,56,11,3,10,111,239,191,189,239,191,189,106,239,191,189,239,191,189,82,239,191,189,88,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,87,239,191,189,239,191,189,22,24,89,239,191,189,127,239,191,189,73,239,191,189,239,191,189,60,52,239,191,189,0,29,214,179,239,191,189,31,239,191,189,239,191,189,5,239,191,189,239,191,189,101,37,85,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,14,58,239,191,189,239,191,189,239,191,189,59,17,32,239,191,189,60,21,116,208,150,239,191,189,239,191,189,239,191,189,211,162,13,239,191,189,239,191,189,89,239,191,189,104,41,239,191,189,239,191,189,57,239,191,189,239,191,189,99,121,239,191,189,40,239,191,189,3,239,191,189,227,163,157,51,88,239,191,189,239,191,189,85,239,191,189,20,239,191,189,239,191,189,28,239,191,189,45,1,66,115,239,191,189,239,191,189,120,18,17,104,239,191,189,239,191,189,109,17,86,239,191,189,87,239,191,189,239,191,189,32,239,191,189,239,191,189,112,239,191,189,40,239,191,189,4,19,106,239,191,189,12,68,239,191,189,239,191,189,54,120,239,191,189,239,191,189,89,71,95,209,146,52,239,191,189,239,191,189,60,239,191,189,239,191,189,238,188,178,105,239,191,189,239,191,189,46,239,191,189,124,75,239,191,189,101,239,191,189,37,92,84,1,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,68,239,191,189,30,108,59,42,96,114,38,20,124,47,90,218,147,21,7,239,191,189,7,105,119,239,191,189,239,191,189,42,108,239,191,189,70,198,181,3,32,239,191,189,26,18,37,59,239,191,189,239,191,189,86,82,239,191,189,112,239,191,189,80,42,239,191,189,1,122,110,114,239,191,189,239,191,189,69,56,40,239,191,189,239,191,189,239,191,189,0,98,228,153,189,34,239,191,189,239,191,189,20,72,239,191,189,87,98,70,239,191,189,239,191,189,127,7,0,239,191,189,239,191,189,118,239,191,189,239,191,189,88,67,47,40,92,239,191,189,239,191,189,113,117,239,191,189,239,191,189,239,191,189,109,81,239,191,189,109,92,80,239,191,189,239,191,189,22,15,239,191,189,103,239,191,189,239,191,189,33,239,191,189,28,239,191,189,239,191,189,239,191,189,24,64,122,239,191,189,239,191,189,125,51,94,66,225,164,132,239,191,189,71,46,84,239,191,189,77,239,191,189,239,191,189,30,6,66,51,239,191,189,239,191,189,239,191,189,40,200,190,89,239,191,189,55,104,85,16,56,122,239,191,189,210,174,91,239,191,189,52,107,8,239,191,189,73,239,191,189,239,191,189,33,239,191,189,70,239,191,189,108,17,239,191,189,70,80,11,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,77,52,239,191,189,29,27,23,239,191,189,239,191,189,239,191,189,195,132,13,200,153,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,68,17,239,191,189,42,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,87,109,239,191,189,9,17,105,15,239,191,189,239,191,189,239,191,189,125,239,191,189,20,46,109,239,191,189,239,191,189,239,191,189,89,11,56,239,191,189,11,41,239,191,189,56,239,191,189,66,239,191,189,239,191,189,96,57,239,191,189,97,43,47,76,239,191,189,121,25,50,82})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9a35b63a",
                        container: "containersf2e80549639e45b9addf7f4269d763fe",
                        blob: "Blob970c706d776846fa95f49210c9438699",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03228 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03228_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03228_s.txt", Encoding.UTF8);

    public Test03228() : base(recordedRequest, recordedResponse, "accounts8d439fe9afc3bf7")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9afc3bf7",
                        container: "containersb4aeb786c7a440ba9e210a9197b4d316",
                        blob: "Blob0899b103db1f43e287323f157e18d987",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03198 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03198_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03198_s.txt", Encoding.UTF8);

    public Test03198() : base(recordedRequest, recordedResponse, "accounts8d439fe9aa9fcb1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{2,54,239,191,189,227,148,159,117,239,191,189,237,159,168,93,239,191,189,239,191,189,58,82,65,239,191,189,11,106,68,239,191,189,125,239,191,189,88,239,191,189,239,191,189,239,191,189,63,1,76,84,46,239,191,189,239,191,189,239,191,189,6,32,95,239,191,189,239,191,189,3,239,191,189,50,239,191,189,22,53,239,191,189,51,127,87,19,239,191,189,239,191,189,239,191,189,69,56,239,191,189,60,239,191,189,239,191,189,28,74,239,191,189,82,84,46,239,191,189,59,239,191,189,76,33,102,51,239,191,189,64,22,75,51,66,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,63,122,19,239,191,189,36,194,185,239,191,189,239,191,189,105,239,191,189,56,239,191,189,239,191,189,51,53,239,191,189,97,20,126,47,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,66,26,239,191,189,239,191,189,22,239,191,189,12,56,60,239,191,189,15,201,135,40,107,239,191,189,90,124,74,239,191,189,239,191,189,116,239,191,189,93,120,103,15,239,191,189,84,239,191,189,88,72,47,239,191,189,239,191,189,239,191,189,71,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,81,75,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,205,142,55,39,239,191,189,239,191,189,127,239,191,189,82,15,239,191,189,239,191,189,87,124,239,191,189,239,191,189,18,90,239,191,189,86,239,191,189,123,239,191,189,11,45,112,8,10,96,74,42,239,191,189,239,191,189,50,239,191,189,55,239,191,189,31,114,239,191,189,31,23,239,191,189,239,191,189,202,159,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,46,106,81,239,191,189,44,239,191,189,63,239,191,189,117,239,191,189,8,239,191,189,222,189,37,239,191,189,110,89,239,191,189,239,191,189,239,191,189,54,122,213,185,112,99,239,191,189,126,46,97,239,191,189,3,1,239,191,189,199,140,68,112,37,51,210,170,239,191,189,239,191,189,239,191,189,239,191,189,12,121,239,191,189,110,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,124,57,239,191,189,239,191,189,110,100,70,33,75,239,191,189,239,191,189,39,94,17,42,239,191,189,205,181,33,239,191,189,239,191,189,56,239,191,189,239,191,189,86,87,239,191,189,239,191,189,239,191,189,35,239,191,189,30,239,191,189,239,191,189,16,11,239,191,189,239,191,189,239,191,189,109,100,114,80,25,239,191,189,239,191,189,26,239,191,189,67,239,191,189,204,137,239,191,189,108,10,67,122,8,64,22,211,134,101,40,28,239,191,189,239,191,189,239,191,189,1,31,53,62,239,191,189,39,115,239,191,189,239,191,189,113,60,239,191,189,124,0,86,60,92,49,239,191,189,204,144,239,191,189,78,239,191,189,239,191,189,239,191,189,12,40,239,191,189,34,90,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,14,69,239,191,189,91,239,191,189,53,239,191,189,239,191,189,28,10,100,239,191,189,239,191,189,97,89,239,191,189,52,239,191,189,239,191,189,239,191,189,66,25,73,102,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,87,122,201,163,77,239,191,189,54,113,239,191,189,119,126,239,191,189,125,211,167,86,28,239,191,189,1,216,164,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,47,239,191,189,47,239,191,189,239,191,189,49,62,239,191,189,239,191,189,8,61,19,109,239,191,189,239,191,189,239,191,189,17,113,110,239,191,189,118,239,191,189,105,239,191,189,239,191,189,20,239,191,189,57,239,191,189,124,44,76,89,239,191,189,6,214,137,239,191,189,197,162,63,32,239,191,189,77,223,173,239,191,189,84,239,191,189,239,191,189,239,191,189,42,239,191,189,89,239,191,189,113,49,239,191,189,239,191,189,239,191,189,97,5})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9aa9fcb1",
                        container: "containers70c93840c1c64ae7b778d12db3edbbc4",
                        blob: "Blob17c3ae63a34649b3a800b7084fd69525",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03427 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03427_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03427_s.txt", Encoding.UTF8);

    public Test03427() : base(recordedRequest, recordedResponse, "accounts8d439fe9d715f0e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9d715f0e",
                        container: "containerse52dfb7bc2664a7cbfc9d98e18532a74",
                        blob: "Blob3a744a9dc878464fba9c1100733b201b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03302 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03302_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03302_s.txt", Encoding.UTF8);

    public Test03302() : base(recordedRequest, recordedResponse, "accounts8d439fe9bf73fa8")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9bf73fa8",
                        container: "containerse78de51da70e442495a0ee51963a4681",
                        blob: "Bloba6fdfb47508d4d4c8f6efe192176a9b0",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03119 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03119_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03119_s.txt", Encoding.UTF8);

    public Test03119() : base(recordedRequest, recordedResponse, "accounts8d439fe99c0ac6f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe99c0ac6f",
                        container: "containers910c3d20cd344893892e3f22a09a4261",
                        blob: "Blobbcda813f22634a7cb399677251807964",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03507 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03507_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03507_s.txt", Encoding.UTF8);

    public Test03507() : base(recordedRequest, recordedResponse, "accounts8d439fe9e5cd22e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9e5cd22e",
                        container: "containerse9b303392d8947bd8c3546246a6acb71",
                        blob: "Blobb8f84633f41449ad956e1b1adc427628",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03159 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03159_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03159_s.txt", Encoding.UTF8);

    public Test03159() : base(recordedRequest, recordedResponse, "accounts8d439fe9a35b63a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9a35b63a",
                        container: "containers9d79dac8a9584dbc94fe69cc9d197197",
                        blob: "Blob0358aa86c4984c9889dd36db7ab84ca5",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03579 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03579_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03579_s.txt", Encoding.UTF8);

    public Test03579() : base(recordedRequest, recordedResponse, "accounts8d439fe9f49f2ff")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9f49f2ff",
                        container: "containers6cdaf31762b74533b306956c2a74b1d6",
                        blob: "Blobb353d3c412a5401f95c30361b6f523c1",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03604 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03604_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03604_s.txt", Encoding.UTF8);

    public Test03604() : base(recordedRequest, recordedResponse, "accounts8d439fe9f9f6698")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9f9f6698",
                        container: "containersb8856378c17f41d5ae0e76c48cdda490",
                        blob: "Blob95df624f77b44d829d3778ba387d8295",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03382 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03382_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03382_s.txt", Encoding.UTF8);

    public Test03382() : base(recordedRequest, recordedResponse, "accounts8d439fe9ce1530a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{14,55,239,191,189,213,185,239,191,189,239,191,189,30,69,239,191,189,48,105,205,190,239,191,189,239,191,189,53,16,43,106,68,124,106,239,191,189,239,191,189,97,239,191,189,239,191,189,69,10,30,239,191,189,106,121,34,127,239,191,189,68,239,191,189,239,191,189,119,239,191,189,83,86,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,46,15,239,191,189,239,191,189,239,191,189,72,65,88,239,191,189,17,239,191,189,59,239,191,189,239,191,189,239,191,189,83,239,191,189,63,239,191,189,239,191,189,89,239,191,189,239,191,189,125,40,19,239,191,189,124,55,239,191,189,94,120,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,94,239,191,189,101,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,94,23,239,191,189,213,136,239,191,189,104,105,239,191,189,87,239,191,189,219,167,34,121,194,186,57,79,239,191,189,12,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,104,239,191,189,239,191,189,86,239,191,189,71,239,191,189,26,239,191,189,239,191,189,44,38,239,191,189,70,96,239,191,189,28,67,115,86,239,191,189,196,164,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,89,81,102,239,191,189,239,191,189,81,239,191,189,50,239,191,189,78,102,239,191,189,239,191,189,239,191,189,119,239,191,189,74,27,239,191,189,119,44,7,23,239,191,189,239,191,189,97,40,64,37,239,191,189,83,205,166,239,191,189,107,239,191,189,203,177,65,108,81,118,61,63,239,191,189,59,239,191,189,34,98,33,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,40,239,191,189,63,24,239,191,189,10,34,239,191,189,218,153,239,191,189,77,38,239,191,189,239,191,189,215,144,239,191,189,103,5,239,191,189,3,194,150,45,203,166,124,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,78,239,191,189,0,239,191,189,76,239,191,189,239,191,189,124,71,84,239,191,189,82,239,191,189,239,191,189,37,2,64,80,105,239,191,189,239,191,189,36,239,191,189,239,191,189,35,100,239,191,189,45,239,191,189,104,239,191,189,52,103,65,215,184,54,119,5,97,239,191,189,110,239,191,189,239,191,189,23,34,87,239,191,189,239,191,189,239,191,189,7,239,191,189,113,41,239,191,189,86,239,191,189,40,239,191,189,89,78,102,239,191,189,122,239,191,189,127,28,239,191,189,42,239,191,189,26,239,191,189,30,104,239,191,189,239,191,189,15,11,65,78,119,39,46,96,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,13,239,191,189,19,85,239,191,189,56,43,239,191,189,6,115,239,191,189,49,115,21,56,82,239,191,189,17,96,239,191,189,29,73,11,239,191,189,63,106,25,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,12,6,10,11,18,239,191,189,239,191,189,239,191,189,115,59,239,191,189,239,191,189,239,191,189,239,191,189,75,123,113,125,239,191,189,32,239,191,189,239,191,189,59,21,107,30,47,239,191,189,40,60,239,191,189,117,102,15,45,70,239,191,189,99,239,191,189,239,191,189,239,191,189,13,48,239,191,189,74,239,191,189,206,128,75,95,239,191,189,239,191,189,239,191,189,28,100,106,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,18,239,191,189,11,127,84,60,78,42,239,191,189,55,126,239,191,189,70,239,191,189,112,80,203,188,80,239,191,189,239,191,189,200,159,86,239,191,189,73,239,191,189,239,191,189,118,239,191,189,33,2,69,17,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,50,32,239,191,189,101,12,239,191,189,239,191,189,239,191,189,239,191,189,126,49,239,191,189,79,5,6,73,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ce1530a",
                        container: "containers4f09fd6319d842afbd677897c8f072c0",
                        blob: "Blobe6f7d1b5401e44578e79f58591e3ebf5",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03462 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03462_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03462_s.txt", Encoding.UTF8);

    public Test03462() : base(recordedRequest, recordedResponse, "accounts8d439fe9dc28ce3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,58,110,24,84,118,91,45,239,191,189,85,239,191,189,239,191,189,123,35,220,184,32,239,191,189,125,75,28,67,209,137,239,191,189,74,45,239,191,189,105,78,239,191,189,19,60,17,239,191,189,39,239,191,189,33,239,191,189,239,191,189,239,191,189,25,239,191,189,40,239,191,189,87,122,61,76,57,72,8,59,239,191,189,239,191,189,122,105,239,191,189,106,10,72,239,191,189,239,191,189,125,239,191,189,126,239,191,189,105,42,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,2,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,105,48,6,239,191,189,215,173,47,125,239,191,189,8,239,191,189,239,191,189,59,49,85,13,126,86,239,191,189,16,19,239,191,189,109,74,37,66,27,239,191,189,194,191,48,19,58,89,60,239,191,189,119,5,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,70,239,191,189,66,239,191,189,239,191,189,43,93,239,191,189,239,191,189,239,191,189,239,191,189,195,187,126,239,191,189,239,191,189,80,239,191,189,239,191,189,216,164,239,191,189,239,191,189,239,191,189,194,150,120,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,3,54,239,191,189,239,191,189,49,23,239,191,189,239,191,189,109,123,125,105,207,187,239,191,189,17,103,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,77,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,117,52,25,239,191,189,71,15,239,191,189,30,239,191,189,106,5,55,61,100,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,117,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,71,4,239,191,189,36,126,239,191,189,7,53,239,191,189,3,63,2,239,191,189,239,191,189,77,239,191,189,239,191,189,106,239,191,189,118,239,191,189,239,191,189,55,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,90,86,72,101,46,214,159,239,191,189,224,185,171,92,85,60,216,178,239,191,189,239,191,189,31,40,22,239,191,189,239,191,189,6,51,239,191,189,79,239,191,189,32,21,223,148,8,239,191,189,91,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,4,4,239,191,189,78,25,108,239,191,189,95,14,115,239,191,189,239,191,189,239,191,189,119,239,191,189,96,66,49,101,239,191,189,239,191,189,104,239,191,189,239,191,189,23,84,239,191,189,239,191,189,44,239,191,189,239,191,189,35,41,122,17,239,191,189,68,239,191,189,26,92,239,191,189,109,18,239,191,189,239,191,189,49,47,239,191,189,75,239,191,189,107,26,111,219,156,57,239,191,189,55,196,190,239,191,189,50,82,117,217,181,92,102,239,191,189,27,239,191,189,23,8,239,191,189,100,86,41,239,191,189,97,35,127,5,239,191,189,6,239,191,189,8,239,191,189,239,191,189,117,239,191,189,108,239,191,189,85,239,191,189,239,191,189,59,239,191,189,45,9,0,239,191,189,239,191,189,45,48,42,84,17,125,119,69,16,239,191,189,213,161,63,239,191,189,81,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,9,239,191,189,106,55,41,239,191,189,239,191,189,239,191,189,96,78,239,191,189,216,176,239,191,189,62,239,191,189,61,39,48,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,115,74,57,5,22,239,191,189,27,239,191,189,33,239,191,189,239,191,189,69,77,239,191,189,20,239,191,189,117,82,239,191,189,239,191,189,239,191,189,112,239,191,189,217,189,239,191,189,239,191,189,239,191,189,35,94,13,12,82,64,35,239,191,189,239,191,189,91,56,221,188,46,239,191,189,239,191,189,79,239,191,189,218,130,118,239,191,189,53,97,239,191,189,239,191,189,71,3,239,191,189,95,71,239,191,189,25,239,191,189,93,195,133,239,191,189,239,191,189,13})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9dc28ce3",
                        container: "containers7fbfc5c90cc2471a90e093de556afd6b",
                        blob: "Blob8f5eef7561174628a0ca6d23d4ad6c66",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03342 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03342_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03342_s.txt", Encoding.UTF8);

    public Test03342() : base(recordedRequest, recordedResponse, "accounts8d439fe9c737541")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9c737541",
                        container: "containers36d40b064337442aa7e832cafbc4538e",
                        blob: "Blob0b736f4dc07f496bb6577e31529a43d0",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03034 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03034_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03034_s.txt", Encoding.UTF8);

    public Test03034() : base(recordedRequest, recordedResponse, "accounts8d439fe98deaf49")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{43,239,191,189,239,191,189,239,191,189,77,239,191,189,106,239,191,189,100,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,52,201,178,239,191,189,53,239,191,189,70,239,191,189,215,170,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,70,77,239,191,189,239,191,189,239,191,189,2,239,191,189,55,93,208,129,239,191,189,239,191,189,67,24,124,239,191,189,239,191,189,98,239,191,189,25,113,239,191,189,126,239,191,189,220,186,239,191,189,239,191,189,102,76,113,31,239,191,189,239,191,189,63,239,191,189,239,191,189,49,20,122,239,191,189,100,4,239,191,189,239,191,189,77,103,239,191,189,38,120,239,191,189,74,239,191,189,45,219,190,2,39,38,239,191,189,60,105,105,52,53,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,77,95,239,191,189,13,239,191,189,239,191,189,52,239,191,189,83,83,239,191,189,239,191,189,39,66,109,239,191,189,239,191,189,239,191,189,117,11,26,62,23,239,191,189,239,191,189,105,239,191,189,95,239,191,189,239,191,189,86,54,6,239,191,189,125,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,122,239,191,189,13,239,191,189,239,191,189,16,87,38,203,164,51,33,239,191,189,18,239,191,189,117,99,47,239,191,189,239,191,189,119,239,191,189,239,191,189,43,239,191,189,239,191,189,221,133,239,191,189,239,191,189,115,114,85,123,239,191,189,48,91,67,221,154,118,47,107,98,239,191,189,92,21,239,191,189,7,239,191,189,239,191,189,103,239,191,189,99,37,239,191,189,14,239,191,189,201,169,51,209,160,72,48,239,191,189,239,191,189,4,239,191,189,239,191,189,25,32,82,13,14,71,76,45,98,105,239,191,189,33,126,239,191,189,239,191,189,12,115,239,191,189,86,239,191,189,34,121,122,51,103,239,191,189,239,191,189,34,50,7,239,191,189,16,41,68,239,191,189,111,21,239,191,189,85,239,191,189,118,239,191,189,127,95,239,191,189,17,83,239,191,189,84,35,76,218,174,213,160,239,191,189,239,191,189,30,239,191,189,105,239,191,189,41,239,191,189,91,217,177,239,191,189,57,66,239,191,189,239,191,189,239,191,189,239,191,189,120,71,65,239,191,189,26,75,86,80,239,191,189,239,191,189,14,239,191,189,239,191,189,98,84,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,37,76,239,191,189,36,239,191,189,53,25,26,239,191,189,239,191,189,45,239,191,189,63,53,239,191,189,95,239,191,189,239,191,189,239,191,189,79,24,239,191,189,91,239,191,189,35,79,239,191,189,239,191,189,76,239,191,189,0,54,239,191,189,83,239,191,189,91,213,147,21,61,54,64,239,191,189,239,191,189,239,191,189,118,44,239,191,189,69,80,61,35,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,99,239,191,189,117,239,191,189,57,19,45,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,18,239,191,189,91,12,239,191,189,239,191,189,34,239,191,189,79,239,191,189,126,239,191,189,59,239,191,189,32,9,99,81,48,47,199,177,7,239,191,189,92,239,191,189,74,51,65,239,191,189,69,102,239,191,189,239,191,189,239,191,189,239,191,189,212,181,196,151,53,60,239,191,189,80,88,239,191,189,194,137,239,191,189,126,200,141,74,49,239,191,189,112,88,83,239,191,189,216,170,14,124,57,117,82,239,191,189,116,119,125,122,107,48,123,239,191,189,86,99,4,53,239,191,189,239,191,189,239,191,189,1,125,217,157,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,92,239,191,189,6,239,191,189,36,21,40,1,77,34,26,239,191,189,239,191,189,25,239,191,189,78,239,191,189,79,0})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe98deaf49",
                        container: "containersb68148f20da54ae4b9f4875beb30763a",
                        blob: "Blob5a0d7722f99e4e16a204914e5f4064b6",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03319 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03319_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03319_s.txt", Encoding.UTF8);

    public Test03319() : base(recordedRequest, recordedResponse, "accounts8d439fe9c13c870")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,30,239,191,189,30,239,191,189,73,222,136,239,191,189,239,191,189,37,194,190,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,5,41,239,191,189,239,191,189,239,191,189,33,125,14,239,191,189,69,52,239,191,189,58,239,191,189,43,239,191,189,117,239,191,189,1,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,92,239,191,189,87,239,191,189,73,239,191,189,50,58,239,191,189,239,191,189,78,239,191,189,64,239,191,189,7,102,9,239,191,189,14,239,191,189,239,191,189,69,239,191,189,100,40,239,191,189,61,38,89,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,211,190,43,239,191,189,207,149,207,191,20,239,191,189,239,191,189,91,79,78,239,191,189,98,121,38,39,23,57,239,191,189,109,239,191,189,11,239,191,189,239,191,189,94,239,191,189,94,85,239,191,189,18,239,191,189,74,239,191,189,54,239,191,189,61,118,239,191,189,79,45,33,239,191,189,239,191,189,10,7,31,67,62,239,191,189,198,188,239,191,189,29,239,191,189,66,195,180,239,191,189,97,239,191,189,239,191,189,99,239,191,189,60,239,191,189,239,191,189,239,191,189,67,78,239,191,189,112,239,191,189,114,76,239,191,189,52,239,191,189,239,191,189,62,77,32,239,191,189,239,191,189,86,239,191,189,45,239,191,189,239,191,189,21,239,191,189,239,191,189,103,203,145,239,191,189,48,239,191,189,78,99,84,0,239,191,189,239,191,189,37,75,60,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,34,55,124,239,191,189,239,191,189,239,191,189,9,117,239,191,189,80,56,96,239,191,189,9,239,191,189,225,142,130,239,191,189,239,191,189,239,191,189,239,191,189,76,47,239,191,189,239,191,189,11,117,239,191,189,102,99,239,191,189,239,191,189,239,191,189,68,239,191,189,21,239,191,189,98,239,191,189,69,239,191,189,97,239,191,189,239,191,189,120,38,65,99,239,191,189,239,191,189,13,239,191,189,85,78,56,239,191,189,76,23,15,219,147,239,191,189,236,178,180,58,239,191,189,68,203,160,31,239,191,189,66,239,191,189,239,191,189,239,191,189,120,64,239,191,189,239,191,189,18,239,191,189,239,191,189,86,239,191,189,86,117,12,239,191,189,239,191,189,239,191,189,83,217,177,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,123,30,239,191,189,66,239,191,189,15,19,239,191,189,239,191,189,77,239,191,189,239,191,189,119,17,239,191,189,56,9,239,191,189,32,94,196,184,239,191,189,2,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,115,123,239,191,189,78,239,191,189,64,104,239,191,189,66,239,191,189,93,92,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,44,239,191,189,102,39,194,131,239,191,189,119,33,3,239,191,189,4,239,191,189,115,96,91,239,191,189,194,141,124,239,191,189,46,239,191,189,27,239,191,189,91,62,13,239,191,189,239,191,189,67,96,239,191,189,233,173,142,21,239,191,189,239,191,189,112,239,191,189,239,191,189,70,127,239,191,189,239,191,189,100,233,148,163,15,5,239,191,189,69,2,239,191,189,70,74,45,103,68,239,191,189,48,239,191,189,33,31,16,239,191,189,239,191,189,69,72,55,29,239,191,189,0,239,191,189,30,91,52,239,191,189,85,120,41,239,191,189,62,239,191,189,239,191,189,239,191,189,72,239,191,189,86,35,43,239,191,189,30,22,239,191,189,239,191,189,239,191,189,83,36,239,191,189,94,239,191,189,205,133,239,191,189,1,22,40,239,191,189,239,191,189,112,239,191,189,117,239,191,189,79,239,191,189,99,239,191,189,41,21,239,191,189,121,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,25,112,56,22,239,191,189,32,239,191,189,93,239,191,189,60,92,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9c13c870",
                        container: "containers7b4d214e93fe4a7db19fa3cd9d0f8813",
                        blob: "Blobd4fd81429c5c4cf0aba6e2134de7e71c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03212 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03212_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03212_s.txt", Encoding.UTF8);

    public Test03212() : base(recordedRequest, recordedResponse, "accounts8d439fe9ac63781")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,49,72,77,80,67,239,191,189,27,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,194,162,239,191,189,239,191,189,43,123,118,124,71,17,239,191,189,0,27,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,30,51,74,41,13,2,239,191,189,123,239,191,189,52,239,191,189,239,191,189,17,90,239,191,189,239,191,189,127,38,239,191,189,56,239,191,189,55,239,191,189,80,39,219,173,239,191,189,239,191,189,46,86,239,191,189,103,239,191,189,88,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,220,160,98,38,239,191,189,19,239,191,189,239,191,189,76,239,191,189,31,239,191,189,73,19,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,2,87,17,87,103,239,191,189,239,191,189,50,90,36,239,191,189,0,239,191,189,60,239,191,189,239,191,189,208,129,68,68,32,239,191,189,77,239,191,189,44,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,103,17,101,239,191,189,239,191,189,85,124,68,23,239,191,189,64,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,36,239,191,189,239,191,189,12,62,239,191,189,55,25,9,239,191,189,118,239,191,189,63,239,191,189,21,58,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,84,60,45,239,191,189,239,191,189,40,114,239,191,189,239,191,189,239,191,189,12,239,191,189,23,214,140,40,83,45,239,191,189,239,191,189,239,191,189,6,78,239,191,189,51,43,239,191,189,115,103,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,17,49,87,239,191,189,126,239,191,189,50,239,191,189,239,191,189,100,239,191,189,96,52,239,191,189,54,0,121,78,239,191,189,85,88,239,191,189,239,191,189,239,191,189,239,191,189,75,36,34,120,100,77,239,191,189,22,33,239,191,189,239,191,189,84,45,239,191,189,84,239,191,189,96,45,49,239,191,189,7,119,46,239,191,189,55,57,58,239,191,189,216,163,94,239,191,189,24,51,239,191,189,15,90,239,191,189,22,29,73,19,239,191,189,97,239,191,189,75,198,154,239,191,189,239,191,189,239,191,189,97,102,125,239,191,189,239,191,189,110,65,43,18,239,191,189,90,73,50,117,239,191,189,21,84,127,239,191,189,5,239,191,189,26,122,239,191,189,100,90,82,239,191,189,239,191,189,116,71,13,239,191,189,28,239,191,189,49,239,191,189,95,222,160,25,109,3,66,239,191,189,201,161,239,191,189,239,191,189,54,114,26,24,239,191,189,239,191,189,71,239,191,189,110,239,191,189,28,239,191,189,61,239,191,189,239,191,189,76,105,21,120,239,191,189,122,239,191,189,239,191,189,239,191,189,39,22,56,207,154,239,191,189,102,239,191,189,239,191,189,1,44,239,191,189,239,191,189,42,239,191,189,68,239,191,189,239,191,189,65,239,191,189,100,48,101,239,191,189,239,191,189,96,239,191,189,115,99,239,191,189,125,121,34,7,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,104,87,125,239,191,189,239,191,189,70,239,191,189,3,95,113,239,191,189,239,191,189,239,191,189,239,191,189,44,58,45,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,29,94,239,191,189,75,239,191,189,239,191,189,69,74,226,160,176,28,30,122,26,239,191,189,239,191,189,239,191,189,127,41,194,152,239,191,189,239,191,189,223,137,25,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,0,239,191,189,59,76,239,191,189,69,239,191,189,88,239,191,189,66,28,239,191,189,9,239,191,189,32,99,239,191,189,6,103,41,239,191,189,239,191,189,12,108,32,239,191,189,239,191,189,239,191,189,73,21,115,102,109,239,191,189,25,15,69,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ac63781",
                        container: "containersb0cb7f145ada40b99f842d50ba240c22",
                        blob: "Blobd7fd6fdfad98417bb0b366322ef592a3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03416 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03416_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03416_s.txt", Encoding.UTF8);

    public Test03416() : base(recordedRequest, recordedResponse, "accounts8d439fe9d5635d7")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9d5635d7",
                        container: "containers36d4893fc8664074b1719ce34605f1d8",
                        blob: "Blob941b28234f794d639ee10b645e943f1c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03496 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03496_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03496_s.txt", Encoding.UTF8);

    public Test03496() : base(recordedRequest, recordedResponse, "accounts8d439fe9e38f637")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9e38f637",
                        container: "containers1007d8ebbc1d496eb19623b0770e8237",
                        blob: "Blobee84f54db9bb41bf98eb283226ba5363",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03376 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03376_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03376_s.txt", Encoding.UTF8);

    public Test03376() : base(recordedRequest, recordedResponse, "zrdfepirv28d439fe9ce71f8")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "zrdfepirv28d439fe9ce71f8",
                        container: "containers84ced2b0bdd147939c38abc94593567a",
                        blob: "Bloba5a70e4d575942f9bcfa04ac1b95dc4b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03955 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03955_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03955_s.txt", Encoding.UTF8);

    public Test03955() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0bf941161e36471c80ee05e60c3fc0d9",
                        blob: "PageBlob28a5d18b341f4a079930397e9e42fc4e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03202 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03202_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03202_s.txt", Encoding.UTF8);

    public Test03202() : base(recordedRequest, recordedResponse, "accounts8d439fe9aa9fcb1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{125,239,191,189,75,31,239,191,189,239,191,189,92,85,1,28,239,191,189,64,239,191,189,123,87,0,239,191,189,1,99,0,107,239,191,189,239,191,189,239,191,189,90,33,65,57,47,79,113,239,191,189,239,191,189,23,239,191,189,239,191,189,116,239,191,189,126,29,239,191,189,47,111,21,239,191,189,86,35,239,191,189,239,191,189,239,191,189,218,141,239,191,189,16,239,191,189,70,103,197,138,239,191,189,34,37,239,191,189,239,191,189,239,191,189,77,105,239,191,189,97,239,191,189,197,131,70,3,59,38,239,191,189,239,191,189,4,239,191,189,91,239,191,189,63,114,239,191,189,97,56,6,239,191,189,13,6,239,191,189,239,191,189,10,239,191,189,106,62,8,239,191,189,66,76,99,23,87,70,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,46,239,191,189,239,191,189,63,19,90,20,98,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,40,49,104,37,239,191,189,239,191,189,68,25,63,239,191,189,90,63,26,239,191,189,50,46,239,191,189,239,191,189,70,103,101,67,36,126,87,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,89,200,147,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,72,21,87,9,239,191,189,239,191,189,64,239,191,189,48,239,191,189,239,191,189,239,191,189,119,39,77,239,191,189,12,239,191,189,239,191,189,239,191,189,8,236,138,166,239,191,189,1,119,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,31,79,239,191,189,27,239,191,189,239,191,189,239,191,189,97,39,9,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,110,239,191,189,10,239,191,189,91,239,191,189,239,191,189,18,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,81,50,239,191,189,7,239,191,189,239,191,189,239,191,189,80,75,37,239,191,189,196,129,239,191,189,2,31,239,191,189,64,74,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,60,8,239,191,189,39,239,191,189,194,134,89,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,30,118,239,191,189,20,239,191,189,9,239,191,189,16,195,132,121,84,239,191,189,73,239,191,189,127,46,68,57,239,191,189,239,191,189,35,60,239,191,189,61,40,58,63,51,62,239,191,189,239,191,189,82,72,48,206,178,44,239,191,189,83,239,191,189,239,191,189,111,110,239,191,189,15,239,191,189,67,239,191,189,84,14,239,191,189,239,191,189,82,239,191,189,48,89,239,191,189,208,144,70,239,191,189,239,191,189,87,0,122,239,191,189,124,24,125,104,239,191,189,239,191,189,118,97,24,88,239,191,189,117,239,191,189,234,165,150,239,191,189,239,191,189,37,239,191,189,239,191,189,218,165,39,98,92,239,179,133,14,103,239,191,189,65,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,220,186,239,191,189,239,191,189,85,239,191,189,27,92,239,191,189,21,239,191,189,60,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,67,35,239,191,189,239,191,189,239,191,189,9,239,191,189,106,51,239,191,189,88,25,239,191,189,239,191,189,11,73,239,191,189,239,191,189,18,79,83,71,0,89,239,191,189,239,191,189,239,191,189,239,191,189,6,70,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,99,105,239,191,189,61,239,191,189,239,191,189,86,239,191,189,66,50,107,239,191,189,115,117,239,191,189,35,239,191,189,36,24,55,38,100,239,191,189,105,81,239,191,189,77,93,74,208,190,83,239,191,189,239,191,189,95,81,27,239,191,189,239,191,189,123,58,239,191,189,20,239,191,189,95,84,239,191,189,239,191,189,239,191,189,123,239,191,189,3,239,191,189,61,4,239,191,189,239,191,189,212,171,45,9,51,239,191,189,98})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9aa9fcb1",
                        container: "containers70c93840c1c64ae7b778d12db3edbbc4",
                        blob: "Blob17c3ae63a34649b3a800b7084fd69525",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03074 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03074_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03074_s.txt", Encoding.UTF8);

    public Test03074() : base(recordedRequest, recordedResponse, "accounts8d439fe9941dec3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,196,162,76,239,191,189,36,52,12,239,191,189,107,40,239,191,189,13,110,122,239,191,189,239,191,189,239,191,189,104,81,112,61,239,191,189,5,239,191,189,96,239,191,189,14,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,99,239,191,189,75,239,191,189,46,39,68,239,191,189,239,191,189,95,80,9,81,76,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,14,239,191,189,239,191,189,57,48,239,191,189,239,191,189,44,117,239,191,189,18,30,239,191,189,23,239,191,189,99,93,57,41,43,239,191,189,239,191,189,239,191,189,71,87,239,191,189,75,123,239,191,189,239,191,189,239,191,189,31,63,26,85,65,239,191,189,94,239,191,189,239,191,189,70,239,191,189,239,191,189,124,61,239,191,189,53,227,150,155,78,70,239,191,189,36,79,239,191,189,108,239,191,189,80,239,191,189,239,191,189,120,37,239,191,189,222,141,239,191,189,109,239,191,189,239,191,189,59,239,191,189,239,191,189,0,61,41,10,107,239,191,189,22,239,191,189,239,191,189,96,111,217,187,239,191,189,5,73,43,123,111,59,239,191,189,239,191,189,8,86,74,12,29,115,118,202,156,18,239,191,189,239,191,189,35,18,239,191,189,98,118,239,191,189,57,239,191,189,23,239,191,189,25,34,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,99,33,21,52,211,191,95,218,163,32,46,239,191,189,92,50,29,239,191,189,239,191,189,124,239,191,189,5,239,191,189,1,239,191,189,71,239,191,189,49,233,134,183,83,41,25,70,68,124,13,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,117,84,90,239,191,189,5,239,191,189,200,166,239,191,189,126,239,191,189,97,73,239,191,189,67,52,239,191,189,117,83,239,191,189,239,191,189,4,239,191,189,22,239,191,189,239,191,189,21,239,191,189,38,239,191,189,28,107,15,210,156,69,74,239,191,189,239,191,189,239,191,189,82,239,191,189,83,239,191,189,51,63,239,191,189,239,191,189,21,239,191,189,104,239,191,189,239,191,189,112,239,191,189,68,239,191,189,100,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,31,239,191,189,15,239,191,189,10,110,239,191,189,124,239,191,189,17,75,239,191,189,239,191,189,18,97,239,191,189,1,80,239,191,189,239,191,189,61,239,191,189,239,191,189,10,124,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,16,215,174,220,190,239,191,189,239,191,189,239,191,189,239,191,189,119,54,102,239,191,189,68,35,53,39,239,191,189,239,191,189,239,191,189,239,191,189,16,205,190,239,191,189,15,5,70,28,116,66,239,191,189,239,191,189,63,59,239,191,189,17,53,239,191,189,90,239,191,189,96,239,191,189,76,7,34,2,239,191,189,88,239,191,189,209,169,63,239,191,189,239,191,189,239,191,189,10,239,191,189,69,239,191,189,239,191,189,58,210,129,52,239,191,189,127,96,9,71,35,239,191,189,239,191,189,89,110,239,191,189,239,191,189,239,191,189,239,191,189,116,12,63,239,191,189,100,239,191,189,239,191,189,73,239,191,189,96,59,239,191,189,33,239,191,189,239,191,189,239,191,189,69,239,191,189,9,23,89,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,121,77,120,239,191,189,56,209,161,84,76,110,221,155,100,127,0,239,191,189,117,1,1,2,239,191,189,40,3,125,105,93,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,18,239,191,189,72,239,191,189,30,82,114,239,191,189,31,43,123,239,191,189,35,239,191,189,238,155,147,222,176,83,80,73,239,191,189,31,239,191,189,239,191,189,55,239,191,189,111,239,191,189,26,239,191,189,1,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9941dec3",
                        container: "containers3ffbc3513f46424e8d7772d6f250b673",
                        blob: "Blob0cc49de04683498887c1cea110f6135e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03154 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03154_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03154_s.txt", Encoding.UTF8);

    public Test03154() : base(recordedRequest, recordedResponse, "accounts8d439fe9a173186")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,25,78,239,191,189,65,239,191,189,201,186,60,239,191,189,73,125,239,191,189,54,239,191,189,239,191,189,239,191,189,28,101,12,239,191,189,239,191,189,95,239,191,189,93,60,62,106,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,36,239,191,189,239,191,189,239,191,189,24,239,191,189,105,239,191,189,91,52,239,191,189,111,51,239,191,189,126,239,191,189,54,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,227,190,139,80,239,191,189,92,18,239,191,189,239,191,189,222,153,239,191,189,54,239,191,189,75,77,98,53,58,3,239,191,189,123,239,191,189,10,113,34,239,191,189,91,239,191,189,50,37,117,52,239,191,189,24,18,239,191,189,90,239,191,189,90,73,125,97,239,191,189,239,191,189,56,72,16,239,191,189,69,103,239,191,189,239,191,189,239,191,189,25,104,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,78,239,191,189,36,239,191,189,125,239,191,189,57,239,191,189,8,103,223,186,63,25,60,113,56,218,149,113,239,191,189,239,191,189,116,239,191,189,73,239,191,189,239,191,189,32,11,122,84,239,191,189,239,191,189,239,191,189,19,239,191,189,117,239,191,189,239,191,189,89,239,191,189,239,191,189,95,73,13,49,239,191,189,78,239,191,189,15,239,191,189,239,191,189,33,69,239,191,189,239,191,189,69,239,191,189,65,239,191,189,6,24,239,191,189,239,191,189,18,59,39,121,6,101,239,191,189,239,191,189,15,59,239,191,189,53,107,42,123,24,239,191,189,97,107,239,191,189,211,182,239,191,189,78,200,143,239,191,189,239,191,189,108,239,191,189,83,239,191,189,239,191,189,239,191,189,54,239,191,189,9,97,72,80,19,27,239,191,189,239,191,189,239,191,189,24,26,32,40,25,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,216,176,119,239,191,189,34,30,35,239,191,189,39,102,239,191,189,239,191,189,14,99,25,27,239,191,189,39,239,191,189,239,191,189,0,119,119,239,191,189,67,210,174,239,191,189,21,23,239,191,189,25,48,239,191,189,239,191,189,125,239,191,189,239,191,189,107,239,191,189,93,97,126,38,119,26,239,191,189,239,191,189,239,191,189,239,191,189,1,53,26,16,239,191,189,239,191,189,91,104,239,191,189,80,58,60,81,239,191,189,26,239,191,189,221,179,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,81,65,41,28,34,88,68,22,239,191,189,239,191,189,32,0,239,191,189,34,239,191,189,33,26,239,191,189,33,15,239,191,189,11,239,191,189,60,2,68,239,191,189,239,191,189,71,122,122,239,191,189,16,7,9,39,239,191,189,52,24,239,191,189,13,107,118,239,191,189,239,191,189,239,191,189,118,124,111,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,69,89,239,191,189,25,239,191,189,100,107,239,191,189,42,239,191,189,122,239,191,189,239,191,189,24,96,111,239,191,189,61,2,239,191,189,239,191,189,88,127,80,239,191,189,120,105,239,191,189,217,156,92,239,191,189,11,239,191,189,239,191,189,239,191,189,26,57,239,191,189,239,191,189,239,191,189,75,10,66,195,172,99,14,41,239,191,189,51,12,239,191,189,107,239,191,189,0,109,239,191,189,16,239,191,189,1,32,80,239,191,189,30,110,239,191,189,85,239,191,189,239,191,189,239,191,189,112,239,191,189,96,239,191,189,73,77,61,239,191,189,33,20,91,239,191,189,30,104,80,239,191,189,19,239,191,189,88,80,41,239,191,189,239,191,189,124,239,191,189,34,35,85,239,191,189,14,123,126,239,191,189,239,191,189,79,44,119,102,239,191,189,48,61,239,191,189,215,166,239,191,189,50,239,191,189,239,191,189,122,29,65,239,191,189,81,123,70,40,239,191,189,119,79,43,25,55})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9a173186",
                        container: "containers95e6669661364c8da05861a370fc7d54",
                        blob: "Blob4fe30d1587d04a14b4438fdc2d06e320",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03308 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03308_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03308_s.txt", Encoding.UTF8);

    public Test03308() : base(recordedRequest, recordedResponse, "accounts8d439fe9bf19a2f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{35,239,191,189,30,44,239,191,189,93,123,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,127,239,191,189,19,239,191,189,239,191,189,127,5,239,191,189,239,191,189,92,239,191,189,239,191,189,114,4,67,18,239,191,189,95,239,191,189,99,239,191,189,239,191,189,3,96,41,42,239,191,189,94,88,120,201,186,239,191,189,23,239,191,189,68,111,239,191,189,216,136,12,239,191,189,54,239,191,189,114,96,56,88,55,239,191,189,239,191,189,56,217,158,22,239,191,189,239,191,189,239,191,189,209,159,239,191,189,71,69,239,191,189,0,239,191,189,90,94,239,191,189,239,191,189,239,191,189,239,191,189,69,87,20,239,191,189,65,239,191,189,239,191,189,239,191,189,66,39,114,239,191,189,239,191,189,239,191,189,11,0,13,195,188,239,191,189,57,239,191,189,100,59,239,191,189,47,113,121,239,191,189,239,191,189,55,66,232,177,148,71,2,239,191,189,63,239,191,189,7,239,191,189,239,191,189,239,191,189,213,178,1,32,239,191,189,90,81,60,239,191,189,14,77,239,191,189,239,191,189,216,189,18,124,79,19,72,239,191,189,48,239,191,189,239,191,189,75,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,63,45,81,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,100,239,191,189,84,41,44,45,71,239,191,189,239,191,189,91,239,191,189,239,191,189,8,33,239,191,189,23,91,46,239,191,189,239,191,189,39,239,191,189,239,191,189,13,114,126,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,88,111,239,191,189,239,191,189,86,239,191,189,46,239,191,189,83,239,191,189,55,12,124,239,191,189,40,122,66,112,239,191,189,239,191,189,80,71,239,191,189,239,191,189,72,28,5,10,239,191,189,239,191,189,239,191,189,56,239,191,189,123,239,191,189,239,191,189,56,99,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,216,174,44,103,37,239,191,189,98,27,239,191,189,8,40,28,71,13,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,102,1,222,160,66,239,191,189,51,239,191,189,239,191,189,83,239,191,189,7,103,111,109,216,162,239,191,189,239,191,189,111,28,239,191,189,115,126,107,239,191,189,85,239,191,189,239,191,189,239,191,189,20,3,239,191,189,72,113,239,191,189,78,239,191,189,239,191,189,239,191,189,47,97,5,239,191,189,239,191,189,21,239,191,189,39,80,69,82,202,128,225,154,141,95,53,81,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,69,30,239,191,189,239,191,189,239,191,189,219,178,25,64,239,191,189,198,190,239,191,189,85,15,239,191,189,239,191,189,126,239,191,189,239,191,189,56,64,102,239,191,189,31,238,145,145,72,239,191,189,117,25,118,16,239,191,189,194,159,102,239,191,189,105,239,191,189,239,191,189,64,38,239,191,189,239,191,189,123,239,191,189,66,239,191,189,11,109,74,124,81,4,239,191,189,38,239,191,189,239,191,189,74,33,209,157,70,239,191,189,72,211,133,77,24,25,239,191,189,56,34,239,191,189,0,64,3,79,115,239,191,189,79,118,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,10,121,239,191,189,43,30,126,222,162,239,191,189,39,239,191,189,239,191,189,89,239,191,189,239,191,189,17,90,239,191,189,3,118,35,80,39,239,191,189,239,191,189,91,6,61,239,191,189,79,20,239,191,189,67,239,191,189,83,239,191,189,26,239,191,189,239,191,189,94,96,239,191,189,239,191,189,239,191,189,87,90,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,198,147,85,117,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,56,239,191,189,239,191,189,239,191,189,25,239,191,189,41,239,191,189,239,191,189,32,239,191,189,21,71,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9bf19a2f",
                        container: "containers7ef0810de27741119d2ce2b9356cb1c0",
                        blob: "Blobf39bf103d53543318a8722d662d34373",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03387 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03387_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03387_s.txt", Encoding.UTF8);

    public Test03387() : base(recordedRequest, recordedResponse, "zrdfepirv28d439fe9d07c71")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "zrdfepirv28d439fe9d07c71",
                        container: "containers09f1a1374beb458ca10a8d62ba352c64",
                        blob: "Blobb5e65c0b21b94768839fcf1f7be4d0e9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03234 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03234_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03234_s.txt", Encoding.UTF8);

    public Test03234() : base(recordedRequest, recordedResponse, "accounts8d439fe9b027da3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{91,79,239,191,189,239,191,189,26,41,239,191,189,51,67,239,191,189,239,191,189,14,58,92,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,198,138,239,191,189,239,191,189,54,47,239,191,189,239,191,189,239,191,189,234,163,140,87,239,191,189,61,239,191,189,239,191,189,86,239,191,189,62,239,191,189,239,191,189,17,239,191,189,73,51,117,239,191,189,95,2,239,191,189,239,191,189,12,239,191,189,197,180,6,239,191,189,239,191,189,28,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,43,11,8,239,191,189,26,98,239,191,189,239,191,189,121,239,191,189,121,3,239,191,189,239,191,189,84,239,191,189,6,239,191,189,127,119,87,120,239,191,189,239,191,189,113,239,191,189,34,50,31,95,239,191,189,239,191,189,80,5,239,191,189,84,239,191,189,86,216,170,239,191,189,76,195,141,239,191,189,64,111,42,53,239,191,189,68,1,107,25,239,191,189,45,57,28,55,64,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,213,138,239,191,189,44,26,65,239,191,189,239,191,189,239,191,189,8,233,180,177,239,191,189,239,191,189,239,191,189,7,38,239,191,189,58,239,191,189,105,43,239,191,189,51,239,191,189,239,191,189,46,239,191,189,125,41,239,191,189,239,191,189,108,43,239,191,189,107,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,56,108,94,239,191,189,239,191,189,81,101,97,22,53,239,191,189,62,239,191,189,69,239,191,189,4,127,239,191,189,19,201,174,10,239,191,189,114,239,191,189,206,128,239,191,189,97,194,146,79,223,132,51,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,126,88,218,163,239,191,189,2,80,239,191,189,72,106,239,191,189,1,239,191,189,45,239,191,189,239,191,189,239,191,189,42,239,191,189,115,239,191,189,83,239,191,189,239,191,189,95,53,17,218,130,239,191,189,239,191,189,82,55,239,191,189,239,191,189,239,191,189,239,191,189,87,35,125,239,191,189,239,191,189,122,40,239,191,189,222,188,6,47,239,191,189,239,191,189,99,239,191,189,30,42,42,239,191,189,75,68,117,239,191,189,117,69,100,119,116,239,191,189,67,239,191,189,13,85,125,7,82,239,191,189,102,239,191,189,121,6,239,191,189,120,11,239,191,189,239,191,189,29,239,191,189,96,25,89,97,239,191,189,76,19,239,191,189,239,191,189,44,83,21,239,191,189,21,20,120,101,34,63,73,91,239,191,189,75,239,191,189,80,60,68,239,191,189,239,191,189,239,191,189,239,191,189,87,70,239,191,189,19,239,191,189,239,191,189,63,64,9,105,89,197,166,19,239,191,189,239,191,189,239,191,189,108,0,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,205,149,17,239,191,189,7,80,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,1,99,239,191,189,37,239,191,189,54,239,191,189,2,218,165,239,191,189,239,191,189,115,83,86,239,191,189,63,66,239,191,189,114,239,191,189,82,239,191,189,85,46,239,191,189,1,24,239,191,189,29,69,23,239,191,189,239,191,189,239,191,189,9,113,239,191,189,239,191,189,120,239,191,189,49,239,191,189,40,239,191,189,28,239,191,189,239,191,189,239,191,189,104,30,82,92,21,239,191,189,127,56,239,191,189,50,52,239,191,189,89,239,191,189,96,239,191,189,239,191,189,116,99,76,239,191,189,239,191,189,239,191,189,48,127,239,191,189,107,239,191,189,113,239,191,189,239,191,189,77,30,239,191,189,38,197,152,239,191,189,64,239,191,189,57,239,191,189,114,68,44,239,191,189,41,239,191,189,74,239,191,189,80,239,191,189,40,239,191,189,239,191,189,33,221,147,67,239,191,189,239,191,189,78,239,191,189,239,191,189,100,7,57})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9b027da3",
                        container: "containers28b4418691d9448baf68a0aad3c54723",
                        blob: "Blobfea3a8bb373d476483932cb2606b1378",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03545 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03545_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03545_s.txt", Encoding.UTF8);

    public Test03545() : base(recordedRequest, recordedResponse, "accounts8d439fe9ed6bdf0")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ed6bdf0",
                        container: "containersdb4b3588378f4093b986665630dae412",
                        blob: "Blobe649408c1c1447dbb4cda3058ec115fa",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03108 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03108_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03108_s.txt", Encoding.UTF8);

    public Test03108() : base(recordedRequest, recordedResponse, "accounts8d439fe99a534fd")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe99a534fd",
                        container: "containers126f9c957891446e8ad586eb438e0d65",
                        blob: "Blob6b7bd3b6fd4a44769dc1bf67d7d39027",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03433 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03433_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03433_s.txt", Encoding.UTF8);

    public Test03433() : base(recordedRequest, recordedResponse, "accounts8d439fe9d757dcf")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,51,239,191,189,121,239,191,189,69,239,191,189,96,94,239,191,189,239,191,189,239,191,189,117,79,56,52,239,191,189,239,191,189,0,239,191,189,52,40,239,191,189,61,49,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,3,42,30,65,58,239,191,189,124,239,191,189,239,191,189,79,9,239,191,189,12,239,191,189,38,18,21,239,191,189,239,191,189,93,239,191,189,239,191,189,114,10,16,60,239,191,189,239,191,189,54,38,239,191,189,239,191,189,9,239,191,189,114,37,26,239,191,189,24,239,191,189,17,239,191,189,239,191,189,30,239,191,189,48,89,239,191,189,239,191,189,36,38,20,68,239,191,189,60,239,191,189,19,48,239,191,189,2,239,191,189,239,191,189,79,239,191,189,34,101,1,239,191,189,33,55,239,191,189,239,191,189,239,191,189,218,141,239,191,189,87,12,84,239,191,189,239,191,189,2,89,239,191,189,239,191,189,11,53,109,6,195,130,22,239,191,189,111,67,21,239,191,189,239,191,189,13,239,191,189,3,239,191,189,76,106,10,98,41,39,239,191,189,239,191,189,239,191,189,8,239,191,189,117,239,191,189,33,23,48,239,191,189,239,191,189,94,239,191,189,239,191,189,70,100,239,191,189,120,27,239,191,189,239,191,189,96,103,239,191,189,239,191,189,105,89,90,1,239,191,189,68,239,191,189,239,191,189,104,239,191,189,103,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,35,239,191,189,203,177,11,83,239,191,189,77,239,191,189,19,239,191,189,12,79,239,191,189,21,92,78,18,115,35,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,105,65,90,45,239,191,189,54,91,7,239,191,189,211,151,239,191,189,26,13,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,50,23,81,121,239,191,189,239,191,189,239,191,189,23,127,239,191,189,37,239,191,189,77,223,145,239,191,189,239,191,189,84,239,191,189,62,219,135,47,239,191,189,239,191,189,5,69,29,239,191,189,38,53,239,191,189,239,191,189,40,22,108,239,191,189,239,191,189,54,239,191,189,239,191,189,24,239,191,189,104,231,129,167,239,191,189,69,89,39,18,239,191,189,98,86,239,191,189,34,239,191,189,239,191,189,204,148,239,191,189,239,191,189,239,191,189,124,107,50,36,239,191,189,37,239,191,189,6,29,1,239,191,189,239,191,189,239,191,189,198,182,39,93,239,191,189,215,143,239,191,189,34,239,191,189,61,209,133,74,239,191,189,106,38,194,131,239,191,189,239,191,189,124,79,239,191,189,239,191,189,32,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,91,37,239,191,189,110,3,34,5,239,191,189,89,239,191,189,239,191,189,83,67,239,191,189,239,191,189,82,239,191,189,218,191,62,239,191,189,239,191,189,57,239,191,189,218,166,239,191,189,8,239,191,189,46,239,191,189,93,60,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,125,35,239,191,189,239,191,189,91,47,239,191,189,69,239,191,189,239,191,189,65,23,32,85,205,129,239,191,189,0,239,191,189,92,107,239,191,189,239,191,189,43,208,151,23,118,239,191,189,52,118,239,191,189,239,191,189,30,239,191,189,239,191,189,70,98,124,239,191,189,239,191,189,112,114,15,239,191,189,60,239,191,189,239,191,189,109,239,191,189,239,191,189,103,239,191,189,53,239,191,189,58,104,6,239,191,189,23,49,89,98,88,239,191,189,96,2,239,191,189,4,58,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,62,20,90,48,119,126,99,239,191,189,79,239,191,189,239,191,189,64,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,23,15,239,191,189,97,91,58,81,239,191,189,51,71,87,126,103,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9d757dcf",
                        container: "containerseed11bcb778d4a75ac53885bfe8c02c7",
                        blob: "Blob37a6f32cf7a040df91b3a23b48987689",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03467 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03467_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03467_s.txt", Encoding.UTF8);

    public Test03467() : base(recordedRequest, recordedResponse, "accounts8d439fe9dd9977d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9dd9977d",
                        container: "containers5bc2544b73634e1699c00230521e253a",
                        blob: "Blob3ebee8698e26489691268a6fe4b9299c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03188 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03188_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03188_s.txt", Encoding.UTF8);

    public Test03188() : base(recordedRequest, recordedResponse, "accounts8d439fe9a8e371f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,54,45,23,239,191,189,54,239,191,189,93,239,191,189,97,239,191,189,28,217,173,205,172,5,239,191,189,68,216,179,3,61,76,83,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,12,239,191,189,111,239,191,189,3,45,3,239,191,189,239,191,189,239,191,189,119,239,191,189,107,101,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,120,239,191,189,118,209,162,18,239,191,189,239,191,189,220,150,239,191,189,65,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,115,63,68,91,239,191,189,239,191,189,9,239,191,189,19,239,171,133,12,86,239,191,189,239,191,189,88,239,191,189,212,141,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,13,108,239,191,189,89,239,191,189,72,33,99,57,111,26,77,239,191,189,8,9,239,191,189,239,191,189,239,191,189,90,52,84,36,239,191,189,23,239,191,189,7,86,78,239,191,189,116,41,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,81,94,61,239,191,189,17,239,191,189,124,239,191,189,239,191,189,47,86,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,211,147,239,191,189,69,112,239,191,189,239,191,189,13,239,191,189,34,86,40,29,73,97,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,151,239,191,189,84,239,191,189,84,18,239,191,189,25,239,191,189,239,191,189,74,23,94,239,191,189,25,239,191,189,239,191,189,62,119,239,191,189,212,135,7,56,113,57,22,95,239,191,189,239,191,189,239,191,189,33,2,239,191,189,45,74,27,239,191,189,126,239,191,189,239,191,189,9,239,191,189,69,239,191,189,50,2,69,61,12,239,191,189,239,191,189,90,239,191,189,3,15,239,191,189,27,105,27,239,191,189,88,239,191,189,239,191,189,239,191,189,41,21,239,191,189,96,206,177,17,239,191,189,124,239,191,189,239,191,189,1,239,191,189,100,63,55,239,191,189,33,239,191,189,239,191,189,49,239,191,189,19,239,191,189,29,88,0,115,98,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,28,94,239,191,189,111,90,239,191,189,239,191,189,239,191,189,239,191,189,56,14,48,239,191,189,42,239,191,189,43,54,239,191,189,29,239,191,189,98,1,239,191,189,66,118,239,191,189,239,191,189,92,125,115,67,115,117,239,191,189,34,239,191,189,239,191,189,49,239,191,189,57,239,191,189,34,126,15,39,73,73,127,239,191,189,84,239,191,189,113,239,191,189,72,27,114,239,191,189,239,191,189,239,191,189,78,239,191,189,97,124,239,191,189,239,191,189,239,191,189,239,191,189,7,11,64,239,191,189,239,191,189,47,239,191,189,121,239,191,189,109,50,78,103,84,221,170,31,239,191,189,1,239,191,189,113,7,101,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,108,76,65,115,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,59,4,112,239,191,189,66,239,191,189,239,191,189,239,191,189,93,69,239,191,189,203,138,0,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,26,18,106,23,78,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,13,68,239,191,189,239,191,189,239,191,189,72,68,219,160,239,191,189,65,205,154,4,239,191,189,239,191,189,7,239,191,189,1,33,239,191,189,239,191,189,39,239,191,189,83,239,191,189,14,101,239,191,189,239,191,189,239,191,189,52,68,32,239,191,189,239,191,189,239,191,189,16,34,239,191,189,239,191,189,66,89,209,156,125,73,77,13,239,191,189,239,191,189,239,191,189,63,37,69,29,239,191,189,239,191,189,49,58,239,191,189,2,239,191,189,239,191,189,12,239,191,189,121,71,239,191,189,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9a8e371f",
                        container: "containers94dec587dc8e4398a56491028c961634",
                        blob: "Blobd0a2892ac8fc4e73972ef27f1ad67b08",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03079 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03079_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03079_s.txt", Encoding.UTF8);

    public Test03079() : base(recordedRequest, recordedResponse, "accounts8d439fe995d07ec")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe995d07ec",
                        container: "containers34427b253e6c4d37b44bdccb19f85949",
                        blob: "Blob1ce3adeae5064db382a25a2499845038",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03125 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03125_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03125_s.txt", Encoding.UTF8);

    public Test03125() : base(recordedRequest, recordedResponse, "accounts8d439fe99c0ac6f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,49,10,34,125,239,191,189,109,239,191,189,57,86,47,108,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,105,6,20,100,115,239,191,189,22,239,191,189,239,191,189,32,73,47,239,191,189,2,93,28,81,239,191,189,239,191,189,75,239,191,189,72,116,240,153,159,130,100,239,191,189,239,191,189,239,191,189,220,128,125,239,191,189,239,191,189,204,150,79,103,239,191,189,110,239,191,189,38,60,239,191,189,239,191,189,239,191,189,239,191,189,91,86,239,191,189,239,191,189,210,190,239,191,189,116,239,191,189,50,239,191,189,239,191,189,39,34,115,83,114,12,45,239,191,189,80,239,191,189,82,115,98,18,217,132,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,218,171,22,33,88,239,191,189,29,239,191,189,97,93,76,124,239,191,189,239,191,189,214,159,53,121,239,191,189,4,66,67,239,191,189,239,191,189,27,239,191,189,125,118,239,191,189,239,191,189,46,127,239,191,189,44,239,191,189,96,23,123,239,191,189,239,191,189,53,239,191,189,0,239,191,189,239,191,189,7,239,191,189,239,191,189,239,191,189,21,93,126,1,124,239,191,189,239,191,189,49,5,239,191,189,63,239,191,189,239,191,189,109,46,204,137,239,191,189,50,118,239,191,189,239,191,189,239,191,189,239,191,189,207,162,66,9,87,19,239,191,189,239,191,189,201,151,239,191,189,126,118,71,239,191,189,115,239,191,189,117,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,126,79,96,111,239,191,189,239,191,189,239,191,189,94,239,191,189,66,85,239,191,189,239,191,189,239,191,189,239,191,189,85,23,43,239,191,189,126,77,18,95,51,2,239,191,189,68,56,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,32,59,239,191,189,32,239,191,189,5,239,191,189,239,191,189,12,239,191,189,77,106,118,126,239,191,189,8,114,107,239,191,189,45,109,239,191,189,93,239,191,189,122,107,74,239,191,189,96,66,91,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,45,73,90,239,191,189,113,239,191,189,239,191,189,239,191,189,121,239,191,189,120,239,191,189,122,36,42,115,92,239,191,189,79,239,191,189,239,191,189,94,239,191,189,3,48,239,191,189,40,239,191,189,239,191,189,127,239,191,189,239,191,189,61,69,34,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,1,239,191,189,209,181,239,191,189,29,49,36,111,68,239,191,189,73,219,136,234,159,132,65,202,151,53,239,191,189,74,239,191,189,19,61,239,191,189,8,222,183,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,78,74,239,191,189,239,191,189,239,191,189,47,59,239,191,189,97,239,191,189,55,239,191,189,32,239,191,189,239,191,189,5,239,191,189,38,86,231,162,168,62,40,69,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,45,239,191,189,54,239,191,189,30,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,108,239,191,189,114,125,103,2,239,191,189,239,191,189,109,239,191,189,75,119,239,191,189,69,67,239,191,189,239,191,189,9,64,239,191,189,239,191,189,109,101,0,123,70,239,191,189,33,239,191,189,28,86,93,32,239,191,189,59,91,83,102,198,179,239,191,189,84,239,191,189,239,191,189,87,52,97,239,191,189,60,64,73,199,167,239,191,189,56,239,191,189,239,191,189,113,1,32,23,239,191,189,239,191,189,80,120,239,191,189,86,29,9,239,191,189,71,114,67,239,191,189,95,112,239,191,189,239,191,189,239,191,189,71,239,191,189,51,239,191,189,211,143,239,191,189,114,87,61,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,126,95,88,106})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe99c0ac6f",
                        container: "containersb66c990016244394839678af5650a97c",
                        blob: "Blobd599f3f0720944ffb95cd443b7e80e55",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03039 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03039_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03039_s.txt", Encoding.UTF8);

    public Test03039() : base(recordedRequest, recordedResponse, "accounts8d439fe98f9d8a3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe98f9d8a3",
                        container: "containers34e76e9b814540ed866dbd34b2045e0a",
                        blob: "Blob262b9e6cb735455a9ffc3fd12e5799a7",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03513 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03513_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03513_s.txt", Encoding.UTF8);

    public Test03513() : base(recordedRequest, recordedResponse, "accounts8d439fe9e625077")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,19,239,191,189,30,87,43,90,239,191,189,239,191,189,11,78,239,191,189,239,191,189,44,239,191,189,126,239,191,189,239,191,189,2,21,4,12,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,25,74,239,191,189,239,191,189,88,216,137,239,191,189,22,22,239,191,189,239,191,189,53,239,191,189,90,71,22,67,239,191,189,67,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,18,209,163,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,119,116,52,79,239,191,189,239,191,189,74,108,239,191,189,89,122,239,191,189,32,43,64,194,172,239,191,189,25,239,191,189,127,10,227,188,191,198,183,2,239,191,189,77,101,239,191,189,123,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,81,45,239,191,189,123,239,191,189,239,191,189,239,191,189,98,239,191,189,28,83,239,191,189,239,191,189,63,109,239,191,189,120,239,191,189,239,191,189,62,72,239,191,189,77,239,191,189,84,239,191,189,72,108,239,191,189,239,191,189,203,167,81,100,103,56,239,191,189,239,191,189,16,239,191,189,239,191,189,49,17,88,239,191,189,239,191,189,117,66,104,100,239,191,189,15,8,86,88,239,191,189,239,191,189,116,239,191,189,94,239,191,189,239,191,189,99,87,239,191,189,25,239,191,189,8,41,64,239,191,189,38,45,239,191,189,4,27,239,191,189,54,239,191,189,8,239,191,189,42,120,83,1,239,191,189,239,191,189,239,191,189,12,239,191,189,66,239,191,189,216,178,239,191,189,239,191,189,205,185,239,191,189,239,191,189,239,191,189,109,25,40,239,191,189,239,191,189,239,191,189,95,82,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,103,16,86,13,122,239,191,189,239,191,189,72,239,191,189,21,78,123,0,15,78,40,239,191,189,239,191,189,10,101,16,80,239,191,189,47,239,191,189,62,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,38,220,141,239,191,189,99,239,191,189,38,12,113,239,191,189,42,239,191,189,239,191,189,102,95,66,239,191,189,123,24,239,191,189,239,191,189,37,239,191,189,22,239,191,189,38,51,59,72,44,11,121,108,105,84,35,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,63,37,209,170,114,239,191,189,103,239,191,189,239,191,189,107,239,191,189,239,191,189,0,33,118,52,60,78,239,191,189,239,191,189,68,197,176,73,26,17,60,239,191,189,93,239,191,189,239,191,189,12,239,191,189,49,123,239,191,189,124,239,191,189,92,239,191,189,75,73,14,239,191,189,109,83,1,12,92,239,191,189,239,191,189,239,191,189,58,239,191,189,122,116,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,11,118,239,191,189,16,207,166,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,1,45,30,36,239,191,189,239,191,189,1,124,47,239,191,189,95,239,191,189,57,239,191,189,62,239,191,189,239,191,189,93,239,191,189,90,239,191,189,239,191,189,239,191,189,72,90,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,88,239,191,189,95,78,239,191,189,8,77,239,191,189,46,211,168,48,60,9,239,191,189,79,57,239,191,189,43,34,102,239,191,189,239,191,189,87,239,191,189,2,239,191,189,78,9,239,191,189,83,68,70,97,63,78,239,191,189,54,239,191,189,126,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,106,239,191,189,239,191,189,94,118,239,191,189,239,191,189,8,239,191,189,239,191,189,95,239,191,189,239,191,189,113,127,100,239,191,189,239,191,189,239,191,189,113,82,2,43,239,191,189,239,191,189,115,239,191,189,67,239,191,189,68,65,239,191,189,44,118,81,239,191,189,122,239,191,189,235,188,128,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9e625077",
                        container: "containersaa67a54683ab4928bedb324741c4f3ee",
                        blob: "Blobe27cc0ce802f46ee842e3ef7da2ae639",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03277 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03277_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03277_s.txt", Encoding.UTF8);

    public Test03277() : base(recordedRequest, recordedResponse, "accounts8d439fe9ba2410e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ba2410e",
                        container: "containers474f2f4281984a3d9e7a857e6066be56",
                        blob: "Blob36e6df5795f8409ba00e66007c524bf9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03239 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03239_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03239_s.txt", Encoding.UTF8);

    public Test03239() : base(recordedRequest, recordedResponse, "accounts8d439fe9b20db3a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9b20db3a",
                        container: "containers3214c598422f419a811bbfb8393a4e5b",
                        blob: "Blob6a6820df62ea4ea989cdd73888175ddf",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03422 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03422_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03422_s.txt", Encoding.UTF8);

    public Test03422() : base(recordedRequest, recordedResponse, "accounts8d439fe9d5a5479")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{60,12,239,191,189,123,85,239,191,189,239,191,189,105,114,239,191,189,51,239,191,189,70,239,191,189,239,191,189,75,239,191,189,239,191,189,88,239,191,189,48,239,191,189,120,239,191,189,68,40,239,191,189,80,239,191,189,68,239,191,189,47,239,191,189,20,20,239,191,189,57,95,65,64,97,114,239,191,189,81,7,239,191,189,239,191,189,239,191,189,239,191,189,216,181,239,191,189,239,191,189,74,16,239,191,189,16,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,76,23,239,191,189,119,54,94,98,239,191,189,22,120,239,191,189,54,239,191,189,239,191,189,61,111,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,35,239,191,189,4,9,40,239,191,189,86,104,62,239,191,189,239,191,189,4,239,191,189,31,239,191,189,110,67,118,45,239,191,189,9,12,20,83,239,191,189,239,191,189,100,239,191,189,239,191,189,116,239,191,189,96,239,191,189,106,118,239,191,189,50,85,57,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,77,79,116,125,106,239,191,189,96,218,162,22,239,191,189,239,191,189,36,85,38,98,124,201,180,108,104,239,191,189,239,191,189,239,191,189,59,239,191,189,60,49,21,239,191,189,123,96,99,71,239,191,189,21,127,110,9,33,0,239,191,189,239,191,189,95,239,191,189,239,191,189,49,239,191,189,239,191,189,93,239,191,189,239,191,189,0,239,191,189,53,201,166,239,191,189,66,125,111,47,196,168,239,191,189,84,76,239,191,189,239,191,189,17,239,191,189,14,239,191,189,239,191,189,107,239,191,189,239,191,189,73,217,185,239,191,189,89,91,239,191,189,101,239,191,189,95,239,191,189,17,239,191,189,111,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,31,195,165,53,84,19,239,191,189,123,239,191,189,7,109,24,239,191,189,12,92,200,136,239,191,189,22,239,191,189,12,67,239,191,189,239,191,189,108,239,191,189,19,239,191,189,4,239,191,189,51,225,154,171,239,191,189,239,191,189,51,239,191,189,103,69,239,191,189,60,223,172,239,191,189,199,132,239,191,189,18,22,239,191,189,202,154,239,191,189,239,191,189,239,191,189,220,176,200,137,0,34,118,239,191,189,212,139,125,239,191,189,112,214,148,5,89,239,191,189,62,239,191,189,99,58,2,239,191,189,70,100,239,191,189,239,191,189,62,104,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,115,239,191,189,59,239,191,189,102,73,239,191,189,63,60,239,191,189,239,191,189,112,201,190,30,120,239,191,189,239,191,189,35,66,239,191,189,239,191,189,239,191,189,102,107,68,239,191,189,36,239,191,189,44,16,74,123,239,191,189,239,191,189,10,40,98,239,191,189,91,239,191,189,36,82,108,239,191,189,239,191,189,125,222,158,71,7,214,151,239,191,189,239,191,189,239,191,189,61,239,191,189,108,33,105,125,239,191,189,16,113,84,239,191,189,62,239,191,189,19,80,63,16,199,158,119,65,27,239,191,189,115,239,191,189,1,239,191,189,104,36,58,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,122,239,191,189,38,239,191,189,65,239,191,189,75,2,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,33,15,239,191,189,90,104,239,191,189,38,239,191,189,55,239,191,189,20,92,8,70,239,191,189,73,239,191,189,239,191,189,120,239,191,189,239,191,189,33,122,113,239,191,189,22,239,191,189,114,92,116,239,191,189,239,191,189,78,239,191,189,67,239,191,189,32,239,191,189,47,111,86,195,170,239,191,189,239,191,189,239,191,189,67,239,191,189,126,47,239,191,189,239,191,189,80,239,191,189,0,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,194,191,48,239,191,189,239,191,189,239,191,189,239,191,189,77,117,75})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9d5a5479",
                        container: "containersc3ad8a5a0378453fb9fcc2ad5bfc255b",
                        blob: "Blob032ef730afd8457b8308fe30169ffa7f",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03502 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03502_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03502_s.txt", Encoding.UTF8);

    public Test03502() : base(recordedRequest, recordedResponse, "accounts8d439fe9e3e9b95")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,87,239,191,189,63,239,191,189,239,191,189,119,239,191,189,45,29,50,123,125,239,191,189,239,191,189,91,68,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,96,110,40,198,135,239,191,189,239,191,189,54,214,137,123,239,191,189,40,72,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,104,72,239,191,189,210,185,239,191,189,19,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,26,55,239,191,189,14,34,68,96,87,239,191,189,85,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,6,239,191,189,37,239,191,189,239,191,189,239,191,189,34,239,191,189,102,239,191,189,9,239,191,189,239,191,189,239,191,189,31,6,239,191,189,239,191,189,67,92,239,191,189,35,239,191,189,73,68,100,239,191,189,89,43,93,239,191,189,7,72,27,239,191,189,114,239,191,189,101,89,239,191,189,239,191,189,69,222,146,77,239,191,189,239,191,189,16,239,191,189,239,191,189,28,7,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,113,121,68,200,177,9,239,191,189,2,89,112,64,239,191,189,117,66,108,239,191,189,112,88,69,85,239,191,189,89,239,191,189,239,191,189,239,191,189,99,64,239,191,189,92,104,25,239,191,189,122,239,191,189,239,191,189,239,191,189,123,35,239,191,189,212,162,75,239,191,189,88,239,191,189,239,191,189,83,218,154,39,111,239,191,189,239,191,189,239,191,189,239,191,189,23,221,169,10,78,239,191,189,23,239,191,189,239,191,189,87,102,50,239,191,189,78,239,191,189,8,77,239,191,189,112,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,16,102,61,53,239,191,189,110,61,239,191,189,239,191,189,239,191,189,2,239,191,189,24,69,11,239,191,189,239,191,189,239,191,189,0,105,239,191,189,239,191,189,239,191,189,14,30,33,239,191,189,44,239,191,189,49,79,239,191,189,239,191,189,58,62,98,239,191,189,112,239,191,189,239,191,189,40,89,239,191,189,114,239,191,189,54,53,126,101,39,10,41,67,99,19,124,239,191,189,46,23,215,136,17,233,162,141,104,239,191,189,239,191,189,7,239,191,189,239,191,189,52,239,191,189,23,64,98,239,191,189,24,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,38,38,87,122,39,239,191,189,239,191,189,239,191,189,89,32,96,23,112,73,239,191,189,33,66,87,119,239,191,189,119,213,129,43,34,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,33,74,33,123,102,17,122,239,191,189,69,32,5,219,134,239,191,189,40,239,191,189,94,51,98,239,191,189,239,191,189,239,191,189,10,79,81,239,191,189,43,87,118,239,191,189,239,191,189,0,41,53,62,239,191,189,78,239,191,189,126,16,199,160,50,239,191,189,114,239,191,189,239,191,189,116,239,191,189,239,191,189,118,239,191,189,72,239,191,189,85,50,64,239,191,189,42,239,191,189,239,191,189,35,63,88,89,4,239,191,189,80,120,91,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,110,239,191,189,87,239,191,189,239,191,189,93,239,191,189,118,56,239,191,189,239,191,189,239,191,189,11,239,191,189,124,239,191,189,239,191,189,42,239,191,189,97,239,191,189,66,109,72,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,97,118,239,191,189,239,191,189,239,191,189,25,46,197,135,239,191,189,33,76,17,111,108,239,191,189,38,239,191,189,239,191,189,38,57,239,191,189,239,191,189,44,112,15,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,207,161,239,191,189,239,191,189,239,191,189,239,191,189,32,33,54,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,206,147,239,191,189,239,191,189,239,191,189,28,115,6})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9e3e9b95",
                        container: "containerscb09ab8683c146b7acbc0f7024062e2f",
                        blob: "Blob5bb6221795a2412c9100f1dc986fb322",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03313 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03313_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03313_s.txt", Encoding.UTF8);

    public Test03313() : base(recordedRequest, recordedResponse, "accounts8d439fe9c1994e7")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9c1994e7",
                        container: "containersfb1550dee6ad4cba9b3cfe6c34bbd5f1",
                        blob: "Blobb0b975e9db294e80afc42c5ea7fe5054",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03208 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03208_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03208_s.txt", Encoding.UTF8);

    public Test03208() : base(recordedRequest, recordedResponse, "accounts8d439fe9ac63781")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,103,239,191,189,75,239,191,189,239,191,189,239,191,189,43,10,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,204,174,239,191,189,100,89,71,239,191,189,239,191,189,114,7,203,177,239,191,189,35,239,191,189,0,0,239,191,189,19,81,239,191,189,239,191,189,81,99,34,239,191,189,202,174,239,191,189,89,97,42,101,239,191,189,111,217,164,56,121,32,239,191,189,239,191,189,73,239,191,189,239,191,189,39,76,239,191,189,48,60,239,191,189,25,239,191,189,239,191,189,3,2,92,239,191,189,65,239,191,189,125,72,239,191,189,25,239,191,189,239,191,189,75,239,191,189,239,191,189,91,239,191,189,63,239,191,189,239,191,189,11,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,71,111,239,191,189,239,191,189,108,124,33,239,191,189,239,191,189,66,239,191,189,48,62,52,239,191,189,95,51,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,11,239,191,189,239,191,189,239,191,189,110,94,49,239,191,189,239,191,189,70,118,57,239,191,189,82,79,239,191,189,14,79,47,89,32,32,239,191,189,63,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,9,120,2,239,191,189,239,191,189,2,74,97,239,191,189,199,166,20,239,191,189,119,99,239,191,189,50,239,191,189,239,191,189,37,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,7,91,239,191,189,13,33,113,70,10,11,239,191,189,79,87,213,190,239,191,189,120,44,239,191,189,239,191,189,49,112,12,239,191,189,205,144,239,191,189,239,191,189,31,239,191,189,239,191,189,22,239,191,189,120,239,191,189,89,239,191,189,222,153,239,191,189,21,48,88,222,164,111,68,80,44,38,18,239,191,189,239,191,189,9,88,77,239,191,189,239,191,189,27,124,239,191,189,123,39,29,48,119,96,239,191,189,73,100,49,239,191,189,239,191,189,239,191,189,239,191,189,0,23,46,20,93,76,58,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,31,63,94,239,191,189,239,191,189,29,92,239,191,189,9,59,239,191,189,44,15,101,7,239,191,189,239,191,189,119,103,66,55,88,53,204,141,239,191,189,47,93,239,191,189,46,66,80,94,122,239,191,189,9,5,66,239,191,189,117,95,55,239,191,189,220,129,239,191,189,78,239,191,189,51,1,3,98,120,214,174,239,191,189,10,239,191,189,97,5,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,92,205,149,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,97,88,75,239,191,189,111,71,41,239,191,189,43,239,191,189,216,136,239,191,189,239,191,189,239,191,189,115,239,191,189,210,135,96,78,27,239,191,189,36,25,239,191,189,66,53,64,80,194,134,239,191,189,102,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,24,239,191,189,69,202,174,239,191,189,78,239,191,189,239,191,189,106,239,191,189,239,191,189,69,116,39,239,191,189,239,191,189,5,239,191,189,111,239,191,189,29,81,239,191,189,29,239,191,189,77,44,37,61,239,191,189,21,107,203,159,239,191,189,239,191,189,54,239,191,189,127,239,191,189,28,111,239,191,189,32,61,31,48,222,160,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,28,239,191,189,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,168,239,191,189,239,191,189,239,191,189,113,239,191,189,125,90,39,53,37,34,113,16,13,239,191,189,94,64,239,191,189,76,239,191,189,239,191,189,108,36,66,119,239,191,189,239,191,189,239,191,189,101,239,191,189,119,94,70,239,191,189,239,191,189,120,22,47,33,75,122,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ac63781",
                        container: "containersb0cb7f145ada40b99f842d50ba240c22",
                        blob: "Blobd7fd6fdfad98417bb0b366322ef592a3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04004 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04004_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04004_s.txt", Encoding.UTF8);

    public Test04004() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersdc35bc9c525d459fac74622f23495363",
                        blob: "PageBlobacda43ec229840b6a2fbe4814a5d2956",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03393 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03393_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03393_s.txt", Encoding.UTF8);

    public Test03393() : base(recordedRequest, recordedResponse, "accounts8d439fe9d03814a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,30,21,123,239,191,189,53,239,191,189,239,191,189,113,1,98,239,191,189,124,112,56,57,73,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,11,239,191,189,239,191,189,42,239,191,189,79,1,239,191,189,109,113,80,239,191,189,42,239,191,189,54,27,13,47,35,239,191,189,239,191,189,239,191,189,17,239,191,189,107,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,109,41,239,191,189,75,70,14,18,239,191,189,239,191,189,3,239,191,189,233,184,164,211,164,239,191,189,239,191,189,80,121,33,239,191,189,117,239,191,189,205,190,239,191,189,74,239,191,189,239,191,189,239,191,189,200,189,118,78,239,191,189,239,191,189,33,16,212,180,239,191,189,74,219,178,100,239,191,189,18,18,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,71,125,239,191,189,36,89,114,239,191,189,81,239,191,189,18,239,191,189,239,191,189,93,85,239,191,189,35,47,104,76,3,239,191,189,86,239,191,189,12,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,34,7,239,191,189,7,82,63,239,191,189,239,191,189,98,239,191,189,64,87,239,191,189,239,191,189,124,101,239,191,189,52,239,191,189,29,239,191,189,89,239,191,189,239,191,189,239,191,189,123,239,191,189,98,57,25,113,107,58,239,191,189,223,155,78,239,191,189,239,191,189,51,239,191,189,239,191,189,59,239,191,189,239,191,189,40,73,9,239,191,189,123,239,191,189,50,105,64,239,191,189,84,239,191,189,21,239,191,189,239,191,189,94,85,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,111,118,47,239,191,189,99,50,239,191,189,208,189,120,62,2,239,191,189,5,239,191,189,239,191,189,56,239,191,189,32,239,191,189,91,239,191,189,239,191,189,239,191,189,19,239,191,189,84,108,239,191,189,13,239,191,189,105,127,90,88,239,191,189,239,191,189,35,99,239,191,189,201,133,107,53,239,191,189,239,191,189,239,191,189,18,31,53,239,191,189,21,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,40,8,239,191,189,239,191,189,213,130,239,191,189,239,191,189,239,191,189,239,191,189,21,97,239,191,189,10,239,191,189,86,88,65,42,3,101,89,239,191,189,239,191,189,20,239,191,189,105,207,170,239,191,189,99,68,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,101,239,191,189,66,101,53,31,239,191,189,25,11,239,191,189,88,239,191,189,27,239,191,189,239,191,189,120,239,191,189,96,239,191,189,108,21,25,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,90,239,191,189,239,191,189,239,191,189,239,191,189,13,35,239,191,189,115,239,191,189,239,191,189,239,191,189,94,26,82,100,71,239,191,189,239,191,189,59,239,191,189,27,239,191,189,71,239,191,189,76,37,64,239,191,189,239,191,189,78,239,191,189,61,239,191,189,90,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,33,239,191,189,111,239,191,189,239,191,189,239,191,189,82,63,64,239,191,189,239,191,189,239,191,189,62,239,191,189,92,239,191,189,120,239,191,189,239,191,189,70,239,191,189,104,239,191,189,104,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,22,239,191,189,239,191,189,45,239,191,189,107,54,239,191,189,112,239,191,189,91,111,14,194,156,10,28,2,239,191,189,239,191,189,118,239,191,189,112,239,191,189,41,239,191,189,3,7,239,191,189,239,191,189,25,217,141,239,191,189,224,186,159,16,239,191,189,239,191,189,239,191,189,119,83,239,191,189,84,90,20,204,177,239,191,189,239,191,189,239,191,189,239,191,189,43,67,117,99,4,6,103,46,239,191,189,122,118,239,191,189,239,191,189,111,239,191,189,239,191,189,107,11,7,239,191,189,11,239,191,189,91,29,239,191,189,239,191,189,94,239,191,189,59,77,81,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9d03814a",
                        container: "containers8d94b30258b843629dd642aff8d87271",
                        blob: "Blobb74def399e3241259f4a79aa536630b6",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03218 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03218_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03218_s.txt", Encoding.UTF8);

    public Test03218() : base(recordedRequest, recordedResponse, "accounts8d439fe9ae22412")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{127,194,172,16,28,101,53,239,191,189,55,78,239,191,189,97,88,239,191,189,239,191,189,43,58,239,191,189,29,14,119,207,182,112,116,127,17,29,4,112,239,191,189,73,67,127,239,191,189,239,191,189,116,239,191,189,115,94,19,22,59,24,239,191,189,51,239,191,189,121,119,91,91,47,239,191,189,49,239,191,189,239,191,189,12,60,239,191,189,239,191,189,84,24,239,191,189,239,191,189,239,191,189,61,29,239,191,189,8,36,239,191,189,239,191,189,65,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,21,84,239,191,189,18,239,191,189,221,157,55,2,239,191,189,9,239,191,189,27,117,77,239,191,189,21,239,191,189,112,82,239,191,189,239,191,189,239,191,189,3,54,79,28,110,239,191,189,91,222,189,113,81,239,191,189,118,239,191,189,11,11,43,239,191,189,127,239,191,189,106,239,191,189,239,191,189,70,30,80,239,191,189,42,239,191,189,39,83,4,84,102,239,191,189,239,191,189,125,239,191,189,46,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,68,239,191,189,36,39,239,191,189,78,55,9,239,191,189,30,239,191,189,48,8,239,191,189,30,76,92,15,52,47,239,191,189,106,89,239,191,189,239,191,189,114,104,116,124,90,121,239,191,189,31,239,191,189,239,191,189,239,191,189,45,239,191,189,52,239,191,189,116,239,191,189,15,239,191,189,118,239,191,189,107,125,103,199,188,239,191,189,78,239,191,189,114,42,55,16,239,191,189,194,141,239,191,189,239,191,189,239,191,189,16,14,239,191,189,239,191,189,108,47,44,0,239,191,189,25,239,191,189,73,68,121,239,191,189,239,191,189,9,239,191,189,239,191,189,52,68,239,191,189,8,22,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,32,106,239,191,189,102,239,191,189,3,239,191,189,16,55,239,191,189,239,191,189,78,53,50,40,230,189,141,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,57,89,239,191,189,239,191,189,49,239,191,189,239,191,189,110,19,239,191,189,239,191,189,51,239,191,189,22,120,239,191,189,117,239,191,189,239,191,189,239,191,189,56,69,25,39,89,112,118,43,239,191,189,126,89,85,89,239,191,189,66,10,239,191,189,3,239,191,189,73,119,239,191,189,236,135,133,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,212,146,239,191,189,0,19,239,191,189,239,191,189,239,191,189,23,104,67,121,34,84,222,149,239,191,189,239,191,189,110,82,113,43,239,191,189,88,239,191,189,88,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,196,144,239,191,189,239,191,189,114,239,191,189,46,113,31,43,239,191,189,239,191,189,52,48,239,191,189,51,239,191,189,9,56,8,195,130,124,239,191,189,239,191,189,114,239,191,189,7,239,191,189,29,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,28,34,239,191,189,239,191,189,239,191,189,51,70,239,191,189,239,191,189,35,93,239,191,189,94,239,191,189,239,191,189,67,239,191,189,53,66,20,239,191,189,239,191,189,239,191,189,114,106,61,13,239,191,189,18,239,191,189,124,56,100,239,191,189,239,191,189,120,98,239,191,189,79,53,16,43,106,21,45,239,191,189,239,191,189,109,88,61,21,114,124,239,191,189,71,62,52,50,239,191,189,239,191,189,56,239,191,189,239,191,189,58,239,191,189,85,239,191,189,112,239,191,189,239,191,189,46,110,239,191,189,239,191,189,203,169,120,117,69,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,113,66,239,191,189,68,47,52,89,239,191,189,112,122,48,52,215,174,118,239,191,189,239,191,189,15,239,191,189,127})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ae22412",
                        container: "containers8ab8df46682246b4abf14dfdad3d348c",
                        blob: "Blob9da00e3bb00e4e0e9a3cb4ebf4ac0422",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03570 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03570_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03570_s.txt", Encoding.UTF8);

    public Test03570() : base(recordedRequest, recordedResponse, "accounts8d439fe9f2c0a7d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9f2c0a7d",
                        container: "containersbf0fdc095a1540f3b9c320987a9b62a3",
                        blob: "Blob3abb7e31dc454cbeac989a0e4396cfd0",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03114 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03114_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03114_s.txt", Encoding.UTF8);

    public Test03114() : base(recordedRequest, recordedResponse, "accounts8d439fe99a534fd")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{69,124,239,191,189,74,239,191,189,71,239,191,189,85,194,185,97,63,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,219,149,239,191,189,239,191,189,16,52,239,191,189,239,191,189,239,191,189,239,191,189,30,72,239,191,189,46,239,191,189,34,239,191,189,67,239,191,189,239,191,189,45,6,239,191,189,48,239,191,189,27,194,130,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,110,239,191,189,108,95,82,239,191,189,97,239,191,189,54,122,239,191,189,51,83,239,191,189,110,239,191,189,239,191,189,239,191,189,213,159,239,191,189,239,191,189,239,191,189,114,117,239,191,189,239,191,189,51,44,239,191,189,13,239,191,189,76,239,191,189,54,215,148,239,191,189,95,239,191,189,14,239,191,189,51,71,239,191,189,47,239,191,189,123,9,9,239,191,189,41,97,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,101,239,191,189,10,239,191,189,239,191,189,58,7,19,56,239,191,189,84,64,78,48,239,191,189,208,190,239,191,189,239,191,189,69,239,191,189,42,34,42,239,191,189,77,17,239,191,189,95,239,191,189,207,131,64,91,239,191,189,124,239,191,189,84,39,239,191,189,66,90,239,191,189,87,239,191,189,48,109,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,226,164,186,2,239,191,189,80,239,191,189,113,239,191,189,239,191,189,53,239,191,189,65,44,239,191,189,30,7,62,239,191,189,109,239,191,189,8,101,239,191,189,62,239,191,189,239,191,189,239,191,189,55,239,191,189,92,239,191,189,7,239,158,176,109,239,191,189,9,8,239,191,189,15,64,56,239,191,189,124,121,226,165,185,123,239,191,189,239,191,189,62,239,191,189,239,191,189,36,239,191,189,16,58,49,239,191,189,99,239,191,189,82,239,191,189,221,176,30,239,191,189,239,191,189,100,239,191,189,239,191,189,37,239,191,189,77,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,25,239,191,189,54,239,191,189,114,239,191,189,37,106,77,239,191,189,239,191,189,221,172,239,191,189,23,95,15,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,24,51,118,71,239,191,189,239,191,189,123,122,239,191,189,74,77,28,239,191,189,107,29,239,191,189,69,120,108,67,27,120,239,191,189,53,125,239,191,189,239,191,189,239,191,189,239,191,189,38,117,107,239,191,189,89,95,239,191,189,35,239,191,189,7,46,99,207,138,239,191,189,67,69,51,239,191,189,202,176,122,239,191,189,239,191,189,197,160,97,65,239,191,189,239,191,189,111,239,191,189,239,191,189,29,35,215,176,239,191,189,17,239,191,189,75,34,239,191,189,101,21,239,191,189,239,191,189,71,107,57,239,191,189,77,74,41,15,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,109,89,239,191,189,239,191,189,239,191,189,220,178,102,239,191,189,94,34,239,191,189,127,239,191,189,239,191,189,67,113,13,239,191,189,25,213,144,64,33,59,93,13,119,11,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,75,239,191,189,108,239,191,189,239,191,189,239,191,189,121,239,191,189,65,43,94,239,191,189,239,191,189,36,239,191,189,116,16,239,191,189,239,191,189,239,191,189,102,118,109,127,239,191,189,239,191,189,239,191,189,200,149,239,191,189,42,239,191,189,239,191,189,60,118,4,50,0,56,91,239,191,189,239,191,189,239,191,189,220,179,239,191,189,83,239,191,189,86,239,191,189,239,191,189,239,191,189,70,0,239,191,189,86,239,191,189,91,82,239,191,189,221,172,97,52,8,239,191,189,239,191,189,17,111,239,191,189,239,191,189,239,191,189,60,239,191,189,103,239,191,189,239,191,189,239,191,189,24,239,191,189,99,113,239,191,189,50,77,91,239,191,189,87,32,5,215,173,70,239,191,189,12,81,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe99a534fd",
                        container: "containersf64acf1a0c96460397fe35f902188158",
                        blob: "Blob8c2662d8505946fd958cdb07db7765e4",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03962 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03962_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03962_s.txt", Encoding.UTF8);

    public Test03962() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers72042994beda4244a02da5b576d3f9c7",
                        blob: "PageBloba16a92f198d64186a591729903b91ac0",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04189 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04189_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04189_s.txt", Encoding.UTF8);

    public Test04189() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse6c109f9343d4bbb9527c19e0e65dac4",
                        blob: "PageBlob860088e50ace490088a08e43ef91761b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        leaseId: "3cbdf9b1-ec7e-412e-a9bb-ab2d0ab87c25",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03456 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03456_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03456_s.txt", Encoding.UTF8);

    public Test03456() : base(recordedRequest, recordedResponse, "accounts8d439fe9dbe9537")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9dbe9537",
                        container: "containers145d3f4f1e8b4854950310fe3b13c5db",
                        blob: "Blob13d54c90996f418b99b10ba0d5809b21",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03351 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03351_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03351_s.txt", Encoding.UTF8);

    public Test03351() : base(recordedRequest, recordedResponse, "accounts8d439fe9c904c52")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9c904c52",
                        container: "containers68509c4c84ba4997afc19c467977f775",
                        blob: "Blob913b32dfbba246c49031a49499ae49b2",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03929 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03929_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03929_s.txt", Encoding.UTF8);

    public Test03929() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers2b1074d3572a4df7a5658fa271da7506",
                        blob: "PageBlob806c2003ae034d33827372504e3f8efe",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04190 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04190_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04190_s.txt", Encoding.UTF8);

    public Test04190() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse6c109f9343d4bbb9527c19e0e65dac4",
                        blob: "PageBlob860088e50ace490088a08e43ef91761b",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        leaseId: "3cbdf9b1-ec7e-412e-a9bb-ab2d0ab87c25",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04203 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04203_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04203_s.txt", Encoding.UTF8);

    public Test04203() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{2,68,23,78,222,153,59,239,191,189,104,239,191,189,43,239,191,189,78,23,37,17,112,55,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,126,100,28,30,239,191,189,239,191,189,211,170,239,191,189,96,124,26,239,191,189,107,88,106,239,191,189,239,191,189,114,16,76,239,191,189,239,191,189,106,239,191,189,78,6,239,191,189,75,239,191,189,93,39,68,64,239,191,189,122,124,28,81,239,191,189,239,191,189,239,191,189,103,239,191,189,10,239,191,189,5,239,191,189,93,239,191,189,13,103,239,138,133,208,178,88,70,122,239,191,189,95,239,191,189,3,84,239,191,189,68,239,191,189,239,191,189,237,135,145,239,191,189,23,203,145,239,191,189,206,187,239,191,189,0,239,191,189,239,191,189,17,79,239,191,189,85,239,191,189,74,239,191,189,239,191,189,239,191,189,11,110,239,191,189,34,239,191,189,239,191,189,71,52,71,106,0,111,33,124,239,191,189,216,190,239,191,189,42,227,156,132,121,4,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,52,35,194,133,28,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,124,239,191,189,85,127,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,25,239,191,189,75,95,239,191,189,239,191,189,239,191,189,22,239,191,189,111,92,21,8,239,191,189,12,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,39,34,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,125,43,51,239,191,189,239,191,189,36,239,191,189,239,191,189,92,16,239,191,189,18,126,18,239,191,189,4,84,5,239,191,189,33,29,23,14,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,66,70,101,239,191,189,65,5,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,21,55,56,33,48,239,191,189,36,239,191,189,95,19,36,239,191,189,239,191,189,34,194,137,37,1,239,191,189,56,239,191,189,9,0,239,191,189,79,123,105,107,126,114,92,61,120,239,191,189,100,230,177,186,239,191,189,29,239,191,189,6,206,154,118,34,239,191,189,35,239,191,189,22,126,239,191,189,239,191,189,71,103,45,56,95,239,191,189,82,239,191,189,53,239,191,189,199,141,106,9,239,191,189,239,191,189,239,191,189,107,70,239,191,189,239,191,189,239,191,189,59,101,76,44,125,69,120,104,239,191,189,239,191,189,48,27,55,239,191,189,82,239,191,189,105,98,111,37,45,239,191,189,239,191,189,239,191,189,101,22,62,19,105,3,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,117,239,191,189,119,239,191,189,27,6,58,239,191,189,47,239,191,189,239,191,189,239,191,189,80,36,239,191,189,13,239,191,189,100,117,239,191,189,239,191,189,98,42,239,191,189,66,239,191,189,124,90,68,239,191,189,63,36,239,191,189,236,177,173,239,191,189,239,191,189,239,191,189,125,5,239,191,189,231,184,128,239,191,189,239,191,189,239,191,189,62,239,191,189,63,239,191,189,62,74,239,191,189,90,77,239,191,189,216,131,239,191,189,239,191,189,65,84,69,110,72,99,114,211,141,220,131,239,191,189,239,191,189,1,123,113,96,239,191,189,239,191,189,239,191,189,28,96,239,191,189,239,191,189,239,191,189,74,87,87,96,239,191,189,239,191,189,93,239,191,189,114,239,191,189,239,191,189,114,18,67,78,29,106,87,99,42,69,198,148,239,191,189,239,191,189,107,33,239,191,189,239,191,189,119,225,184,179,239,191,189,239,191,189,12,27,115,239,191,189,239,191,189,37,56,17,100,239,191,189,239,191,189,77,115,239,191,189,207,177,8,56,103,239,191,189,239,191,189,239,191,189,119,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,191,239,191,189,68,66,2,239,191,189,127,101,5,13,239,191,189,48,239,191,189,239,191,189,30,239,191,189,48,1,239,191,189,216,128,76,239,191,189,122,73,239,191,189,239,191,189,64,121,73,21,239,191,189,14,63,239,191,189,47,63,204,186,239,191,189,239,191,189,97,239,191,189,207,146,239,191,189,239,191,189,42,15,123,239,191,189,53,239,191,189,89,114,239,191,189,239,191,189,239,191,189,94,7,239,191,189,36,239,191,189,195,159,239,191,189,239,191,189,91,126,239,191,189,52,11,79,239,191,189,239,191,189,84,239,191,189,239,191,189,35,72,100,49,239,191,189,91,239,191,189,198,181,239,191,189,32,100,70,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,11,239,191,189,9,207,144,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,77,31,66,59,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,50,239,191,189,58,25,239,191,189,239,191,189,88,239,191,189,239,191,189,22,239,191,189,123,239,191,189,239,191,189,62,239,191,189,239,191,189,115,239,191,189,239,191,189,50,9,70,239,191,189,69,3,51,239,191,189,14,239,191,189,71,104,111,74,101,57,239,191,189,118,239,191,189,239,191,189,239,191,189,221,171,112,200,163,239,191,189,239,191,189,239,191,189,239,191,189,82,25,239,191,189,10,239,191,189,40,239,191,189,103,212,166,239,191,189,101,239,191,189,68,239,191,189,28,11,95,36,4,0,42,239,191,189,239,191,189,239,191,189,84,93,239,191,189,10,239,191,189,107,239,191,189,114,24,105,45,239,191,189,101,239,191,189,61,239,191,189,44,239,191,189,57,96,107,54,103,239,191,189,239,191,189,239,191,189,56,239,191,189,124,239,191,189,40,239,191,189,21,38,57,202,179,93,51,59,16,239,191,189,219,161,121,239,191,189,239,191,189,239,191,189,84,211,136,90,78,120,30,239,191,189,52,94,9,51,239,191,189,239,191,189,34,65,239,191,189,239,191,189,62,239,191,189,114,239,191,189,239,191,189,110,239,191,189,80,120,239,191,189,239,191,189,239,191,189,50,239,191,189,39,33,239,191,189,43,198,174,26,239,191,189,127,239,191,189,42,8,25,239,191,189,108,239,191,189,239,191,189,239,191,189,103,31,117,87,4,26,92,239,191,189,0,118,105,52,43,23,239,191,189,83,239,191,189,0,239,191,189,123,198,144,104,239,191,189,125,239,191,189,67,239,191,189,54,123,59,239,191,189,5,70,239,191,189,117,46,239,191,189,28,239,191,189,239,191,189,200,173,239,191,189,106,75,239,191,189,19,106,239,191,189,46,107,239,191,189,126,37,214,182,239,191,189,239,191,189,53,239,191,189,103,199,132,59,119,47,239,191,189,40,36,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,51,50,239,191,189,47,239,191,189,112,76,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,87,239,191,189,239,191,189,103,0,41,104,239,191,189,28,239,191,189,66,239,191,189,48,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,58,239,191,189,239,191,189,86,56,108,126,239,191,189,239,191,189,239,191,189,105,239,191,189,8,239,191,189,109,70,239,191,189,239,191,189,92,64,22,12,239,191,189,72,239,191,189,27,72,28,239,191,189,239,191,189,239,191,189,205,179,76,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,116,115,42,239,191,189,239,191,189,239,191,189,39,239,191,189,111,239,191,189,39,58,239,191,189,98,239,191,189,45,239,191,189,239,191,189,239,191,189,29,36,98,239,191,189,239,191,189,26,239,191,189,25,239,191,189,79,101,239,191,189,85,239,191,189,95,204,162,239,191,189,239,191,189,111,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa582456b9a6b45988a7eb7997e6c078c",
                        blob: "Blob6f0573dfe7bf4f4882db979c7057bfe4",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03976 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03976_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03976_s.txt", Encoding.UTF8);

    public Test03976() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers669ba4f72d2e4fa4b79a2d39d093b106",
                        blob: "PageBlob19e3816a577a46e59b1d817a9d95416b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03613 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03613_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03613_s.txt", Encoding.UTF8);

    public Test03613() : base(recordedRequest, recordedResponse, "accounts8d439fe9fc2a645")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9fc2a645",
                        container: "containersacef9e30146c417f8eefef892923b321",
                        blob: "Blob5ea2026dcb14458895edbf306ab8ed3e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04363 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04363_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04363_s.txt", Encoding.UTF8);

    public Test04363() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers6f6ba1e9b52a4ed48fd91c411d5ec30d",
                        blob: "Blob18691614c9b24b829b2a3cea250bf19d",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=161280-531455",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03473 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03473_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03473_s.txt", Encoding.UTF8);

    public Test03473() : base(recordedRequest, recordedResponse, "accounts8d439fe9ddddd45")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,64,114,239,191,189,239,191,189,239,191,189,197,188,61,17,239,191,189,40,239,191,189,54,105,239,191,189,32,10,83,19,239,191,189,239,191,189,40,239,191,189,239,191,189,37,239,191,189,5,239,191,189,239,191,189,19,83,28,70,42,239,191,189,239,191,189,77,239,191,189,213,130,239,191,189,219,130,207,154,239,191,189,100,239,191,189,20,106,88,239,191,189,6,98,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,58,12,101,11,239,191,189,35,239,191,189,92,126,239,191,189,239,191,189,239,191,189,2,92,76,80,124,239,191,189,239,191,189,239,191,189,101,21,239,191,189,68,239,191,189,51,239,191,189,239,191,189,0,239,191,189,213,149,239,191,189,239,191,189,239,191,189,114,89,239,191,189,239,191,189,239,191,189,111,117,111,239,191,189,114,239,191,189,98,239,191,189,239,191,189,67,54,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,67,239,191,189,125,239,191,189,30,84,32,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,70,29,239,191,189,44,84,124,126,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,0,84,122,239,191,189,81,239,191,189,81,48,239,191,189,239,191,189,239,191,189,239,191,189,110,197,133,239,191,189,87,14,239,191,189,19,91,22,44,0,80,127,120,239,191,189,53,239,191,189,101,30,199,159,67,3,239,191,189,34,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,48,22,239,191,189,239,191,189,64,239,191,189,17,239,191,189,239,191,189,62,78,239,191,189,87,239,191,189,48,113,239,191,189,94,239,191,189,40,112,239,191,189,37,66,239,191,189,94,239,191,189,239,191,189,71,239,191,189,125,239,191,189,17,96,78,97,37,239,191,189,239,191,189,7,83,239,191,189,35,97,239,191,189,17,239,191,189,80,108,90,239,191,189,58,239,191,189,239,191,189,127,239,191,189,239,191,189,120,1,239,191,189,239,191,189,45,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,105,239,191,189,239,191,189,213,131,239,191,189,77,203,189,239,191,189,119,239,191,189,21,67,239,191,189,74,239,191,189,239,191,189,112,239,191,189,239,191,189,19,16,37,94,118,239,191,189,43,49,239,191,189,205,157,15,49,239,191,189,42,239,191,189,7,45,43,54,35,91,239,191,189,79,239,191,189,124,43,239,191,189,22,239,191,189,94,239,191,189,239,191,189,85,239,191,189,239,191,189,118,12,33,34,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,114,116,87,54,239,191,189,66,239,191,189,239,191,189,239,191,189,110,15,239,191,189,37,239,191,189,239,191,189,239,191,189,13,62,112,80,123,127,68,51,239,191,189,12,8,239,191,189,16,239,191,189,239,191,189,114,239,191,189,9,239,191,189,61,239,191,189,3,28,27,71,101,239,191,189,63,103,44,239,191,189,34,239,191,189,127,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,19,3,239,191,189,54,121,239,191,189,239,191,189,38,239,191,189,239,191,189,45,27,71,95,239,191,189,10,34,84,9,22,239,191,189,4,239,191,189,239,191,189,15,230,160,144,239,191,189,65,5,31,18,239,191,189,41,239,191,189,65,239,191,189,75,239,191,189,206,173,239,191,189,239,191,189,239,191,189,218,156,203,181,120,23,239,191,189,239,191,189,106,15,55,239,191,189,38,239,191,189,91,79,88,80,239,191,189,13,9,239,191,189,54,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,86,1,239,191,189,46,11,3,239,191,189,24,239,191,189,239,191,189,49,87,25,239,191,189,77,239,191,189,15,239,191,189,53,118,93,51,239,191,189,239,191,189,85,101,239,191,189,239,191,189,60,101,239,191,189,79})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ddddd45",
                        container: "containers1308dd3f06154262a374b6c2687cddcd",
                        blob: "Blob4fdac12857bf47e9953eb90343ba993a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04365 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04365_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04365_s.txt", Encoding.UTF8);

    public Test04365() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers6f6ba1e9b52a4ed48fd91c411d5ec30d",
                        blob: "Blob18691614c9b24b829b2a3cea250bf19d",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=161280-531455",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03192 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03192_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03192_s.txt", Encoding.UTF8);

    public Test03192() : base(recordedRequest, recordedResponse, "accounts8d439fe9a8e371f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,21,239,191,189,33,239,191,189,24,239,191,189,239,191,189,32,107,4,239,191,189,120,239,191,189,43,239,191,189,239,191,189,239,191,189,118,127,239,191,189,19,3,2,239,191,189,69,239,191,189,13,239,191,189,239,191,189,84,239,191,189,79,239,191,189,239,191,189,15,117,239,191,189,54,232,185,160,239,191,189,126,239,191,189,239,191,189,239,191,189,113,239,191,189,90,239,191,189,239,191,189,15,79,79,239,191,189,29,239,191,189,102,239,191,189,239,191,189,18,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,51,239,191,189,68,94,239,191,189,100,239,191,189,0,88,49,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,22,53,25,239,191,189,239,191,189,24,239,191,189,70,239,191,189,239,191,189,43,21,239,191,189,239,191,189,116,239,191,189,96,239,191,189,84,76,65,7,239,191,189,42,126,238,141,151,239,191,189,239,191,189,30,54,81,239,191,189,29,239,191,189,239,191,189,239,191,189,91,69,49,30,47,118,45,27,90,38,239,191,189,210,158,216,154,239,191,189,15,239,191,189,239,191,189,67,239,191,189,239,191,189,49,76,239,191,189,107,239,191,189,239,191,189,239,191,189,112,239,191,189,77,239,191,189,115,14,26,34,239,191,189,20,239,191,189,98,239,191,189,102,239,191,189,39,239,191,189,70,239,191,189,96,24,13,17,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,61,11,56,87,113,239,191,189,51,239,191,189,3,100,239,191,189,239,191,189,114,55,239,191,189,239,191,189,239,191,189,101,37,239,191,189,36,1,36,88,99,239,191,189,98,239,191,189,239,191,189,23,17,84,27,80,239,191,189,9,239,191,189,10,35,239,191,189,120,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,60,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,82,55,239,191,189,34,239,191,189,239,191,189,46,239,191,189,66,115,13,239,191,189,20,67,72,239,191,189,42,239,191,189,45,239,191,189,118,22,239,191,189,239,191,189,239,191,189,93,34,239,191,189,22,239,191,189,94,239,191,189,239,191,189,0,239,191,189,239,191,189,208,131,56,239,191,189,126,202,184,32,108,44,39,239,191,189,239,191,189,28,117,239,191,189,94,239,191,189,117,60,118,25,239,191,189,64,106,74,239,191,189,239,191,189,21,31,239,191,189,20,239,191,189,111,7,239,191,189,84,63,239,191,189,239,191,189,93,239,191,189,52,118,54,127,77,239,191,189,13,239,191,189,239,191,189,239,191,189,82,98,239,191,189,2,239,191,189,239,191,189,52,9,239,191,189,10,77,117,19,239,191,189,39,21,239,191,189,113,30,87,239,191,189,239,191,189,239,191,189,239,191,189,10,10,239,191,189,239,191,189,198,178,125,239,191,189,196,136,98,13,79,239,191,189,93,239,191,189,76,239,191,189,101,239,191,189,239,191,189,0,34,239,191,189,37,239,191,189,63,38,112,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,55,67,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,40,20,98,11,36,121,67,239,191,189,9,239,191,189,91,239,191,189,239,191,189,115,86,32,41,239,191,189,239,191,189,124,239,191,189,111,37,20,96,31,7,42,79,239,191,189,3,11,31,22,18,14,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,5,59,96,97,239,191,189,54,239,191,189,239,191,189,197,157,239,191,189,72,124,239,191,189,60,239,191,189,239,191,189,89,59,210,185,79,87,239,191,189,239,191,189,92,68,17,239,191,189,38,239,191,189,58,239,191,189,239,191,189,105,239,191,189,239,191,189,77,208,142,239,191,189,239,191,189,102,115,214,154})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9a8e371f",
                        container: "containers94dec587dc8e4398a56491028c961634",
                        blob: "Blobd0a2892ac8fc4e73972ef27f1ad67b08",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03536 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03536_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03536_s.txt", Encoding.UTF8);

    public Test03536() : base(recordedRequest, recordedResponse, "accounts8d439fe9eb998d6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9eb998d6",
                        container: "containerscbb5e235a722409c92af768d536da7c2",
                        blob: "Blobff2aeda5242741f69f30fa9d4e384a98",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04205 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04205_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04205_s.txt", Encoding.UTF8);

    public Test04205() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{2,68,23,78,222,153,59,239,191,189,104,239,191,189,43,239,191,189,78,23,37,17,112,55,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,126,100,28,30,239,191,189,239,191,189,211,170,239,191,189,96,124,26,239,191,189,107,88,106,239,191,189,239,191,189,114,16,76,239,191,189,239,191,189,106,239,191,189,78,6,239,191,189,75,239,191,189,93,39,68,64,239,191,189,122,124,28,81,239,191,189,239,191,189,239,191,189,103,239,191,189,10,239,191,189,5,239,191,189,93,239,191,189,13,103,239,138,133,208,178,88,70,122,239,191,189,95,239,191,189,3,84,239,191,189,68,239,191,189,239,191,189,237,135,145,239,191,189,23,203,145,239,191,189,206,187,239,191,189,0,239,191,189,239,191,189,17,79,239,191,189,85,239,191,189,74,239,191,189,239,191,189,239,191,189,11,110,239,191,189,34,239,191,189,239,191,189,71,52,71,106,0,111,33,124,239,191,189,216,190,239,191,189,42,227,156,132,121,4,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,52,35,194,133,28,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,124,239,191,189,85,127,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,25,239,191,189,75,95,239,191,189,239,191,189,239,191,189,22,239,191,189,111,92,21,8,239,191,189,12,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,39,34,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,125,43,51,239,191,189,239,191,189,36,239,191,189,239,191,189,92,16,239,191,189,18,126,18,239,191,189,4,84,5,239,191,189,33,29,23,14,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,66,70,101,239,191,189,65,5,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,21,55,56,33,48,239,191,189,36,239,191,189,95,19,36,239,191,189,239,191,189,34,194,137,37,1,239,191,189,56,239,191,189,9,0,239,191,189,79,123,105,107,126,114,92,61,120,239,191,189,100,230,177,186,239,191,189,29,239,191,189,6,206,154,118,34,239,191,189,35,239,191,189,22,126,239,191,189,239,191,189,71,103,45,56,95,239,191,189,82,239,191,189,53,239,191,189,199,141,106,9,239,191,189,239,191,189,239,191,189,107,70,239,191,189,239,191,189,239,191,189,59,101,76,44,125,69,120,104,239,191,189,239,191,189,48,27,55,239,191,189,82,239,191,189,105,98,111,37,45,239,191,189,239,191,189,239,191,189,101,22,62,19,105,3,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,117,239,191,189,119,239,191,189,27,6,58,239,191,189,47,239,191,189,239,191,189,239,191,189,80,36,239,191,189,13,239,191,189,100,117,239,191,189,239,191,189,98,42,239,191,189,66,239,191,189,124,90,68,239,191,189,63,36,239,191,189,236,177,173,239,191,189,239,191,189,239,191,189,125,5,239,191,189,231,184,128,239,191,189,239,191,189,239,191,189,62,239,191,189,63,239,191,189,62,74,239,191,189,90,77,239,191,189,216,131,239,191,189,239,191,189,65,84,69,110,72,99,114,211,141,220,131,239,191,189,239,191,189,1,123,113,96,239,191,189,239,191,189,239,191,189,28,96,239,191,189,239,191,189,239,191,189,74,87,87,96,239,191,189,239,191,189,93,239,191,189,114,239,191,189,239,191,189,114,18,67,78,29,106,87,99,42,69,198,148,239,191,189,239,191,189,107,33,239,191,189,239,191,189,119,225,184,179,239,191,189,239,191,189,12,27,115,239,191,189,239,191,189,37,56,17,100,239,191,189,239,191,189,77,115,239,191,189,207,177,8,56,103,239,191,189,239,191,189,239,191,189,119,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,191,239,191,189,68,66,2,239,191,189,127,101,5,13,239,191,189,48,239,191,189,239,191,189,30,239,191,189,48,1,239,191,189,216,128,76,239,191,189,122,73,239,191,189,239,191,189,64,121,73,21,239,191,189,14,63,239,191,189,47,63,204,186,239,191,189,239,191,189,97,239,191,189,207,146,239,191,189,239,191,189,42,15,123,239,191,189,53,239,191,189,89,114,239,191,189,239,191,189,239,191,189,94,7,239,191,189,36,239,191,189,195,159,239,191,189,239,191,189,91,126,239,191,189,52,11,79,239,191,189,239,191,189,84,239,191,189,239,191,189,35,72,100,49,239,191,189,91,239,191,189,198,181,239,191,189,32,100,70,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,11,239,191,189,9,207,144,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,77,31,66,59,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,50,239,191,189,58,25,239,191,189,239,191,189,88,239,191,189,239,191,189,22,239,191,189,123,239,191,189,239,191,189,62,239,191,189,239,191,189,115,239,191,189,239,191,189,50,9,70,239,191,189,69,3,51,239,191,189,14,239,191,189,71,104,111,74,101,57,239,191,189,118,239,191,189,239,191,189,239,191,189,221,171,112,200,163,239,191,189,239,191,189,239,191,189,239,191,189,82,25,239,191,189,10,239,191,189,40,239,191,189,103,212,166,239,191,189,101,239,191,189,68,239,191,189,28,11,95,36,4,0,42,239,191,189,239,191,189,239,191,189,84,93,239,191,189,10,239,191,189,107,239,191,189,114,24,105,45,239,191,189,101,239,191,189,61,239,191,189,44,239,191,189,57,96,107,54,103,239,191,189,239,191,189,239,191,189,56,239,191,189,124,239,191,189,40,239,191,189,21,38,57,202,179,93,51,59,16,239,191,189,219,161,121,239,191,189,239,191,189,239,191,189,84,211,136,90,78,120,30,239,191,189,52,94,9,51,239,191,189,239,191,189,34,65,239,191,189,239,191,189,62,239,191,189,114,239,191,189,239,191,189,110,239,191,189,80,120,239,191,189,239,191,189,239,191,189,50,239,191,189,39,33,239,191,189,43,198,174,26,239,191,189,127,239,191,189,42,8,25,239,191,189,108,239,191,189,239,191,189,239,191,189,103,31,117,87,4,26,92,239,191,189,0,118,105,52,43,23,239,191,189,83,239,191,189,0,239,191,189,123,198,144,104,239,191,189,125,239,191,189,67,239,191,189,54,123,59,239,191,189,5,70,239,191,189,117,46,239,191,189,28,239,191,189,239,191,189,200,173,239,191,189,106,75,239,191,189,19,106,239,191,189,46,107,239,191,189,126,37,214,182,239,191,189,239,191,189,53,239,191,189,103,199,132,59,119,47,239,191,189,40,36,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,51,50,239,191,189,47,239,191,189,112,76,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,87,239,191,189,239,191,189,103,0,41,104,239,191,189,28,239,191,189,66,239,191,189,48,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,58,239,191,189,239,191,189,86,56,108,126,239,191,189,239,191,189,239,191,189,105,239,191,189,8,239,191,189,109,70,239,191,189,239,191,189,92,64,22,12,239,191,189,72,239,191,189,27,72,28,239,191,189,239,191,189,239,191,189,205,179,76,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,116,115,42,239,191,189,239,191,189,239,191,189,39,239,191,189,111,239,191,189,39,58,239,191,189,98,239,191,189,45,239,191,189,239,191,189,239,191,189,29,36,98,239,191,189,239,191,189,26,239,191,189,25,239,191,189,79,101,239,191,189,85,239,191,189,95,204,162,239,191,189,239,191,189,111,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa582456b9a6b45988a7eb7997e6c078c",
                        blob: "Blob6f0573dfe7bf4f4882db979c7057bfe4",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03222 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03222_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03222_s.txt", Encoding.UTF8);

    public Test03222() : base(recordedRequest, recordedResponse, "accounts8d439fe9ae22412")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,209,159,239,191,189,2,239,191,189,101,213,153,239,191,189,45,32,239,191,189,239,191,189,58,239,191,189,239,191,189,91,47,72,65,110,18,239,191,189,239,191,189,15,239,191,189,45,239,191,189,29,73,239,191,189,239,191,189,66,98,239,191,189,101,109,239,191,189,239,191,189,94,61,38,72,239,191,189,8,16,108,239,191,189,239,191,189,111,125,124,126,239,191,189,239,191,189,239,191,189,239,191,189,21,56,74,123,62,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,125,239,191,189,48,239,191,189,121,7,239,191,189,239,191,189,239,191,189,97,126,53,101,9,196,164,239,191,189,239,191,189,123,239,191,189,239,191,189,20,239,191,189,239,191,189,69,8,85,239,191,189,8,64,239,191,189,239,191,189,0,239,191,189,77,239,191,189,39,33,239,191,189,96,119,239,191,189,26,239,191,189,83,239,191,189,239,191,189,239,191,189,50,239,191,189,114,7,239,191,189,239,191,189,111,4,239,191,189,52,239,191,189,95,44,239,191,189,33,239,191,189,86,100,111,118,239,191,189,212,168,239,191,189,40,27,110,239,191,189,39,108,108,17,94,97,37,239,191,189,107,239,191,189,22,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,0,74,9,239,191,189,32,239,191,189,116,239,191,189,127,96,14,9,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,107,239,191,189,239,191,189,1,239,191,189,118,239,191,189,52,127,77,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,40,239,191,189,101,239,191,189,6,111,239,191,189,239,191,189,239,191,189,1,23,239,191,189,239,191,189,239,191,189,71,107,22,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,124,38,239,191,189,239,191,189,91,239,191,189,78,60,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,98,34,239,191,189,95,15,239,191,189,239,191,189,6,57,239,191,189,22,239,191,189,239,191,189,239,191,189,41,80,239,191,189,73,26,239,191,189,210,167,239,191,189,239,191,189,239,191,189,54,78,65,73,112,239,191,189,23,239,191,189,86,239,191,189,220,183,50,85,65,239,191,189,32,239,191,189,101,68,232,184,149,239,191,189,239,191,189,40,207,188,9,239,191,189,239,191,189,43,34,239,191,189,239,191,189,91,70,239,191,189,200,132,239,191,189,239,191,189,63,10,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,125,239,191,189,239,191,189,239,191,189,72,45,91,239,191,189,90,225,176,149,96,124,239,191,189,99,239,191,189,239,191,189,69,45,121,239,191,189,64,21,239,191,189,239,191,189,239,191,189,11,74,239,191,189,239,191,189,239,191,189,45,91,239,191,189,239,191,189,32,239,191,189,86,239,191,189,239,191,189,239,191,189,40,239,191,189,2,63,118,239,191,189,79,78,28,239,191,189,27,119,4,44,115,239,191,189,239,191,189,82,119,239,191,189,15,37,23,239,191,189,51,33,66,27,67,96,239,191,189,239,191,189,80,239,191,189,99,239,191,189,19,72,101,239,191,189,239,191,189,239,191,189,231,164,182,86,118,31,239,191,189,239,191,189,4,43,11,239,191,189,3,239,191,189,45,11,85,239,191,189,52,10,239,191,189,40,121,38,112,239,191,189,239,191,189,115,119,239,191,189,21,20,239,191,189,48,48,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,69,239,191,189,95,29,239,191,189,60,15,63,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,78,38,72,23,239,191,189,239,191,189,239,191,189,126,85,239,191,189,239,191,189,239,191,189,239,191,189,56,96,26,239,191,189,2,239,191,189,105,239,191,189,239,191,189,58,239,191,189,71,239,191,189,35,239,191,189,113,5,239,191,189,239,191,189,30,239,191,189,239,191,189,87,109,239,191,189,78,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439fe9ae22412",
                        container: "containers8ab8df46682246b4abf14dfdad3d348c",
                        blob: "Blob9da00e3bb00e4e0e9a3cb4ebf4ac0422",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05405 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05405_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05405_s.txt", Encoding.UTF8);

    public Test05405() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,101,239,191,189,0,239,191,189,239,191,189,0,40,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,222,154,53,64,29,239,191,189,71,29,239,191,189,239,191,189,61,102,66,239,191,189,67,31,109,239,191,189,239,191,189,66,239,191,189,37,82,82,196,143,41,239,191,189,239,191,189,239,191,189,41,101,112,30,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,82,94,239,191,189,54,239,191,189,47,18,24,239,191,189,72,239,191,189,123,239,191,189,120,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,36,239,191,189,100,95,239,191,189,15,5,75,3,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,97,54,94,5,239,191,189,239,191,189,7,87,66,84,239,191,189,89,38,239,191,189,75,46,95,127,58,74,239,191,189,41,239,191,189,20,23,239,191,189,82,239,191,189,80,239,191,189,225,174,170,65,239,191,189,239,191,189,30,22,205,129,239,191,189,239,191,189,239,191,189,20,71,98,239,191,189,55,14,107,65,239,191,189,53,239,191,189,13,239,191,189,239,191,189,239,191,189,215,139,14,6,239,191,189,115,64,239,191,189,239,191,189,73,239,191,189,15,72,239,191,189,239,191,189,102,0,102,239,191,189,0,239,191,189,93,239,191,189,239,191,189,66,66,239,191,189,239,191,189,116,239,191,189,239,191,189,0,45,69,239,191,189,239,191,189,214,176,46,239,191,189,211,152,126,91,239,191,189,239,191,189,34,239,191,189,239,191,189,206,168,239,191,189,239,191,189,239,191,189,1,122,239,191,189,76,239,191,189,81,239,191,189,65,58,76,239,191,189,239,191,189,239,191,189,2,239,191,189,194,144,80,55,75,44,56,239,191,189,81,60,67,31,17,7,239,191,189,239,191,189,239,191,189,56,61,68,123,23,239,191,189,239,191,189,220,176,239,191,189,93,49,239,191,189,239,191,189,28,31,239,191,189,52,61,88,111,124,239,191,189,200,155,239,191,189,16,239,191,189,50,239,191,189,57,239,191,189,92,239,191,189,121,239,191,189,239,191,189,66,239,191,189,7,100,90,239,191,189,239,191,189,218,173,239,191,189,106,39,239,191,189,64,239,191,189,104,239,191,189,126,239,191,189,122,123,239,191,189,121,107,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,88,120,97,239,191,189,239,191,189,54,239,191,189,20,239,191,189,40,239,191,189,239,191,189,239,191,189,89,50,239,191,189,101,43,239,191,189,74,239,191,189,41,66,97,32,239,191,189,239,191,189,239,191,189,239,191,189,65,16,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,74,50,239,191,189,105,239,191,189,82,239,191,189,239,191,189,239,191,189,17,119,110,239,191,189,14,239,191,189,239,191,189,79,30,45,104,239,191,189,239,191,189,100,55,239,191,189,239,191,189,21,18,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,36,239,191,189,239,191,189,214,181,111,118,239,191,189,239,191,189,55,61,77,114,239,191,189,58,119,94,127,239,191,189,225,138,167,4,239,191,189,107,239,191,189,220,151,63,101,239,191,189,216,164,234,178,181,121,105,239,191,189,239,191,189,239,191,189,19,44,239,191,189,239,191,189,106,75,239,191,189,28,76,21,76,56,111,125,239,191,189,66,107,6,239,191,189,239,191,189,124,239,191,189,84,239,191,189,117,239,191,189,223,135,239,191,189,239,191,189,22,239,191,189,239,157,147,215,168,239,191,189,68,239,191,189,239,191,189,34,24,239,191,189,81,239,191,189,53,109,239,191,189,115,13,98,42,19,112,239,191,189,239,191,189,90,36,239,191,189,108,80,89,103,239,191,189,239,191,189,73,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,2,31,89,105,239,191,189,77,213,152,113,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse469b336fd324ec3b666c9ae7029a170",
                        blob: "PageBlob52855d02f71f4ebeb273d320d534b38e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03948 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03948_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03948_s.txt", Encoding.UTF8);

    public Test03948() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa4bcb04a7c4d40e99f66414d935aee50",
                        blob: "PageBlob8035e0805c1d45bea8806dbe9bb65433",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05692 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05692_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05692_s.txt", Encoding.UTF8);

    public Test05692() : base(recordedRequest, recordedResponse, "accounts8d439ff206df192")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,65,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,30,239,191,189,88,239,191,189,44,100,239,191,189,16,239,191,189,43,239,191,189,239,191,189,44,57,104,239,191,189,41,239,191,189,239,191,189,239,191,189,23,118,32,119,222,165,26,75,239,191,189,65,45,239,191,189,79,60,102,95,239,191,189,125,55,239,191,189,239,191,189,207,188,239,191,189,109,90,8,63,239,191,189,239,191,189,86,239,191,189,92,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,29,51,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,127,239,191,189,123,239,191,189,239,191,189,90,239,191,189,99,239,191,189,113,74,18,11,53,25,239,191,189,53,64,230,147,162,126,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,109,125,10,61,62,239,191,189,239,191,189,113,239,191,189,14,2,96,16,239,191,189,60,56,239,191,189,239,191,189,25,0,239,191,189,239,191,189,239,191,189,105,96,1,8,239,191,189,239,191,189,61,239,191,189,9,239,191,189,239,191,189,3,239,191,189,7,239,191,189,239,191,189,41,14,196,141,215,145,65,109,10,239,191,189,239,191,189,234,184,131,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,86,239,191,189,118,84,239,191,189,239,191,189,24,239,191,189,111,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,31,239,191,189,31,239,191,189,239,191,189,239,191,189,239,191,189,83,1,239,191,189,239,191,189,239,191,189,85,70,101,239,191,189,65,239,191,189,239,191,189,22,239,191,189,239,191,189,114,85,239,191,189,73,239,191,189,55,200,147,239,191,189,110,124,103,201,189,239,191,189,239,191,189,239,191,189,34,82,114,16,96,47,41,239,191,189,239,191,189,52,239,191,189,57,239,191,189,27,239,191,189,63,239,191,189,61,119,239,191,189,99,27,57,239,191,189,239,191,189,73,239,191,189,222,156,52,18,86,45,239,191,189,239,191,189,47,37,97,239,191,189,86,31,239,191,189,119,239,191,189,229,167,136,97,203,138,16,107,114,7,239,191,189,6,25,239,191,189,50,23,86,75,47,239,191,189,34,87,11,239,191,189,39,108,25,74,72,33,98,239,191,189,239,191,189,239,191,189,12,53,239,191,189,119,18,17,35,239,191,189,239,191,189,38,110,239,191,189,22,239,191,189,47,239,191,189,239,191,189,212,135,239,191,189,113,239,191,189,239,191,189,239,191,189,58,94,112,239,191,189,34,81,239,191,189,239,191,189,98,115,115,239,191,189,87,239,191,189,56,29,103,123,115,239,191,189,123,58,85,116,27,107,34,239,191,189,37,239,191,189,52,127,239,191,189,33,61,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,49,239,191,189,31,239,191,189,105,239,191,189,239,191,189,25,239,191,189,35,0,8,239,191,189,239,191,189,239,191,189,47,22,239,191,189,239,191,189,62,239,191,189,99,53,239,191,189,239,191,189,124,9,239,191,189,239,191,189,99,238,175,178,67,239,191,189,239,191,189,2,239,191,189,54,62,101,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,99,107,239,191,189,239,191,189,100,60,239,191,189,80,125,24,239,191,189,121,239,191,189,56,83,52,81,86,239,191,189,239,191,189,239,191,189,44,36,1,114,239,191,189,239,191,189,239,191,189,54,101,239,191,189,239,191,189,86,40,125,239,191,189,31,239,191,189,77,6,27,239,191,189,239,191,189,239,191,189,206,188,64,44,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,55,70,239,191,189,111,101,239,191,189,75,25,23,63,22,35,214,187,91,21,239,191,189,9,239,191,189,239,191,189,58,239,191,189,74,50,239,191,189,239,191,189,98,239,191,189,108,122,239,191,189,239,191,189,98})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff206df192",
                        container: "containersd1edb5e790eb45f5a6d8ede3eafe7d99",
                        blob: "PageBlob4929a0f34af542b68700ace4a7ff4001",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03969 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03969_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03969_s.txt", Encoding.UTF8);

    public Test03969() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0bbc5d2759ab45c68f2ecde32251e14a",
                        blob: "PageBlob60fafdc34caf4d86800f1efac3bd06c9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05646 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05646_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05646_s.txt", Encoding.UTF8);

    public Test05646() : base(recordedRequest, recordedResponse, "accounts8d439ff1ff53e4d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{76,91,239,191,189,90,122,239,191,189,239,191,189,22,239,191,189,239,191,189,75,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,103,56,35,239,191,189,118,83,54,239,191,189,239,191,189,15,93,239,191,189,46,239,191,189,41,239,191,189,211,174,239,191,189,239,191,189,31,59,109,239,191,189,239,191,189,74,239,191,189,2,31,46,63,239,191,189,239,191,189,14,239,191,189,110,239,191,189,104,8,91,239,191,189,25,239,191,189,116,73,117,85,239,191,189,29,12,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,100,239,191,189,239,191,189,8,239,191,189,127,99,239,191,189,29,239,191,189,47,239,191,189,98,76,239,191,189,69,239,191,189,239,191,189,45,34,239,191,189,74,239,191,189,49,239,191,189,27,239,191,189,18,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,10,87,239,191,189,0,239,191,189,113,239,191,189,239,191,189,87,124,70,122,35,239,191,189,48,99,239,191,189,107,125,9,239,191,189,25,239,191,189,239,191,189,19,121,239,191,189,80,91,109,239,191,189,239,191,189,239,191,189,102,65,239,191,189,239,191,189,239,191,189,198,188,107,28,239,191,189,43,239,191,189,122,239,191,189,19,239,191,189,35,22,124,239,191,189,239,191,189,5,239,191,189,95,239,191,189,239,191,189,77,239,191,189,102,92,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,204,180,239,191,189,239,191,189,239,191,189,110,55,87,103,7,32,96,80,36,239,191,189,10,121,239,191,189,4,239,191,189,10,239,191,189,239,191,189,239,191,189,58,239,191,189,52,108,115,239,191,189,19,57,43,203,146,70,83,239,191,189,80,239,191,189,36,239,191,189,48,97,97,92,63,239,191,189,4,239,191,189,44,220,153,26,27,57,50,239,191,189,71,3,57,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,12,239,191,189,120,99,31,239,191,189,239,191,189,67,239,191,189,103,219,171,54,239,191,189,17,239,191,189,88,19,239,191,189,239,191,189,76,239,191,189,89,239,191,189,239,191,189,109,123,38,239,191,189,239,191,189,239,191,189,239,191,189,126,72,239,191,189,127,239,191,189,239,191,189,18,10,105,239,191,189,239,191,189,99,8,239,191,189,70,35,239,191,189,57,88,4,41,72,78,65,239,191,189,194,177,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,18,239,191,189,11,239,191,189,0,239,191,189,26,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,53,3,239,191,189,63,239,191,189,84,0,62,62,239,191,189,19,96,239,191,189,55,216,147,15,239,191,189,239,191,189,51,239,191,189,202,182,87,93,14,239,191,189,29,74,36,7,1,229,180,163,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,83,49,110,239,191,189,239,191,189,105,85,87,98,239,191,189,3,239,191,189,1,113,25,6,239,191,189,127,69,68,32,239,191,189,12,95,10,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,95,62,239,191,189,72,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,3,31,239,191,189,66,239,191,189,240,168,156,146,239,191,189,239,191,189,96,124,97,64,239,191,189,107,239,191,189,118,94,239,191,189,36,2,239,191,189,51,239,191,189,239,191,189,47,216,160,239,191,189,91,11,39,9,64,38,239,191,189,9,239,191,189,91,85,77,53,239,191,189,239,191,189,29,239,191,189,119,239,191,189,57,239,191,189,79,239,191,189,239,191,189,239,191,189,28,65,15,9,49,120})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff1ff53e4d",
                        container: "containers59c24330bce4469db16358a74b8d3549",
                        blob: "Blob85fd3970e56646b49301650fafb911aa",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03922 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03922_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03922_s.txt", Encoding.UTF8);

    public Test03922() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers9a7313b5bdbf42d1b35d9746f93ed358",
                        blob: "PageBlob95e2b8e601b14317bf93160322062676",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05756 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05756_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05756_s.txt", Encoding.UTF8);

    public Test05756() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{65,239,191,189,37,41,92,239,191,189,98,239,191,189,239,191,189,34,239,191,189,239,191,189,78,54,63,239,191,189,239,191,189,54,108,79,97,239,191,189,70,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,121,239,191,189,239,191,189,9,239,191,189,82,239,191,189,38,13,239,191,189,106,102,239,191,189,106,108,71,223,188,239,191,189,89,239,191,189,124,239,191,189,239,191,189,239,191,189,92,239,191,189,38,121,58,239,191,189,239,191,189,239,191,189,126,73,239,191,189,239,191,189,88,239,191,189,239,191,189,7,239,191,189,110,3,124,51,239,191,189,239,191,189,29,239,191,189,28,3,239,191,189,239,191,189,239,191,189,112,107,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,81,32,236,156,135,239,191,189,239,191,189,81,239,191,189,14,125,84,239,191,189,102,44,9,239,191,189,30,124,239,191,189,42,239,191,189,239,191,189,20,239,191,189,76,86,86,101,238,155,164,239,191,189,239,191,189,239,191,189,104,49,239,191,189,58,239,191,189,66,239,191,189,98,239,191,189,127,65,54,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,72,239,191,189,239,191,189,58,114,239,191,189,239,191,189,17,115,216,191,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,101,239,191,189,239,191,189,117,39,87,10,32,239,191,189,239,191,189,45,239,191,189,195,169,14,239,191,189,31,90,43,90,239,191,189,3,86,239,191,189,239,191,189,21,239,191,189,2,116,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,210,176,109,47,82,239,191,189,31,239,191,189,21,22,48,205,164,125,239,191,189,46,123,98,239,191,189,239,191,189,17,239,191,189,7,239,191,189,57,10,105,239,191,189,36,36,120,4,76,239,191,189,239,191,189,42,116,84,54,239,191,189,98,239,191,189,239,191,189,210,166,8,68,239,191,189,239,191,189,35,34,4,239,191,189,76,239,191,189,239,191,189,39,239,191,189,117,20,122,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,18,3,6,14,90,8,35,18,239,191,189,53,4,48,239,191,189,117,239,191,189,0,1,116,7,0,11,239,191,189,3,239,191,189,239,191,189,33,112,239,191,189,14,239,191,189,25,220,177,112,239,191,189,239,191,189,29,20,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,69,78,5,21,239,191,189,239,191,189,68,239,191,189,87,239,191,189,41,0,56,48,57,239,191,189,239,191,189,3,57,27,39,127,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,126,4,16,42,239,191,189,239,191,189,107,121,29,239,191,189,239,191,189,27,89,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,92,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,113,82,14,4,121,239,191,189,127,73,36,239,191,189,14,239,191,189,101,44,26,239,191,189,116,70,12,37,239,191,189,239,191,189,239,191,189,239,191,189,8,89,239,191,189,66,239,191,189,88,58,239,191,189,239,191,189,239,191,189,239,191,189,38,15,239,191,189,91,109,239,191,189,94,239,191,189,9,239,191,189,77,10,47,122,239,191,189,55,239,191,189,110,239,191,189,73,239,191,189,239,191,189,15,239,191,189,32,239,191,189,61,83,203,180,94,195,137,50,239,191,189,215,179,239,191,189,75,79,70,239,191,189,40,239,191,189,78,239,191,189,239,191,189,83,33,239,191,189,65,51,239,191,189,98,239,191,189,239,191,189,239,191,189,59,118,239,191,189,11,239,191,189,84,120,239,191,189,239,191,189,239,191,189,239,191,189,203,132,239,191,189,239,191,189,83,239,191,189,80,239,191,189,239,191,189,65,239,191,189,110,117,0,239,191,189,10,28,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,40,239,191,189,67,126,107,239,191,189,49,205,138,64,239,191,189,239,191,189,5,114,239,191,189,17,239,191,189,24,239,191,189,106,8,39,11,30,74,91,239,191,189,239,191,189,45,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,55,15,3,239,191,189,53,120,12,4,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,108,68,32,239,191,189,56,95,32,84,56,68,93,14,239,191,189,8,15,239,191,189,59,239,191,189,63,119,239,191,189,114,102,36,239,191,189,17,70,239,191,189,73,40,111,239,191,189,52,40,239,191,189,239,191,189,28,125,114,60,239,191,189,215,190,239,191,189,38,239,191,189,3,239,191,189,239,191,189,116,127,127,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,218,163,239,191,189,28,239,191,189,93,94,239,191,189,94,70,31,98,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,203,173,13,81,239,191,189,212,169,239,191,189,86,47,211,137,239,191,189,239,191,189,36,98,63,232,162,152,201,134,35,239,191,189,239,191,189,84,28,239,191,189,239,191,189,239,191,189,94,53,94,239,191,189,239,191,189,64,239,191,189,239,191,189,26,114,239,191,189,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,215,191,239,191,189,5,4,2,38,239,191,189,60,239,191,189,239,191,189,61,239,191,189,118,208,157,43,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,47,239,191,189,19,126,115,10,217,186,239,191,189,11,239,191,189,32,239,191,189,47,89,239,191,189,239,191,189,86,204,147,239,191,189,239,191,189,239,191,189,220,144,239,191,189,239,191,189,222,172,239,191,189,239,191,189,80,239,191,189,239,191,189,106,239,191,189,118,239,191,189,99,239,191,189,239,191,189,49,239,191,189,86,36,109,239,191,189,239,191,189,12,239,191,189,14,239,191,189,52,73,239,191,189,55,239,191,189,29,71,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,42,239,191,189,26,47,239,191,189,239,191,189,239,191,189,58,239,191,189,127,239,191,189,239,191,189,52,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,22,239,191,189,239,191,189,93,19,239,191,189,24,239,191,189,239,191,189,96,93,74,58,239,191,189,215,158,239,191,189,239,191,189,68,20,11,92,24,239,191,189,94,35,113,239,191,189,239,191,189,20,239,191,189,213,166,22,239,191,189,94,107,239,191,189,211,190,239,191,189,239,191,189,239,191,189,78,46,70,124,6,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,41,68,70,239,191,189,239,191,189,112,239,191,189,108,239,191,189,117,239,191,189,239,191,189,36,239,191,189,121,50,239,191,189,28,239,191,189,239,191,189,16,239,191,189,202,158,24,239,191,189,106,239,145,128,239,191,189,3,239,191,189,60,239,191,189,25,37,87,239,191,189,78,209,143,47,217,165,239,191,189,87,7,239,191,189,239,191,189,239,191,189,239,191,189,76,68,201,149,121,239,191,189,108,78,5,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,115,95,12,85,61,54,239,191,189,239,191,189,101,239,191,189,239,191,189,117,78,98,93,205,153,20,239,191,189,239,191,189,114,239,191,189,239,191,189,126,239,191,189,72,12,239,191,189,23,86,32,239,191,189,111,239,191,189,50,239,191,189,239,191,189,239,191,189,21,239,191,189,73,48,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,103,12,125,110,239,191,189,68,117,126,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,77,239,191,189,217,165,239,191,189,239,191,189,42,23,8,116,239,191,189,6,41,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,22,114,39,39,239,191,189,39,239,191,189,124,239,191,189,239,191,189,239,191,189,81,32,239,191,189,60,239,191,189,117,239,191,189,44,61,76,239,191,189,239,191,189,239,191,189,117,29,72,11,37,239,191,189,239,191,189,239,191,189,24,229,184,184,239,191,189,239,191,189,122,49,239,191,189,239,191,189,40,239,191,189,239,191,189,111,239,191,189,105,239,191,189,37,239,191,189,36,78,239,191,189,93,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,87,48,60,77,56,59,27,239,191,189,5,239,191,189,118,239,191,189,11,239,191,189,214,128,239,191,189,210,173,118,239,191,189,115,239,191,189,239,191,189,98,239,191,189,55,90,239,191,189,46,239,191,189,239,191,189,104,85,239,191,189,239,191,189,106,51,239,191,189,228,172,144,119,114,67,13,239,191,189,73,239,191,189,239,191,189,39,104,38,239,191,189,120,239,191,189,110,4,239,191,189,239,191,189,127,102,239,191,189,23,239,191,189,73,36,239,191,189,20,103,121,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,41,211,164,239,191,189,79,239,191,189,50,66,113,15,115,239,191,189,239,191,189,47,239,191,189,77,44,41,239,191,189,90,239,191,189,239,191,189,98,239,191,189,239,191,189,119,239,191,189,239,191,189,103,28,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,68,239,191,189,96,239,191,189,21,32,79,107,73,239,191,189,112,239,191,189,212,158,239,191,189,239,191,189,101,112,239,191,189,75,239,191,189,214,138,239,191,189,84,105,71,239,191,189,20,85,7,91,239,191,189,18,105,117,63,239,191,189,77,239,191,189,67,11,100,239,191,189,239,191,189,239,191,189,209,141,99,1,116,124,3,84,63,109,89,239,191,189,239,191,189,239,191,189,217,133,87,239,191,189,239,191,189,20,14,239,191,189,53,32,239,191,189,122,35,90,8,239,191,189,114,239,191,189,239,191,189,210,152,239,191,189,102,18,239,191,189,88,55,239,191,189,239,191,189,27,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,111,22,239,191,189,115,15,88,67,90,239,191,189,89,239,191,189,75,114,239,191,189,239,191,189,239,191,189,239,191,189,18,31,30,69,20,57,239,191,189,239,191,189,239,191,189,57,4,239,191,189,18,239,191,189,239,191,189,74,24,2,239,191,189,1,94,239,191,189,97,35,239,191,189,239,191,189,50,239,191,189,239,191,189,95,0,113,23,239,191,189,239,191,189,239,191,189,239,191,189,110,91,239,191,189,37,239,191,189,32,30,63,108,239,191,189,239,191,189,9,1,90,239,191,189,17,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,47,7,12,239,191,189,57,239,191,189,239,191,189,92,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,66,239,191,189,75,239,191,189,90,239,191,189,239,191,189,5,7,96,118,98,5,220,164,239,191,189,44,239,191,189,25,239,191,189,239,191,189,229,172,150,239,191,189,239,191,189,5,85,239,191,189,81,85,197,145,32,124,23,65,49,239,191,189,101,1,239,191,189,50,50,95,239,191,189,239,191,189,39,7,239,191,189,123,239,191,189,239,191,189,17,239,191,189,93,55,239,191,189,113,115,239,191,189,239,191,189,86,239,191,189,10,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,8,239,191,189,121,54,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,111,3,127,73,31,239,191,189,239,191,189,57,239,191,189,109,50,123,40,239,191,189,40,6,239,191,189,122,39,239,191,189,239,191,189,14,99,206,169,239,191,189,125,239,191,189,120,239,191,189,69,110,239,191,189,239,191,189,81,239,191,189,64,239,191,189,20,57,239,191,189,239,191,189,64,239,191,189,55,81,239,191,189,105,239,191,189,22,211,191,85,239,191,189,239,191,189,28,122,117,35,14,239,191,189,239,191,189,0,40,196,155,239,191,189,1,239,191,189,106,239,191,189,239,191,189,19,71,239,191,189,31,34,239,191,189,114,107,239,191,189,117,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,53,33,203,135,5,88,45,239,191,189,24,17,239,191,189,195,134,239,191,189,239,191,189,239,191,189,4,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,24,107,61,83,239,191,189,21,16,239,191,189,73,239,191,189,73,239,191,189,71,14,239,191,189,48,10,239,191,189,214,167,111,239,191,189,239,191,189,29,109,2,124,5,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,30,60,239,191,189,65,212,188,239,191,189,31,64,239,191,189,239,191,189,44,16,239,191,189,239,191,189,67,53,73,18,239,191,189,239,191,189,102,102,239,191,189,239,191,189,119,33,2,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,50,239,191,189,72,239,191,189,101,93,239,191,189,61,74,7,239,191,189,239,191,189,67,99,239,191,189,102,23,239,191,189,239,191,189,126,213,139,239,191,189,239,191,189,69,123,29,239,191,189,16,71,239,191,189,239,191,189,118,239,191,189,239,191,189,236,153,173,53,239,191,189,41,27,239,191,189,87,239,191,189,222,158,4,46,239,191,189,4,83,10,92,101,32,103,106,239,191,189,64,53,44,3,91,239,191,189,56,239,191,189,239,191,189,34,121,126,59,194,164,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,226,181,167,239,191,189,124,25,50,105,239,191,189,46,239,191,189,239,191,189,239,191,189,239,191,189,23,69,239,191,189,239,191,189,17,239,191,189,239,191,189,19,201,144,102,239,191,189,239,191,189,41,239,191,189,239,191,189,76,239,191,189,239,191,189,73,77,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,119,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,22,104,61,64,239,191,189,80,118,52,239,191,189,239,191,189,201,145,110,239,191,189,93,58,40,239,191,189,239,191,189,81,239,191,189,103,2,239,191,189,120,239,191,189,239,191,189,239,191,189,21,0,28,239,191,189,239,191,189,47,239,191,189,75,90,120,74,239,191,189,0,239,191,189,3,239,191,189,239,191,189,31,127,72,45,113,239,191,189,107,223,140,57,239,191,189,102,239,191,189,200,186,127,239,191,189,31,239,191,189,239,191,189,30,239,191,189,63,32,18,223,175,119,239,191,189,81,43,100,7,14,88,110,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,73,239,191,189,239,191,189,229,185,176,239,191,189,127,74,121,8,98,111,100,64,40,27,239,191,189,239,191,189,239,191,189,26,59,14,74,94,239,191,189,111,75,239,191,189,33,122,122,239,191,189,83,114,72,42,44,38,239,191,189,239,191,189,69,6,239,191,189,92,239,191,189,239,191,189,239,191,189,46,96,120,18,239,191,189,239,191,189,239,191,189,13,231,171,134,38,65,67,239,191,189,40,239,191,189,239,191,189,122,28,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,12,239,191,189,53,92,239,191,189,239,191,189,123,29,239,191,189,239,191,189,104,239,191,189,43,239,191,189,100,96,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,221,179,239,191,189,42,239,191,189,1,54,98,239,191,189,239,191,189,219,175,239,191,189,216,139,239,191,189,239,191,189,50,239,191,189,38,239,191,189,127,239,191,189,239,191,189,79,121,239,191,189,239,191,189,127,72,107,21,104,24,87,239,191,189,30,239,191,189,114,122,239,191,189,51,32,239,191,189,239,191,189,123,199,140,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,94,28,14,239,191,189,8,116,239,191,189,239,191,189,64,59,239,191,189,71,194,128,239,191,189,64,239,191,189,74,63,239,191,189,94,239,191,189,239,191,189,211,178,1,239,191,189,239,191,189,112,239,191,189,28,239,191,189,77,239,191,189,239,191,189,16,239,191,189,106,5,71,79,223,132,43,52,4,11,239,191,189,33,239,191,189,13,239,191,189,62,13,239,191,189,71,63,7,86,114,239,191,189,37,207,156,239,191,189,93,117,239,191,189,84,239,191,189,239,191,189,85,68,239,191,189,110,127,80,239,191,189,239,191,189,239,191,189,239,191,189,204,157,217,145,110,239,191,189,63,239,191,189,69,209,171,20,239,191,189,104,42,15,239,191,189,214,143,239,191,189,239,191,189,239,191,189,10,239,191,189,104,70,239,191,189,127,239,191,189,239,191,189,103,239,191,189,124,18,239,191,189,239,191,189,11,58,239,191,189,53,239,191,189,15,239,191,189,239,191,189,65,239,191,189,239,191,189,67,111,104,32,239,191,189,30,114,44,9,239,191,189,239,191,189,5,100,239,191,189,122,78,53,67,106,22,85,239,191,189,24,239,191,189,71,37,89,239,191,189,239,191,189,239,191,189,40,118,239,191,189,239,191,189,90,15,239,191,189,123,239,191,189,239,191,189,10,239,191,189,126,39,49,52,76,239,191,189,17,239,191,189,239,191,189,239,191,189,214,155,58,239,191,189,86,239,191,189,216,163,239,191,189,122,239,191,189,50,239,191,189,98,78,239,191,189,70,107,239,191,189,239,191,189,239,191,189,239,191,189,12,112,36,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,27,124,239,191,189,239,191,189,2,239,191,189,239,191,189,197,143,73,75,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,101,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,27,239,191,189,51,49,239,191,189,239,191,189,239,191,189,23,239,191,189,26,124,39,239,191,189,111,239,191,189,45,58,118,62,209,130,239,191,189,239,191,189,239,191,189,239,191,189,60,82,34,239,191,189,49,239,191,189,239,191,189,125,104,102,12,239,191,189,108,239,191,189,239,191,189,65,239,191,189,80,239,191,189,18,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,86,239,191,189,96,239,191,189,23,239,191,189,127,79,95,239,191,189,58,119,84,239,191,189,239,191,189,111,9,239,191,189,122,205,180,74,239,191,189,239,191,189,64,239,191,189,122,16,239,191,189,92,30,68,239,191,189,59,239,191,189,239,191,189,8,239,191,189,239,191,189,12,239,191,189,113,239,191,189,239,191,189,123,216,135,239,191,189,239,191,189,52,239,191,189,52,30,239,191,189,239,191,189,12,107,239,191,189,73,72,44,110,239,191,189,2,124,239,191,189,239,191,189,24,239,191,189,39,102,45,239,191,189,110,239,191,189,66,239,191,189,239,191,189,80,104,70,239,191,189,24,99,111,239,191,189,38,239,191,189,102,239,191,189,23,117,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,41,239,191,189,1,110,239,191,189,239,191,189,205,191,90,239,191,189,239,191,189,86,239,191,189,66,239,191,189,2,66,86,84,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,16,239,191,189,45,239,191,189,97,239,191,189,35,239,191,189,239,191,189,103,239,191,189,56,71,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,65,239,191,189,50,239,191,189,239,191,189,239,191,189,39,102,239,191,189,239,191,189,239,191,189,9,239,191,189,106,239,191,189,239,191,189,36,44,33,239,191,189,10,50,239,191,189,120,122,42,9,15,239,191,189,239,191,189,1,88,239,191,189,239,191,189,6,122,239,191,189,239,191,189,239,191,189,57,34,37,41,19,93,28,206,135,239,191,189,239,191,189,100,84,123,239,191,189,14,213,186,54,239,191,189,239,191,189,24,239,191,189,25,239,191,189,94,13,239,191,189,100,69,29,57,239,191,189,49,71,239,191,189,12,239,191,189,100,28,14,59,239,191,189,5,89,239,191,189,4,127,23,239,191,189,239,191,189,3,239,191,189,3,92,32,122,12,239,191,189,239,191,189,80,63,106,66,239,191,189,81,239,191,189,34,52,239,191,189,1,62,86,26,113,88,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,108,239,191,189,25,239,191,189,239,191,189,239,191,189,38,110,0,3,239,191,189,239,191,189,239,191,189,239,191,189,68,105,8,239,191,189,239,191,189,74,55,239,191,189,102,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,76,239,191,189,90,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,21,77,13,113,1,59,239,191,189,78,239,191,189,239,191,189,76,56,239,191,189,22,121,67,239,191,189,119,58,108,239,191,189,20,208,151,239,191,189,239,191,189,104,85,10,83,211,163,239,191,189,60,204,147,61,239,191,189,239,191,189,42,7,75,239,191,189,124,66,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,102,21,239,191,189,1,124,118,239,191,189,76,239,191,189,80,67,80,239,191,189,239,191,189,80,123,74,239,191,189,6,199,131,15,101,239,191,189,38,84,85,239,191,189,32,239,191,189,116,239,191,189,101,77,60,239,191,189,92,239,191,189,22,239,191,189,239,191,189,87,239,191,189,8,239,191,189,200,152,78,25,57,239,191,189,120,38,2,87,239,191,189,64,239,191,189,40,32,239,191,189,44,239,191,189,220,183,239,191,189,102,109,125,30,239,191,189,239,191,189,63,239,191,189,220,183,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,120,19,63,74,239,191,189,34,28,239,191,189,239,191,189,4,123,104,239,191,189,80,239,191,189,97,43,239,191,189,239,191,189,239,191,189,44,56,72,38,239,191,189,1,239,191,189,82,239,191,189,100,61,36,69,100,239,191,189,239,191,189,28,239,191,189,91,2,239,191,189,239,191,189,239,191,189,96,79,239,191,189,71,239,191,189,41,239,191,189,239,191,189,12,239,191,189,75,239,191,189,239,191,189,35,69,33,115,239,191,189,80,65,239,191,189,86,34,117,239,191,189,7,69,239,191,189,117,239,191,189,40,75,239,191,189,111,239,191,189,80,44,97,124,115,239,191,189,103,24,85,24,201,180,239,191,189,66,58,239,191,189,239,191,189,88,17,10,44,95,239,191,189,239,191,189,239,191,189,239,191,189,97,20,239,191,189,0,59,239,191,189,93,239,191,189,239,191,189,18,32,239,191,189,109,95,61,239,191,189,93,239,191,189,83,77,96,59,104,52,239,191,189,70,94,239,191,189,35,239,191,189,198,173,239,191,189,239,191,189,5,3,239,191,189,23,239,191,189,44,239,191,189,76,69,125,211,180,239,191,189,239,191,189,95,1,239,191,189,122,239,191,189,239,191,189,38,239,191,189,239,191,189,69,239,191,189,41,239,191,189,239,191,189,39,75,115,76,239,191,189,89,57,62,70,84,38,239,191,189,19,239,191,189,239,191,189,96,6,92,239,191,189,239,191,189,239,191,189,239,191,189,13,50,239,191,189,89,239,191,189,88,239,191,189,210,153,3,239,191,189,123,30,49,96,103,99,88,239,191,189,32,239,191,189,100,84,239,191,189,120,48,239,191,189,50,62,239,191,189,125,239,191,189,12,91,62,64,82,45,122,239,191,189,67,115,239,191,189,34,239,191,189,239,191,189,214,186,0,239,191,189,239,191,189,83,93,239,191,189,16,239,191,189,239,191,189,22,225,175,152,200,147,1,239,191,189,69,110,239,191,189,239,191,189,31})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse869b5dc46b74480a8e1ec21eaa77405",
                        blob: "Blob1c7bb4413d93472a86ba69ec37f06669",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-3071",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05710 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05710_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05710_s.txt", Encoding.UTF8);

    public Test05710() : base(recordedRequest, recordedResponse, "accounts8d439ff20abbe5e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,88,49,113,116,109,239,191,189,239,191,189,239,191,189,22,55,239,191,189,239,191,189,239,191,189,44,239,191,189,113,114,239,191,189,76,239,191,189,63,25,239,191,189,239,191,189,107,109,239,191,189,239,191,189,239,191,189,239,191,189,64,12,123,126,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,11,85,239,191,189,209,149,105,77,239,191,189,239,191,189,62,77,25,24,239,191,189,239,191,189,2,239,191,189,24,239,191,189,82,90,118,239,191,189,119,50,125,81,239,191,189,239,191,189,239,191,189,111,239,191,189,59,69,239,191,189,57,200,155,76,116,119,56,120,239,191,189,46,101,239,191,189,239,191,189,5,239,191,189,107,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,42,239,191,189,24,24,239,191,189,239,191,189,48,206,134,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,119,239,191,189,34,239,191,189,239,191,189,73,239,191,189,239,191,189,127,14,43,239,191,189,200,139,239,191,189,31,239,191,189,239,191,189,239,191,189,51,91,239,191,189,84,71,239,191,189,239,191,189,239,191,189,194,191,89,119,119,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,72,239,191,189,5,35,239,191,189,82,6,239,191,189,23,239,191,189,239,191,189,239,191,189,27,44,206,182,239,191,189,68,36,239,191,189,38,239,191,189,239,191,189,239,191,189,64,239,191,189,117,239,191,189,211,188,41,3,239,191,189,102,125,66,239,191,189,239,191,189,53,239,191,189,239,191,189,65,239,191,189,126,95,108,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,11,239,191,189,34,62,80,111,125,239,191,189,239,191,189,83,68,239,191,189,206,149,65,239,191,189,80,116,7,239,191,189,14,104,239,191,189,239,191,189,53,83,239,191,189,12,239,191,189,239,191,189,124,239,191,189,239,191,189,46,68,62,239,191,189,108,108,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,56,107,214,136,127,239,191,189,239,191,189,61,239,191,189,26,28,239,191,189,239,191,189,239,191,189,239,191,189,78,100,51,239,191,189,19,239,191,189,17,239,191,189,239,191,189,74,117,60,100,239,191,189,194,134,239,191,189,239,191,189,39,239,191,189,62,31,239,191,189,27,83,119,7,239,191,189,239,191,189,79,239,191,189,8,239,191,189,229,174,150,124,44,23,100,38,239,191,189,59,62,10,103,82,86,239,191,189,239,191,189,239,191,189,0,104,239,191,189,107,47,112,23,74,239,191,189,120,85,239,191,189,75,239,191,189,108,239,191,189,127,56,43,10,92,239,191,189,195,141,86,239,191,189,17,239,191,189,36,239,191,189,239,191,189,65,239,191,189,195,159,239,191,189,122,127,37,100,239,191,189,123,239,191,189,239,191,189,58,240,184,157,178,239,191,189,29,239,191,189,239,191,189,55,111,239,191,189,97,20,75,239,191,189,6,93,119,239,191,189,88,107,239,191,189,239,191,189,239,191,189,28,4,239,191,189,6,239,191,189,122,21,215,188,27,239,191,189,239,191,189,115,58,81,239,191,189,103,239,191,189,239,191,189,84,239,191,189,55,102,51,104,94,239,191,189,4,36,120,239,191,189,97,239,191,189,208,149,239,191,189,100,239,191,189,239,191,189,89,205,165,239,191,189,88,239,191,189,239,191,189,35,38,50,239,191,189,10,110,239,191,189,228,158,133,239,191,189,71,239,191,189,16,239,191,189,67,76,239,191,189,6,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,109,219,168,239,191,189,96,239,191,189,239,191,189,27,86,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,239,191,189,73,25,97,239,191,189,197,186,239,191,189,126,239,191,189,3,24,239,191,189,66,115,239,191,189,82,48})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff20abbe5e",
                        container: "containers4a80e8065cf54490951f2cac1b6847c4",
                        blob: "PageBlob38e746797a7848aa905795ce5e0aa87c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05727 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05727_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05727_s.txt", Encoding.UTF8);

    public Test05727() : base(recordedRequest, recordedResponse, "accounts8d439ff20df03bb")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,21,239,191,189,239,191,189,239,191,189,57,239,191,189,111,57,20,19,87,94,0,53,239,191,189,33,50,22,88,239,191,189,122,239,191,189,59,72,239,191,189,82,239,191,189,47,239,191,189,65,194,146,33,110,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,39,108,78,239,191,189,80,26,239,191,189,20,206,155,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,86,239,191,189,59,63,239,191,189,239,191,189,80,239,191,189,60,239,191,189,239,191,189,239,191,189,127,29,239,191,189,89,239,191,189,99,239,191,189,239,191,189,239,191,189,2,239,191,189,66,239,191,189,115,39,215,150,39,8,84,11,92,17,239,191,189,12,105,84,27,239,191,189,87,239,191,189,120,239,191,189,239,191,189,79,125,54,49,239,191,189,39,239,191,189,95,239,191,189,239,191,189,239,191,189,95,41,239,191,189,106,239,191,189,239,191,189,118,34,12,239,191,189,76,26,14,239,191,189,113,239,191,189,67,32,74,5,35,239,191,189,239,191,189,101,100,239,191,189,112,114,239,191,189,44,239,191,189,15,115,239,191,189,239,191,189,84,239,191,189,88,27,45,113,73,239,191,189,25,48,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,127,75,64,5,239,191,189,47,4,37,239,191,189,239,191,189,60,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,56,88,127,239,191,189,239,191,189,64,75,60,239,191,189,115,92,239,191,189,239,191,189,114,79,113,79,37,41,23,8,239,191,189,82,239,191,189,1,239,191,189,111,80,211,178,64,239,191,189,7,69,71,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,36,96,78,239,191,189,123,239,191,189,28,239,191,189,239,191,189,239,191,189,5,215,186,239,191,189,239,191,189,239,191,189,104,239,191,189,51,239,191,189,122,116,43,92,239,191,189,6,51,58,95,31,61,239,191,189,239,191,189,220,158,32,239,191,189,88,19,35,239,191,189,54,87,239,191,189,239,191,189,239,191,189,41,30,239,191,189,239,191,189,123,80,68,239,191,189,239,191,189,34,42,203,152,239,191,189,113,239,191,189,104,55,14,239,191,189,41,239,191,189,48,16,239,191,189,15,239,191,189,67,29,239,191,189,110,239,191,189,121,10,28,239,191,189,239,191,189,239,191,189,126,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,123,59,109,196,136,56,239,191,189,218,175,0,110,239,191,189,112,239,191,189,64,239,191,189,102,207,152,239,191,189,4,31,239,191,189,112,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,72,239,191,189,51,127,239,191,189,82,239,191,189,239,191,189,239,191,189,10,239,191,189,20,46,10,61,239,191,189,239,191,189,239,191,189,101,239,191,189,92,93,239,191,189,239,191,189,88,239,191,189,239,191,189,79,2,239,191,189,239,191,189,239,191,189,239,191,189,110,108,112,239,191,189,58,69,3,24,85,239,191,189,194,187,1,239,191,189,124,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,119,54,239,191,189,60,239,191,189,239,191,189,239,191,189,199,128,239,191,189,25,65,239,191,189,239,191,189,110,239,191,189,31,239,191,189,111,7,239,191,189,57,56,86,239,191,189,239,191,189,239,191,189,32,239,191,189,111,79,239,191,189,239,191,189,57,92,239,191,189,239,191,189,72,123,239,191,189,83,209,162,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,45,203,139,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,26,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,53,104,239,191,189,239,191,189,239,191,189,239,191,189,102,34,13,66,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff20df03bb",
                        container: "containers1e956aa0575f4503a545afc8e0186cae",
                        blob: "PageBlobb93ce77bd7f94ca09d7fd0ee021914fa",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05664 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05664_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05664_s.txt", Encoding.UTF8);

    public Test05664() : base(recordedRequest, recordedResponse, "accounts8d439ff20248c0f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{117,68,239,191,189,28,239,191,189,18,122,239,191,189,63,73,51,239,191,189,33,239,191,189,239,191,189,34,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,118,86,76,127,78,239,191,189,108,239,191,189,239,191,189,72,239,191,189,239,191,189,108,239,191,189,239,191,189,106,117,239,191,189,26,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,98,101,39,239,191,189,239,191,189,38,239,191,189,37,239,191,189,36,121,239,191,189,239,191,189,71,103,92,239,191,189,70,37,54,90,239,191,189,199,146,119,57,239,191,189,56,110,239,191,189,239,191,189,96,239,191,189,239,191,189,68,60,70,33,73,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,87,45,239,191,189,26,198,168,8,239,191,189,95,239,191,189,16,239,191,189,239,191,189,239,191,189,122,239,191,189,47,25,32,14,239,191,189,34,32,239,191,189,36,239,191,189,239,191,189,215,150,39,239,191,189,239,191,189,78,4,239,191,189,64,23,218,153,239,191,189,239,191,189,239,191,189,71,54,52,110,115,8,36,111,216,149,239,191,189,17,52,13,16,239,191,189,239,191,189,239,191,189,48,71,55,83,77,239,191,189,239,191,189,12,58,239,191,189,84,127,41,42,24,61,239,191,189,113,239,191,189,109,97,239,191,189,114,239,191,189,239,191,189,45,115,239,191,189,50,7,239,191,189,35,239,191,189,97,239,191,189,239,191,189,232,149,152,102,239,191,189,112,27,88,107,239,191,189,239,191,189,239,191,189,52,239,191,189,4,124,113,96,239,191,189,127,239,191,189,32,43,239,191,189,97,8,239,191,189,111,239,191,189,5,119,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,2,1,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,50,239,191,189,82,239,191,189,44,104,239,191,189,105,239,191,189,5,239,191,189,196,171,239,191,189,101,57,64,101,78,22,239,191,189,239,191,189,118,94,239,191,189,239,191,189,26,95,105,239,191,189,11,67,239,191,189,239,191,189,84,36,43,100,125,239,191,189,239,191,189,32,239,191,189,61,61,239,191,189,239,191,189,91,239,191,189,239,191,189,78,239,191,189,82,54,239,191,189,59,239,191,189,74,77,104,0,239,191,189,88,239,191,189,239,191,189,27,239,191,189,17,21,21,1,239,191,189,85,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,50,3,239,191,189,46,94,92,239,191,189,89,16,24,48,113,26,47,87,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,115,239,191,189,76,239,191,189,239,191,189,125,6,239,191,189,239,191,189,36,88,27,100,32,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,27,53,239,191,189,108,239,191,189,17,127,239,191,189,239,191,189,10,94,92,77,239,191,189,20,239,191,189,208,180,239,191,189,39,42,19,34,80,239,191,189,239,191,189,101,60,239,191,189,239,191,189,239,191,189,239,191,189,54,74,61,229,170,179,21,239,191,189,221,157,239,191,189,207,154,239,191,189,87,38,239,191,189,11,239,191,189,125,65,116,239,191,189,7,18,105,221,137,239,191,189,67,239,191,189,36,53,239,191,189,37,2,239,191,189,46,71,29,239,191,189,239,191,189,74,239,191,189,45,82,239,191,189,7,239,191,189,63,239,191,189,239,191,189,86,239,191,189,194,154,54,239,191,189,65,214,139,61,239,191,189,239,191,189,239,191,189,239,191,189,18,98,84,239,191,189,94,239,191,189,239,191,189,222,136,42,34,218,191,239,191,189,239,191,189,239,191,189,108,239,191,189,2,100,239,191,189,239,191,189,99,104,77,91,6,71,20,123})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff20248c0f",
                        container: "containers5a7c44fc3ba94077be32138f5be02fd9",
                        blob: "Blob4718181065c1411697e2316ed270dd3d",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05918 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05918_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05918_s.txt", Encoding.UTF8);

    public Test05918() : base(recordedRequest, recordedResponse, "accounts8d439ff28242e2e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff28242e2e",
                        container: "containersea1d27939a374feda08cd3c0ef9f62d2",
                        blob: "PageBlob82c42dc021cd40e0bfedee701e262a54",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03997 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03997_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03997_s.txt", Encoding.UTF8);

    public Test03997() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers96f2345b65204cd1b450ce17b2d73a7c",
                        blob: "PageBlob047f42c94f664096a909fac585a24a14",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05631 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05631_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05631_s.txt", Encoding.UTF8);

    public Test05631() : base(recordedRequest, recordedResponse, "accounts8d439ff1fc41bd2")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,65,239,191,189,239,191,189,239,191,189,20,6,207,141,33,239,191,189,94,2,34,239,191,189,117,93,2,80,72,90,239,191,189,100,48,51,118,66,25,239,191,189,239,191,189,74,239,191,189,108,239,191,189,239,191,189,89,108,239,191,189,239,191,189,239,191,189,80,239,191,189,108,39,239,191,189,239,191,189,238,178,182,90,14,104,112,94,78,127,108,239,191,189,78,239,191,189,239,191,189,26,239,191,189,239,191,189,77,239,191,189,117,63,239,191,189,8,239,191,189,92,100,239,191,189,10,4,239,191,189,8,104,239,191,189,84,102,239,191,189,122,60,29,239,191,189,46,239,191,189,239,191,189,239,191,189,239,191,189,87,25,239,191,189,53,54,239,191,189,239,191,189,239,191,189,92,239,191,189,46,239,191,189,239,191,189,239,191,189,4,239,191,189,84,74,239,191,189,100,77,239,191,189,125,239,191,189,28,62,239,191,189,47,239,191,189,71,239,191,189,239,191,189,9,239,191,189,5,74,51,239,191,189,239,191,189,98,46,239,191,189,72,239,191,189,56,80,200,138,25,82,239,191,189,73,83,239,191,189,239,191,189,239,191,189,239,191,189,12,24,239,191,189,239,191,189,239,191,189,239,191,189,20,3,239,191,189,239,191,189,6,239,191,189,239,191,189,117,127,124,36,53,239,191,189,97,239,191,189,78,239,191,189,118,16,22,239,191,189,108,97,86,109,239,191,189,88,239,191,189,38,239,191,189,239,191,189,103,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,91,239,191,189,46,101,239,191,189,75,195,190,76,239,191,189,239,191,189,64,239,191,189,239,191,189,45,54,11,83,10,78,195,165,239,191,189,239,191,189,16,46,53,239,191,189,31,239,191,189,50,239,191,189,239,191,189,17,239,191,189,39,8,7,12,239,191,189,104,111,85,126,239,191,189,108,239,191,189,0,239,191,189,118,239,191,189,239,191,189,86,239,191,189,239,191,189,39,113,239,191,189,239,191,189,29,239,191,189,35,45,205,182,239,191,189,122,239,191,189,13,5,46,4,70,31,239,191,189,83,80,62,239,191,189,239,191,189,239,191,189,52,20,239,191,189,239,191,189,239,191,189,95,54,121,108,239,191,189,82,36,239,191,189,92,68,66,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,71,239,191,189,67,54,239,191,189,68,239,191,189,51,239,191,189,62,122,89,15,239,191,189,239,191,189,14,127,68,28,239,191,189,79,239,191,189,239,191,189,88,194,161,17,239,191,189,119,239,191,189,239,191,189,239,191,189,65,239,191,189,97,74,100,40,239,191,189,53,239,191,189,239,191,189,91,239,191,189,116,3,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,49,108,239,191,189,239,191,189,115,7,51,15,239,191,189,75,239,191,189,239,191,189,24,123,34,239,191,189,239,191,189,87,239,191,189,239,191,189,12,239,191,189,127,239,191,189,239,191,189,107,82,15,239,191,189,23,5,239,191,189,239,191,189,98,239,191,189,120,120,239,191,189,239,191,189,2,239,191,189,239,191,189,16,89,239,191,189,234,186,155,51,14,60,239,191,189,239,191,189,70,100,239,191,189,239,191,189,7,239,191,189,239,191,189,239,191,189,0,239,191,189,51,239,191,189,239,191,189,42,24,45,12,49,239,191,189,47,239,191,189,5,111,239,191,189,60,213,176,239,191,189,220,175,239,191,189,14,239,191,189,239,191,189,9,239,191,189,113,239,191,189,239,191,189,33,239,191,189,239,191,189,239,191,189,210,176,239,191,189,239,191,189,110,39,221,153,239,191,189,13,239,191,189,95,125,54,239,191,189,239,191,189,239,191,189,41,36,77,88,119,19,239,191,189,26,35,107,239,191,189,239,191,189,69,239,191,189,3,59,239,191,189,206,140,20,15,71,239,191,189,239,191,189,64,71,239,191,189,231,157,140,106,239,191,189,32,239,191,189,239,191,189,95,123,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff1fc41bd2",
                        container: "containersbb4ec3773d524b7bad0b8de99f7e6408",
                        blob: "Blob899a487a55de46ae886f8f15fffab89d",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05676 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05676_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05676_s.txt", Encoding.UTF8);

    public Test05676() : base(recordedRequest, recordedResponse, "accounts8d439ff203b2186")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,121,72,42,239,191,189,34,239,191,189,40,25,72,239,191,189,108,239,191,189,120,85,122,239,191,189,239,191,189,24,239,191,189,57,239,191,189,18,60,201,153,79,239,191,189,239,191,189,239,191,189,239,191,189,36,25,118,239,191,189,0,202,190,47,239,191,189,88,239,191,189,47,41,239,191,189,102,239,191,189,239,191,189,91,239,191,189,28,239,191,189,239,191,189,57,239,191,189,239,191,189,103,12,97,239,191,189,239,191,189,44,239,191,189,99,75,104,82,80,239,191,189,85,239,191,189,217,148,239,191,189,99,239,191,189,95,239,191,189,68,99,239,191,189,121,48,209,152,15,90,239,191,189,239,191,189,31,239,191,189,239,191,189,93,54,239,191,189,43,6,239,191,189,221,142,19,239,191,189,12,5,37,67,88,71,239,191,189,2,47,125,239,191,189,239,191,189,84,89,239,191,189,239,191,189,239,191,189,60,14,115,239,191,189,239,191,189,239,191,189,239,191,189,124,93,239,191,189,55,239,191,189,239,191,189,11,239,191,189,79,0,108,42,239,191,189,85,239,191,189,19,9,239,191,189,239,191,189,27,239,191,189,94,239,191,189,107,48,87,0,239,191,189,239,191,189,239,191,189,20,97,73,52,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,114,18,239,191,189,83,239,191,189,239,191,189,3,117,239,191,189,239,191,189,105,207,187,239,191,189,239,191,189,30,123,81,7,84,239,191,189,106,52,239,191,189,239,191,189,10,239,191,189,119,239,191,189,239,191,189,239,191,189,105,104,83,239,191,189,228,175,142,127,95,83,239,191,189,28,239,191,189,54,69,239,191,189,239,191,189,58,239,191,189,126,57,239,191,189,2,7,7,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,114,0,103,103,239,191,189,21,110,239,191,189,210,167,0,9,77,239,191,189,120,239,191,189,99,57,60,239,191,189,61,79,239,191,189,101,76,239,191,189,6,239,191,189,38,239,191,189,111,200,163,84,18,54,239,191,189,63,239,191,189,37,57,239,191,189,102,239,191,189,2,239,191,189,239,191,189,46,239,191,189,239,191,189,125,239,191,189,79,0,239,191,189,35,46,1,26,86,14,239,191,189,239,191,189,53,56,56,102,239,191,189,239,191,189,66,239,191,189,36,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,99,78,239,191,189,239,191,189,41,101,31,239,191,189,120,239,191,189,239,191,189,239,191,189,7,239,191,189,36,89,22,123,239,191,189,49,239,191,189,201,151,239,191,189,239,191,189,67,239,191,189,89,43,55,84,239,191,189,59,77,239,191,189,239,191,189,111,55,239,191,189,97,21,125,239,191,189,239,191,189,46,239,191,189,59,239,191,189,239,191,189,48,0,49,239,191,189,41,239,191,189,239,191,189,39,68,239,191,189,108,197,142,65,78,236,179,186,63,88,239,191,189,239,191,189,239,191,189,104,28,58,9,212,145,239,191,189,8,13,89,239,191,189,54,34,239,191,189,239,191,189,36,2,22,72,239,191,189,239,191,189,79,239,191,189,126,116,66,239,191,189,239,191,189,239,191,189,239,191,189,70,33,74,120,239,191,189,239,191,189,239,191,189,94,239,191,189,95,108,239,191,189,10,43,239,191,189,46,239,191,189,60,65,239,191,189,239,191,189,54,115,239,191,189,74,239,191,189,96,78,239,191,189,97,239,191,189,239,191,189,20,216,131,239,191,189,53,114,52,239,191,189,239,191,189,211,150,239,191,189,92,116,72,83,239,191,189,239,191,189,111,101,239,191,189,53,20,5,205,164,5,239,191,189,70,114,85,239,191,189,239,191,189,239,191,189,239,191,189,83,107,68,96,239,191,189,13,239,191,189,89,99,239,191,189,239,191,189,239,191,189,23,24,239,191,189,34,239,191,189,239,191,189,76,15,239,191,189,239,191,189,126,28,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff203b2186",
                        container: "containers91bfe0f428504a428be558654cda3d39",
                        blob: "Blobf85277b5179347b19d04d89ebf39b781",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05700 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05700_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05700_s.txt", Encoding.UTF8);

    public Test05700() : base(recordedRequest, recordedResponse, "accounts8d439ff208daee7")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,88,239,191,189,123,110,239,191,189,239,191,189,239,191,189,105,113,50,239,191,189,102,75,60,78,195,144,239,191,189,239,191,189,239,191,189,239,191,189,76,87,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,116,239,191,189,239,191,189,39,32,88,213,191,56,239,191,189,122,29,86,239,191,189,239,191,189,239,191,189,19,56,239,191,189,20,103,239,191,189,239,191,189,239,191,189,239,191,189,66,12,119,239,191,189,239,191,189,223,139,215,189,239,191,189,239,191,189,239,191,189,63,42,239,191,189,121,3,88,77,33,239,191,189,79,91,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,69,239,191,189,239,191,189,16,239,191,189,239,191,189,76,93,239,191,189,102,239,191,189,239,191,189,69,239,191,189,239,191,189,57,239,191,189,239,191,189,14,201,154,99,94,104,239,191,189,5,239,191,189,239,191,189,239,191,189,72,93,11,43,119,61,239,191,189,239,191,189,76,239,191,189,28,18,239,191,189,125,49,87,239,191,189,102,92,46,239,191,189,115,239,191,189,17,239,191,189,96,239,191,189,124,127,239,191,189,123,24,29,114,239,191,189,25,33,239,191,189,239,191,189,239,191,189,26,239,191,189,50,126,81,108,239,191,189,97,239,191,189,61,74,239,191,189,239,191,189,239,191,189,239,191,189,85,25,239,191,189,239,191,189,7,99,59,98,239,191,189,239,191,189,239,191,189,239,191,189,11,77,61,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,208,173,80,239,191,189,110,239,191,189,239,191,189,239,191,189,0,239,191,189,217,157,239,191,189,239,191,189,95,54,239,191,189,87,239,191,189,239,191,189,19,112,239,191,189,239,191,189,239,191,189,98,239,191,189,55,210,133,4,239,191,189,101,72,106,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,61,9,239,191,189,25,195,187,82,76,239,191,189,57,91,239,191,189,7,96,5,239,191,189,39,12,239,191,189,80,239,191,189,123,239,191,189,239,191,189,55,59,116,239,191,189,239,191,189,49,239,191,189,77,92,84,51,239,191,189,196,180,239,191,189,61,239,191,189,239,191,189,203,141,239,191,189,65,9,239,191,189,239,191,189,239,191,189,126,239,191,189,49,2,194,130,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,108,13,102,239,191,189,45,102,239,191,189,115,108,82,107,54,239,191,189,239,191,189,99,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,78,239,191,189,42,82,112,28,239,191,189,239,191,189,22,239,191,189,61,239,191,189,73,95,127,61,239,191,189,239,191,189,73,4,16,17,103,239,191,189,239,191,189,21,198,129,77,239,191,189,220,172,43,239,191,189,29,122,59,95,239,191,189,73,18,239,191,189,86,91,46,113,99,92,239,191,189,87,106,239,191,189,239,191,189,239,191,189,239,191,189,61,43,100,239,191,189,91,86,93,239,191,189,239,191,189,26,239,191,189,239,191,189,112,65,4,1,47,31,0,239,191,189,110,239,191,189,11,239,191,189,89,239,191,189,106,239,191,189,239,191,189,36,77,239,191,189,239,191,189,60,239,191,189,78,239,191,189,239,191,189,97,239,191,189,29,239,191,189,65,239,191,189,239,191,189,239,191,189,26,239,191,189,86,59,110,239,191,189,239,191,189,45,239,191,189,31,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,99,205,150,239,191,189,51,97,239,191,189,41,86,239,191,189,13,60,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,14,94,46,11,239,191,189,239,191,189,7,239,191,189,108,116,6,217,191,239,191,189,41,44,229,176,163,99,219,150,85,209,171,239,191,189,3,239,191,189,122,239,191,189,75,5,36,3,239,191,189,30,239,191,189,5,5,73,239,191,189,127})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff208daee7",
                        container: "containersed6f6341bddf44249234672b202f7924",
                        blob: "PageBlob9f32beafce7c4205abf47e3538ad165b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04011 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04011_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04011_s.txt", Encoding.UTF8);

    public Test04011() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4ac32c1a23a84983bf7fd2ec748c8a41",
                        blob: "PageBlob448e22fc302a4f6bbcc1b1276a32278a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05649 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05649_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05649_s.txt", Encoding.UTF8);

    public Test05649() : base(recordedRequest, recordedResponse, "accounts8d439ff1ff53e4d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{88,0,239,191,189,239,191,189,239,191,189,239,191,189,3,78,239,191,189,239,191,189,239,191,189,84,99,215,184,239,191,189,102,58,11,239,191,189,62,42,35,239,191,189,239,191,189,239,191,189,239,191,189,91,106,84,239,191,189,200,142,118,117,239,191,189,239,191,189,201,134,239,191,189,7,80,75,239,191,189,239,191,189,89,239,191,189,230,139,144,76,239,191,189,21,46,220,159,6,239,191,189,239,191,189,32,239,191,189,123,97,239,191,189,203,154,73,65,104,239,191,189,79,66,239,191,189,239,191,189,34,211,154,239,191,189,89,100,35,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,95,239,191,189,213,129,50,2,101,221,140,239,191,189,239,191,189,11,16,125,125,239,191,189,64,9,239,191,189,113,11,9,5,23,94,97,239,191,189,18,239,191,189,239,191,189,239,191,189,21,239,191,189,233,167,146,91,29,64,239,191,189,198,150,239,191,189,239,191,189,0,78,84,239,191,189,45,33,239,191,189,239,191,189,239,191,189,65,83,239,191,189,239,191,189,106,211,160,104,239,191,189,239,191,189,102,15,239,191,189,35,38,239,191,189,239,191,189,82,35,239,191,189,66,239,191,189,117,35,20,23,16,13,87,239,191,189,239,191,189,55,239,191,189,239,191,189,22,239,191,189,239,191,189,73,239,191,189,45,239,191,189,239,191,189,126,239,191,189,38,42,46,239,191,189,65,239,191,189,117,52,239,191,189,239,191,189,239,191,189,109,239,191,189,83,195,147,16,239,191,189,84,121,115,239,191,189,126,239,191,189,239,191,189,41,96,239,191,189,41,20,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,222,136,239,191,189,239,191,189,119,103,239,191,189,15,239,191,189,239,191,189,6,239,191,189,239,191,189,12,29,20,97,5,110,239,191,189,239,191,189,239,191,189,15,24,110,239,191,189,10,239,191,189,239,191,189,30,200,137,98,222,180,239,191,189,66,239,191,189,1,12,5,111,239,191,189,22,34,239,191,189,84,29,239,191,189,239,191,189,93,239,191,189,239,191,189,107,57,65,121,239,191,189,76,239,191,189,92,20,41,239,191,189,239,191,189,125,58,239,191,189,88,239,191,189,239,191,189,239,191,189,4,97,127,60,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,73,239,191,189,40,239,191,189,239,191,189,239,191,189,115,13,239,191,189,76,37,239,191,189,239,191,189,69,64,53,239,191,189,239,191,189,239,191,189,239,191,189,98,202,149,239,191,189,99,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,215,184,239,191,189,67,2,239,191,189,26,123,223,177,239,191,189,239,191,189,239,191,189,239,191,189,80,35,239,191,189,40,45,127,44,239,191,189,96,10,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,65,108,102,105,125,239,191,189,68,239,191,189,239,191,189,218,175,25,239,191,189,239,191,189,94,5,239,191,189,239,191,189,68,125,239,191,189,69,87,96,239,191,189,42,88,57,89,239,191,189,239,191,189,239,191,189,239,191,189,78,112,33,239,191,189,26,68,99,239,191,189,239,191,189,73,82,239,191,189,18,209,175,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,20,5,239,191,189,83,239,191,189,11,79,239,191,189,239,191,189,73,109,65,60,116,239,191,189,121,239,191,189,8,239,191,189,4,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,43,24,239,191,189,239,191,189,116,13,239,191,189,92,239,191,189,239,191,189,211,161,88,114,23,239,191,189,100,109,112,47,32,85,239,191,189,239,191,189,239,191,189,239,191,189,16,117,38,239,191,189,239,191,189,126,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,233,129,136,17,239,191,189,103,239,191,189,239,191,189,121,239,191,189,239,191,189,58,28})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff1ff53e4d",
                        container: "containers59c24330bce4469db16358a74b8d3549",
                        blob: "Blob85fd3970e56646b49301650fafb911aa",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05667 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05667_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05667_s.txt", Encoding.UTF8);

    public Test05667() : base(recordedRequest, recordedResponse, "accounts8d439ff20248c0f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,84,239,191,189,81,47,239,191,189,120,12,239,191,189,119,92,19,239,191,189,0,239,191,189,239,191,189,6,239,191,189,92,239,191,189,32,239,191,189,239,191,189,85,2,239,191,189,239,191,189,239,191,189,13,121,62,110,7,16,48,239,191,189,239,191,189,66,239,191,189,126,101,239,191,189,239,191,189,239,191,189,239,191,189,72,120,71,106,239,191,189,239,191,189,61,14,239,191,189,239,191,189,239,191,189,104,71,78,114,85,239,191,189,239,191,189,30,57,239,191,189,11,126,239,191,189,29,1,239,191,189,239,191,189,239,191,189,86,57,51,239,191,189,100,239,191,189,68,74,95,100,239,191,189,0,96,11,239,191,189,239,191,189,36,239,191,189,239,191,189,96,41,239,191,189,232,173,183,3,60,239,191,189,120,77,239,191,189,239,191,189,106,47,239,191,189,73,115,108,239,191,189,45,10,79,239,191,189,78,56,239,191,189,0,239,191,189,68,239,191,189,121,239,191,189,115,239,191,189,239,191,189,81,239,191,189,68,97,125,74,239,191,189,18,239,191,189,239,191,189,48,100,68,22,239,191,189,239,191,189,95,51,30,103,78,94,126,117,60,9,51,84,46,23,239,191,189,122,7,239,191,189,239,191,189,39,239,191,189,22,239,191,189,55,60,239,191,189,101,239,191,189,93,239,191,189,239,191,189,46,64,239,191,189,111,63,239,191,189,55,3,39,239,191,189,239,191,189,65,64,239,191,189,239,191,189,239,191,189,208,159,239,191,189,93,76,40,239,191,189,34,72,80,239,191,189,42,111,239,191,189,239,191,189,24,239,191,189,92,4,20,90,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,213,161,239,191,189,126,81,239,191,189,2,239,191,189,62,96,5,239,191,189,239,191,189,38,239,191,189,12,239,191,189,45,239,191,189,211,161,228,154,169,50,40,239,191,189,211,141,87,97,46,239,191,189,115,239,191,189,78,239,191,189,30,100,239,191,189,113,97,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,50,239,191,189,96,239,191,189,120,239,191,189,51,239,191,189,239,191,189,239,191,189,30,108,25,211,176,8,239,191,189,239,191,189,37,239,191,189,64,97,96,117,239,191,189,13,97,64,239,191,189,69,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,201,182,239,191,189,63,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,207,134,239,191,189,98,239,191,189,239,191,189,106,98,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,17,239,191,189,239,191,189,93,115,80,17,239,191,189,117,239,191,189,76,195,143,239,191,189,63,98,8,213,153,239,191,189,104,11,239,191,189,75,102,76,26,239,191,189,72,108,48,239,191,189,107,239,191,189,239,191,189,24,36,92,54,239,191,189,239,191,189,118,239,191,189,30,239,191,189,99,239,191,189,35,44,239,191,189,239,191,189,94,99,125,6,239,191,189,127,239,191,189,39,53,35,64,8,239,191,189,239,191,189,87,239,191,189,17,239,191,189,73,239,191,189,120,99,16,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,56,239,191,189,27,239,191,189,62,106,8,76,219,160,239,191,189,46,53,0,239,191,189,239,191,189,109,91,239,191,189,71,239,191,189,239,191,189,100,239,191,189,121,239,191,189,82,239,191,189,113,239,191,189,82,47,62,239,191,189,88,37,39,99,24,79,121,53,29,239,191,189,239,191,189,66,98,116,239,191,189,39,239,191,189,239,191,189,239,191,189,74,103,101,56,59,239,191,189,111,239,191,189,93,106,239,191,189,71,239,191,189,239,191,189,3,67,115,70,239,191,189,239,191,189,239,191,189,36,239,191,189,71,51,239,191,189,54,239,191,189,239,191,189,239,191,189,74,67,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff20248c0f",
                        container: "containers5a7c44fc3ba94077be32138f5be02fd9",
                        blob: "Blob4718181065c1411697e2316ed270dd3d",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03983 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03983_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03983_s.txt", Encoding.UTF8);

    public Test03983() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers3fa595956ed7432d986dce4ad092d6e9",
                        blob: "PageBlobd89775e1aae44c77a30a9156d41ae5ed",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05760 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05760_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05760_s.txt", Encoding.UTF8);

    public Test05760() : base(recordedRequest, recordedResponse, "accounts8d439ff21386efb")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{5,50,239,191,189,239,191,189,41,85,104,74,239,191,189,98,60,75,239,191,189,73,122,224,185,156,117,42,19,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,85,239,191,189,239,191,189,239,191,189,97,93,239,191,189,6,120,92,239,191,189,239,191,189,239,191,189,19,103,97,103,240,149,179,181,70,61,81,20,221,179,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,73,117,239,191,189,239,191,189,239,191,189,88,62,239,191,189,35,239,191,189,106,35,239,191,189,239,191,189,98,69,102,97,13,24,57,76,15,85,69,223,131,239,191,189,71,102,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,125,123,239,191,189,86,46,239,191,189,239,191,189,239,191,189,46,98,5,80,99,57,32,239,191,189,239,191,189,22,239,191,189,102,97,239,191,189,11,212,148,61,239,191,189,239,191,189,239,191,189,26,41,55,197,149,239,191,189,239,191,189,116,239,191,189,10,239,191,189,100,239,191,189,22,125,126,89,239,191,189,45,239,191,189,59,107,114,239,191,189,54,78,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,5,45,19,56,205,139,239,191,189,80,58,21,239,191,189,11,67,2,223,136,239,191,189,86,58,89,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,70,10,118,239,191,189,239,191,189,26,239,191,189,94,85,3,68,239,191,189,239,191,189,22,221,156,38,239,191,189,103,95,52,111,86,239,191,189,109,239,191,189,239,191,189,68,54,239,191,189,99,239,191,189,56,239,191,189,239,191,189,69,239,191,189,100,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,74,239,191,189,108,67,239,191,189,50,67,32,79,53,89,215,180,239,191,189,66,119,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,120,209,143,239,191,189,239,191,189,194,178,118,2,239,191,189,239,191,189,208,150,239,191,189,27,83,239,191,189,4,239,191,189,67,50,2,239,191,189,239,191,189,239,191,189,47,33,101,109,239,191,189,123,239,191,189,239,191,189,45,239,191,189,239,191,189,26,90,239,191,189,109,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,123,91,47,15,35,17,92,239,191,189,117,46,239,191,189,6,239,191,189,239,191,189,77,8,71,22,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,89,239,191,189,218,190,239,191,189,48,239,191,189,9,61,239,191,189,87,239,191,189,239,191,189,239,191,189,108,239,191,189,20,239,191,189,239,191,189,32,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,218,145,239,191,189,122,17,239,191,189,54,239,191,189,83,33,89,120,239,191,189,67,202,155,239,191,189,6,97,21,239,191,189,20,239,191,189,98,239,191,189,31,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,63,239,191,189,47,239,191,189,19,239,191,189,239,191,189,3,239,191,189,17,25,239,191,189,239,191,189,58,239,191,189,239,191,189,5,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,208,173,239,191,189,42,103,239,191,189,56,52,20,30,239,191,189,239,191,189,50,93,82,239,191,189,239,191,189,20,239,191,189,239,191,189,58,217,131,239,191,189,53,239,191,189,29,99,239,191,189,104,239,191,189,239,191,189,88,239,191,189,50,20,80,239,191,189,76,22,2,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,57,239,191,189,45,204,179,239,191,189,199,183,239,191,189,42,44,239,191,189,239,191,189,239,191,189,109,239,191,189,57,239,191,189,239,191,189,79,42,62,239,191,189,11,200,145,239,191,189,239,191,189,16,239,191,189,239,191,189,36,239,191,189,239,191,189,219,154,239,191,189,49,80,239,191,189,42,59,239,191,189,35,239,191,189,239,191,189,239,191,189,45,67,28,239,191,189,28,239,191,189,123,15,74,239,191,189,239,191,189,239,191,189,239,191,189,12,46,239,191,189,94,207,187,239,191,189,239,191,189,239,191,189,15,8,90,239,191,189,37,239,191,189,84,93,16,39,2,239,191,189,70,239,191,189,238,177,157,117,211,144,239,191,189,239,191,189,70,84,239,191,189,239,191,189,84,91,239,191,189,43,239,191,189,239,191,189,52,111,12,239,191,189,194,144,85,31,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,69,239,191,189,104,239,191,189,52,239,191,189,5,114,41,239,191,189,239,191,189,239,191,189,239,191,189,64,23,88,239,191,189,239,191,189,73,239,191,189,13,31,239,191,189,239,191,189,239,191,189,43,239,191,189,90,4,20,98,239,191,189,24,239,191,189,239,191,189,26,203,138,239,191,189,239,191,189,29,44,239,191,189,239,191,189,239,191,189,202,131,239,191,189,39,16,9,86,239,191,189,36,38,28,239,191,189,70,8,63,239,191,189,109,20,55,60,239,191,189,239,191,189,239,191,189,239,191,189,76,16,102,50,239,191,189,239,191,189,46,239,191,189,239,191,189,97,239,191,189,119,239,191,189,4,89,101,90,239,191,189,121,239,191,189,239,191,189,68,207,163,16,239,191,189,23,77,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,51,239,191,189,51,93,239,191,189,63,52,239,191,189,16,239,191,189,239,191,189,37,24,38,239,191,189,239,191,189,8,65,239,191,189,33,64,239,191,189,239,191,189,218,178,239,191,189,29,239,191,189,65,63,97,118,208,159,70,16,239,191,189,239,191,189,39,99,239,191,189,30,6,112,239,191,189,16,197,187,239,191,189,10,239,191,189,239,191,189,44,104,239,191,189,87,13,88,239,191,189,35,34,239,191,189,79,239,191,189,124,96,85,121,239,191,189,239,191,189,239,191,189,33,26,95,69,34,239,191,189,112,239,191,189,97,239,191,189,55,239,191,189,239,191,189,74,103,239,191,189,239,191,189,2,111,59,3,65,56,239,191,189,53,239,191,189,76,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,35,210,130,239,191,189,103,9,101,239,191,189,239,191,189,23,77,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,22,30,12,82,239,191,189,124,103,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,14,125,68,239,191,189,108,101,7,49,239,191,189,127,61,239,191,189,239,191,189,34,114,239,191,189,125,239,191,189,15,234,181,134,239,191,189,22,127,239,191,189,32,0,35,239,191,189,59,77,35,100,194,152,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,120,239,191,189,207,155,239,191,189,90,239,191,189,25,239,191,189,9,51,239,191,189,239,191,189,45,88,239,191,189,69,7,14,239,191,189,68,239,148,131,96,239,191,189,35,239,191,189,101,239,191,189,239,191,189,0,14,15,71,239,191,189,43,239,191,189,11,10,0,239,191,189,239,191,189,25,49,57,239,191,189,124,239,191,189,239,191,189,63,72,239,191,189,239,191,189,89,239,191,189,7,52,239,191,189,26,239,191,189,108,53,20,110,50,122,239,191,189,239,191,189,116,93,127,239,191,189,4,239,191,189,239,191,189,63,122,81,38,18,239,191,189,239,191,189,106,74,82,90,63,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,41,239,191,189,239,191,189,76,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,79,239,191,189,239,191,189,239,191,189,28,239,191,189,58,10,126,239,191,189,102,239,191,189,10,239,191,189,19,59,239,191,189,239,191,189,83,102,9,15,239,191,189,204,138,5})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff21386efb",
                        container: "containersd0bd7d53775a4989a4b2b67962a65b05",
                        blob: "Blobe0d113977c9042be935dae323f2b4215",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05636 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05636_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05636_s.txt", Encoding.UTF8);

    public Test05636() : base(recordedRequest, recordedResponse, "accounts8d439ff1fdcd42a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,29,239,191,189,239,191,189,75,239,191,189,36,239,191,189,104,62,239,191,189,239,191,189,239,191,189,111,123,24,47,61,239,191,189,125,239,191,189,0,25,239,191,189,69,202,163,239,191,189,13,115,239,191,189,215,136,239,191,189,239,191,189,239,191,189,73,198,138,42,121,239,191,189,2,103,86,35,21,239,191,189,0,108,43,95,239,191,189,9,239,191,189,239,191,189,4,116,60,239,191,189,25,100,239,191,189,239,191,189,79,239,191,189,83,239,191,189,118,239,191,189,239,191,189,105,239,191,189,113,3,239,191,189,239,191,189,239,191,189,44,33,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,54,126,73,62,239,191,189,213,137,9,17,20,239,191,189,13,24,99,239,191,189,48,122,57,239,191,189,239,191,189,239,191,189,47,6,239,191,189,239,191,189,82,72,26,239,191,189,102,239,191,189,60,239,191,189,239,191,189,239,191,189,213,156,56,22,239,191,189,223,169,95,239,191,189,51,239,191,189,239,191,189,81,239,191,189,55,239,191,189,3,239,191,189,239,191,189,6,119,239,191,189,239,191,189,94,239,191,189,111,61,239,191,189,111,239,191,189,97,89,239,191,189,239,191,189,239,191,189,66,35,239,191,189,239,191,189,2,239,191,189,23,239,191,189,203,185,127,239,191,189,72,46,32,56,37,218,180,93,15,239,191,189,239,191,189,108,112,108,239,191,189,127,239,191,189,239,191,189,63,33,87,239,191,189,239,191,189,97,94,239,191,189,239,191,189,54,96,4,239,191,189,239,191,189,13,239,191,189,239,191,189,124,78,78,59,127,242,156,132,139,107,56,112,239,191,189,28,239,191,189,239,191,189,59,121,93,112,88,57,239,191,189,239,191,189,127,239,191,189,126,239,191,189,10,0,18,94,239,191,189,119,56,48,95,83,239,191,189,47,239,191,189,107,105,239,191,189,38,53,76,26,239,191,189,41,122,43,239,191,189,53,239,191,189,66,239,191,189,116,239,191,189,239,191,189,115,239,191,189,121,239,191,189,89,218,166,29,239,191,189,103,124,239,191,189,46,239,191,189,239,191,189,239,191,189,200,179,74,239,191,189,100,53,239,191,189,230,174,148,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,28,239,191,189,222,156,76,239,191,189,46,54,96,239,191,189,239,191,189,114,239,191,189,127,239,191,189,115,239,191,189,239,191,189,113,239,191,189,15,105,239,191,189,5,114,43,18,66,239,191,189,198,145,80,239,191,189,115,239,191,189,239,191,189,239,191,189,44,103,239,191,189,124,45,239,191,189,52,239,191,189,116,45,20,44,239,191,189,239,191,189,42,37,91,239,191,189,239,191,189,89,239,191,189,42,32,124,239,191,189,72,239,191,189,27,66,239,191,189,13,229,179,130,239,191,189,89,239,191,189,96,239,191,189,99,18,239,191,189,239,191,189,239,191,189,21,107,239,191,189,103,42,37,239,191,189,239,191,189,24,2,70,63,239,191,189,239,191,189,59,25,239,191,189,239,191,189,31,46,121,0,62,239,191,189,112,239,191,189,239,191,189,30,239,191,189,239,191,189,44,34,126,239,191,189,220,172,239,191,189,24,239,191,189,69,239,191,189,16,105,239,191,189,19,117,239,191,189,239,191,189,88,73,98,123,239,191,189,206,156,107,239,191,189,239,191,189,239,191,189,42,239,191,189,200,172,81,239,191,189,35,239,191,189,239,191,189,9,239,191,189,101,239,191,189,239,191,189,239,191,189,47,104,239,191,189,239,191,189,239,191,189,239,191,189,41,239,191,189,198,172,100,239,191,189,68,239,191,189,59,112,239,191,189,29,94,239,191,189,72,54,100,23,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,51,239,191,189,8,217,191,0,47,2,239,191,189,239,191,189,36,239,191,189,17,124,239,191,189,239,191,189,72,57,19,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff1fdcd42a",
                        container: "containers7e9dfb9c47544f17a9e3748b76f31593",
                        blob: "PageBlobd80efe9a7e7b4b5791abab36d3d34583",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05682 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05682_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05682_s.txt", Encoding.UTF8);

    public Test05682() : base(recordedRequest, recordedResponse, "accounts8d439ff2051419b")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,41,126,126,239,191,189,232,133,138,239,191,189,88,239,191,189,219,177,41,239,191,189,239,191,189,104,75,79,239,191,189,12,109,239,191,189,21,239,191,189,239,191,189,39,239,191,189,92,89,239,191,189,55,239,191,189,68,239,191,189,111,239,191,189,35,19,239,191,189,18,76,239,191,189,89,3,18,84,55,239,191,189,127,74,32,239,191,189,197,140,239,191,189,239,191,189,104,100,239,191,189,93,239,191,189,72,239,191,189,51,239,191,189,239,191,189,239,191,189,38,70,85,69,56,239,191,189,239,191,189,239,191,189,121,117,18,125,239,191,189,239,191,189,239,191,189,239,191,189,14,97,102,31,239,191,189,2,239,191,189,47,239,191,189,24,63,86,3,239,191,189,37,95,71,111,17,239,191,189,42,5,239,191,189,31,31,239,191,189,67,58,86,239,191,189,98,109,239,191,189,107,239,191,189,239,191,189,61,239,191,189,45,36,239,191,189,37,239,191,189,31,115,80,239,191,189,239,191,189,79,239,191,189,54,40,239,191,189,94,239,191,189,8,121,70,0,236,190,132,239,191,189,216,181,209,142,239,191,189,4,83,33,239,191,189,66,239,191,189,12,4,239,191,189,200,172,239,191,189,15,239,191,189,234,164,176,58,239,191,189,105,239,191,189,239,191,189,88,239,191,189,239,191,189,64,101,2,76,239,191,189,106,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,52,40,123,66,36,239,191,189,28,239,191,189,42,239,191,189,1,239,191,189,10,239,191,189,239,191,189,94,9,13,239,191,189,62,239,191,189,19,21,84,239,191,189,23,9,95,239,191,189,92,121,100,101,105,24,239,191,189,239,191,189,95,239,191,189,68,100,0,101,239,191,189,239,191,189,107,71,239,191,189,239,191,189,82,239,191,189,36,239,191,189,239,191,189,239,191,189,32,19,38,239,191,189,13,214,188,83,239,191,189,119,239,191,189,33,239,191,189,239,191,189,78,111,239,191,189,111,239,191,189,239,191,189,239,191,189,106,112,48,239,191,189,19,239,191,189,85,239,191,189,84,114,239,191,189,239,191,189,239,191,189,113,200,185,239,191,189,109,239,191,189,239,191,189,239,191,189,51,69,74,239,191,189,87,102,239,191,189,239,191,189,74,239,191,189,114,239,191,189,239,191,189,117,62,239,191,189,18,239,191,189,2,34,43,125,239,191,189,220,166,239,191,189,239,191,189,57,49,66,22,55,43,239,191,189,40,239,191,189,67,114,239,191,189,40,239,191,189,3,239,191,189,239,191,189,18,67,81,239,191,189,239,191,189,239,191,189,239,191,189,16,26,239,191,189,196,175,239,191,189,60,239,191,189,239,191,189,16,239,191,189,120,92,112,239,191,189,239,191,189,21,7,206,139,29,239,191,189,2,239,191,189,239,191,189,35,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,16,26,99,12,239,191,189,54,239,191,189,239,191,189,23,4,239,191,189,39,88,239,191,189,239,191,189,60,239,191,189,239,191,189,34,120,239,191,189,23,10,239,191,189,118,239,191,189,71,71,239,191,189,26,239,191,189,239,191,189,73,121,116,239,191,189,239,191,189,21,85,44,239,191,189,239,191,189,83,239,191,189,239,191,189,11,239,191,189,81,239,191,189,239,191,189,114,8,239,191,189,239,191,189,15,125,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,14,14,64,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,45,77,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,69,112,211,175,239,191,189,101,53,122,239,191,189,199,130,53,84,210,171,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,67,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,55,120})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff2051419b",
                        container: "containersaac7bf6ee84549ec95f3ec0ea8a834f3",
                        blob: "PageBlobce30f920709d4bc28013057b81d56d60",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05732 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05732_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05732_s.txt", Encoding.UTF8);

    public Test05732() : base(recordedRequest, recordedResponse, "accounts8d439ff20e48204")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{22,239,191,189,14,239,191,189,239,191,189,239,191,189,80,239,191,189,111,239,191,189,239,191,189,7,119,61,239,191,189,50,239,191,189,108,239,191,189,239,191,189,239,191,189,79,239,191,189,100,239,191,189,239,191,189,123,62,69,239,191,189,126,239,191,189,239,191,189,123,239,191,189,221,138,115,239,191,189,107,24,239,191,189,39,18,4,94,239,191,189,208,175,81,239,191,189,47,79,239,191,189,79,239,191,189,239,191,189,239,191,189,98,78,17,239,191,189,239,191,189,102,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,76,124,239,191,189,39,239,191,189,95,53,217,171,239,191,189,239,191,189,28,78,239,191,189,79,44,239,191,189,239,191,189,239,191,189,46,29,6,44,239,191,189,239,191,189,7,79,239,191,189,40,239,191,189,239,191,189,239,191,189,85,2,44,83,239,191,189,41,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,24,120,239,191,189,239,191,189,239,191,189,239,191,189,198,156,239,191,189,47,117,208,132,20,88,239,191,189,43,239,191,189,239,191,189,73,112,239,191,189,239,191,189,35,239,191,189,46,203,151,206,165,122,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,78,57,239,191,189,14,239,191,189,211,182,239,191,189,27,20,239,191,189,239,191,189,93,31,239,191,189,84,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,6,239,191,189,239,191,189,66,73,239,191,189,239,191,189,86,75,53,91,101,97,80,239,191,189,108,86,19,239,191,189,239,191,189,239,191,189,71,90,239,191,189,56,67,117,239,191,189,239,191,189,239,191,189,68,239,191,189,64,239,191,189,30,239,191,189,63,209,148,40,123,18,239,191,189,239,191,189,239,191,189,73,47,239,191,189,239,191,189,62,239,191,189,210,190,90,90,10,5,11,49,98,98,239,191,189,23,239,191,189,32,239,191,189,239,191,189,239,191,189,22,65,34,124,239,191,189,53,112,4,72,239,191,189,239,191,189,77,239,191,189,73,9,5,43,110,239,191,189,239,191,189,106,53,204,136,239,191,189,25,239,191,189,87,123,63,117,32,239,191,189,239,191,189,239,191,189,87,28,12,81,239,191,189,239,191,189,86,239,191,189,88,100,239,191,189,24,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,117,239,191,189,239,191,189,103,239,191,189,24,239,191,189,9,55,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,30,28,90,239,191,189,20,116,115,36,18,122,239,191,189,239,191,189,105,239,191,189,239,191,189,86,239,191,189,75,239,191,189,226,130,134,239,191,189,3,239,191,189,205,184,33,239,191,189,79,97,87,239,191,189,39,101,239,191,189,112,239,191,189,40,109,1,117,115,239,191,189,239,191,189,74,31,77,116,48,239,191,189,239,191,189,26,239,191,189,102,239,191,189,50,86,7,70,239,191,189,82,69,239,191,189,25,63,239,191,189,65,86,45,239,191,189,239,191,189,34,57,239,191,189,13,19,239,191,189,21,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,111,61,8,239,191,189,239,191,189,98,25,239,191,189,225,177,175,47,239,191,189,210,174,84,239,191,189,239,191,189,70,74,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,51,64,239,191,189,239,191,189,81,239,191,189,239,191,189,26,239,191,189,2,237,128,137,239,191,189,239,191,189,16,65,239,191,189,49,239,191,189,98,44,102,51,239,191,189,116,101,100,239,191,189,239,191,189,92,26,103,72,47,239,191,189,106,72,96,9,239,191,189,239,191,189,40,239,191,189,102,93,108,123,126,239,191,189,239,191,189,87,239,191,189,123,33,7,239,191,189,76,239,191,189,239,191,189,63,50,29,9,239,191,189,239,191,189,24,65,239,191,189,239,191,189,239,191,189,40,39,69,239,191,189,3})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff20e48204",
                        container: "containers5d49466ba2ff4bf0bc4d3aa4dc576fd4",
                        blob: "Blob74710469dc404f3e9a85afa1f178f7ce",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05928 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05928_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05928_s.txt", Encoding.UTF8);

    public Test05928() : base(recordedRequest, recordedResponse, "accounts8d439ff283dd0d1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff283dd0d1",
                        container: "containers16f061351c5d400fbd55665058df00e7",
                        blob: "PageBlob13d32106998948a79162b70b428e8bf8",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05626 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05626_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05626_s.txt", Encoding.UTF8);

    public Test05626() : base(recordedRequest, recordedResponse, "accounts8d439ff1fc41bd2")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{126,33,2,69,239,191,189,94,64,239,191,189,41,215,191,239,191,189,81,239,191,189,239,191,189,112,239,191,189,239,191,189,12,127,125,94,69,111,239,191,189,239,191,189,114,8,90,67,57,0,239,191,189,27,10,239,191,189,64,89,127,61,239,191,189,239,191,189,239,191,189,239,191,189,75,67,239,191,189,73,111,33,239,191,189,16,239,191,189,98,85,32,219,147,71,34,239,191,189,55,52,230,158,191,46,53,239,191,189,239,191,189,48,126,91,239,191,189,239,191,189,194,167,239,191,189,36,239,191,189,239,191,189,40,239,191,189,57,239,191,189,41,122,107,239,191,189,239,191,189,10,239,191,189,17,92,81,112,239,191,189,239,191,189,19,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,120,72,111,239,191,189,86,195,158,239,191,189,67,117,68,239,191,189,111,239,191,189,198,131,108,239,191,189,125,102,59,239,191,189,127,239,191,189,239,191,189,22,123,239,191,189,72,127,116,239,191,189,239,191,189,50,113,239,191,189,60,239,191,189,6,239,191,189,210,139,239,191,189,239,191,189,71,83,69,239,191,189,239,191,189,108,239,191,189,239,191,189,58,36,87,239,191,189,239,191,189,239,191,189,239,191,189,63,72,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,61,65,4,71,239,191,189,239,191,189,239,148,175,73,239,191,189,81,80,208,130,35,239,191,189,201,190,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,69,47,239,191,189,200,157,239,191,189,114,8,239,191,189,239,191,189,37,206,189,74,239,191,189,239,191,189,88,231,134,152,111,239,191,189,127,239,191,189,239,191,189,65,239,191,189,36,98,114,11,239,191,189,76,49,239,191,189,101,214,128,67,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,1,62,45,50,119,17,239,191,189,3,87,239,191,189,239,191,189,1,239,191,189,92,239,191,189,77,239,191,189,68,239,191,189,67,239,191,189,239,191,189,239,191,189,41,239,191,189,215,163,239,191,189,239,191,189,239,191,189,239,191,189,48,33,239,191,189,64,239,191,189,239,191,189,48,239,191,189,239,191,189,3,73,239,191,189,42,239,191,189,212,177,231,191,145,34,239,191,189,239,191,189,114,122,116,239,191,189,3,96,239,191,189,109,239,191,189,73,239,191,189,239,191,189,126,239,191,189,239,191,189,28,17,86,117,73,239,191,189,63,56,239,191,189,116,114,239,191,189,37,239,191,189,58,40,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,92,239,191,189,31,0,41,239,191,189,56,239,191,189,239,191,189,203,173,58,239,191,189,61,239,191,189,51,65,239,191,189,42,239,191,189,100,121,239,191,189,239,191,189,32,43,19,239,191,189,50,76,80,239,191,189,98,239,191,189,239,191,189,66,32,56,239,191,189,239,191,189,58,8,68,239,191,189,239,191,189,239,191,189,52,239,191,189,122,66,8,239,191,189,98,106,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,122,239,191,189,239,191,189,5,80,118,18,9,58,89,86,91,52,239,191,189,29,50,82,239,191,189,239,191,189,9,72,5,0,59,10,103,239,191,189,88,239,191,189,63,239,191,189,71,239,191,189,119,239,191,189,21,239,191,189,239,191,189,121,103,57,206,150,12,15,239,191,189,28,88,239,191,189,239,191,189,239,191,189,124,8,239,191,189,50,239,191,189,239,191,189,239,191,189,70,15,103,239,191,189,239,191,189,26,125,19,239,191,189,71,71,28,127,239,191,189,108,80,239,191,189,121,111,239,191,189,44,92,74,83,239,191,189,223,140,91,63,38,69,36,61,9,239,191,189,105,0,239,191,189,31,124,239,191,189,239,191,189,41,239,191,189,16,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff1fc41bd2",
                        container: "containers757bb614f75a4b70b2deefc8a4e2bd05",
                        blob: "PageBlob282b6fede4b646c78d3c5449d2b9864c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05764 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05764_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05764_s.txt", Encoding.UTF8);

    public Test05764() : base(recordedRequest, recordedResponse, "accounts8d439ff2147d866")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{207,142,38,239,191,189,239,191,189,23,239,191,189,54,11,66,239,191,189,17,121,239,191,189,239,191,189,239,191,189,109,239,191,189,63,239,191,189,239,191,189,64,22,30,32,9,239,191,189,70,82,239,191,189,32,43,1,239,191,189,239,191,189,66,44,239,191,189,12,239,191,189,47,239,191,189,126,239,191,189,7,8,239,191,189,204,149,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,119,7,101,239,191,189,96,75,239,191,189,79,33,239,191,189,16,239,191,189,36,121,98,239,191,189,239,191,189,71,239,191,189,104,239,191,189,83,22,24,239,191,189,239,191,189,239,191,189,49,53,239,191,189,239,191,189,239,191,189,71,239,191,189,36,123,24,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,34,239,191,189,239,191,189,61,239,191,189,54,239,191,189,36,239,191,189,77,113,117,239,191,189,22,29,239,191,189,239,191,189,97,239,191,189,221,174,61,16,217,176,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,67,239,191,189,239,191,189,50,60,105,239,191,189,239,191,189,121,239,191,189,51,46,239,191,189,34,73,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,32,239,191,189,17,239,191,189,58,115,92,44,239,191,189,49,3,107,239,191,189,116,112,23,99,8,9,239,191,189,49,239,191,189,100,26,239,191,189,239,191,189,239,191,189,10,121,41,239,191,189,68,28,239,191,189,239,191,189,70,63,51,239,191,189,2,13,239,191,189,69,47,38,7,47,37,239,191,189,102,100,239,191,189,13,239,191,189,239,191,189,239,191,189,101,239,191,189,121,108,239,191,189,239,191,189,239,191,189,218,165,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,50,239,191,189,36,239,191,189,30,239,191,189,90,239,191,189,239,191,189,100,84,18,239,191,189,239,191,189,54,46,239,191,189,50,239,191,189,239,191,189,106,95,126,57,107,239,191,189,127,116,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,46,239,191,189,99,239,191,189,122,95,239,191,189,239,191,189,61,58,239,191,189,20,239,191,189,111,100,239,191,189,95,239,191,189,26,239,191,189,127,239,191,189,98,239,191,189,96,239,191,189,125,41,239,191,189,111,239,191,189,54,66,8,100,120,239,191,189,102,38,51,239,191,189,34,67,239,191,189,87,239,191,189,15,16,239,191,189,51,239,191,189,239,191,189,117,239,191,189,36,0,239,191,189,25,239,191,189,9,239,191,189,107,239,191,189,239,191,189,239,191,189,119,103,0,66,239,191,189,239,191,189,120,239,191,189,10,92,98,239,191,189,90,239,191,189,239,191,189,109,77,239,191,189,121,45,239,191,189,98,89,64,120,239,191,189,76,239,191,189,41,58,239,191,189,119,239,191,189,121,87,239,191,189,15,239,191,189,119,108,42,239,191,189,239,191,189,82,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,82,239,191,189,28,21,13,239,191,189,239,191,189,239,191,189,60,215,189,207,166,239,191,189,14,239,191,189,57,35,93,239,191,189,37,12,3,50,239,191,189,7,126,70,70,239,191,189,239,191,189,4,239,191,189,37,24,92,65,239,191,189,78,206,131,48,83,239,191,189,6,239,191,189,239,191,189,35,239,191,189,79,239,191,189,62,239,191,189,239,191,189,69,239,191,189,239,191,189,5,66,239,191,189,239,191,189,120,239,191,189,47,203,190,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,220,175,97,239,191,189,91,239,191,189,35,239,191,189,116,84,78,239,191,189,64,239,191,189,117,114,239,191,189,239,191,189,12,74,214,183,101,239,191,189,59,239,191,189,17,45,28,87,12,47,239,191,189,5,104,239,191,189,4,239,191,189,239,191,189,96,6,3,239,191,189,239,191,189,70,126,239,191,189,17,63,239,191,189,1,239,191,189,239,191,189,37,74,239,191,189,74,109,239,191,189,239,191,189,239,191,189,29,71,30,239,191,189,58,118,239,191,189,239,191,189,239,191,189,114,239,191,189,207,180,239,191,189,239,191,189,239,191,189,111,43,239,191,189,10,24,24,46,239,191,189,58,67,239,191,189,200,185,60,3,106,124,239,191,189,81,239,191,189,92,67,110,239,191,189,38,239,191,189,8,239,191,189,239,191,189,239,191,189,113,126,239,191,189,86,239,191,189,107,73,127,4,46,239,191,189,239,191,189,239,191,189,51,239,191,189,34,239,191,189,239,191,189,111,126,83,239,191,189,122,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,16,239,191,189,73,61,239,191,189,43,239,191,189,98,62,239,191,189,32,239,191,189,239,191,189,34,239,191,189,111,67,59,40,3,239,191,189,89,30,52,239,191,189,239,191,189,4,239,191,189,239,191,189,209,175,239,191,189,239,191,189,120,30,81,239,191,189,239,191,189,96,239,191,189,89,239,191,189,112,239,191,189,94,86,239,191,189,87,46,39,232,128,131,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,47,38,201,163,108,239,191,189,97,105,4,127,204,129,239,191,189,124,239,191,189,239,191,189,239,191,189,70,239,191,189,81,239,191,189,239,191,189,209,151,239,191,189,46,25,239,191,189,125,102,208,142,45,49,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,91,102,239,191,189,7,54,1,239,191,189,57,62,67,119,121,239,191,189,12,239,191,189,239,191,189,105,239,191,189,236,157,174,62,84,239,191,189,239,191,189,25,5,239,191,189,86,239,191,189,92,52,91,34,60,239,191,189,239,191,189,18,239,191,189,123,239,191,189,239,191,189,79,239,191,189,12,239,191,189,239,191,189,55,114,77,239,191,189,239,191,189,0,28,17,239,191,189,16,29,239,191,189,239,191,189,239,191,189,67,239,191,189,66,30,239,191,189,239,191,189,239,191,189,48,86,36,113,4,23,239,191,189,107,239,191,189,239,191,189,29,100,31,239,191,189,15,239,191,189,239,191,189,34,31,114,239,191,189,2,101,126,239,191,189,239,191,189,11,3,119,239,191,189,239,191,189,24,239,191,189,6,27,40,37,239,191,189,239,191,189,45,239,191,189,12,37,239,191,189,223,132,196,187,215,164,119,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,84,100,239,191,189,103,119,239,191,189,239,191,189,4,239,191,189,24,108,239,191,189,120,239,191,189,57,239,191,189,203,128,239,191,189,199,159,43,239,191,189,80,44,239,191,189,118,17,104,239,191,189,99,239,191,189,104,51,90,239,191,189,74,62,239,191,189,40,239,191,189,218,162,239,191,189,78,239,191,189,43,239,191,189,121,239,191,189,239,191,189,34,119,239,191,189,82,41,117,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,126,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,196,137,66,1,60,239,191,189,239,191,189,239,191,189,239,191,189,51,65,79,112,239,191,189,49,15,239,191,189,2,239,191,189,56,62,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,23,51,55,239,191,189,18,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,115,85,14,100,107,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,74,87,239,191,189,239,191,189,17,210,145,0,9,239,191,189,93,82,239,191,189,239,191,189,37,3,239,191,189,18,38,75,239,191,189,239,191,189,84,99,239,191,189,120,33,40,239,191,189,59,239,191,189,101,7,239,191,189,239,191,189,57,52,62,126,63,96,239,191,189,105,201,176,17,239,191,189,239,191,189,202,134,10,239,191,189,239,191,189,59})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff2147d866",
                        container: "containersce5d3ba6b68847aba8bbecc4b3cdf0eb",
                        blob: "Blob540be1f877204cebb8cab0e139a245c0",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05705 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05705_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05705_s.txt", Encoding.UTF8);

    public Test05705() : base(recordedRequest, recordedResponse, "accounts8d439ff208857b3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,115,3,46,239,191,189,239,191,189,50,239,191,189,239,191,189,57,1,239,191,189,107,239,191,189,239,191,189,212,154,239,191,189,239,191,189,13,59,239,191,189,239,191,189,26,25,23,239,191,189,239,191,189,3,239,191,189,4,112,122,118,239,191,189,239,191,189,110,239,191,189,59,239,191,189,239,191,189,52,239,191,189,89,32,239,191,189,239,191,189,57,239,191,189,102,239,191,189,239,191,189,102,200,131,7,124,25,239,191,189,239,191,189,93,239,191,189,239,191,189,103,127,39,123,239,191,189,21,102,239,191,189,122,239,191,189,40,239,191,189,118,5,239,191,189,239,191,189,239,191,189,45,239,191,189,48,239,191,189,35,125,19,239,191,189,60,239,191,189,239,191,189,216,139,212,135,239,191,189,75,50,239,191,189,239,191,189,18,11,36,109,239,191,189,103,0,62,53,13,2,239,191,189,32,38,239,191,189,239,191,189,239,191,189,104,67,1,19,204,136,119,116,239,191,189,239,191,189,29,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,119,34,126,239,191,189,194,188,125,239,191,189,120,47,239,191,189,53,239,191,189,100,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,78,239,191,189,48,239,191,189,33,239,191,189,239,191,189,59,8,239,191,189,239,191,189,239,191,189,61,84,89,239,191,189,62,22,239,191,189,239,191,189,239,191,189,8,71,239,191,189,15,24,50,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,55,42,76,106,97,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,104,83,239,191,189,239,191,189,41,207,186,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,76,239,191,189,8,124,239,191,189,104,62,239,191,189,66,239,191,189,6,41,12,114,239,191,189,127,239,191,189,87,64,50,9,123,239,191,189,111,65,117,3,16,239,191,189,86,239,191,189,108,239,191,189,30,239,191,189,239,191,189,57,239,191,189,42,239,191,189,106,38,105,239,191,189,239,191,189,29,92,239,191,189,89,25,239,191,189,239,191,189,19,239,191,189,239,191,189,10,239,191,189,58,117,100,45,239,191,189,239,191,189,60,239,191,189,68,91,84,65,239,191,189,21,239,191,189,239,191,189,85,82,239,191,189,121,88,239,191,189,51,239,191,189,60,23,239,191,189,239,191,189,30,77,239,191,189,239,191,189,239,191,189,61,239,191,189,106,239,191,189,58,45,8,239,191,189,239,191,189,8,239,191,189,104,127,239,191,189,117,120,239,191,189,123,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,55,239,191,189,37,239,191,189,114,60,6,239,191,189,239,191,189,239,191,189,102,80,48,12,26,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,36,108,88,42,239,191,189,239,191,189,42,62,31,7,112,90,239,191,189,7,80,17,239,191,189,1,239,191,189,110,239,191,189,36,72,239,191,189,97,239,191,189,5,202,135,31,98,239,191,189,239,191,189,0,75,25,17,53,239,191,189,239,191,189,93,70,73,239,191,189,239,191,189,239,191,189,29,116,239,191,189,17,239,191,189,239,191,189,239,191,189,218,153,72,16,67,111,70,36,115,239,191,189,239,191,189,14,90,239,191,189,7,5,239,191,189,115,239,191,189,19,239,191,189,239,191,189,68,219,136,54,239,191,189,117,239,191,189,239,191,189,117,239,191,189,239,191,189,54,23,102,3,9,239,191,189,197,144,239,191,189,239,191,189,97,239,191,189,86,239,191,189,21,111,239,191,189,208,154,43,84,84,108,239,191,189,12,239,191,189,209,148,239,191,189,35,100,89,36,239,191,189,239,191,189,1,239,191,189,6,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,96,33,239,191,189,214,179,26,11,239,191,189,18,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff208857b3",
                        container: "containers5a395d05545c421e84d62ae7887750e9",
                        blob: "Bloba6031b48362f4ba2970b98d13bcc1d57",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05655 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05655_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05655_s.txt", Encoding.UTF8);

    public Test05655() : base(recordedRequest, recordedResponse, "accounts8d439ff200e44d7")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{42,117,239,191,189,21,54,239,191,189,239,191,189,84,7,88,239,191,189,118,34,239,191,189,239,191,189,64,70,239,191,189,239,191,189,239,191,189,239,191,189,37,91,126,239,191,189,86,5,239,191,189,98,19,48,222,133,239,191,189,239,191,189,87,49,239,191,189,75,239,191,189,46,118,96,75,239,191,189,2,239,191,189,69,239,191,189,239,191,189,63,48,9,46,79,5,26,127,24,239,191,189,239,191,189,50,239,191,189,239,191,189,40,239,191,189,239,191,189,37,73,15,115,84,60,239,191,189,78,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,86,67,239,191,189,61,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,108,35,239,191,189,17,29,32,80,239,191,189,239,191,189,239,191,189,239,191,189,112,1,63,10,239,191,189,31,53,50,27,107,31,40,10,239,191,189,75,239,191,189,12,92,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,232,140,158,198,186,7,34,8,239,191,189,65,69,50,221,155,54,108,239,191,189,23,76,239,191,189,239,191,189,118,209,128,67,112,19,239,191,189,46,239,191,189,54,239,191,189,30,32,54,239,191,189,239,191,189,85,239,191,189,23,6,1,239,191,189,10,90,239,191,189,126,28,239,191,189,49,239,191,189,13,239,191,189,239,191,189,114,239,191,189,30,239,191,189,74,239,191,189,46,239,191,189,55,10,95,20,239,191,189,101,239,191,189,216,138,102,52,239,191,189,239,191,189,239,191,189,239,191,189,37,106,239,191,189,239,191,189,66,239,191,189,202,132,239,191,189,44,84,239,191,189,239,191,189,117,239,191,189,103,35,239,191,189,39,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,35,88,89,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,88,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,99,239,191,189,239,191,189,16,29,239,191,189,68,239,191,189,42,239,191,189,48,63,31,239,191,189,113,55,239,191,189,48,114,18,239,191,189,124,239,191,189,14,38,239,191,189,75,16,120,115,239,191,189,88,21,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,33,108,44,239,191,189,115,39,239,191,189,239,191,189,55,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,48,117,52,79,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,55,80,80,239,191,189,203,174,69,239,191,189,105,32,19,21,41,239,191,189,37,98,239,191,189,239,191,189,15,239,191,189,92,221,174,239,191,189,56,239,191,189,22,239,191,189,80,239,191,189,46,239,191,189,42,101,81,102,239,191,189,239,191,189,239,191,189,56,239,191,189,9,239,191,189,16,97,31,38,205,163,117,239,191,189,198,159,45,239,191,189,89,239,191,189,239,191,189,109,238,151,154,239,191,189,239,191,189,239,191,189,239,191,189,195,152,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,92,239,191,189,74,25,239,191,189,73,8,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,125,239,191,189,30,115,239,191,189,31,239,191,189,52,98,52,239,191,189,10,239,191,189,239,191,189,67,58,239,191,189,4,88,83,55,77,239,191,189,239,191,189,234,136,160,239,191,189,239,191,189,239,191,189,239,191,189,29,7,52,239,191,189,223,177,126,115,239,191,189,83,21,35,34,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,41,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,54,71,118,239,191,189,239,191,189,239,191,189,239,191,189,197,148,119,90,75,239,191,189,239,191,189,111,239,191,189,56,110,239,191,189,8,239,191,189,51,78,239,191,189,56,19})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff200e44d7",
                        container: "containers839690922c6041729d89f423b6addb6e",
                        blob: "Blob05c316e95ec2424e9068e24d89350ce5",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05673 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05673_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05673_s.txt", Encoding.UTF8);

    public Test05673() : base(recordedRequest, recordedResponse, "accounts8d439ff203b2186")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,28,239,191,189,97,103,239,191,189,75,95,48,239,191,189,239,191,189,15,239,191,189,37,239,191,189,30,4,74,239,191,189,239,191,189,239,191,189,99,31,120,239,191,189,80,2,108,80,239,191,189,90,90,239,191,189,93,8,239,191,189,239,191,189,239,191,189,58,239,191,189,57,239,191,189,119,105,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,195,184,239,191,189,239,191,189,239,191,189,102,73,239,191,189,239,191,189,239,191,189,239,191,189,78,54,42,29,239,191,189,55,56,15,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,42,51,239,191,189,124,239,191,189,239,191,189,75,6,239,191,189,80,36,239,191,189,239,191,189,212,160,70,239,191,189,124,239,191,189,76,123,239,191,189,239,191,189,205,156,239,191,189,239,191,189,105,53,239,191,189,239,191,189,239,191,189,9,9,60,21,80,100,92,239,191,189,2,47,239,191,189,239,191,189,239,191,189,57,76,59,4,87,91,111,210,145,91,46,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,0,239,191,189,47,239,191,189,225,152,139,239,191,189,104,31,23,74,75,106,239,191,189,239,191,189,98,99,86,101,239,191,189,62,91,34,120,239,191,189,13,239,191,189,123,239,191,189,110,239,191,189,31,93,239,191,189,72,239,191,189,69,107,239,191,189,120,96,239,191,189,80,239,191,189,70,15,195,158,239,191,189,124,239,191,189,239,191,189,125,239,191,189,239,191,189,40,12,123,51,239,191,189,239,191,189,122,239,191,189,114,42,239,191,189,218,155,77,29,239,191,189,239,191,189,239,191,189,124,75,11,104,49,239,191,189,73,239,191,189,8,239,191,189,210,162,106,239,191,189,32,239,191,189,239,191,189,56,24,239,191,189,239,191,189,14,239,191,189,71,27,34,239,191,189,2,239,191,189,95,239,191,189,30,239,191,189,118,118,28,239,191,189,73,239,191,189,65,3,239,191,189,239,191,189,204,159,239,191,189,239,191,189,11,123,239,191,189,83,239,191,189,239,191,189,108,239,191,189,60,108,32,21,124,96,239,191,189,10,239,191,189,82,239,191,189,17,239,191,189,88,3,239,191,189,239,191,189,239,191,189,239,191,189,124,7,50,210,168,239,191,189,239,191,189,221,134,239,191,189,12,209,132,36,239,191,189,57,239,191,189,239,191,189,51,23,239,191,189,17,239,191,189,51,121,239,191,189,118,239,191,189,239,191,189,120,239,191,189,239,191,189,28,239,191,189,239,191,189,10,239,191,189,120,239,191,189,222,130,108,41,239,191,189,239,191,189,48,239,191,189,19,31,82,116,76,239,191,189,239,191,189,107,50,239,191,189,88,239,191,189,29,14,42,13,40,57,239,191,189,239,191,189,53,80,47,22,11,239,191,189,57,93,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,38,68,239,191,189,239,191,189,204,131,92,10,65,239,191,189,100,239,191,189,88,94,0,99,239,191,189,111,239,191,189,239,191,189,239,191,189,59,105,239,191,189,82,239,191,189,198,135,105,96,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,36,239,191,189,79,76,106,5,70,239,191,189,50,44,76,210,185,239,191,189,239,191,189,239,191,189,239,191,189,61,51,239,191,189,212,161,239,191,189,239,191,189,61,239,191,189,118,28,239,191,189,239,191,189,122,5,239,191,189,239,191,189,102,25,78,232,147,128,239,191,189,54,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,123,44,68,207,141,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,131,239,191,189,239,191,189,85,239,191,189,60,239,191,189,106,239,191,189,6,15,101,239,191,189,121,19,239,191,189,239,191,189,239,191,189,16,239,191,189,72,113,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff203b2186",
                        container: "containers91bfe0f428504a428be558654cda3d39",
                        blob: "Blobf85277b5179347b19d04d89ebf39b781",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05737 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05737_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05737_s.txt", Encoding.UTF8);

    public Test05737() : base(recordedRequest, recordedResponse, "accounts8d439ff20fcc511")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,97,19,4,92,239,191,189,38,39,239,191,189,30,127,239,191,189,239,191,189,101,121,31,5,239,191,189,68,42,223,139,239,191,189,239,191,189,47,239,191,189,54,85,4,30,127,85,239,191,189,85,77,239,191,189,239,191,189,239,191,189,118,44,26,116,239,191,189,121,239,191,189,93,239,191,189,83,239,191,189,58,47,239,191,189,10,90,107,126,239,191,189,199,182,239,191,189,35,223,158,42,239,191,189,116,24,239,191,189,40,99,27,23,16,107,239,191,189,110,27,239,191,189,56,86,1,31,105,69,38,239,191,189,75,239,191,189,80,119,204,175,118,73,81,20,239,191,189,78,239,191,189,239,191,189,199,150,239,191,189,81,30,23,205,158,239,191,189,239,191,189,99,75,239,191,189,95,239,191,189,3,118,88,4,239,191,189,41,37,109,239,191,189,239,191,189,108,239,191,189,239,191,189,26,239,191,189,239,191,189,205,149,79,239,191,189,106,99,23,38,14,41,239,191,189,47,83,20,239,191,189,33,23,121,77,239,191,189,239,191,189,73,59,239,191,189,239,191,189,41,10,239,191,189,239,191,189,118,6,239,191,189,63,118,239,191,189,239,191,189,62,239,191,189,101,239,191,189,95,50,239,191,189,239,191,189,124,239,191,189,25,239,191,189,22,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,65,89,93,116,239,191,189,34,40,239,191,189,239,191,189,126,239,191,189,239,191,189,70,19,239,191,189,62,93,83,239,191,189,67,239,191,189,15,110,239,191,189,103,236,184,183,89,239,191,189,18,92,239,191,189,239,191,189,35,70,1,239,191,189,93,109,84,6,60,30,75,104,67,57,30,239,191,189,239,191,189,48,239,191,189,77,67,50,239,191,189,12,239,191,189,105,112,239,191,189,92,107,110,52,101,239,191,189,103,61,239,191,189,239,191,189,62,239,191,189,239,191,189,80,87,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,91,70,239,191,189,239,191,189,3,239,191,189,112,239,191,189,239,191,189,51,239,191,189,73,239,191,189,106,239,191,189,59,110,94,239,191,189,94,239,191,189,98,13,3,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,67,59,11,52,239,191,189,123,239,191,189,239,191,189,53,239,191,189,72,239,191,189,63,2,0,239,191,189,239,191,189,228,164,174,24,11,239,191,189,109,40,28,95,23,74,239,191,189,116,10,239,191,189,51,83,105,107,239,191,189,239,191,189,65,56,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,107,74,17,73,239,191,189,35,239,191,189,239,191,189,239,191,189,117,94,108,239,191,189,239,191,189,52,239,191,189,239,191,189,12,239,191,189,239,191,189,39,239,191,189,239,191,189,99,118,98,20,239,191,189,239,191,189,69,239,191,189,239,191,189,81,239,191,189,97,98,239,191,189,98,16,83,239,191,189,229,135,136,212,132,239,191,189,239,191,189,199,154,52,115,35,47,68,239,191,189,21,239,191,189,30,239,191,189,235,183,154,48,239,191,189,239,191,189,98,11,239,191,189,113,38,76,239,191,189,90,239,191,189,66,60,115,239,191,189,239,191,189,81,40,80,16,40,106,33,239,191,189,239,191,189,77,239,191,189,67,79,103,9,74,87,239,191,189,239,191,189,33,239,191,189,239,191,189,86,116,239,191,189,119,239,191,189,90,1,73,239,191,189,86,44,40,239,191,189,239,191,189,73,31,239,191,189,116,65,113,239,191,189,36,74,8,239,191,189,239,191,189,239,191,189,239,191,189,228,173,152,239,191,189,239,191,189,98,239,191,189,239,191,189,41,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff20fcc511",
                        container: "containers6b5609a507b34d598e48f6e9b37b09bd",
                        blob: "PageBlob6f8858b8fd414695b5b6004ef0739cbf",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05641 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05641_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05641_s.txt", Encoding.UTF8);

    public Test05641() : base(recordedRequest, recordedResponse, "accounts8d439ff1fdcd42a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{16,239,191,189,239,191,189,200,153,239,191,189,63,16,7,239,191,189,239,191,189,67,239,191,189,239,191,189,24,51,100,42,239,191,189,17,239,191,189,239,191,189,89,57,239,191,189,239,191,189,239,191,189,114,239,191,189,47,87,37,12,122,239,191,189,83,6,55,83,57,239,191,189,1,116,239,191,189,239,191,189,4,239,191,189,114,120,197,159,84,68,239,191,189,239,191,189,116,239,191,189,239,191,189,44,9,57,239,191,189,106,239,191,189,67,239,191,189,55,35,239,191,189,239,191,189,45,45,239,191,189,101,114,239,191,189,39,91,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,3,239,191,189,79,239,191,189,123,239,191,189,67,10,74,239,191,189,209,150,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,113,125,239,191,189,74,0,76,39,34,239,191,189,19,239,191,189,211,138,72,63,239,191,189,239,191,189,75,53,239,191,189,239,191,189,35,239,191,189,101,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,126,127,70,71,30,239,191,189,2,5,239,191,189,47,239,191,189,33,116,55,5,239,191,189,11,83,123,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,77,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,75,204,149,123,239,191,189,66,41,239,191,189,239,191,189,239,191,189,115,6,74,200,175,84,96,239,191,189,0,55,36,239,191,189,239,191,189,82,239,191,189,209,147,239,191,189,92,239,191,189,110,35,213,167,239,191,189,239,191,189,113,239,191,189,42,239,191,189,239,191,189,3,239,191,189,239,191,189,117,230,157,158,24,7,239,191,189,97,78,239,191,189,66,239,191,189,6,239,191,189,88,38,100,239,191,189,239,191,189,239,191,189,39,239,191,189,7,239,191,189,239,191,189,47,55,13,99,16,239,191,189,111,17,239,191,189,51,239,191,189,112,84,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,2,107,31,210,154,239,191,189,126,40,239,191,189,78,239,191,189,239,191,189,65,216,188,124,239,191,189,62,8,239,191,189,23,239,191,189,239,191,189,36,49,239,191,189,49,239,191,189,239,191,189,102,107,72,82,239,191,189,239,191,189,24,59,201,136,97,114,239,191,189,194,190,239,191,189,9,46,124,50,104,239,191,189,73,239,191,189,239,191,189,239,191,189,118,40,239,191,189,105,239,191,189,77,239,191,189,56,239,191,189,77,239,191,189,109,19,239,191,189,64,53,239,191,189,239,191,189,53,239,191,189,50,56,239,191,189,39,197,180,109,75,239,191,189,34,239,191,189,239,191,189,239,191,189,78,239,191,189,95,239,191,189,20,239,191,189,73,239,191,189,53,80,112,239,191,189,104,239,191,189,39,239,191,189,239,191,189,17,239,191,189,85,67,239,191,189,39,65,205,152,26,239,191,189,69,103,239,191,189,239,191,189,239,191,189,197,180,239,191,189,239,191,189,239,191,189,239,191,189,75,75,88,3,54,239,191,189,4,76,239,191,189,36,21,239,191,189,127,26,239,191,189,10,0,102,29,39,124,239,191,189,92,239,191,189,206,146,114,61,239,191,189,239,191,189,116,239,191,189,239,191,189,127,53,10,239,191,189,239,191,189,239,191,189,239,191,189,75,60,239,191,189,47,239,191,189,61,239,191,189,239,187,179,76,239,191,189,239,191,189,21,124,239,191,189,239,191,189,53,239,191,189,68,199,169,4,239,191,189,93,239,191,189,239,191,189,239,191,189,31,21,117,239,191,189,93,48,239,191,189,239,191,189,101,239,191,189,84,239,191,189,77,239,191,189,39,40,239,191,189,58,106,239,191,189,27,39,239,191,189,77,70,2,239,191,189,56,25,239,191,189,29,62,239,191,189,101,239,191,189,239,191,189,239,191,189,36,59,239,191,189,239,191,189,90,94,64,78,239,191,189,121,239,191,189,220,135,93,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff1fdcd42a",
                        container: "containersa93bff3132604b5781b48ea15625b0d0",
                        blob: "Blob300507c9595c4ee49196bc2faa08ae1a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05908 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05908_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05908_s.txt", Encoding.UTF8);

    public Test05908() : base(recordedRequest, recordedResponse, "accounts8d439ff2809ef58")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff2809ef58",
                        container: "containers2ea2bc6c87f645a1bd0233fb8581df0d",
                        blob: "PageBlob047d62e638874804a058d3c3fd2b94a8",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06272 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06272_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06272_s.txt", Encoding.UTF8);

    public Test06272() : base(recordedRequest, recordedResponse, "accounts8d439ff3a78d86e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,61,108,239,191,189,24,239,191,189,239,191,189,116,239,191,189,239,191,189,104,239,191,189,239,191,189,67,16,111,239,191,189,33,239,191,189,87,239,191,189,239,191,189,10,32,198,165,239,191,189,5,239,191,189,239,191,189,23,239,191,189,4,239,191,189,119,114,99,239,191,189,22,87,99,34,81,116,43,116,35,92,7,30,239,191,189,239,191,189,239,191,189,239,191,189,48,13,50,75,35,114,223,155,239,191,189,44,218,153,239,191,189,59,203,157,12,239,191,189,11,107,239,191,189,50,239,191,189,239,191,189,81,239,191,189,82,239,191,189,239,191,189,239,191,189,47,27,239,191,189,106,63,24,220,163,120,239,191,189,97,37,239,191,189,239,191,189,239,191,189,239,191,189,106,17,16,239,191,189,52,239,191,189,218,156,85,239,191,189,239,191,189,239,191,189,43,64,80,105,239,191,189,239,191,189,97,94,239,191,189,104,239,191,189,44,43,13,239,191,189,99,239,191,189,239,191,189,194,147,239,191,189,239,191,189,9,239,191,189,38,231,143,162,239,191,189,11,239,191,189,239,191,189,40,54,239,191,189,73,40,34,56,46,12,29,95,25,64,239,191,189,119,205,160,239,191,189,61,87,239,191,189,11,239,191,189,101,71,110,116,239,191,189,210,187,49,239,191,189,239,191,189,8,3,239,191,189,39,239,191,189,59,113,97,239,191,189,239,191,189,101,123,239,191,189,94,112,239,191,189,2,239,191,189,239,191,189,90,32,29,239,191,189,127,1,239,191,189,239,191,189,111,92,80,239,191,189,99,56,197,130,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,66,239,191,189,87,239,191,189,22,88,16,239,191,189,97,239,191,189,91,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,54,122,194,140,239,191,189,239,191,189,239,191,189,27,21,25,0,101,239,191,189,76,239,191,189,239,191,189,5,239,191,189,23,75,239,191,189,239,191,189,239,191,189,7,80,239,191,189,27,239,191,189,59,53,8,3,1,78,239,191,189,39,239,191,189,50,125,106,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,76,26,18,7,123,44,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,97,239,191,189,74,239,191,189,110,239,191,189,239,191,189,25,239,191,189,86,239,191,189,65,8,17,81,239,191,189,0,239,191,189,51,239,191,189,239,191,189,41,22,239,191,189,239,191,189,69,69,0,196,151,239,191,189,239,191,189,101,223,148,23,2,239,191,189,239,191,189,39,239,191,189,19,45,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,38,239,191,189,50,239,191,189,40,28,55,209,154,239,191,189,41,239,191,189,239,191,189,84,21,127,45,239,191,189,40,124,57,239,191,189,106,72,11,19,239,191,189,239,191,189,239,191,189,7,39,107,239,191,189,31,239,191,189,197,164,33,60,239,191,189,93,70,103,239,191,189,121,239,191,189,212,190,23,20,123,211,177,239,191,189,239,191,189,239,191,189,103,239,191,189,21,83,59,79,239,191,189,239,191,189,239,191,189,199,179,239,191,189,79,239,191,189,11,239,191,189,100,31,239,191,189,40,239,191,189,239,191,189,125,62,9,239,191,189,109,239,191,189,84,239,191,189,239,191,189,120,6,94,239,191,189,239,191,189,39,112,33,239,191,189,239,191,189,98,239,191,189,239,191,189,32,7,239,191,189,58,111,52,77,214,179,109,239,191,189,27,29,239,191,189,73,87,239,191,189,6,49,4,239,191,189,59,239,191,189,239,191,189,31,239,191,189,119,239,191,189,239,191,189,239,191,189,84,31,19,239,191,189,30,1,28,50,29,32,108,5,196,153,120,239,191,189,104,81,38,239,191,189,21,239,191,189,49,239,191,189,239,191,189,239,191,189,87,239,191,189,27,239,191,189,88,216,183,25,239,191,189,8,101,239,191,189,71,59,239,191,189,239,191,189,17,239,191,189,239,191,189,119,23,120,127,29,37,239,191,189,52,239,191,189,239,191,189,92,239,191,189,57,239,191,189,69,23,51,98,19,45,12,127,239,191,189,239,191,189,2,239,191,189,223,142,102,239,191,189,32,29,239,191,189,109,64,93,239,191,189,203,152,239,191,189,239,191,189,209,146,216,171,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,27,239,191,189,238,166,128,239,191,189,239,191,189,62,239,191,189,239,191,189,105,239,191,189,124,104,202,136,239,191,189,59,239,191,189,239,191,189,239,191,189,122,27,65,239,191,189,239,191,189,46,114,239,191,189,58,2,239,191,189,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,81,239,191,189,10,109,239,191,189,239,191,189,52,12,27,77,239,191,189,239,191,189,47,47,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,13,239,191,189,115,91,239,191,189,239,191,189,200,191,80,201,184,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,104,13,239,191,189,239,191,189,225,142,156,11,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,81,239,191,189,37,18,239,191,189,69,239,191,189,26,126,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,33,239,191,189,239,191,189,73,126,32,239,191,189,239,191,189,126,239,191,189,239,191,189,98,77,104,239,191,189,104,239,191,189,79,239,191,189,54,74,239,191,189,81,111,239,191,189,239,191,189,239,191,189,74,239,191,189,24,61,239,191,189,4,24,6,239,191,189,49,239,191,189,239,191,189,215,136,6,239,191,189,239,191,189,68,100,127,59,103,114,16,239,191,189,94,239,191,189,239,191,189,45,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,36,97,99,113,98,239,191,189,29,239,191,189,111,114,13,74,239,191,189,9,239,191,189,126,61,14,239,191,189,65,8,96,239,191,189,121,111,239,191,189,86,239,191,189,239,191,189,239,191,189,52,239,191,189,33,239,191,189,117,239,191,189,1,14,239,191,189,239,191,189,84,119,110,239,191,189,126,93,110,239,191,189,233,191,187,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,58,126,220,160,61,14,40,197,147,239,191,189,124,47,53,239,191,189,239,191,189,239,191,189,239,191,189,17,106,239,191,189,239,191,189,239,191,189,18,239,191,189,2,125,74,239,191,189,15,23,13,79,239,191,189,213,154,205,173,111,53,239,191,189,8,37,67,239,191,189,94,70,239,191,189,30,239,191,189,49,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,12,239,191,189,122,239,191,189,101,34,239,191,189,26,22,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,44,239,191,189,239,191,189,41,29,49,27,13,239,191,189,62,16,99,239,191,189,46,38,111,239,191,189,106,120,44,239,191,189,40,239,191,189,61,98,18,93,239,191,189,55,38,8,90,80,239,191,189,77,1,239,191,189,59,4,239,191,189,239,191,189,9,59,239,191,189,239,191,189,40,81,239,191,189,239,191,189,32,239,191,189,27,202,143,38,4,52,239,191,189,239,191,189,10,239,191,189,76,213,147,53,239,191,189,18,239,191,189,239,191,189,37,239,191,189,239,191,189,101,239,191,189,45,239,191,189,239,191,189,239,191,189,90,57,239,191,189,239,191,189,68,23,75,239,191,189,239,191,189,239,191,189,73,239,191,189,55,116,239,191,189,239,191,189,52,239,191,189,239,191,189,44,22,239,191,189,239,191,189,100,239,191,189,57,239,191,189,6,98,239,191,189,22,111,68,239,191,189,73,9,7,239,191,189,72,72,38,81,239,191,189,88,97,45,107,239,191,189,122,98,69,19,46,34,21,24,223,143,18,55,239,191,189,94,46,50,93,239,191,189,239,191,189,215,171,118,95,105,5,239,191,189,239,191,189,26,12,38,11,73,35,239,191,189,44,239,191,189,92,22,107,52,239,191,189,39,46,54,16,239,191,189,239,191,189,100,239,191,189,110,71,239,191,189,11,239,191,189,239,191,189,239,191,189,41,93,82,239,191,189,239,191,189,104,6,239,191,189,101,118,1,97,0,239,191,189,122,123,239,191,189,71,41,89,104,239,191,189,9,239,191,189,16,239,191,189,195,142,24,25,65,239,191,189,239,191,189,14,239,191,189,239,191,189,83,239,191,189,47,33,55,123,239,191,189,2,239,191,189,239,191,189,239,191,189,63,37,73,239,191,189,239,191,189,80,239,191,189,239,191,189,73,71,195,176,66,95,77,92,239,191,189,119,77,239,191,189,107,239,191,189,239,191,189,49,239,191,189,239,191,189,55,49,87,81,239,191,189,21,37,239,191,189,78,239,191,189,207,156,44,98,43,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,50,24,34,239,191,189,24,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,76,17,90,239,191,189,35,74,239,191,189,239,191,189,239,191,189,1,71,239,191,189,107,12,117,71,57,89,39,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,104,73,239,191,189,83,239,191,189,23,226,138,160,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,123,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,109,70,8,239,191,189,104,239,191,189,214,169,239,191,189,40,239,191,189,95,48,239,191,189,239,191,189,108,196,185,239,191,189,239,191,189,230,164,163,25,4,239,191,189,62,194,177,239,191,189,83,90,3,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,42,95,33,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,74,222,142,81,23,239,191,189,239,191,189,101,239,191,189,99,196,151,239,191,189,47,239,191,189,239,191,189,56,92,239,191,189,35,95,239,191,189,124,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,48,239,191,189,26,239,191,189,239,191,189,103,239,191,189,239,191,189,9,239,191,189,35,239,191,189,28,73,239,191,189,48,36,67,47,39,239,191,189,239,191,189,52,239,191,189,118,239,191,189,97,239,191,189,101,239,191,189,239,191,189,30,119,110,239,191,189,239,191,189,17,239,191,189,239,191,189,49,15,46,113,99,41,67,58,239,191,189,239,191,189,239,191,189,24,87,91,11,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,103,239,191,189,239,191,189,47,35,219,164,239,191,189,64,239,191,189,19,72,103,239,191,189,211,129,117,239,191,189,108,50,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,33,239,191,189,39,239,191,189,19,239,191,189,66,63,78,239,191,189,95,87,13,239,191,189,239,191,189,239,191,189,102,56,239,191,189,98,19,239,191,189,68,21,239,191,189,239,191,189,6,239,191,189,122,24,55,239,191,189,117,239,191,189,239,191,189,239,191,189,64,42,239,191,189,239,191,189,51,239,191,189,30,239,191,189,43,114,39,239,191,189,210,184,92,52,239,191,189,104,239,191,189,239,191,189,63,17,45,77,239,191,189,239,191,189,239,191,189,53,102,114,239,191,189,75,239,191,189,10,239,191,189,59,120,6,46,239,191,189,102,239,191,189,239,191,189,43,239,191,189,29,239,191,189,194,188,3,239,191,189,12,18,85,239,191,189,46,239,191,189,114,117,125,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,39,239,191,189,8,32,239,191,189,239,191,189,57,46,54,239,191,189,38,1,239,191,189,101,239,191,189,3,120,99,116,239,191,189,56,109,239,191,189,239,191,189,61,6,239,191,189,239,191,189,239,191,189,125,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,71,21,239,191,189,239,191,189,30,239,191,189,7,239,191,189,239,191,189,16,239,191,189,239,191,189,112,239,191,189,68,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,87,239,191,189,121,239,191,189,11,239,191,189,102,239,191,189,110,12,74,239,191,189,27,95,2,85,78,239,191,189,121,65,66,239,191,189,49,239,191,189,12,239,191,189,239,191,189,239,191,189,30,60,239,191,189,49,239,191,189,239,191,189,239,191,189,74,106,100,239,191,189,18,239,191,189,214,161,116,127,239,191,189,239,191,189,239,191,189,78,107,239,191,189,14,239,191,189,114,239,191,189,87,239,191,189,239,191,189,82,7,239,191,189,239,191,189,50,95,24,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,107,222,188,107,121,12,8,38,239,191,189,239,191,189,239,191,189,35,23,31,239,191,189,239,191,189,220,183,239,191,189,10,14,8,111,20,103,111,35,67,1,99,239,191,189,20,239,191,189,239,191,189,6,239,191,189,239,191,189,34,51,69,239,191,189,96,239,191,189,97,106,239,191,189,12,106,239,191,189,239,191,189,14,50,9,92,239,191,189,99,111,239,191,189,4,10,239,191,189,239,191,189,36,108,80,239,191,189,123,34,24,239,191,189,88,239,191,189,239,191,189,83,11,239,191,189,10,13,239,191,189,113,99,239,191,189,239,191,189,61,85,78,11,75,88,239,191,189,239,191,189,239,191,189,29,40,92,58,60,239,191,189,16,239,191,189,121,239,191,189,82,239,191,189,108,84,239,191,189,239,191,189,80,239,191,189,88,98,239,191,189,239,191,189,239,191,189,48,59,239,191,189,22,2,239,191,189,48,239,191,189,116,101,101,239,191,189,91,239,191,189,239,191,189,114,120,239,191,189,31,239,191,189,121,102,239,191,189,239,191,189,1,239,191,189,85,239,191,189,105,74,38,239,191,189,44,239,191,189,84,123,14,239,191,189,73,31,239,191,189,103,6,239,191,189,82,239,191,189,239,191,189,124,239,191,189,101,223,155,45,202,128,22,21,97,127,53,96,41,63,114,19,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,105,239,191,189,89,239,191,189,83,239,191,189,74,78,239,191,189,122,239,191,189,106,239,191,189,20,239,191,189,83,98,126,61,102,239,191,189,54,20,239,191,189,239,191,189,40,239,191,189,239,191,189,120,239,191,189,239,191,189,94,239,191,189,119,118,239,191,189,239,191,189,65,45,76,239,191,189,19,239,191,189,114,239,191,189,126,94,36,239,191,189,103,82,223,149,65,51,239,191,189,239,191,189,239,191,189,42,53,239,191,189,214,159,202,142,239,191,189,73,239,191,189,2,127,32,81,239,191,189,76,88,77,239,191,189,53,127,239,191,189,92,126,78,53,66,81,58,109,2,22,36,61,75,239,191,189,239,191,189,58,52,239,191,189,33,6,71,1,239,191,189,239,191,189,239,191,189,239,191,189,65,76,239,191,189,0,39,239,191,189,16,110,15,55,20,91,239,191,189,68,239,191,189,78,239,191,189,119,92,1,104,105,239,191,189,117,117,93,239,191,189,70,90,239,191,189,84,239,191,189,91,16,238,140,129,22,239,191,189,88,58,239,191,189,239,191,189,2,32,101,113,194,149,239,191,189,20,239,191,189,75,239,191,189,239,191,189,239,191,189,38,11,239,191,189,239,191,189,239,191,189,239,191,189,19,127,239,191,189,239,191,189,239,191,189,86,37,239,191,189,239,191,189,122,3,239,191,189,230,149,182,84,16,239,191,189,40,239,191,189,239,191,189,123,239,191,189,66,117,55,11,101,117,239,191,189,51,94,111,110,84,31,239,191,189,101,239,191,189,108,111,239,191,189,81,8,71,31,239,191,189,77,112,239,191,189,121,239,191,189,239,191,189,24,107,4,17,67,239,191,189,104,74,239,191,189,87,54,71,239,191,189,87,119,65,239,191,189,239,191,189,239,191,189,27,239,191,189,66,239,191,189,41,239,191,189,239,191,189,85,68,239,191,189,239,191,189,239,191,189,18,86,239,191,189,87,3,79,14,86,239,191,189,104,33,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,122,11,239,191,189,239,191,189,239,191,189,239,191,189,21,214,168,239,191,189,72,73,52,35,239,191,189,202,153,36,239,191,189,23,0,116,239,191,189,99,208,179,239,191,189,239,191,189,53,14,8,87,239,191,189,202,178,28,239,191,189,67,239,191,189,119,239,191,189,90,117,239,191,189,13,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,207,139,239,191,189,5,26,81,239,191,189,239,191,189,14,123,67,115,239,191,189,64,239,191,189,89,218,174,239,191,189,239,191,189,93,239,191,189,127,26,124,239,191,189,86,41,110,4,239,191,189,64,23,56,239,191,189,239,191,189,196,151,239,191,189,41,69,239,191,189,239,191,189,60,230,169,133,26,0,239,191,189,55,29,22,114,239,191,189,72,235,158,142,65,213,160,119,239,191,189,51,239,191,189,7,38,239,191,189,67,227,173,155,215,164,66,52,239,191,189,60,59,41,239,191,189,74,117,35,1,239,191,189,239,191,189,125,239,191,189,239,191,189,59,239,191,189,112,228,132,166,239,191,189,239,191,189,126,239,191,189,31,84,119,84,112,123,239,191,189,72,5,239,191,189,239,191,189,82,5,239,191,189,28,45,32,16,239,191,189,66,71,99,239,191,189,74,239,191,189,239,191,189,43,239,191,189,31,239,191,189,239,191,189,222,190,71,10,47,239,191,189,33,239,191,189,239,191,189,42,239,191,189,119,33,45,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,64,60,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,80,239,191,189,40,105,53,236,148,190,239,191,189,239,191,189,90,239,191,189,93,45,23,239,191,189,239,191,189,28,239,191,189,239,191,189,102,42,239,191,189,21,222,157,239,191,189,239,191,189,77,239,191,189,239,191,189,116,8,53,239,191,189,110,13,239,191,189,64,84,35,35,239,191,189,239,191,189,239,191,189,69,19,36,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,124,96,84,87,79,18,36,83,85,239,191,189,239,191,189,84,239,191,189,239,191,189,64,221,175,239,191,189,104,239,191,189,67,79,203,142,239,191,189,239,191,189,93,239,191,189,125,239,191,189,239,191,189,239,191,189,66,76,6,14,239,191,189,239,191,189,239,191,189,66,239,191,189,207,134,71,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,77,53,239,191,189,5,239,191,189,45,239,191,189,198,191,196,181,239,191,189,214,187,33,4,18,239,191,189,239,191,189,49,36,26,239,191,189,38,239,191,189,115,200,131,239,191,189,239,191,189,111,239,191,189,222,138,76,94,239,191,189,60,239,191,189,239,191,189,121,239,191,189,239,191,189,44,239,191,189,118,239,191,189,239,191,189,38,239,191,189,239,191,189,110,2,239,191,189,239,191,189,51,75,95,68,50,100,17,53,24,85,239,191,189,75,110,239,191,189,5,239,191,189,6,239,191,189,239,191,189,48,69,239,191,189,239,191,189,74,122,239,191,189,93,239,191,189,239,191,189,1,239,191,189,83,239,191,189,25,19,239,191,189,239,191,189,116,115,104,239,191,189,239,191,189,215,164,205,174,92,100,239,191,189,10,104,77,210,157,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,81,83,30,85,239,191,189,85,239,191,189,102,221,145,65,80,115,239,191,189,239,191,189,239,191,189,125,204,161,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,31,43,239,191,189,239,191,189,239,191,189,239,191,189,12,239,191,189,31,106,239,191,189,239,191,189,120,32,7,239,191,189,239,191,189,44,239,191,189,11,239,191,189,41,99,239,191,189,239,191,189,124,239,191,189,197,187,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,41,40,239,191,189,239,191,189,239,191,189,52,239,191,189,84,31,97,111,4,239,191,189,239,191,189,67,23,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,239,191,189,71,239,191,189,36,239,191,189,239,191,189,228,163,178,222,140,0,78,1,239,191,189,239,191,189,239,191,189,68,70,97,119,63,42,119,239,191,189,5,239,191,189,47,239,191,189,120,97,74,239,191,189,91,4,239,191,189,47,73,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,22,65,239,191,189,239,191,189,24,32,239,191,189,239,191,189,239,191,189,11,239,191,189,29,239,191,189,65,239,191,189,207,181,239,191,189,58,124,65,124,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,22,69,110,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,87,222,178,239,191,189,79,114,239,191,189,34,239,191,189,121,239,191,189,212,146,239,191,189,63,116,239,191,189,77,196,176,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,117,12,239,191,189,31,17,226,158,143,239,191,189,239,191,189,239,191,189,26,32,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,46,75,49,118,115,239,191,189,239,191,189,239,191,189,85,239,191,189,12,90,39,32,97,120,109,50,239,191,189,239,191,189,221,160,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,6,8,239,191,189,113,197,128,117,67,239,191,189,35,58,43,4,72,199,148,74,98,239,191,189,239,191,189,64,20,239,191,189,76,2,239,191,189,239,191,189,101,55,239,191,189,57,79,47,29,79,239,191,189,62,239,191,189,98,239,191,189,239,191,189,52,239,191,189,14,122,85,239,191,189,88,30,102,94,215,155,239,191,189,127,239,191,189,87,239,191,189,111,28,239,191,189,15,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,7,85,97,0,90,239,191,189,12,60,239,191,189,210,173,239,191,189,53,71,239,191,189,111,97,239,191,189,55,239,191,189,92,104,239,191,189,121,70,239,191,189,239,191,189,40,16,36,239,191,189,88,239,191,189,94,23,16,239,191,189,239,191,189,64,36,115,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,59,88,239,191,189,54,239,191,189,73,239,191,189,239,191,189,239,191,189,232,185,173,239,191,189,239,191,189,43,126,66,84,239,191,189,239,191,189,47,239,191,189,114,239,191,189,115,19,42,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,120,120,20,29,239,191,189,45,239,191,189,239,191,189,54,108,108,109,239,191,189,123,239,191,189,239,191,189,195,177,30,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,53,21,239,191,189,72,93,108,239,191,189,239,191,189,27,125,239,191,189,74,239,191,189,10,123,114,209,156,239,191,189,239,191,189,202,141,239,191,189,239,191,189,94,239,191,189,73,239,191,189,22,82,239,191,189,239,191,189,55,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,203,133,239,191,189,108,239,191,189,239,191,189,50,239,191,189,103,239,191,189,239,191,189,70,83,223,172,74,41,89,122,14,9,239,191,189,239,191,189,4,43,30,239,191,189,86,57,239,191,189,63,72,10,239,191,189,21,4,239,191,189,33,6,239,191,189,44,34,239,191,189,24,116,12,47,204,139,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,47,239,191,189,239,191,189,65,239,191,189,71,239,191,189,121,239,191,189,66,89,59,239,191,189,201,167,91,7,83,125,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,202,179,239,191,189,102,58,239,191,189,239,191,189,239,191,189,126,23,239,191,189,60,239,191,189,79,239,191,189,20,239,191,189,26,208,142,2,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,239,191,189,71,34,239,191,189,116,17,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,41,68,40,22,200,146,62,239,191,189,16,117,78,96,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,113,239,191,189,207,188,98,64,62,239,191,189,41,239,191,189,239,191,189,27,239,191,189,31,239,191,189,239,191,189,110,239,191,189,14,239,191,189,207,144,239,191,189,239,191,189,121,239,191,189,41,59,239,191,189,239,191,189,118,239,191,189,239,191,189,113,76,116,107,239,191,189,239,191,189,83,91,124,22,123,50,239,191,189,239,191,189,46,239,191,189,239,191,189,115,239,191,189,239,191,189,51,239,191,189,77,239,191,189,239,191,189,239,191,189,21,239,191,189,112,239,191,189,239,191,189,76,239,191,189,109,112,28,239,191,189,65,239,191,189,87,82,121,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,62,239,191,189,11,23,239,191,189,239,191,189,3,239,191,189,51,239,191,189,239,191,189,239,191,189,27,239,191,189,79,212,167,70,8,239,191,189,25,15,99,119,239,191,189,83,54,239,191,189,111,239,191,189,239,191,189,239,191,189,86,125,239,191,189,70,97,94,239,191,189,42,239,191,189,59,99,127,239,191,189,239,191,189,239,191,189,211,128,41,239,191,189,61,239,191,189,65,36,239,191,189,239,191,189,239,191,189,10,239,191,189,127,37,81,57,239,191,189,239,191,189,71,239,191,189,55,8,115,72,239,191,189,222,184,222,172,239,191,189,239,191,189,117,98,92,69,43,92,43,20,88,239,191,189,239,191,189,239,191,189,83,40,239,191,189,239,191,189,239,191,189,41,239,191,189,2,239,191,189,63,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,22,29,28,239,191,189,11,13,239,191,189,239,191,189,50,69,57,106,239,191,189,239,191,189,98,51,239,191,189,239,191,189,89,239,191,189,66,54,239,191,189,228,142,166,239,191,189,71,239,191,189,19,5,239,191,189,239,191,189,60,11,239,191,189,1,239,191,189,28,239,191,189,98,126,239,191,189,97,13,4,239,191,189,80,239,191,189,239,191,189,80,118,107,77,239,191,189,239,191,189,85,239,191,189,125,103,239,191,189,87,239,191,189,49,52,239,191,189,239,191,189,86,239,191,189,239,191,189,23,101,104,69,239,191,189,60,101,214,138,21,89,239,191,189,239,191,189,194,142,109,126,104,36,56,29,96,239,191,189,1,10,239,191,189,239,191,189,45,124,29,239,191,189,239,191,189,12,239,191,189,57,16,2,7,16,239,191,189,239,191,189,13,239,191,189,82,239,191,189,239,191,189,239,191,189,111,239,191,189,35,104,79,50,107,208,182,239,191,189,103,59,239,191,189,115,55,90,108,60,95,239,191,189,68,239,191,189,125,107,118,87,121,71,15,109,98,107,73,35,89,239,191,189,88,239,191,189,239,191,189,198,160,220,130,95,239,191,189,239,191,189,37,55,239,191,189,239,191,189,239,191,189,22,54,54,112,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,73,77,239,191,189,239,191,189,239,191,189,26,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,103,6,30,207,169,50,65,239,191,189,91,239,191,189,76,52,18,239,191,189,115,94,239,191,189,195,146,13,124,27,57,17,239,191,189,239,191,189,93,28,7,239,191,189,239,191,189,99,239,191,189,76,8,239,191,189,10,239,191,189,72,239,191,189,119,239,191,189,101,99,1,239,191,189,239,191,189,20,239,191,189,82,97,239,191,189,32,239,191,189,109,75,239,191,189,12,48,239,191,189,239,191,189,37,239,191,189,239,191,189,21,239,191,189,198,170,239,191,189,84,239,191,189,122,205,149,239,191,189,239,191,189,16,239,191,189,239,191,189,72,118,239,191,189,79,239,191,189,66,19,223,188,17,239,191,189,239,191,189,121,239,191,189,82,13,239,191,189,77,23,47,24,106,17,239,191,189,239,191,189,120,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,210,140,239,191,189,239,191,189,90,56,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,0,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,100,239,191,189,29,90,39,27,2,97,239,191,189,99,239,191,189,58,96,20,112,239,191,189,50,124,239,191,189,239,191,189,239,191,189,119,117,239,191,189,239,191,189,239,191,189,109,1,239,191,189,239,191,189,74,27,239,191,189,212,183,102,239,191,189,239,191,189,103,83,239,191,189,89,122,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,97,239,191,189,14,239,191,189,239,191,189,121,107,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,89,30,239,191,189,64,239,191,189,69,239,191,189,239,191,189,39,84,16,30,239,191,189,18,9,239,191,189,239,191,189,120,239,191,189,60,75,116,13,239,191,189,239,191,189,61,239,191,189,239,191,189,56,239,191,189,81,239,191,189,239,191,189,69,239,191,189,239,191,189,52,207,183,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,89,239,191,189,239,191,189,239,191,189,239,191,189,4,124,105,239,191,189,17,239,191,189,87,123,75,239,191,189,125,109,2,40,125,55,204,136,15,197,169,239,191,189,49,239,191,189,239,191,189,83,239,191,189,26,239,191,189,239,191,189,53,239,191,189,5,239,191,189,239,191,189,36,90,96,112,1,239,191,189,84,108,65,45,64,239,191,189,239,191,189,80,70,239,191,189,30,127,239,191,189,239,191,189,13,74,239,191,189,31,239,191,189,25,61,239,191,189,239,191,189,239,191,189,239,191,189,103,57,69,89,239,191,189,108,24,14,239,191,189,85,239,191,189,239,191,189,114,239,191,189,239,191,189,21,239,191,189,122,20,23,41,22,239,191,189,239,191,189,217,145,65,239,191,189,231,158,153,239,191,189,239,191,189,89,239,191,189,125,122,239,191,189,105,32,5,113,5,239,191,189,239,191,189,90,86,239,191,189,32,3,115,65,239,191,189,125,239,191,189,81,78,110,239,191,189,75,43,102,38,74,239,191,189,239,191,189,68,24,239,191,189,31,239,191,189,239,191,189,16,239,191,189,17,239,191,189,16,97,84,127,58,239,191,189,239,191,189,239,191,189,42,88,42,46,239,191,189,239,191,189,47,11,118,30,239,191,189,239,191,189,75,239,191,189,205,183,22,62,239,191,189,1,105,239,191,189,48,239,191,189,108,239,191,189,64,239,191,189,26,0,16,239,191,189,239,191,189,66,32,100,239,191,189,21,105,37,239,191,189,93,239,191,189,239,191,189,113,109,86,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,122,239,191,189,39,239,191,189,239,191,189,239,191,189,71,65,239,191,189,117,13,113,239,191,189,8,239,191,189,105,23,0,239,191,189,239,191,189,16,239,191,189,66,62,239,191,189,239,191,189,239,191,189,239,191,189,89,124,239,191,189,20,239,191,189,68,199,150,60,24,84,239,191,189,221,174,239,191,189,239,191,189,228,141,166,100,239,191,189,42,239,191,189,104,39,239,191,189,127,239,191,189,71,239,191,189,239,191,189,239,191,189,56,92,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,65,4,44,239,191,189,239,191,189,40,239,191,189,97,61,90,90,22,84,31,46,47,239,191,189,47,239,191,189,239,191,189,239,191,189,39,78,83,53,239,191,189,115,239,191,189,239,191,189,39,11,239,191,189,239,191,189,32,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,29,98,239,191,189,239,191,189,114,24,46,239,191,189,125,239,191,189,12,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,30,239,191,189,104,239,191,189,21,79,111,49,51,239,191,189,119,50,112,115,239,191,189,206,167,239,191,189,97,239,191,189,105,26,91,83,15,239,191,189,93,239,191,189,19,95,8,1,36,239,191,189,239,191,189,75,239,191,189,239,191,189,76,239,191,189,30,239,191,189,62,27,239,191,189,239,191,189,13,57,31,3,25,85,84,19,94,3,88,21,239,191,189,107,239,191,189,30,239,191,189,239,191,189,117,14,239,191,189,213,161,46,37,120,196,167,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,36,239,191,189,16,69,239,191,189,239,191,189,16,95,239,191,189,239,191,189,239,191,189,224,171,141,124,106,39,64,118,91,100,126,239,191,189,239,191,189,221,144,108,239,191,189,39,25,121,1,239,191,189,239,191,189,239,191,189,13,239,191,189,64,239,191,189,239,191,189,82,59,239,191,189,239,191,189,46,239,191,189,24,25,83,113,23,91,19,64,239,191,189,65,60,81,239,191,189,28,239,191,189,239,191,189,114,239,191,189,16,239,191,189,17,222,188,110,239,191,189,239,191,189,119,121,8,41,239,191,189,47,239,191,189,70,120,82,59,239,191,189,1,29,239,191,189,13,239,191,189,239,191,189,61,107,239,191,189,89,239,191,189,239,191,189,212,148,57,239,191,189,57,93,239,191,189,48,239,191,189,55,239,191,189,113,13,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,43,239,191,189,239,191,189,123,239,191,189,32,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,86,31,239,191,189,57,84,87,118,31,195,177,239,191,189,7,7,239,191,189,11,239,191,189,239,191,189,51,4,105,49,71,239,191,189,239,191,189,24,121,239,191,189,53,118,115,239,191,189,239,191,189,102,92,61,239,191,189,7,239,191,189,239,191,189,42,89,12,239,191,189,239,191,189,239,191,189,24,239,191,189,86,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,15,40,28,33,218,165,65,239,191,189,80,239,191,189,13,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,15,37,108,10,20,84,97,26,239,191,189,120,122,239,191,189,18,239,191,189,239,191,189,46,116,239,191,189,214,132,24,99,239,191,189,59,239,191,189,35,109,239,191,189,239,191,189,8,14,239,191,189,239,191,189,197,157,239,191,189,30,7,239,191,189,121,239,191,189,97,47,239,191,189,11,239,191,189,14,18,239,191,189,239,191,189,11,82,239,191,189,84,239,191,189,239,191,189,239,191,189,206,129,49,239,191,189,52,239,191,189,112,108,239,191,189,47,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,92,239,191,189,239,191,189,51,239,191,189,48,239,191,189,20,91,99,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,219,191,79,239,191,189,239,191,189,239,191,189,86,105,239,191,189,105,59,239,191,189,66,22,239,191,189,239,191,189,40,239,191,189,79,90,63,239,191,189,46,239,191,189,239,191,189,28,239,191,189,239,191,189,8,115,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,7,93,45,213,163,77,117,75,239,191,189,239,191,189,239,191,189,68,109,76,239,191,189,51,239,191,189,51,239,191,189,76,239,191,189,239,191,189,239,191,189,127,239,191,189,97,75,239,191,189,239,191,189,41,67,239,191,189,42,239,191,189,239,191,189,91,121,239,191,189,239,191,189,25,239,191,189,28,74,82,99,239,191,189,239,191,189,123,239,191,189,109,111,239,191,189,59,86,239,191,189,239,191,189,239,191,189,28,239,191,189,41,239,191,189,95,239,191,189,239,191,189,77,66,239,191,189,10,239,191,189,97,124,239,191,189,51,239,191,189,7,127,52,239,191,189,35,239,191,189,239,191,189,61,203,187,239,191,189,36,239,191,189,67,9,239,191,189,239,191,189,239,191,189,4,239,191,189,82,74,120,239,191,189,4,32,9,239,191,189,239,191,189,104,239,191,189,209,159,239,191,189,79,65,120,73,239,191,189,71,125,83,239,191,189,239,191,189,41,83,110,0,42,239,191,189,239,191,189,68,91,239,191,189,6,119,239,191,189,2,239,191,189,23,239,191,189,99,239,191,189,3,239,191,189,97,239,191,189,239,191,189,53,73,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,3,239,191,189,205,155,239,191,189,121,239,191,189,16,55,91,50,239,191,189,59,0,239,191,189,239,191,189,239,191,189,101,239,191,189,48,29,239,191,189,239,191,189,239,191,189,121,57,239,191,189,239,191,189,63,239,191,189,239,191,189,92,6,117,116,239,191,189,53,0,239,191,189,32,200,185,239,191,189,41,46,97,239,191,189,52,239,191,189,239,191,189,18,12,68,239,191,189,114,78,53,239,191,189,33,90,239,191,189,21,239,191,189,91,239,191,189,213,140,197,140,239,191,189,239,191,189,239,191,189,239,191,189,103,99,239,191,189,123,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,127,2,38,239,191,189,89,239,191,189,41,239,191,189,239,191,189,239,191,189,112,239,191,189,88,239,191,189,198,167,239,191,189,239,191,189,104,43,239,191,189,31,15,100,239,191,189,24,9,239,191,189,239,191,189,41,59,239,191,189,196,189,12,239,191,189,102,105,104,203,184,239,191,189,239,191,189,122,120,239,191,189,106,65,239,191,189,25,69,239,191,189,96,239,191,189,110,96,239,191,189,239,191,189,239,191,189,65,239,191,189,123,216,137,239,191,189,239,191,189,220,155,239,191,189,4,65,61,239,191,189,239,191,189,114,239,191,189,107,239,191,189,239,191,189,221,173,239,191,189,199,170,239,191,189,49,41,79,239,191,189,206,164,239,191,189,38,239,191,189,61,38,42,203,155,239,191,189,239,191,189,120,239,191,189,239,191,189,8,43,239,191,189,39,239,191,189,239,191,189,94,239,191,189,239,191,189,12,239,191,189,46,239,191,189,31,239,191,189,239,191,189,76,30,53,239,191,189,239,191,189,89,239,191,189,53,239,191,189,64,239,191,189,81,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,99,109,2,239,191,189,239,191,189,111,207,166,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,90,239,191,189,59,100,239,191,189,29,239,191,189,59,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,239,191,189,91,200,187,61,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,198,188,239,191,189,239,191,189,239,191,189,28,98,239,191,189,91,239,191,189,57,239,191,189,119,239,191,189,80,15,81,0,239,191,189,75,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,103,10,96,71,239,191,189,239,191,189,121,33,239,191,189,89,199,147,239,191,189,81,41,239,191,189,109,104,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,3,83,40})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff3a78d86e",
                        container: "containersc78e2a73a01645cda106dfee72bb165a",
                        blob: "Blobe245a2b911c04e33bcb58cf1588f9916_WriteProtectedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05687 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05687_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05687_s.txt", Encoding.UTF8);

    public Test05687() : base(recordedRequest, recordedResponse, "accounts8d439ff205698e1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,4,200,158,239,191,189,123,239,191,189,239,191,189,14,239,191,189,239,191,189,45,83,33,239,191,189,22,232,182,164,74,239,191,189,74,239,191,189,39,239,191,189,84,45,115,56,77,112,239,191,189,115,20,68,239,191,189,239,191,189,40,239,191,189,69,2,17,120,83,239,191,189,96,239,191,189,239,191,189,110,98,119,239,191,189,54,9,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,78,116,239,191,189,239,191,189,46,239,191,189,239,191,189,62,239,191,189,40,33,239,191,189,239,191,189,94,72,119,209,130,97,70,239,191,189,239,191,189,5,239,191,189,214,153,239,191,189,105,112,239,191,189,113,82,49,110,239,191,189,239,191,189,106,239,191,189,36,13,239,191,189,110,239,191,189,69,64,239,191,189,19,239,191,189,239,191,189,44,194,173,64,239,191,189,219,165,111,239,191,189,239,191,189,17,79,239,191,189,45,239,191,189,207,142,84,103,239,191,189,13,26,93,83,239,191,189,58,2,239,191,189,239,191,189,31,239,191,189,206,168,67,239,191,189,239,191,189,18,239,191,189,239,191,189,81,30,239,191,189,203,143,239,191,189,87,239,191,189,120,239,191,189,112,39,239,191,189,112,6,30,239,191,189,79,239,191,189,16,239,191,189,239,191,189,239,191,189,59,239,191,189,15,66,239,191,189,239,191,189,65,239,191,189,13,239,191,189,21,239,191,189,117,78,239,191,189,87,71,239,191,189,239,191,189,47,37,239,191,189,239,191,189,93,239,191,189,36,68,117,38,112,239,191,189,110,92,239,191,189,127,239,191,189,239,191,189,21,55,239,191,189,239,191,189,26,239,191,189,91,106,239,191,189,89,239,191,189,239,191,189,239,191,189,6,23,239,191,189,22,239,191,189,72,239,191,189,5,101,239,191,189,124,239,191,189,239,191,189,239,191,189,101,45,24,79,79,239,191,189,239,191,189,239,191,189,82,239,191,189,113,239,191,189,239,191,189,2,54,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,42,54,214,171,239,191,189,58,33,28,125,45,239,191,189,61,239,191,189,9,49,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,18,239,191,189,5,239,191,189,239,191,189,239,191,189,63,239,191,189,37,24,239,191,189,239,191,189,239,191,189,23,112,84,95,239,191,189,12,239,191,189,239,191,189,239,191,189,194,152,117,105,239,191,189,0,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,23,239,191,189,73,39,239,191,189,239,191,189,239,191,189,25,50,71,239,191,189,239,191,189,125,80,239,191,189,239,191,189,239,191,189,239,191,189,0,49,239,191,189,109,127,122,239,191,189,63,48,239,191,189,96,239,191,189,14,15,239,191,189,239,191,189,61,239,191,189,82,239,191,189,239,191,189,42,239,191,189,239,191,189,102,45,239,191,189,37,239,191,189,80,239,191,189,239,191,189,31,7,239,191,189,239,191,189,213,169,10,239,191,189,43,239,191,189,239,191,189,239,191,189,96,57,239,191,189,239,191,189,239,191,189,19,194,143,239,191,189,239,191,189,239,191,189,52,26,7,81,239,191,189,214,189,239,191,189,88,239,191,189,239,191,189,6,75,239,191,189,1,239,191,189,203,130,239,191,189,62,239,191,189,10,239,191,189,5,239,191,189,31,103,239,191,189,60,239,191,189,70,48,47,239,191,189,194,186,239,191,189,239,191,189,17,84,0,239,191,189,239,191,189,46,239,191,189,51,81,197,164,239,191,189,239,191,189,12,52,239,191,189,57,42,41,1,93,239,191,189,111,224,164,129,68,239,191,189,239,191,189,93,53,71,239,191,189,18,113,101,62,239,191,189,113,239,191,189,88,239,191,189,205,161,55,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,114,239,191,189,31,9,24,239,191,189,43,91,239,191,189,93,239,191,189,239,191,189,239,191,189,91,75,239,191,189,102,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff205698e1",
                        container: "containers22393f0ffadd4460a7560e07e06cd518",
                        blob: "Blobdb0f6417f87f47ca9c3274a472b33270",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05769 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05769_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05769_s.txt", Encoding.UTF8);

    public Test05769() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,75,239,191,189,239,191,189,239,191,189,207,178,239,191,189,239,191,189,239,191,189,65,27,239,191,189,239,191,189,111,239,191,189,89,93,34,49,239,191,189,239,191,189,239,191,189,239,191,189,35,54,239,191,189,0,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,20,239,191,189,222,183,88,106,239,191,189,80,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,88,12,52,239,191,189,37,25,127,239,191,189,209,181,2,239,191,189,239,191,189,89,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,126,106,239,191,189,73,62,123,89,120,239,191,189,23,49,239,191,189,53,239,191,189,45,239,191,189,202,159,70,64,2,41,239,191,189,239,191,189,239,191,189,70,92,239,191,189,43,221,187,37,112,210,141,239,191,189,239,191,189,239,191,189,239,191,189,3,122,88,239,191,189,239,191,189,239,191,189,36,8,239,191,189,126,239,191,189,89,98,74,239,191,189,85,239,191,189,50,239,191,189,239,191,189,31,239,191,189,76,239,191,189,91,12,122,98,93,99,60,239,191,189,239,191,189,66,197,170,48,239,191,189,37,239,191,189,34,83,6,239,191,189,13,98,239,191,189,38,79,55,20,239,191,189,77,239,191,189,239,191,189,239,191,189,11,25,239,191,189,115,74,239,191,189,239,191,189,77,66,239,191,189,31,239,191,189,239,191,189,36,239,191,189,12,239,191,189,239,191,189,204,154,239,191,189,239,191,189,239,191,189,74,83,19,38,79,239,191,189,239,191,189,239,191,189,94,239,191,189,23,57,239,191,189,239,191,189,97,239,191,189,239,191,189,106,44,205,162,239,191,189,118,19,41,239,191,189,239,191,189,12,24,62,107,71,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,58,12,239,191,189,91,239,191,189,116,35,239,191,189,53,239,191,189,43,239,191,189,239,191,189,239,191,189,19,38,38,239,191,189,239,191,189,70,239,191,189,50,207,163,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,29,239,191,189,9,59,6,119,41,205,152,239,191,189,92,54,239,191,189,107,239,191,189,67,16,113,239,191,189,112,83,239,191,189,123,239,191,189,8,61,14,239,191,189,50,239,191,189,0,39,98,239,191,189,14,199,168,98,13,239,191,189,239,191,189,30,62,82,82,239,191,189,44,56,6,115,239,191,189,239,191,189,239,191,189,98,239,191,189,66,101,32,51,239,191,189,105,86,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,100,42,115,52,239,191,189,40,239,191,189,11,16,239,191,189,204,190,29,78,69,239,191,189,27,239,191,189,97,239,191,189,46,68,68,239,191,189,239,191,189,102,93,28,40,64,239,191,189,76,239,191,189,239,191,189,77,239,191,189,239,191,189,102,239,191,189,60,239,191,189,39,239,191,189,239,191,189,239,191,189,220,186,239,191,189,239,191,189,239,191,189,208,145,88,18,127,32,239,191,189,203,176,53,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,0,239,191,189,16,239,191,189,36,36,239,191,189,7,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,44,85,111,73,239,191,189,239,191,189,118,45,239,191,189,35,239,191,189,113,113,14,69,239,191,189,9,239,191,189,239,191,189,239,191,189,99,239,191,189,27,108,52,19,120,239,191,189,52,239,191,189,10,239,191,189,18,78,239,191,189,97,239,191,189,239,191,189,31,239,191,189,211,186,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,194,163,24,19,239,191,189,24,19,201,145,83,220,191,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,209,168,239,191,189,28,239,191,189,239,191,189,35,239,191,189,239,191,189,27,239,191,189,90,112,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,109,239,191,189,58,29,120,83,239,191,189,83,47,10,29,49,239,191,189,239,191,189,56,65,33,239,191,189,55,35,62,239,191,189,71,239,191,189,239,191,189,239,191,189,81,118,95,59,239,191,189,120,17,239,191,189,105,44,239,191,189,239,191,189,93,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,6,239,191,189,56,239,191,189,100,64,214,177,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,2,85,239,191,189,239,191,189,78,239,191,189,32,239,191,189,110,11,239,191,189,239,191,189,93,110,53,16,239,191,189,239,191,189,212,152,239,191,189,239,191,189,61,239,191,189,239,191,189,123,239,191,189,95,33,239,191,189,239,191,189,4,239,191,189,197,151,57,239,191,189,92,46,239,191,189,32,19,45,19,239,191,189,239,191,189,103,124,126,68,207,190,2,239,191,189,51,23,82,29,239,191,189,3,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,215,155,64,239,191,189,206,177,239,191,189,16,239,191,189,9,239,191,189,57,239,191,189,70,239,191,189,70,239,191,189,239,191,189,127,239,191,189,239,191,189,43,9,92,46,239,191,189,109,39,66,239,191,189,221,167,239,191,189,239,191,189,24,52,27,119,7,239,191,189,19,58,239,191,189,239,191,189,33,239,191,189,89,95,239,191,189,239,191,189,23,30,239,191,189,121,239,191,189,85,239,191,189,46,32,239,191,189,86,123,6,239,191,189,239,191,189,98,46,239,191,189,239,191,189,27,120,34,239,191,189,77,98,45,58,239,191,189,239,191,189,13,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,215,158,111,239,191,189,239,191,189,216,163,50,239,191,189,78,239,191,189,38,1,239,191,189,49,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,23,239,191,189,27,239,191,189,239,191,189,18,115,239,191,189,239,191,189,70,68,239,191,189,239,191,189,239,191,189,72,14,49,239,191,189,127,239,191,189,105,19,87,19,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,25,239,191,189,5,109,239,191,189,216,170,239,191,189,51,239,191,189,239,191,189,33,122,239,191,189,239,191,189,84,109,239,191,189,239,191,189,239,191,189,239,191,189,6,78,78,0,3,64,7,109,20,54,6,10,40,45,90,239,191,189,28,8,111,100,68,108,239,191,189,239,191,189,71,239,191,189,239,191,189,48,58,36,59,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,127,30,89,239,191,189,23,82,97,239,191,189,239,191,189,80,239,191,189,73,103,239,191,189,239,191,189,95,113,239,191,189,106,120,239,191,189,50,239,191,189,239,191,189,82,28,71,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,37,47,70,102,239,191,189,239,191,189,211,162,106,239,191,189,90,119,60,69,239,191,189,24,31,239,191,189,77,46,94,101,239,191,189,11,70,200,188,239,191,189,18,113,239,191,189,239,191,189,77,239,191,189,76,239,191,189,36,18,46,239,191,189,29,88,239,191,189,236,163,131,239,191,189,239,191,189,109,239,191,189,239,191,189,119,31,54,239,191,189,52,58,31,239,191,189,239,191,189,49,239,191,189,239,191,189,223,153,42,114,239,191,189,42,239,191,189,12,239,191,189,239,191,189,16,5,126,100,30,239,191,189,69,16,239,191,189,239,191,189,239,191,189,239,191,189,73,46,239,191,189,239,191,189,85,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,83,121,17,239,191,189,239,191,189,121,239,191,189,88,239,191,189,14,48,65,239,191,189,27,125,239,191,189,239,191,189,239,191,189,239,191,189,63,47,80,239,191,189,239,191,189,107,239,191,189,10,25,78,239,191,189,37,60,239,191,189,239,191,189,239,191,189,41,52,94,239,191,189,43,13,87,121,31,98,75,239,191,189,239,191,189,117,239,191,189,20,97,222,174,239,191,189,2,124,50,71,239,191,189,111,239,191,189,10,239,191,189,239,191,189,239,191,189,34,80,84,102,97,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,124,31,79,60,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,38,200,172,1,22,220,187,124,77,124,54,110,239,191,189,99,125,33,77,239,191,189,239,191,189,30,125,239,191,189,43,239,191,189,239,191,189,39,239,191,189,51,239,191,189,112,61,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,75,239,191,189,4,239,191,189,239,191,189,90,239,191,189,13,239,191,189,236,190,131,76,12,20,64,99,120,239,191,189,12,75,239,191,189,49,239,191,189,239,191,189,239,191,189,63,16,239,191,189,239,191,189,104,239,191,189,121,239,191,189,103,239,191,189,26,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,105,35,48,17,85,109,239,191,189,239,191,189,26,91,239,191,189,123,38,239,191,189,26,239,191,189,52,239,191,189,239,191,189,239,191,189,9,100,239,191,189,60,37,239,191,189,84,239,191,189,18,239,191,189,77,115,20,37,239,191,189,15,239,191,189,239,191,189,91,239,191,189,12,239,191,189,239,191,189,11,50,239,191,189,239,191,189,117,239,191,189,100,115,239,191,189,57,239,191,189,96,239,191,189,239,191,189,239,191,189,47,239,191,189,46,30,239,191,189,119,14,49,103,0,239,191,189,10,239,191,189,239,191,189,97,239,191,189,239,191,189,43,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,19,239,191,189,46,104,57,104,239,191,189,239,191,189,239,191,189,42,83,239,191,189,239,191,189,239,191,189,85,86,239,191,189,1,55,239,191,189,239,191,189,239,191,189,239,191,189,194,131,239,191,189,239,191,189,52,40,239,191,189,203,169,239,191,189,80,11,239,191,189,73,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,107,94,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,8,79,90,94,102,239,191,189,108,239,191,189,120,239,191,189,209,146,95,239,191,189,239,191,189,101,239,191,189,122,13,88,9,56,100,239,191,189,38,98,100,239,191,189,239,191,189,33,93,239,191,189,85,239,191,189,89,124,239,191,189,239,191,189,221,191,87,239,191,189,239,191,189,41,239,191,189,12,239,191,189,36,239,191,189,239,191,189,92,50,68,239,191,189,23,239,191,189,239,191,189,64,125,8,57,239,191,189,87,51,239,191,189,61,239,191,189,80,54,115,62,127,48,239,191,189,239,191,189,239,191,189,239,191,189,91,50,85,239,191,189,239,191,189,43,53,0,239,191,189,17,239,191,189,66,239,191,189,25,100,124,212,134,103,46,118,65,239,191,189,111,99,239,191,189,16,239,191,189,239,191,189,2,239,191,189,77,101,59,125,13,40,88,239,191,189,239,191,189,34,51,50,44,239,191,189,14,239,191,189,90,239,191,189,2,91,17,73,239,191,189,67,26,124,239,191,189,76,239,191,189,27,239,191,189,35,239,191,189,101,117,239,191,189,76,239,191,189,87,84,124,212,163,12,67,14,239,191,189,239,191,189,85,62,239,191,189,239,191,189,218,167,239,191,189,3,239,191,189,239,191,189,98,239,191,189,66,11,24,239,191,189,239,191,189,15,127,239,191,189,100,48,98,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,118,239,191,189,11,239,191,189,79,239,191,189,91,101,239,191,189,73,11,239,191,189,113,239,191,189,84,56,239,191,189,17,113,239,191,189,239,191,189,112,51,239,191,189,239,191,189,49,36,239,191,189,239,191,189,81,43,239,191,189,92,93,107,239,191,189,87,239,191,189,239,191,189,20,239,191,189,66,239,191,189,239,191,189,115,239,191,189,239,191,189,54,14,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,5,239,191,189,123})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers549ef55518844b5291c3936e78f6a052",
                        blob: "Blob0a8295f23f3741d68868cb210079f5b7",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1535",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05658 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05658_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05658_s.txt", Encoding.UTF8);

    public Test05658() : base(recordedRequest, recordedResponse, "accounts8d439ff200e44d7")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,61,239,191,189,221,129,55,38,239,191,189,213,140,67,67,239,191,189,59,195,185,239,191,189,26,29,30,239,191,189,239,191,189,239,191,189,20,40,239,191,189,239,191,189,239,191,189,119,239,191,189,55,49,90,239,191,189,239,191,189,239,191,189,6,239,191,189,54,114,19,24,239,191,189,239,191,189,11,239,191,189,239,191,189,79,58,120,239,191,189,33,10,57,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,93,239,191,189,11,17,84,239,191,189,28,239,191,189,239,191,189,100,230,171,164,239,191,189,239,191,189,36,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,39,32,92,30,74,81,33,239,191,189,54,24,239,191,189,26,239,191,189,239,191,189,239,191,189,94,51,82,239,191,189,98,58,94,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,207,162,60,94,239,191,189,239,191,189,239,191,189,52,65,239,191,189,239,191,189,126,66,53,116,239,191,189,212,166,63,35,81,86,102,108,85,239,191,189,239,191,189,200,139,239,191,189,88,230,185,129,239,191,189,239,191,189,92,45,239,191,189,16,110,28,53,239,191,189,42,31,5,239,191,189,8,239,191,189,32,36,117,78,121,59,239,191,189,9,99,26,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,120,121,80,19,239,191,189,57,48,239,191,189,42,106,239,191,189,223,131,239,191,189,56,239,191,189,68,51,104,88,12,82,239,191,189,239,191,189,239,191,189,198,135,239,191,189,239,191,189,101,94,239,191,189,8,88,99,239,191,189,239,191,189,97,107,63,10,25,239,191,189,239,191,189,68,65,37,239,191,189,109,239,191,189,235,136,163,37,239,191,189,123,36,28,239,191,189,239,191,189,239,191,189,239,191,189,11,35,239,191,189,42,109,239,191,189,239,191,189,239,191,189,239,191,189,40,77,239,191,189,116,209,144,239,191,189,239,191,189,239,191,189,35,11,239,191,189,239,191,189,198,128,239,191,189,61,239,191,189,87,61,78,239,191,189,106,98,25,239,191,189,32,107,239,191,189,87,239,191,189,5,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,118,123,239,191,189,124,239,191,189,239,191,189,58,92,85,117,47,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,90,239,191,189,111,65,239,191,189,106,71,5,70,10,4,69,3,239,191,189,26,108,239,191,189,210,156,239,191,189,57,239,191,189,239,191,189,22,239,191,189,40,66,111,239,191,189,76,38,87,32,86,239,191,189,124,53,213,133,52,239,191,189,239,191,189,48,88,15,113,239,191,189,126,42,220,166,239,191,189,239,191,189,239,191,189,32,50,239,191,189,43,33,66,5,239,191,189,75,239,191,189,239,191,189,239,191,189,239,191,189,54,33,239,191,189,239,191,189,22,239,191,189,16,239,191,189,239,191,189,107,6,19,239,191,189,239,191,189,69,29,239,191,189,38,98,70,53,239,191,189,239,191,189,10,239,191,189,67,46,16,78,114,122,33,239,191,189,108,93,58,75,239,191,189,239,191,189,59,201,128,239,191,189,63,36,14,239,191,189,65,80,45,24,239,191,189,239,191,189,239,191,189,0,90,30,239,191,189,73,211,138,239,191,189,81,15,239,191,189,239,191,189,24,102,10,239,191,189,239,191,189,62,39,125,239,191,189,22,239,191,189,229,166,134,239,191,189,239,191,189,32,90,194,150,239,191,189,108,2,27,239,191,189,96,20,239,191,189,239,191,189,46,239,191,189,77,64,239,191,189,239,191,189,239,191,189,69,90,27,120,99,30,75,68,239,191,189,239,191,189,239,191,189,77,239,191,189,62,48,239,191,189,47,77,239,191,189,239,191,189,100,239,191,189,14})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff200e44d7",
                        container: "containers839690922c6041729d89f423b6addb6e",
                        blob: "Blob05c316e95ec2424e9068e24d89350ce5",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06684 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06684_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06684_s.txt", Encoding.UTF8);

    public Test06684() : base(recordedRequest, recordedResponse, "accounts8d439ff5236489d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,215,188,30,239,191,189,120,239,191,189,113,239,191,189,239,191,189,17,239,191,189,108,239,191,189,75,239,191,189,35,239,191,189,108,75,239,191,189,239,191,189,239,191,189,72,239,191,189,205,149,239,191,189,67,41,2,222,184,72,239,191,189,239,191,189,86,239,191,189,50,239,191,189,96,107,239,191,189,239,191,189,37,36,89,239,191,189,239,191,189,239,191,189,0,107,76,239,191,189,46,239,191,189,35,115,239,191,189,239,191,189,239,191,189,45,91,239,191,189,51,41,36,239,191,189,114,77,112,239,191,189,239,191,189,97,92,38,34,104,116,239,191,189,93,96,41,239,191,189,239,191,189,239,191,189,25,50,239,191,189,239,191,189,68,124,239,191,189,239,191,189,62,71,239,191,189,239,191,189,239,191,189,52,239,191,189,22,112,239,191,189,239,191,189,239,191,189,12,239,191,189,59,239,191,189,81,41,65,9,87,239,191,189,50,102,239,191,189,103,10,239,191,189,219,143,9,239,191,189,5,61,35,20,239,191,189,48,109,63,15,70,239,191,189,119,239,191,189,12,239,191,189,76,239,191,189,239,191,189,239,191,189,27,58,239,191,189,84,113,21,41,80,239,191,189,42,9,59,239,191,189,7,127,206,169,38,101,32,239,191,189,1,239,191,189,17,220,186,204,149,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,77,239,191,189,239,191,189,109,239,191,189,239,191,189,21,5,11,15,206,146,239,191,189,239,191,189,239,191,189,68,113,95,57,239,191,189,67,239,191,189,90,93,239,191,189,239,191,189,108,65,10,239,191,189,78,50,239,191,189,239,191,189,38,239,191,189,64,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,57,9,239,191,189,26,239,191,189,236,139,143,127,239,191,189,239,191,189,28,239,191,189,16,37,239,191,189,239,191,189,239,191,189,0,43,20,68,89,0,239,191,189,239,191,189,76,48,126,77,239,191,189,61,239,191,189,110,35,239,191,189,19,81,75,30,88,42,207,163,63,218,130,239,191,189,27,239,191,189,66,48,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,75,239,191,189,90,17,50,239,191,189,104,84,53,239,191,189,115,239,191,189,87,120,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,40,99,20,239,191,189,10,239,191,189,56,37,239,191,189,46,1,70,239,191,189,239,191,189,125,239,191,189,25,239,191,189,239,191,189,215,133,76,239,191,189,239,191,189,0,239,191,189,34,239,191,189,239,191,189,239,191,189,11,239,191,189,34,60,69,122,40,43,47,46,239,191,189,239,191,189,113,239,191,189,117,120,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,104,108,239,191,189,30,239,191,189,22,86,239,191,189,239,191,189,8,58,67,239,191,189,65,239,191,189,239,191,189,116,239,191,189,239,191,189,87,239,191,189,61,54,95,117,63,239,191,189,239,191,189,27,239,191,189,34,34,84,71,239,191,189,239,191,189,239,191,189,9,74,25,239,191,189,239,191,189,15,105,101,50,239,191,189,35,27,50,99,36,65,239,191,189,44,42,54,55,239,191,189,239,191,189,89,90,239,191,189,6,239,191,189,24,239,191,189,109,223,187,106,104,239,191,189,126,239,191,189,45,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,97,26,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,126,101,9,239,191,189,77,67,6,239,191,189,60,118,239,191,189,239,191,189,239,191,189,117,113,239,191,189,105,61,101,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,54,239,191,189,122,239,191,189,61,14,10,239,191,189,239,191,189,0,86,36,74,239,191,189,239,191,189,239,191,189,239,191,189,114,74,66,47,235,169,171,56,111,239,191,189,239,191,189,239,191,189,2,239,191,189,71,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,116,27,239,191,189,31,239,191,189,101,98,239,191,189,239,191,189,49,119,239,191,189,7,239,191,189,239,191,189,24,5,239,191,189,15,24,239,191,189,239,191,189,239,191,189,220,176,239,191,189,73,17,239,191,189,10,92,72,76,119,239,191,189,239,191,189,24,222,149,70,35,43,239,191,189,239,191,189,239,191,189,15,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,119,239,191,189,239,191,189,111,239,191,189,27,80,239,191,189,52,39,26,93,239,191,189,42,68,70,239,191,189,239,191,189,122,210,172,239,191,189,7,13,239,191,189,239,191,189,53,87,26,239,191,189,65,126,103,56,239,191,189,8,214,168,239,191,189,121,239,191,189,57,239,191,189,103,239,191,189,239,191,189,84,239,191,189,117,239,191,189,13,8,99,15,103,239,191,189,126,239,191,189,116,239,191,189,239,191,189,207,137,239,191,189,239,191,189,239,191,189,42,59,111,67,239,191,189,1,239,191,189,114,219,159,88,37,49,75,225,136,156,56,26,88,239,191,189,90,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,106,109,239,191,189,24,239,191,189,209,191,57,34,239,191,189,44,98,49,239,191,189,239,191,189,222,150,239,191,189,67,239,191,189,23,71,239,191,189,239,191,189,239,191,189,239,191,189,207,178,239,191,189,78,108,110,239,191,189,7,110,29,64,239,191,189,96,239,191,189,239,191,189,101,239,191,189,12,239,191,189,38,220,144,239,191,189,80,103,44,239,191,189,239,191,189,35,239,191,189,213,149,1,31,239,135,153,123,239,191,189,239,191,189,80,239,191,189,91,239,191,189,86,7,239,191,189,15,111,239,191,189,25,239,191,189,239,191,189,120,239,191,189,62,6,55,239,191,189,64,119,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,64,239,191,189,32,239,191,189,88,76,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,95,73,239,191,189,117,66,102,53,202,137,74,239,191,189,239,191,189,97,239,191,189,126,123,84,8,109,121,239,191,189,239,191,189,239,191,189,115,78,20,239,191,189,83,6,239,191,189,239,191,189,9,28,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,113,78,220,167,116,38,45,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,100,36,13,239,191,189,239,191,189,239,191,189,102,239,191,189,103,204,136,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,0,65,239,191,189,239,191,189,80,26,95,117,239,191,189,47,27,20,239,191,189,68,59,69,239,191,189,70,92,239,191,189,127,239,191,189,9,239,191,189,83,239,191,189,239,191,189,120,239,191,189,239,191,189,92,6,239,191,189,98,101,239,191,189,53,99,55,239,191,189,109,239,191,189,3,55,239,191,189,115,26,67,115,101,72,63,97,111,239,191,189,95,239,191,189,108,86,85,45,239,191,189,239,191,189,59,239,191,189,20,81,47,222,130,15,82,14,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,223,169,4,29,94,29,239,191,189,84,239,191,189,6,23,239,191,189,12,225,164,133,239,191,189,239,191,189,100,239,191,189,34,239,191,189,101,239,191,189,85,239,191,189,49,239,191,189,42,239,191,189,207,155,118,117,239,191,189,239,191,189,239,191,189,220,181,111,239,191,189,77,239,191,189,107,70,69,44,230,191,143,23,110,52,239,191,189,239,191,189,68,20,239,191,189,104,239,191,189,239,191,189,42,239,191,189,72,45,239,191,189,108,32,239,191,189,40,239,191,189,45,37,239,191,189,239,191,189,239,191,189,14,239,191,189,4,239,191,189,106,99,105,96,102,239,191,189,239,191,189,63,239,191,189,13,116,201,161,239,191,189,94,82,35,24,239,191,189,239,191,189,239,191,189,28,103,44,239,191,189,7,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,221,191,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,118,239,191,189,83,63,58,97,239,191,189,1,68,42,78,239,191,189,61,239,191,189,94,32,43,239,191,189,62,83,239,191,189,239,191,189,239,191,189,19,239,191,189,54,60,81,239,191,189,239,191,189,239,191,189,72,76,239,191,189,239,191,189,123,68,22,124,46,196,181,239,191,189,239,191,189,113,239,191,189,239,191,189,70,104,239,191,189,239,191,189,88,239,191,189,199,185,2,239,191,189,64,107,3,36,239,191,189,48,110,68,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,11,16,239,191,189,6,63,15,239,191,189,67,88,239,191,189,239,191,189,20,22,239,191,189,239,191,189,239,191,189,239,191,189,216,179,4,239,191,189,120,10,32,239,191,189,51,110,106,239,191,189,86,127,239,191,189,239,191,189,76,239,191,189,55,239,191,189,194,184,239,191,189,39,239,191,189,46,239,191,189,27,88,239,191,189,83,42,239,191,189,239,191,189,46,239,191,189,105,239,191,189,6,111,239,191,189,11,239,191,189,55,100,2,118,98,51,107,63,44,77,73,22,239,191,189,102,239,191,189,239,191,189,239,191,189,100,106,219,182,23,239,191,189,202,146,87,10,64,239,191,189,127,239,191,189,49,239,191,189,23,103,195,169,239,191,189,89,239,191,189,239,191,189,120,38,239,191,189,67,239,191,189,51,112,239,191,189,239,191,189,42,10,22,48,239,191,189,31,239,191,189,56,239,191,189,10,40,42,239,191,189,239,191,189,239,191,189,23,95,239,191,189,239,191,189,239,191,189,36,36,11,239,191,189,239,191,189,61,239,191,189,216,134,239,191,189,35,239,191,189,89,239,191,189,85,239,191,189,27,239,191,189,44,71,21,112,239,191,189,78,239,191,189,239,191,189,239,191,189,121,88,43,120,79,112,39,239,191,189,5,239,191,189,239,191,189,66,239,191,189,47,214,177,41,239,191,189,209,145,88,239,191,189,239,191,189,216,183,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,44,74,118,127,91,66,239,191,189,41,49,81,79,239,191,189,239,191,189,68,127,23,62,239,191,189,239,191,189,103,49,239,191,189,97,33,239,191,189,47,239,191,189,239,191,189,239,191,189,126,239,191,189,65,239,191,189,21,97,239,191,189,87,86,239,191,189,19,100,239,191,189,63,8,6,117,239,191,189,55,239,191,189,107,239,191,189,86,239,191,189,59,239,191,189,85,239,191,189,44,239,191,189,59,113,239,191,189,99,239,191,189,126,239,191,189,46,30,94,239,191,189,105,239,191,189,84,239,191,189,81,33,24,239,191,189,239,191,189,12,96,22,18,239,191,189,13,239,191,189,62,239,191,189,120,99,105,41,69,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,101,25,66,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,60,98,114,239,191,189,239,191,189,91,239,191,189,103,239,191,189,239,191,189,119,84,239,191,189,239,191,189,126,63,124,125,239,191,189,101,68,239,191,189,2,239,191,189,239,191,189,71,212,143,113,39,239,191,189,121,239,191,189,38,6,239,191,189,239,191,189,239,191,189,239,191,189,75,116,239,191,189,239,191,189,72,16,115,71,5,74,105,239,191,189,235,132,131,239,191,189,96,120,239,147,134,17,239,191,189,102,239,191,189,239,191,189,100,239,191,189,239,191,189,119,239,191,189,204,128,66,26,239,191,189,239,191,189,13,239,191,189,239,191,189,212,141,239,191,189,38,239,191,189,99,239,191,189,107,43,239,191,189,239,191,189,63,239,191,189,104,16,57,125,122,73,74,239,191,189,125,115,239,191,189,194,157,4,239,191,189,105,239,191,189,239,191,189,82,239,191,189,89,239,191,189,239,191,189,239,191,189,208,169,71,111,239,191,189,239,191,189,62,239,191,189,73,12,24,50,239,191,189,82,80,239,191,189,103,239,191,189,86,25,239,191,189,100,32,94,239,191,189,1,119,239,191,189,83,120,103,239,191,189,23,239,191,189,239,191,189,239,191,189,2,218,180,239,191,189,52,239,191,189,121,239,191,189,239,191,189,117,239,191,189,97,118,239,191,189,94,111,104,223,141,108,239,191,189,239,191,189,239,191,189,82,112,124,208,165,111,27,48,239,191,189,127,239,191,189,239,191,189,53,239,191,189,239,191,189,60,239,191,189,115,112,121,21,87,239,191,189,25,239,191,189,64,55,34,65,71,25,81,239,191,189,96,239,191,189,64,239,191,189,239,191,189,124,90,88,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,81,239,191,189,239,191,189,117,25,125,60,25,239,191,189,239,191,189,239,191,189,46,239,191,189,13,99,55,239,191,189,59,119,67,34,239,191,189,66,239,191,189,239,191,189,21,32,88,95,239,191,189,71,239,191,189,124,61,239,191,189,239,191,189,78,239,191,189,55,64,35,239,191,189,239,191,189,239,191,189,61,77,118,75,90,239,191,189,37,239,191,189,194,128,239,191,189,85,62,84,126,4,92,239,191,189,239,191,189,111,239,178,166,59,239,191,189,239,191,189,3,3,55,31,120,115,80,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,208,175,239,191,189,239,191,189,101,124,239,191,189,239,191,189,36,51,239,191,189,63,239,191,189,198,130,77,239,191,189,239,191,189,15,239,191,189,239,191,189,34,239,191,189,239,191,189,96,95,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,26,239,191,189,239,191,189,65,239,191,189,32,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,26,13,239,191,189,239,191,189,71,200,174,27,112,239,191,189,5,239,191,189,239,191,189,11,78,239,191,189,93,90,239,191,189,239,191,189,239,191,189,89,239,191,189,79,239,191,189,239,191,189,66,239,191,189,56,239,191,189,239,191,189,53,32,239,191,189,201,150,239,191,189,239,191,189,81,66,239,191,189,239,191,189,27,60,37,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,40,64,118,239,191,189,239,191,189,107,86,56,26,45,99,115,56,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,81,42,9,2,239,191,189,239,191,189,67,239,191,189,36,95,23,18,239,191,189,86,73,239,191,189,111,239,191,189,77,74,1,15,239,191,189,25,239,191,189,11,239,191,189,87,239,191,189,48,66,239,191,189,239,191,189,94,239,191,189,76,239,191,189,223,185,239,191,189,239,191,189,31,9,4,92,38,239,191,189,239,191,189,84,239,191,189,19,239,191,189,210,139,239,191,189,66,104,239,191,189,86,239,191,189,239,191,189,239,191,189,50,239,191,189,28,44,39,66,102,239,191,189,70,239,191,189,29,239,191,189,85,239,191,189,5,239,191,189,239,191,189,239,191,189,38,239,191,189,3,239,191,189,28,239,191,189,24,95,239,191,189,239,191,189,228,182,136,17,239,191,189,10,239,191,189,21,239,191,189,47,239,191,189,239,191,189,122,87,239,191,189,239,191,189,239,191,189,24,54,239,191,189,60,239,191,189,50,209,128,13,239,191,189,56,215,150,20,200,172,239,191,189,24,239,191,189,7,11,29,75,239,191,189,239,191,189,213,142,239,191,189,239,191,189,112,239,191,189,113,239,191,189,239,191,189,239,191,189,40,239,191,189,112,57,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,62,80,26,53,239,191,189,239,191,189,63,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,76,213,163,75,239,191,189,239,191,189,59,239,191,189,61,239,191,189,21,239,191,189,239,191,189,72,239,191,189,12,80,122,239,191,189,40,64,239,191,189,239,191,189,115,80,239,191,189,239,191,189,108,121,30,82,3,61,239,191,189,36,99,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,5,239,191,189,239,191,189,120,95,239,191,189,42,24,107,194,177,239,191,189,81,48,239,191,189,108,239,191,189,239,191,189,78,30,94,17,99,61,35,123,43,239,191,189,239,191,189,66,83,239,191,189,239,191,189,110,239,191,189,239,191,189,53,12,239,191,189,239,191,189,57,239,191,189,122,13,239,191,189,18,239,191,189,113,40,1,23,239,191,189,239,191,189,65,239,191,189,50,239,191,189,85,239,191,189,69,51,204,128,93,239,191,189,108,239,191,189,63,214,184,239,191,189,239,191,189,42,37,121,239,191,189,48,239,191,189,105,124,115,239,191,189,239,191,189,43,239,191,189,206,163,122,239,191,189,239,191,189,239,191,189,40,205,174,5,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,82,72,85,221,184,28,121,73,239,191,189,239,191,189,122,67,239,191,189,118,46,84,239,191,189,27,239,191,189,71,239,191,189,239,191,189,216,153,239,191,189,123,31,239,191,189,239,191,189,239,191,189,196,142,65,106,85,239,191,189,239,191,189,22,239,191,189,0,62,78,36,239,191,189,239,191,189,221,143,239,191,189,239,191,189,6,239,191,189,219,166,123,85,111,239,191,189,239,191,189,60,239,191,189,239,191,189,91,10,195,181,239,191,189,239,191,189,12,239,191,189,126,239,191,189,5,67,70,119,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,17,72,122,115,239,191,189,239,191,189,239,191,189,21,239,191,189,26,239,191,189,217,137,53,239,191,189,67,96,239,191,189,239,191,189,77,239,191,189,239,191,189,39,52,127,239,191,189,95,3,239,191,189,239,191,189,208,128,239,191,189,108,239,191,189,18,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,44,239,191,189,17,239,191,189,107,83,239,191,189,80,13,76,33,70,239,191,189,80,239,191,189,239,191,189,110,42,73,108,58,29,123,208,180,17,44,6,239,191,189,239,191,189,239,191,189,239,191,189,79,83,239,191,189,77,111,59,103,239,191,189,239,191,189,78,95,109,239,191,189,73,91,123,69,6,239,191,189,239,191,189,26,120,239,191,189,195,182,66,197,143,203,129,122,94,239,191,189,239,191,189,113,58,83,51,239,191,189,106,239,191,189,239,191,189,13,239,191,189,107,239,191,189,239,191,189,239,191,189,126,3,10,239,191,189,239,191,189,98,67,239,191,189,239,191,189,239,191,189,37,25,90,239,191,189,239,191,189,239,191,189,82,239,191,189,9,10,239,191,189,84,4,239,191,189,239,191,189,5,222,136,239,191,189,75,239,191,189,20,239,191,189,77,126,111,239,191,189,31,63,46,239,191,189,239,191,189,239,191,189,239,191,189,80,39,105,239,191,189,27,76,24,239,191,189,239,191,189,239,191,189,203,174,6,239,191,189,239,191,189,92,100,46,239,191,189,57,239,191,189,5,239,191,189,54,95,239,191,189,239,191,189,50,122,218,135,10,239,191,189,102,96,206,156,239,191,189,109,239,191,189,50,239,191,189,108,23,239,191,189,239,191,189,104,239,191,189,63,239,191,189,239,191,189,84,239,191,189,117,4,74,239,191,189,51,127,239,191,189,113,239,191,189,239,191,189,46,239,191,189,9,239,191,189,239,191,189,17,239,191,189,100,239,191,189,48,6,9,239,191,189,117,239,191,189,239,191,189,26,27,239,191,189,16,51,41,47,97,21,52,104,127,239,191,189,37,75,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,45,33,101,239,191,189,239,191,189,111,239,191,189,239,191,189,37,126,239,191,189,125,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,87,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,119,239,191,189,239,191,189,120,239,191,189,102,99,14,239,191,189,87,239,191,189,88,37,239,191,189,239,191,189,40,237,137,167,79,201,128,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,39,43,98,45,113,16,90,30,25,239,191,189,29,239,191,189,109,85,239,191,189,57,98,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,76,118,239,191,189,42,239,191,189,239,191,189,12,101,239,191,189,118,97,103,43,110,43,239,191,189,211,147,10,211,175,239,191,189,239,191,189,92,42,19,108,81,41,239,191,189,239,191,189,239,191,189,76,99,22,239,191,189,239,191,189,239,191,189,95,76,13,115,114,88,11,239,191,189,104,239,191,189,54,34,66,12,239,191,189,7,24,239,191,189,239,191,189,81,0,239,191,189,101,239,191,189,60,8,125,239,191,189,27,239,191,189,87,116,239,191,189,239,191,189,51,239,191,189,239,191,189,60,22,39,80,61,239,191,189,239,191,189,26,6,96,239,191,189,239,191,189,68,74,83,239,191,189,114,239,191,189,120,239,191,189,82,55,106,239,191,189,104,209,159,115,239,191,189,51,84,239,191,189,3,64,220,172,239,191,189,0,239,191,189,60,196,159,53,239,191,189,239,191,189,239,191,189,239,191,189,126,4,239,191,189,124,7,239,191,189,239,191,189,116,5,239,191,189,76,239,191,189,107,11,45,88,239,191,189,12,19,239,191,189,3,110,239,191,189,239,191,189,114,34,60,34,239,191,189,1,239,191,189,73,239,191,189,239,191,189,33,111,13,239,191,189,77,30,44,239,191,189,239,191,189,1,239,191,189,24,87,49,239,191,189,70,98,239,191,189,126,239,191,189,239,191,189,15,94,239,191,189,10,239,191,189,125,239,191,189,239,191,189,4,239,191,189,3,39,112,239,191,189,75,27,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,111,89,239,191,189,11,239,191,189,107,239,191,189,40,239,191,189,16,39,17,16,74,239,191,189,105,239,191,189,120,10,239,191,189,25,125,239,191,189,239,191,189,71,239,191,189,239,191,189,70,220,138,239,191,189,119,239,191,189,83,239,191,189,25,114,41,85,100,239,191,189,57,22,73,215,173,1,110,85,83,83,44,198,139,239,191,189,104,239,191,189,195,178,112,89,76,64,44,239,191,189,239,191,189,87,239,191,189,239,191,189,80,46,79,239,191,189,109,90,68,218,157,112,43,239,191,189,216,135,54,239,191,189,111,239,191,189,45,97,72,52,239,191,189,118,239,191,189,11,114,239,191,189,239,191,189,61,86,11,113,5,36,3,119,88,49,239,191,189,239,191,189,70,83,239,191,189,119,239,191,189,239,191,189,9,239,191,189,28,239,191,189,41,239,191,189,239,191,189,27,127,239,191,189,239,191,189,98,239,191,189,75,239,191,189,239,191,189,51,239,191,189,239,191,189,103,239,191,189,18,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,109,239,191,189,239,191,189,239,191,189,78,239,191,189,84,44,118,239,191,189,239,191,189,43,239,191,189,239,191,189,73,97,239,191,189,102,32,239,191,189,239,191,189,25,67,239,191,189,13,36,239,191,189,44,239,191,189,239,191,189,44,36,239,191,189,98,239,191,189,57,91,239,191,189,62,223,168,119,239,191,189,239,191,189,109,97,80,99,239,191,189,83,28,239,191,189,59,63,239,191,189,113,106,239,191,189,65,125,239,191,189,0,239,191,189,194,189,239,191,189,67,69,30,15,5,239,191,189,40,64,7,17,111,239,191,189,239,191,189,239,191,189,239,191,189,44,121,239,191,189,221,164,239,191,189,126,102,239,191,189,99,96,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,30,10,69,239,191,189,77,32,96,239,191,189,55,239,191,189,2,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,25,239,191,189,239,191,189,198,184,64,239,191,189,239,191,189,103,38,95,47,239,191,189,210,156,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,67,239,191,189,112,239,191,189,99,16,239,191,189,239,191,189,24,239,191,189,34,239,191,189,3,239,191,189,86,239,191,189,68,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,216,163,123,239,191,189,239,191,189,8,223,176,239,191,189,239,191,189,38,214,168,42,27,84,47,239,191,189,239,191,189,79,239,191,189,60,86,239,191,189,18,70,10,239,191,189,90,114,239,191,189,57,74,26,239,191,189,7,239,191,189,36,36,239,191,189,56,239,191,189,113,14,239,191,189,239,191,189,88,40,56,51,239,191,189,239,191,189,239,191,189,48,239,191,189,76,239,191,189,218,138,239,191,189,90,86,61,54,237,139,142,239,191,189,20,107,10,239,191,189,15,22,239,191,189,239,191,189,72,239,191,189,40,239,191,189,239,191,189,92,33,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,122,51,239,191,189,239,191,189,94,31,239,191,189,20,239,191,189,41,119,239,191,189,239,191,189,93,239,191,189,4,79,239,191,189,239,191,189,76,239,191,189,52,239,191,189,239,191,189,101,234,163,149,89,121,239,191,189,239,191,189,76,56,87,239,191,189,111,239,191,189,239,191,189,121,239,191,189,72,84,22,28,239,191,189,13,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,70,53,54,239,191,189,116,123,48,239,191,189,83,104,239,191,189,86,90,6,56,239,191,189,239,191,189,239,191,189,120,97,239,191,189,239,191,189,239,191,189,127,239,191,189,22,105,239,191,189,239,191,189,38,71,239,191,189,87,17,98,57,47,86,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,11,239,191,189,47,21,43,101,77,239,191,189,9,239,191,189,100,239,191,189,24,123,65,65,239,191,189,3,239,191,189,239,191,189,91,103,239,191,189,122,239,191,189,40,239,191,189,59,239,191,189,239,191,189,41,239,191,189,117,239,191,189,239,191,189,116,23,239,191,189,44,239,191,189,21,239,191,189,37,239,191,189,239,191,189,239,191,189,116,239,191,189,107,82,14,239,191,189,239,191,189,29,198,163,33,239,191,189,109,2,239,191,189,17,239,191,189,24,110,239,191,189,81,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,72,239,191,189,239,191,189,66,239,191,189,225,180,179,89,207,158,239,191,189,121,239,191,189,88,239,191,189,41,83,99,82,41,37,3,239,191,189,12,80,196,161,239,191,189,214,158,40,77,239,191,189,73,92,239,191,189,97,79,211,184,79,45,66,34,54,239,191,189,239,191,189,239,191,189,221,133,122,239,191,189,110,239,191,189,35,239,191,189,13,53,239,191,189,29,18,213,130,49,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,0,80,36,98,239,191,189,42,37,239,191,189,239,191,189,43,206,181,239,191,189,121,239,191,189,16,239,191,189,239,191,189,82,33,239,191,189,22,239,191,189,119,54,239,191,189,239,191,189,43,239,191,189,104,95,36,47,106,239,191,189,49,13,19,239,191,189,118,239,191,189,93,239,191,189,52,239,191,189,239,191,189,96,77,239,191,189,239,191,189,52,9,203,171,233,147,173,43,10,87,239,191,189,239,191,189,125,203,169,239,191,189,59,239,191,189,121,2,239,191,189,239,191,189,220,147,239,191,189,54,33,66,92,239,191,189,114,239,191,189,76,113,43,27,100,239,191,189,239,191,189,96,239,191,189,31,239,191,189,239,191,189,99,209,138,84,239,191,189,239,191,189,211,173,94,72,45,56,12,239,191,189,114,106,239,191,189,41,239,191,189,27,84,12,239,191,189,239,191,189,34,124,239,191,189,218,162,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,8,39,239,191,189,10,239,191,189,18,239,191,189,239,191,189,43,239,191,189,56,44,239,191,189,24,239,191,189,58,121,104,86,49,239,191,189,49,60,4,239,191,189,11,239,191,189,9,111,58,42,239,191,189,34,239,191,189,239,191,189,2,47,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,201,128,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,124,30,239,191,189,239,191,189,239,191,189,17,239,191,189,99,239,191,189,126,239,191,189,88,9,68,81,127,10,104,239,191,189,92,116,91,59,114,239,191,189,74,95,22,76,236,181,176,99,3,239,191,189,239,191,189,23,126,239,191,189,35,239,191,189,239,191,189,33,5,65,39,239,191,189,103,69,61,120,28,239,191,189,31,239,191,189,96,239,191,189,120,44,239,191,189,50,77,239,191,189,239,191,189,59,239,191,189,239,191,189,6,78,97,103,239,191,189,104,239,191,189,198,144,58,53,49,92,239,191,189,239,191,189,239,191,189,15,116,239,191,189,239,191,189,68,89,239,191,189,85,239,191,189,81,56,239,191,189,72,87,239,191,189,239,191,189,105,51,239,191,189,24,239,191,189,239,191,189,239,191,189,57,88,25,38,101,70,239,191,189,33,58,124,124,28,239,191,189,239,176,172,239,191,189,11,239,191,189,58,48,239,191,189,126,57,239,191,189,108,239,191,189,41,7,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,64,110,239,191,189,89,239,191,189,22,239,191,189,239,191,189,239,191,189,115,38,121,239,191,189,239,191,189,94,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,126,239,191,189,26,90,239,191,189,66,239,191,189,239,191,189,64,239,191,189,107,75,26,111,239,191,189,25,239,191,189,95,55,69,78,239,191,189,21,239,191,189,19,45,239,191,189,98,19,17,97,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,60,239,191,189,239,191,189,104,56,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,105,239,191,189,40,127,69,239,191,189,47,0,5,239,191,189,124,21,239,191,189,91,45,239,191,189,10,89,34,239,191,189,239,191,189,29,239,191,189,117,239,191,189,87,239,191,189,22,239,191,189,109,84,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,12,10,10,123,239,191,189,239,191,189,9,25,75,40,239,191,189,239,191,189,239,191,189,239,191,189,24,24,118,109,40,239,191,189,239,191,189,98,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,3,38,10,239,191,189,70,50,239,191,189,11,239,191,189,19,239,191,189,239,191,189,239,191,189,198,173,53,53,42,239,191,189,110,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,74,239,191,189,59,63,82,14,239,191,189,31,21,36,30,239,191,189,112,239,191,189,6,12,59,98,239,191,189,111,0,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,86,66,239,191,189,239,191,189,31,75,239,191,189,38,208,157,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,23,56,239,191,189,3,103,239,191,189,239,191,189,30,89,39,239,191,189,55,239,191,189,239,191,189,83,33,76,239,191,189,239,191,189,126,40,239,191,189,37,239,191,189,239,191,189,60,239,191,189,239,191,189,22,115,239,191,189,98,44,239,191,189,93,69,239,191,189,8,208,189,239,191,189,239,191,189,239,191,189,80,239,191,189,50,45,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,90,239,191,189,47,239,191,189,73,239,191,189,125,67,239,191,189,97,239,191,189,239,191,189,33,76,14,55,68,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,14,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,2,239,191,189,239,191,189,127,239,191,189,239,191,189,10,88,66,239,191,189,239,191,189,106,12,239,191,189,95,75,106,239,191,189,239,191,189,18,98,116,239,191,189,10,239,191,189,58,60,74,239,191,189,239,191,189,99,81,239,191,189,239,191,189,73,93,125,239,191,189,113,62,239,191,189,51,239,191,189,239,191,189,73,67,2,3,239,191,189,71,89,89,239,191,189,15,48,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,125,93,1,206,166,49,239,191,189,37,47,239,191,189,239,191,189,239,191,189,239,191,189,55,56,119,104,239,191,189,10,239,191,189,239,191,189,94,239,191,189,109,239,191,189,31,37,239,191,189,45,239,191,189,81,89,239,191,189,127,239,191,189,239,191,189,239,191,189,121,239,191,189,39,48,239,191,189,1,239,191,189,21,239,191,189,13,20,98,72,63,239,191,189,239,191,189,239,191,189,46,31,239,191,189,239,191,189,0,239,191,189,12,239,191,189,239,191,189,239,191,189,127,239,191,189,1,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,93,239,191,189,88,239,191,189,17,17,65,239,191,189,75,239,191,189,239,191,189,239,191,189,80,101,5,60,121,44,27,74,239,191,189,93,62,239,191,189,239,191,189,239,191,189,97,208,162,80,214,158,239,191,189,239,191,189,239,191,189,239,191,189,60,33,116,239,191,189,239,191,189,18,87,239,191,189,52,239,191,189,77,239,191,189,104,117,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,113,66,239,191,189,239,191,189,58,64,205,163,98,0,87,239,191,189,31,239,191,189,239,191,189,5,86,239,191,189,46,19,67,58,239,191,189,30,239,191,189,112,239,191,189,239,191,189,239,191,189,119,46,88,75,50,239,191,189,92,39,110,239,191,189,239,191,189,239,191,189,42,103,29,239,191,189,239,191,189,118,239,191,189,239,191,189,106,239,191,189,58,239,191,189,45,8,31,239,191,189,100,239,191,189,3,225,128,137,40,95,239,191,189,114,16,239,191,189,46,125,239,191,189,52,105,25,210,189,31,45,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,106,239,191,189,5,239,191,189,60,239,191,189,9,35,239,191,189,200,170,239,191,189,239,191,189,239,191,189,3,239,191,189,81,59,92,117,239,191,189,50,20,53,98,239,191,189,54,239,191,189,16,25,7,239,191,189,52,239,191,189,36,109,71,108,239,191,189,115,239,191,189,62,239,191,189,111,239,191,189,239,191,189,126,89,239,191,189,42,118,60,65,127,239,191,189,125,239,191,189,239,191,189,3,239,191,189,77,229,174,162,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,66,239,191,189,3,239,191,189,239,191,189,239,191,189,203,168,239,191,189,66,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,83,89,239,191,189,239,191,189,239,191,189,8,210,169,96,239,191,189,239,191,189,239,191,189,89,239,191,189,56,239,191,189,75,80,65,239,191,189,239,191,189,109,239,191,189,11,239,191,189,74,12,106,9,24,239,191,189,83,239,191,189,72,239,191,189,32,239,191,189,239,191,189,66,239,191,189,49,51,127,58,17,32,79,9,10,239,191,189,49,100,80,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,71,239,191,189,61,239,191,189,16,42,23,78,115,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,95,80,239,191,189,102,3,69,239,191,189,239,191,189,198,182,225,141,149,200,148,55,91,239,191,189,98,63,239,191,189,239,191,189,106,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,8,78,96,121,57,120,115,239,191,189,80,239,191,189,239,191,189,239,191,189,26,5,45,239,191,189,105,36,83,239,191,189,36,109,239,191,189,41,15,99,109,239,191,189,239,191,189,50,200,161,211,156,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,44,214,133,210,187,64,42,239,191,189,239,191,189,239,191,189,212,155,104,55,106,239,191,189,10,239,191,189,239,191,189,30,239,191,189,239,191,189,126,69,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,19,239,191,189,56,221,155,239,191,189,97,7,239,191,189,239,191,189,239,191,189,239,191,189,37,220,158,119,239,191,189,239,191,189,13,95,239,191,189,3,59,41,7,239,191,189,239,191,189,96,239,191,189,62,239,191,189,14,239,191,189,239,191,189,85,58,49,239,191,189,111,197,141,22,239,191,189,59,216,182,32,10,65,16,198,137,239,191,189,119,71,16,239,191,189,14,239,191,189,14,36,1,100,239,191,189,49,239,191,189,239,191,189,85,239,191,189,99,69,239,191,189,112,71,239,191,189,108,51,0,81,80,109,239,191,189,30,239,191,189,119,239,191,189,44,239,191,189,239,191,189,68,122,34,36,97,239,191,189,239,191,189,239,191,189,14,10,18,239,191,189,203,131,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,73,55,239,191,189,67,239,191,189,66,239,191,189,34,239,191,189,15,239,191,189,69,239,191,189,37,239,191,189,63,100,239,191,189,70,64,239,191,189,122,239,191,189,239,191,189,103,239,191,189,101,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,64,239,191,189,87,10,239,191,189,96,33,239,191,189,239,191,189,126,32,239,191,189,20,239,191,189,10,239,191,189,86,9,99,32,239,191,189,48,239,191,189,5,79,95,239,191,189,239,191,189,96,34,198,186,239,191,189,6,76,31,35,213,155,127,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,49,6,239,191,189,239,191,189,124,111,70,239,191,189,101,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,71,86,239,191,189,239,191,189,101,91,14,86,234,170,128,109,239,191,189,42,66,214,133,239,191,189,45,239,191,189,4,106,239,191,189,87,116,197,161,239,191,189,53,239,191,189,26,6,239,191,189,68,90,69,46,25,101,35,239,191,189,239,191,189,75,239,191,189,1,98,73,58,239,191,189,19,239,191,189,44,103,46,66,239,191,189,3,95,239,191,189,109,206,180,239,191,189,102,102,39,80,239,191,189,239,191,189,239,191,189,107,41,9,239,191,189,24,31,239,191,189,85,17,124,102,6,34,4,237,158,141,1,110,65,239,191,189,40,207,182,239,191,189,54,113,239,191,189,239,191,189,59,239,191,189,106,239,191,189,107,96,3,94,72,42,239,191,189,90,9,239,191,189,25,6,199,146,239,191,189,120,200,153,78,97,239,191,189,239,191,189,67,90,83,3,239,191,189,19,239,191,189,213,131,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,69,215,162,239,191,189,239,191,189,72,239,191,189,239,191,189,26,239,191,189,239,191,189,29,210,162,239,191,189,8,200,146,29})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff5236489d",
                        container: "containers959b993c36dc43fea78a08f7f3b93541",
                        blob: "Blob8c4cf2674c334940a76d2596be4f2cb1_WriteProtectedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06907 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06907_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06907_s.txt", Encoding.UTF8);

    public Test06907() : base(recordedRequest, recordedResponse, "accounts8d439ff6f731429")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{124,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,101,48,223,130,75,41,85,239,191,189,122,239,191,189,66,239,191,189,239,191,189,239,191,189,231,189,154,75,239,191,189,239,191,189,239,191,189,239,191,189,74,76,10,101,94,239,191,189,67,77,239,191,189,9,2,89,118,8,239,191,189,239,191,189,239,191,189,46,82,121,239,191,189,74,74,64,48,197,149,239,191,189,239,191,189,85,5,68,92,108,239,191,189,120,239,191,189,203,132,239,191,189,45,239,191,189,57,239,191,189,68,85,222,191,239,191,189,84,118,75,35,57,0,2,239,191,189,52,239,191,189,59,84,127,239,191,189,3,239,191,189,239,191,189,9,35,107,124,16,99,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,111,239,191,189,47,39,1,239,191,189,239,191,189,56,51,229,144,175,239,191,189,50,72,48,239,191,189,49,53,239,191,189,71,76,239,191,189,83,40,67,19,126,46,239,191,189,113,239,191,189,20,72,41,239,191,189,36,87,239,191,189,116,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,95,49,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,123,122,10,239,191,189,116,239,191,189,239,191,189,104,8,239,191,189,11,85,239,191,189,239,191,189,8,239,191,189,118,125,119,91,239,191,189,239,191,189,239,191,189,106,239,191,189,19,22,47,239,191,189,5,239,191,189,72,88,239,191,189,239,191,189,75,239,191,189,74,239,191,189,61,50,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,33,239,191,189,126,101,239,191,189,217,153,239,191,189,239,191,189,239,191,189,96,239,191,189,107,239,191,189,3,59,239,191,189,239,191,189,239,191,189,200,189,239,191,189,44,239,191,189,58,40,239,191,189,55,239,191,189,53,94,239,191,189,82,239,191,189,88,10,239,191,189,239,191,189,94,239,191,189,25,239,191,189,105,239,191,189,239,191,189,50,37,239,191,189,239,191,189,239,191,189,239,191,189,82,31,88,239,191,189,239,191,189,42,122,239,191,189,239,191,189,73,239,191,189,2,239,191,189,25,65,239,191,189,48,239,191,189,72,239,191,189,105,239,191,189,74,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,41,239,191,189,64,239,191,189,57,5,126,239,191,189,42,239,191,189,103,39,239,191,189,239,191,189,123,85,22,72,239,191,189,239,191,189,44,239,191,189,215,128,239,191,189,24,47,75,239,191,189,53,239,191,189,124,239,191,189,239,191,189,23,239,191,189,239,191,189,39,14,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,25,92,239,191,189,92,239,191,189,239,191,189,6,239,191,189,1,239,191,189,19,32,239,191,189,50,239,191,189,239,191,189,5,239,191,189,68,239,191,189,216,169,100,239,191,189,57,5,239,191,189,239,191,189,37,31,239,191,189,70,101,100,50,58,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,48,20,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,111,239,191,189,239,191,189,35,239,191,189,239,191,189,77,90,239,191,189,33,204,187,112,239,191,189,239,191,189,98,117,9,33,239,191,189,64,239,191,189,51,239,191,189,75,239,191,189,68,45,239,191,189,108,239,191,189,44,120,114,239,191,189,67,239,191,189,108,78,93,239,191,189,61,239,191,189,15,71,49,239,191,189,239,191,189,239,191,189,44,61,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,215,159,239,191,189,32,239,191,189,117,122,239,191,189,66,239,191,189,60,106,239,191,189,9,239,191,189,239,191,189,84,3,239,191,189,36,239,191,189,26,84,239,191,189,80,105,46,239,191,189,52,115,239,191,189,44,127,4,239,191,189,239,191,189,239,191,189,114,120,121,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff6f731429",
                        container: "containers95bf7c53eb4444a5bb9e098d2403c46c",
                        blob: "PageBlob79eea0ba3fc142df8c81d31a52b56116",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06797 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06797_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06797_s.txt", Encoding.UTF8);

    public Test06797() : base(recordedRequest, recordedResponse, "accounts8d439ff69413062")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,28,64,239,191,189,239,191,189,5,2,239,191,189,239,191,189,239,191,189,5,123,55,239,191,189,239,191,189,126,209,162,239,191,189,78,239,191,189,79,239,191,189,239,191,189,58,239,191,189,49,61,72,239,191,189,110,239,191,189,73,115,100,82,44,239,191,189,49,85,239,191,189,24,71,239,191,189,82,239,191,189,91,239,191,189,69,239,191,189,14,0,111,103,239,191,189,239,191,189,60,86,104,239,191,189,239,191,189,239,191,189,80,239,191,189,94,116,49,239,191,189,104,239,191,189,81,239,191,189,112,99,116,239,191,189,7,14,239,191,189,239,191,189,126,90,239,191,189,107,239,191,189,109,33,239,191,189,239,191,189,22,213,135,106,239,191,189,21,200,130,115,239,191,189,123,239,191,189,110,196,139,45,239,191,189,11,239,191,189,239,191,189,123,46,239,191,189,239,191,189,72,121,239,191,189,239,191,189,239,191,189,239,191,189,83,79,10,239,191,189,107,124,90,6,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,51,223,166,239,191,189,21,239,191,189,102,239,191,189,21,239,191,189,33,7,72,227,144,129,239,191,189,43,239,191,189,239,191,189,88,14,210,137,41,239,191,189,2,239,191,189,239,191,189,6,239,191,189,97,239,191,189,239,191,189,5,75,19,61,96,74,31,239,191,189,102,239,191,189,239,191,189,239,191,189,22,20,239,191,189,25,45,239,191,189,90,3,239,191,189,239,191,189,239,191,189,83,239,191,189,90,239,191,189,112,84,15,239,191,189,121,239,191,189,239,191,189,68,110,77,239,191,189,66,239,191,189,212,168,35,239,191,189,79,126,239,191,189,1,122,239,191,189,239,191,189,7,239,191,189,239,191,189,52,120,239,191,189,81,5,239,191,189,239,191,189,46,87,239,191,189,37,97,104,55,239,191,189,239,191,189,239,191,189,26,23,58,5,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,204,174,239,191,189,198,181,26,239,191,189,81,86,127,239,191,189,22,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,11,239,191,189,17,239,191,189,41,239,191,189,63,83,32,239,191,189,110,114,121,239,191,189,239,191,189,239,191,189,239,191,189,84,98,32,95,239,191,189,89,47,239,191,189,239,191,189,26,30,11,62,53,199,158,53,239,191,189,4,239,191,189,71,239,191,189,239,191,189,239,191,189,82,48,239,191,189,17,123,239,191,189,40,109,239,191,189,20,116,239,191,189,47,89,51,111,239,191,189,5,100,239,191,189,32,72,226,153,167,239,191,189,68,239,191,189,239,191,189,96,239,191,189,239,191,189,104,69,13,239,191,189,239,191,189,29,51,40,239,191,189,57,41,239,191,189,57,110,239,191,189,106,239,191,189,239,191,189,65,56,87,239,191,189,10,78,239,191,189,106,239,191,189,89,56,239,191,189,114,120,239,191,189,37,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,110,15,239,191,189,239,191,189,109,102,104,239,191,189,74,239,191,189,90,127,16,239,191,189,3,87,227,179,141,207,185,36,198,176,5,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,75,239,191,189,239,191,189,21,239,191,189,64,239,191,189,66,239,191,189,30,60,20,95,73,53,239,191,189,17,69,108,239,191,189,74,72,8,239,191,189,89,239,191,189,217,168,83,239,191,189,239,191,189,104,63,8,239,191,189,206,183,76,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,70,239,191,189,61,239,191,189,42,239,191,189,239,191,189,1,239,191,189,239,191,189,66,239,191,189,93,23,10,239,191,189,28,51,239,191,189,239,191,189,31,65,115,239,191,189,90,239,191,189,239,191,189,239,191,189,104,78,118,10,89,239,191,189,239,191,189,0,21,239,191,189,239,191,189,239,191,189,61,85,52,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,15,83,5,4,52,82,239,191,189,49,2,195,153,99,22,55,72,239,191,189,239,191,189,9,239,191,189,80,115,239,191,189,239,191,189,239,191,189,239,191,189,62,95,69,9,239,191,189,239,191,189,117,112,24,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,30,84,239,191,189,78,66,239,191,189,25,239,191,189,239,191,189,72,92,35,25,239,191,189,239,191,189,68,40,59,239,191,189,35,239,191,189,239,191,189,60,66,239,191,189,239,191,189,61,22,14,239,191,189,239,191,189,6,60,239,191,189,31,11,121,239,191,189,239,191,189,1,91,239,191,189,46,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,101,239,191,189,32,239,191,189,239,191,189,33,23,239,191,189,100,76,239,191,189,3,127,5,114,86,239,191,189,32,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,15,207,137,239,191,189,85,239,191,189,104,69,17,126,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,55,77,88,99,40,63,83,239,191,189,84,239,191,189,239,191,189,49,239,191,189,239,191,189,82,239,191,189,239,191,189,81,239,191,189,239,191,189,15,239,191,189,76,239,191,189,110,239,191,189,81,112,43,37,239,191,189,239,191,189,239,191,189,22,127,239,191,189,112,239,191,189,239,191,189,73,68,239,191,189,45,105,90,223,134,36,239,191,189,3,10,239,191,189,102,239,191,189,70,110,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,46,37,239,191,189,86,239,191,189,124,239,191,189,72,68,239,191,189,68,239,191,189,103,239,191,189,239,191,189,99,239,191,189,0,44,239,191,189,39,27,43,239,191,189,239,191,189,239,191,189,17,239,191,189,214,181,4,90,97,38,239,191,189,67,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,33,82,239,191,189,239,191,189,30,53,102,239,191,189,239,191,189,4,90,18,239,191,189,108,122,18,107,81,113,239,191,189,239,191,189,239,191,189,74,65,239,191,189,239,191,189,1,6,92,239,191,189,28,108,85,42,106,239,191,189,239,191,189,64,97,239,191,189,79,99,239,191,189,93,239,191,189,239,191,189,73,239,191,189,14,239,191,189,60,112,73,55,90,56,7,239,191,189,52,127,51,96,68,62,239,191,189,239,191,189,239,191,189,1,239,191,189,32,42,239,191,189,239,191,189,63,67,81,239,191,189,117,239,191,189,85,11,239,191,189,239,191,189,71,239,191,189,35,30,239,191,189,50,239,191,189,83,11,239,191,189,108,239,191,189,30,89,117,239,191,189,47,122,239,191,189,30,113,18,239,191,189,119,239,191,189,23,239,191,189,25,39,239,191,189,41,39,105,122,239,191,189,58,201,158,239,191,189,239,191,189,109,239,191,189,31,12,100,81,36,239,191,189,120,239,191,189,239,191,189,239,191,189,23,239,191,189,89,53,43,239,191,189,38,239,191,189,75,105,44,239,191,189,239,191,189,68,239,191,189,239,191,189,98,58,20,239,191,189,122,37,239,191,189,239,191,189,239,191,189,116,19,239,191,189,239,191,189,238,160,143,4,78,16,239,191,189,32,239,191,189,15,29,120,70,239,191,189,3,239,191,189,239,191,189,84,31,239,191,189,127,239,191,189,62,239,191,189,239,191,189,96,239,191,189,40,239,191,189,66,239,191,189,239,191,189,127,239,191,189,93,200,156,239,191,189,105,52,239,191,189,239,191,189,239,191,189,43,239,191,189,24,52,239,191,189,239,191,189,3,88,31,239,191,189,239,191,189,115,88,98,12,20,239,191,189,30,103,106,127,87,239,191,189,239,191,189,239,191,189,38,59,4,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,43,80,123,239,191,189,234,151,164,239,191,189,82,4,102,239,191,189,109,123,22,239,191,189,25,33,239,191,189,113,31,239,191,189,123,113,239,191,189,65,53,8,3,119,99,79,239,191,189,61,239,191,189,239,191,189,235,184,149,239,191,189,239,191,189,84,45,33,239,191,189,116,239,191,189,110,239,191,189,73,239,191,189,239,191,189,62,27,239,191,189,120,239,191,189,10,239,191,189,239,191,189,98,239,191,189,239,191,189,219,161,23,15,48,239,191,189,72,239,191,189,96,239,191,189,21,239,191,189,202,134,90,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,16,100,239,191,189,74,239,191,189,239,191,189,5,239,191,189,92,68,239,191,189,82,239,191,189,239,191,189,101,121,239,191,189,239,191,189,239,191,189,239,191,189,72,41,239,191,189,239,191,189,239,191,189,122,109,41,15,239,191,189,104,239,191,189,69,17,6,239,191,189,239,191,189,110,79,239,191,189,91,239,191,189,239,191,189,76,24,51,239,191,189,239,191,189,36,31,17,239,191,189,19,20,70,239,191,189,217,152,88,126,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,110,239,191,189,239,191,189,239,191,189,70,60,239,191,189,37,239,191,189,113,62,213,189,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,48,239,191,189,31,239,191,189,18,22,239,191,189,77,239,191,189,239,191,189,239,191,189,112,76,38,106,40,104,80,239,191,189,107,47,239,191,189,117,239,191,189,195,154,239,191,189,239,191,189,239,191,189,239,191,189,55,25,239,191,189,220,163,239,191,189,239,191,189,48,106,239,191,189,239,191,189,239,191,189,122,206,136,239,191,189,54,101,239,191,189,239,191,189,239,191,189,86,239,191,189,65,45,239,191,189,53,79,123,239,191,189,102,239,191,189,213,191,86,83,74,199,144,125,239,191,189,239,191,189,0,239,191,189,74,239,191,189,239,191,189,239,191,189,58,3,239,191,189,239,191,189,58,76,119,239,191,189,84,239,191,189,118,239,191,189,108,239,191,189,118,48,239,191,189,17,239,191,189,119,53,76,110,239,191,189,30,11,37,85,12,239,191,189,117,239,191,189,105,21,120,76,239,191,189,111,239,191,189,72,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,39,239,191,189,103,78,239,191,189,64,85,5,239,191,189,56,239,191,189,27,64,81,109,72,239,191,189,0,65,75,87,60,42,74,239,191,189,239,191,189,114,239,191,189,53,239,191,189,30,51,85,239,191,189,65,204,164,239,191,189,239,191,189,109,19,16,239,191,189,20,57,83,72,239,191,189,37,239,191,189,10,80,96,125,208,167,95,28,239,191,189,29,239,191,189,113,239,191,189,24,26,120,239,191,189,92,16,239,191,189,239,191,189,239,191,189,48,239,191,189,55,71,123,22,17,56,63,123,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,108,239,191,189,230,178,159,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,14,31,239,191,189,69,239,191,189,44,73,11,239,191,189,239,191,189,82,239,191,189,80,239,191,189,76,239,191,189,239,191,189,72,119,53,27,21,125,52,239,191,189,6,239,191,189,28,80,239,191,189,82,239,191,189,59,107,239,191,189,239,191,189,70,239,191,189,239,191,189,108,34,125,93,239,191,189,77,239,191,189,239,191,189,36,239,191,189,27,239,191,189,239,191,189,110,77,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,90,45,239,191,189,222,140,239,191,189,119,239,191,189,0,239,191,189,94,92,239,191,189,10,18,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,110,53,12,239,191,189,38,239,191,189,115,239,191,189,12,239,191,189,239,191,189,7,17,239,191,189,239,191,189,126,72,239,191,189,120,11,36,15,239,191,189,66,239,191,189,100,59,90,65,239,191,189,112,10,108,239,191,189,239,191,189,239,191,189,239,191,189,222,149,239,191,189,113,117,239,191,189,112,122,239,191,189,239,191,189,28,239,191,189,57,97,86,45,10,239,191,189,95,121,239,191,189,239,191,189,194,178,24,72,19,125,215,154,99,55,62,239,191,189,105,239,191,189,238,153,175,125,76,239,191,189,48,106,30,127,8,239,191,189,26,239,191,189,97,36,94,11,8,23,239,191,189,239,191,189,89,44,126,239,191,189,27,239,191,189,229,156,140,239,191,189,91,63,113,239,191,189,239,191,189,44,0,239,191,189,88,239,191,189,239,191,189,64,124,98,239,191,189,56,63,239,191,189,50,239,191,189,82,39,22,64,239,191,189,239,191,189,89,37,21,239,191,189,57,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,74,124,239,191,189,8,239,191,189,123,67,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,86,12,106,239,191,189,51,41,49,87,239,191,189,239,191,189,219,129,239,191,189,90,239,191,189,239,191,189,220,163,93,72,239,191,189,92,84,239,191,189,209,172,239,191,189,127,239,191,189,239,191,189,239,191,189,124,50,126,45,120,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,11,44,239,191,189,239,191,189,239,191,189,10,40,37,239,191,189,74,239,191,189,97,239,191,189,21,77,210,134,86,239,191,189,239,191,189,239,191,189,9,94,78,4,45,61,48,239,191,189,24,239,191,189,1,239,191,189,73,110,209,180,239,191,189,117,110,239,191,189,239,191,189,50,239,191,189,29,125,98,69,40,4,28,14,51,239,191,189,1,205,177,239,191,189,239,191,189,239,191,189,68,239,191,189,96,17,96,239,191,189,239,191,189,239,191,189,1,239,191,189,109,60,81,12,42,44,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,122,239,191,189,11,71,239,191,189,32,239,191,189,45,239,191,189,119,239,191,189,10,210,135,239,191,189,239,191,189,239,191,189,102,39,50,239,191,189,239,191,189,239,191,189,214,161,239,191,189,11,12,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,16,63,239,191,189,239,191,189,121,32,89,46,43,32,68,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,98,112,239,191,189,36,239,191,189,32,239,191,189,107,6,74,64,239,191,189,41,239,191,189,17,41,70,33,111,62,7,47,239,191,189,71,239,191,189,239,191,189,235,173,135,239,191,189,239,191,189,116,238,167,128,20,61,239,191,189,90,30,239,191,189,110,115,239,191,189,25,62,1,116,51,90,74,239,191,189,239,191,189,106,239,191,189,51,239,191,189,239,191,189,87,239,191,189,53,9,239,191,189,11,106,239,191,189,1,239,191,189,43,239,191,189,239,191,189,239,191,189,81,97,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,119,121,44,239,191,189,32,198,131,239,191,189,77,90,239,191,189,101,239,191,189,239,191,189,210,137,104,107,78,60,127,72,54,111,239,191,189,239,191,189,92,9,74,119,217,138,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,74,5,126,239,191,189,221,161,101,36,66,103,239,191,189,15,83,117,239,191,189,82,95,46,66,239,191,189,239,191,189,40,105,122,120,214,129,239,191,189,239,191,189,239,191,189,44,67,239,191,189,13,32,73,239,191,189,239,191,189,107,239,191,189,9,239,191,189,239,191,189,239,191,189,122,58,35,100,239,191,189,118,239,191,189,239,191,189,77,239,191,189,106,34,239,191,189,4,71,7,32,105,239,191,189,239,191,189,58,75,61,70,84,239,191,189,239,191,189,239,191,189,195,173,239,191,189,84,114,115,239,191,189,61,239,191,189,28,81,38,239,191,189,239,191,189,239,191,189,215,162,239,191,189,239,191,189,239,191,189,120,99,116,239,191,189,19,1,239,191,189,47,239,191,189,239,191,189,16,20,239,191,189,239,191,189,203,159,71,22,239,191,189,39,5,9,85,4,24,96,239,191,189,239,191,189,85,102,239,191,189,86,239,191,189,239,191,189,40,95,57,19,64,112,239,191,189,239,191,189,65,239,191,189,12,60,68,0,239,191,189,86,239,191,189,239,191,189,77,239,191,189,239,191,189,111,14,112,239,191,189,239,191,189,69,29,218,150,58,239,191,189,43,8,239,191,189,107,102,51,239,191,189,64,110,53,199,128,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,22,9,98,37,239,191,189,81,200,140,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,83,16,60,49,102,239,191,189,93,239,191,189,13,23,127,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,21,26,239,191,189,239,191,189,72,21,239,191,189,63,29,239,191,189,239,191,189,239,191,189,101,14,120,95,239,191,189,75,239,191,189,17,239,191,189,80,239,191,189,239,191,189,239,191,189,74,26,239,191,189,117,239,191,189,71,88,27,75,83,239,191,189,110,239,191,189,68,63,239,191,189,239,191,189,239,191,189,223,182,239,191,189,239,191,189,239,191,189,72,197,179,125,60,4,87,76,239,191,189,81,114,239,191,189,37,51,112,1,239,191,189,239,191,189,110,26,239,191,189,239,191,189,239,191,189,4,7,103,239,191,189,27,125,2,63,239,191,189,94,78,239,191,189,239,191,189,239,191,189,239,191,189,27,23,239,191,189,6,239,191,189,28,239,191,189,239,191,189,25,86,55,239,191,189,90,47,239,191,189,239,191,189,16,239,191,189,212,174,118,239,191,189,125,60,239,191,189,239,191,189,18,239,191,189,41,215,146,239,191,189,17,239,191,189,107,87,37,239,191,189,239,191,189,239,191,189,127,74,77,48,227,171,168,16,19,239,191,189,61,28,239,191,189,65,83,70,239,191,189,239,191,189,55,46,10,239,191,189,239,191,189,66,239,191,189,120,239,191,189,239,191,189,239,191,189,56,239,191,189,91,239,191,189,1,47,43,239,191,189,76,88,35,26,2,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,103,37,239,191,189,110,125,239,191,189,239,191,189,201,184,11,108,106,239,191,189,7,75,239,191,189,239,191,189,239,191,189,104,239,191,189,17,39,239,191,189,77,94,19,20,8,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,57,239,191,189,123,61,239,191,189,16,56,102,115,125,239,191,189,239,191,189,56,18,239,191,189,224,187,185,13,8,239,191,189,63,103,111,15,106,239,191,189,239,191,189,239,191,189,239,191,189,99,30,239,191,189,239,191,189,206,172,95,239,191,189,3,87,239,191,189,239,191,189,239,191,189,64,110,112,239,191,189,1,81,26,58,239,191,189,64,239,191,189,49,239,191,189,55,12,46,115,239,191,189,119,239,191,189,239,191,189,26,239,191,189,24,62,67,9,239,191,189,23,239,191,189,239,191,189,101,19,239,191,189,39,1,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,116,239,191,189,72,239,191,189,239,191,189,117,83,116,239,191,189,239,191,189,43,19,3,38,239,191,189,88,239,191,189,239,191,189,72,239,191,189,35,57,239,191,189,39,30,111,16,10,239,191,189,239,191,189,239,191,189,8,239,191,189,41,239,191,189,239,191,189,239,191,189,117,111,239,191,189,45,239,191,189,36,239,191,189,58,239,191,189,239,191,189,0,84,69,239,191,189,239,191,189,38,26,100,59,82,32,239,191,189,100,101,72,239,191,189,239,191,189,34,48,218,128,200,136,38,79,239,191,189,108,239,191,189,20,239,191,189,239,191,189,30,239,191,189,15,239,191,189,74,239,191,189,39,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,10,46,239,191,189,118,0,23,207,172,239,191,189,239,191,189,239,191,189,239,191,189,127,114,239,191,189,239,191,189,38,239,191,189,51,239,191,189,123,86,239,191,189,239,191,189,239,191,189,239,191,189,65,103,20,22,54,239,191,189,92,68,239,191,189,239,191,189,194,157,239,191,189,239,191,189,79,61,239,191,189,41,239,191,189,32,239,191,189,110,25,239,191,189,67,239,191,189,123,62,239,191,189,239,191,189,82,36,239,191,189,71,239,191,189,103,239,191,189,106,86,239,191,189,113,58,239,191,189,39,34,239,191,189,239,191,189,94,60,62,239,191,189,104,12,239,191,189,17,239,191,189,77,51,239,191,189,74,94,29,239,191,189,239,191,189,53,239,191,189,239,191,189,99,239,191,189,239,191,189,37,211,170,239,191,189,109,239,191,189,239,191,189,239,191,189,28,2,80,17,239,191,189,23,23,54,3,26,99,239,191,189,11,239,191,189,84,239,191,189,64,241,132,162,153,96,85,239,191,189,239,191,189,239,191,189,97,239,191,189,81,90,116,23,92,65,27,100,239,191,189,75,239,191,189,239,191,189,45,239,191,189,239,191,189,65,239,191,189,239,191,189,37,90,239,191,189,65,1,59,23,85,239,191,189,239,191,189,239,191,189,111,85,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,67,57,32,239,191,189,239,191,189,239,191,189,239,191,189,107,101,239,191,189,86,20,239,191,189,60,239,191,189,239,191,189,15,89,57,0,6,239,191,189,110,239,191,189,43,239,191,189,208,168,239,191,189,71,13,82,13,24,239,191,189,32,200,156,90,61,67,239,191,189,87,35,97,91,239,191,189,121,239,191,189,214,163,101,239,191,189,127,239,191,189,239,191,189,239,191,189,115,121,239,191,189,44,43,239,191,189,29,123,3,6,239,191,189,90,117,239,191,189,115,239,191,189,239,191,189,239,191,189,29,46,75,74,239,191,189,109,87,24,196,164,239,191,189,239,191,189,239,191,189,112,36,86,84,35,239,191,189,16,24,24,57,239,191,189,93,84,239,191,189,30,26,239,191,189,48,103,239,191,189,195,139,239,191,189,127,40,239,191,189,66,239,191,189,18,12,121,239,191,189,103,121,67,53,31,239,191,189,79,84,239,191,189,4,239,191,189,239,191,189,239,191,189,123,239,191,189,56,239,191,189,239,191,189,116,64,239,191,189,239,191,189,239,191,189,239,191,189,43,121,103,59,5,11,239,191,189,239,191,189,239,191,189,219,144,239,191,189,239,191,189,68,239,191,189,18,239,191,189,32,239,191,189,239,191,189,239,191,189,60,45,239,191,189,239,191,189,20,44,5,239,191,189,239,191,189,239,191,189,95,239,191,189,71,114,239,191,189,236,175,157,239,191,189,53,239,191,189,239,191,189,239,191,189,8,79,2,239,191,189,239,191,189,45,19,239,191,189,93,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,223,186,62,113,43,49,72,239,191,189,239,191,189,10,37,31,239,191,189,239,191,189,101,10,69,239,191,189,239,191,189,77,17,239,191,189,113,102,114,5,2,239,191,189,75,239,191,189,239,191,189,46,17,239,191,189,25,122,239,191,189,239,191,189,116,239,191,189,6,79,202,137,8,239,191,189,39,207,149,239,191,189,30,81,239,191,189,79,72,239,191,189,239,191,189,38,47,239,191,189,103,78,127,239,191,189,14,239,191,189,116,239,191,189,119,239,191,189,24,239,191,189,71,239,191,189,239,191,189,239,191,189,93,126,239,191,189,50,15,89,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,77,239,191,189,98,239,191,189,123,9,17,239,191,189,82,90,239,191,189,122,239,191,189,85,9,29,239,191,189,96,122,239,191,189,73,239,191,189,239,191,189,13,117,239,191,189,239,191,189,77,6,239,191,189,239,191,189,239,191,189,58,239,191,189,31,239,191,189,239,191,189,74,239,191,189,76,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,65,239,191,189,63,5,4,239,191,189,239,191,189,239,191,189,6,85,42,239,191,189,75,239,191,189,239,191,189,239,191,189,53,37,67,62,239,191,189,46,239,191,189,36,46,45,239,191,189,239,191,189,45,239,191,189,85,104,239,191,189,126,53,239,191,189,115,20,239,191,189,68,239,191,189,33,0,62,38,113,35,66,74,239,191,189,239,191,189,109,2,77,17,29,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,72,12,62,120,20,239,191,189,16,69,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,10,65,68,239,191,189,6,239,191,189,101,239,191,189,108,24,239,191,189,239,191,189,116,81,239,191,189,239,191,189,36,0,72,239,191,189,101,239,191,189,239,191,189,53,239,191,189,239,191,189,40,8,83,5,53,196,139,239,191,189,63,239,191,189,83,239,191,189,13,239,191,189,114,239,191,189,96,239,191,189,215,155,239,191,189,56,57,239,191,189,239,191,189,56,31,88,36,120,15,239,191,189,239,191,189,93,70,103,239,191,189,95,239,191,189,239,191,189,239,191,189,63,239,191,189,6,59,239,191,189,239,191,189,20,104,239,191,189,239,191,189,239,191,189,52,239,191,189,25,29,79,239,191,189,107,239,191,189,126,239,191,189,114,108,115,77,239,191,189,44,105,126,239,191,189,119,10,69,239,191,189,239,191,189,22,239,191,189,239,191,189,36,102,16,15,108,239,191,189,239,191,189,239,191,189,239,191,189,44,74,239,191,189,50,239,191,189,7,47,239,191,189,239,191,189,100,239,191,189,239,191,189,117,197,170,239,191,189,239,191,189,114,239,191,189,239,191,189,25,31,6,111,239,191,189,71,36,109,239,191,189,5,110,239,191,189,239,191,189,239,191,189,0,31,235,162,131,3,22,239,191,189,45,239,191,189,76,15,239,191,189,239,191,189,101,37,239,191,189,239,191,189,198,156,116,13,67,35,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,43,125,197,139,239,191,189,43,239,191,189,239,191,189,239,191,189,29,239,191,189,83,34,126,239,191,189,239,191,189,8,239,191,189,103,239,191,189,11,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,84,239,191,189,101,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,39,114,239,191,189,239,191,189,239,191,189,86,26,239,191,189,1,37,19,95,239,191,189,112,95,18,239,191,189,6,239,191,189,210,176,54,45,24,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,46,106,239,191,189,70,27,97,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,54,8,41,239,191,189,69,239,191,189,57,63,49,239,191,189,88,106,239,191,189,239,191,189,239,191,189,239,191,189,5,106,203,153,239,191,189,239,191,189,239,191,189,239,191,189,111,84,84,239,191,189,233,155,134,239,191,189,239,191,189,239,191,189,50,239,191,189,4,121,239,191,189,239,191,189,239,191,189,33,239,191,189,73,239,191,189,92,77,24,8,14,239,191,189,239,191,189,239,191,189,60,55,104,14,100,239,191,189,239,191,189,47,67,85,239,191,189,8,107,239,191,189,239,191,189,120,24,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,210,177,50,19,6,60,239,191,189,239,191,189,24,239,191,189,14,239,191,189,239,191,189,201,145,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,65,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,213,132,239,191,189,239,191,189,93,50,110,239,191,189,239,191,189,86,122,125,29,93,39,71,239,191,189,239,191,189,239,191,189,239,191,189,118,26,239,191,189,109,111,11,97,239,191,189,239,191,189,239,191,189,83,31,10,56,239,191,189,239,191,189,51,51,108,239,191,189,213,159,71,81,239,191,189,35,201,138,57,239,191,189,105,239,191,189,100,239,191,189,95,106,239,191,189,41,239,191,189,38,13,99,86,90,38,93,19,36,40,116,123,83,123,9,39,239,191,189,239,191,189,101,239,191,189,76,66,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,39,217,148,239,191,189,10,70,69,124,113,72,239,191,189,43,239,191,189,16,239,191,189,98,239,191,189,116,21,35,90,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,22,239,191,189,239,191,189,114,239,191,189,239,191,189,75,239,191,189,239,191,189,113,12,54,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,60,239,191,189,116,239,191,189,55,125,239,191,189,96,107,80,239,191,189,65,102,239,191,189,97,69,91,239,191,189,37,239,191,189,239,191,189,36,88,239,191,189,39,3,9,239,191,189,239,191,189,5,239,191,189,239,191,189,91,239,191,189,100,69,194,141,114,73,239,191,189,66,239,191,189,239,191,189,239,191,189,91,10,102,239,191,189,72,90,239,191,189,239,191,189,239,191,189,21,23,70,239,191,189,96,51,116,239,191,189,239,191,189,101,84,75,239,191,189,65,28,239,191,189,239,191,189,43,239,191,189,216,163,239,191,189,92,53,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,12,239,191,189,218,145,77,239,191,189,28,45,63,239,191,189,60,239,191,189,26,239,191,189,76,117,74,37,239,191,189,198,140,239,191,189,239,191,189,113,114,239,191,189,112,239,191,189,58,209,140,14,239,191,189,72,91,11,45,239,191,189,29,102,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,86,239,191,189,125,95,239,191,189,31,72,9,48,32,239,191,189,21,239,191,189,239,191,189,4,4,239,191,189,239,191,189,97,94,239,191,189,105,29,49,239,191,189,96,239,191,189,239,191,189,239,191,189,12,125,239,191,189,51,239,191,189,61,239,191,189,83,44,80,239,191,189,239,191,189,82,239,191,189,13,25,7,239,191,189,8,239,191,189,0,239,191,189,82,40,87,239,191,189,239,191,189,76,239,191,189,93,52,113,40,35,239,191,189,239,191,189,239,191,189,35,91,119,239,191,189,239,191,189,80,239,191,189,94,239,191,189,239,191,189,15,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,43,239,191,189,220,143,80,239,191,189,7,104,239,191,189,101,239,191,189,42,239,191,189,106,40,38,239,191,189,239,191,189,112,80,106,1,97,239,191,189,89,93,239,191,189,52,48,239,191,189,81,239,191,189,71,3,119,48,5,239,191,189,10,123,239,191,189,26,94,96,239,191,189,115,216,165,239,191,189,109,15,54,126,239,191,189,239,191,189,41,94,239,191,189,53,239,191,189,123,239,191,189,55,58,20,10,239,191,189,239,191,189,239,191,189,32,2,239,191,189,239,191,189,80,239,191,189,0,40,239,191,189,239,191,189,68,195,169,27,4,239,191,189,77,78,239,191,189,34,94,22,0,239,191,189,239,191,189,35,76,197,145,36,239,191,189,239,191,189,76,12,239,191,189,239,191,189,239,191,189,102,239,191,189,93,239,191,189,79,109,239,191,189,239,191,189,116,239,191,189,239,191,189,6,42,101,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,127,239,191,189,99,84,96,42,75,119,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,115,105,15,239,191,189,97,71,109,239,191,189,83,239,191,189,102,239,191,189,12,239,191,189,77,105,8,239,191,189,23,239,191,189,6,239,191,189,86,239,191,189,13,117,66,239,191,189,239,191,189,114,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff69413062",
                        container: "containers7e1b3a1405034befaa9a11e4e312e156",
                        blob: "Blob04726d8cd779452694b99c24b83c59c6",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=72192-76287",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04018 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04018_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04018_s.txt", Encoding.UTF8);

    public Test04018() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5e0e15bc4e934de185d06ad2cfa9895c",
                        blob: "PageBlob10ea420294804ab58ceb680b5aa9cd8e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06770 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06770_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06770_s.txt", Encoding.UTF8);

    public Test06770() : base(recordedRequest, recordedResponse, "accounts8d439ff68cce9f8")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,90,57,217,158,239,191,189,64,95,239,191,189,73,51,8,104,75,24,239,191,189,90,80,41,239,191,189,239,191,189,239,191,189,29,8,50,15,239,191,189,30,40,72,20,35,104,83,112,115,62,239,191,189,115,239,191,189,70,208,160,239,191,189,41,239,191,189,239,191,189,85,109,239,191,189,239,191,189,14,114,35,239,191,189,60,48,239,191,189,239,191,189,239,191,189,33,55,100,53,16,239,191,189,21,218,165,106,108,239,191,189,102,60,23,87,110,239,191,189,77,103,239,191,189,200,186,239,191,189,33,21,239,191,189,47,239,191,189,54,14,71,239,191,189,239,191,189,37,239,191,189,60,121,25,69,239,191,189,0,239,191,189,2,90,22,239,191,189,53,12,75,239,191,189,81,89,40,239,191,189,88,125,239,191,189,20,239,191,189,239,191,189,239,191,189,14,110,92,37,239,191,189,115,23,126,27,239,191,189,239,191,189,7,239,191,189,239,191,189,23,239,191,189,38,11,109,239,191,189,34,239,191,189,104,239,191,189,239,191,189,9,239,191,189,27,88,101,30,239,191,189,239,191,189,239,191,189,65,239,191,189,52,29,52,30,239,191,189,48,216,138,81,83,2,64,197,189,8,239,191,189,239,191,189,195,142,6,239,191,189,55,59,105,75,99,195,143,239,191,189,108,39,239,191,189,239,191,189,18,239,191,189,239,191,189,56,239,191,189,239,191,189,80,239,191,189,50,239,191,189,104,7,239,191,189,86,239,191,189,92,239,191,189,239,191,189,239,191,189,99,58,6,239,191,189,239,191,189,239,191,189,239,191,189,42,108,73,239,191,189,239,191,189,43,12,106,239,191,189,239,191,189,27,85,71,45,62,119,109,239,191,189,239,191,189,98,239,191,189,12,40,51,24,239,191,189,62,239,191,189,239,191,189,11,239,191,189,11,109,239,191,189,106,239,191,189,70,80,239,191,189,61,239,191,189,33,239,191,189,239,191,189,64,58,105,239,191,189,36,195,152,99,15,104,19,30,68,21,239,191,189,40,239,191,189,122,207,167,239,191,189,16,239,191,189,119,239,191,189,91,49,28,239,191,189,103,239,191,189,105,88,239,191,189,239,191,189,81,239,191,189,109,239,191,189,115,239,191,189,239,191,189,4,239,191,189,76,239,191,189,48,239,191,189,239,191,189,80,239,191,189,82,239,191,189,239,191,189,48,81,239,191,189,239,191,189,201,145,124,239,191,189,121,0,116,239,191,189,239,191,189,35,239,191,189,239,191,189,106,12,239,191,189,52,71,20,239,191,189,119,239,191,189,1,239,191,189,81,69,239,191,189,76,109,97,194,140,95,239,191,189,239,191,189,70,239,191,189,15,239,191,189,3,72,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,115,91,199,176,27,109,55,239,191,189,12,239,191,189,239,191,189,48,52,25,39,70,239,191,189,97,94,118,239,191,189,104,239,191,189,61,55,239,191,189,239,191,189,114,239,191,189,11,239,191,189,239,191,189,239,191,189,95,115,241,166,176,166,31,40,9,239,191,189,239,191,189,17,239,191,189,77,239,191,189,32,80,38,239,191,189,60,66,5,11,239,191,189,239,191,189,120,239,191,189,239,191,189,196,161,1,239,191,189,239,191,189,213,166,54,239,191,189,218,187,63,78,239,191,189,239,191,189,239,191,189,43,89,69,239,191,189,82,239,191,189,239,191,189,73,239,191,189,84,90,104,71,27,56,29,239,191,189,100,103,239,191,189,24,39,68,120,67,239,191,189,76,239,191,189,239,191,189,239,191,189,45,58,239,191,189,94,30,67,239,191,189,114,19,29,82,42,69,122,62,239,133,162,239,191,189,239,191,189,239,191,189,112,59,239,191,189,4,20,205,178,103,222,151,89,239,191,189,95,44,45,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,83,120,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,42,239,191,189,82,81,10,239,191,189,239,191,189,239,191,189,90,10,118,239,191,189,10,53,239,191,189,239,191,189,103,239,191,189,78,16,86,199,136,196,174,239,191,189,28,239,191,189,28,7,20,207,172,108,239,191,189,239,191,189,6,113,84,111,46,239,191,189,99,15,98,25,239,191,189,30,239,191,189,204,149,25,239,191,189,239,191,189,239,191,189,98,33,239,191,189,239,191,189,19,239,191,189,60,239,191,189,83,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,121,97,239,191,189,15,239,191,189,239,191,189,80,113,239,191,189,32,239,191,189,239,191,189,81,239,191,189,120,239,191,189,65,239,191,189,239,191,189,29,16,25,239,191,189,239,191,189,74,239,191,189,89,217,159,239,191,189,239,191,189,20,27,239,191,189,239,191,189,44,12,3,239,191,189,108,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,122,38,79,16,239,191,189,107,84,95,239,191,189,239,191,189,239,191,189,97,118,118,239,191,189,114,80,239,191,189,239,191,189,83,35,75,239,191,189,62,44,239,191,189,239,191,189,46,31,54,97,117,108,239,191,189,95,120,57,239,191,189,36,239,191,189,239,191,189,71,239,191,189,88,61,64,239,191,189,239,191,189,15,239,191,189,53,239,191,189,40,221,169,46,99,17,239,191,189,105,239,191,189,38,64,110,82,80,239,191,189,239,191,189,23,88,57,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,106,0,239,191,189,239,191,189,30,239,191,189,1,239,191,189,76,239,191,189,239,191,189,49,21,39,220,187,3,239,191,189,7,24,6,239,191,189,75,13,208,182,78,239,191,189,94,44,51,239,191,189,106,239,191,189,17,239,191,189,239,191,189,239,191,189,7,239,191,189,109,239,191,189,4,101,5,239,191,189,67,17,239,191,189,239,191,189,239,191,189,39,212,171,100,18,239,191,189,239,191,189,7,104,72,93,37,31,92,22,239,191,189,27,22,239,191,189,239,191,189,46,123,94,239,191,189,56,239,191,189,239,191,189,7,239,191,189,114,61,239,191,189,50,12,239,191,189,239,191,189,239,191,189,239,191,189,84,88,205,159,96,16,239,191,189,239,191,189,9,239,191,189,31,40,239,191,189,239,191,189,239,191,189,203,171,118,239,191,189,44,41,239,191,189,122,29,239,191,189,11,109,239,191,189,239,191,189,80,30,7,239,191,189,24,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,24,239,191,189,74,66,32,239,191,189,103,96,239,191,189,239,191,189,104,212,153,221,176,239,191,189,85,239,191,189,30,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,61,90,106,239,191,189,120,101,239,191,189,36,239,191,189,98,83,239,191,189,239,191,189,77,208,133,239,191,189,72,30,67,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,112,13,35,72,239,191,189,239,191,189,95,239,191,189,94,239,191,189,239,191,189,8,89,203,176,239,191,189,123,93,239,191,189,239,191,189,85,78,114,239,191,189,50,207,131,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,109,44,23,239,191,189,26,239,191,189,0,105,105,114,239,191,189,94,239,191,189,239,191,189,82,239,191,189,62,47,82,49,28,239,191,189,34,239,191,189,89,21,239,191,189,38,239,191,189,239,191,189,239,191,189,66,239,191,189,57,236,159,152,239,191,189,96,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,48,11,6,127,103,107,239,191,189,239,191,189,9,123,98,4,239,191,189,218,168,239,191,189,239,191,189,69,107,91,1,239,191,189,239,191,189,64,206,149})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff68cce9f8",
                        container: "containers09717a24972b446a858a81ea5ea9d1aa",
                        blob: "Blob9394a0a3834b4d13afa883e7f0b1eb7e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07163 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07163_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07163_s.txt", Encoding.UTF8);

    public Test07163() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{31,239,191,189,70,239,191,189,239,191,189,23,239,191,189,239,191,189,59,239,191,189,239,191,189,51,87,239,191,189,74,239,191,189,239,191,189,112,83,239,191,189,239,191,189,51,76,44,103,239,191,189,59,239,191,189,96,239,191,189,239,191,189,239,191,189,33,109,63,239,191,189,23,239,191,189,239,191,189,1,239,191,189,86,85,239,191,189,239,191,189,125,105,68,25,239,191,189,239,191,189,11,66,239,191,189,96,104,239,191,189,239,191,189,53,28,96,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,113,239,191,189,239,191,189,67,239,191,189,82,239,191,189,104,222,163,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,117,13,215,173,239,191,189,94,239,191,189,239,191,189,239,191,189,123,102,239,191,189,11,72,239,191,189,239,191,189,117,239,191,189,78,239,191,189,239,191,189,239,191,189,86,239,191,189,74,239,191,189,104,239,191,189,8,4,239,191,189,48,239,191,189,115,239,191,189,239,191,189,24,239,191,189,36,239,191,189,1,239,191,189,119,218,132,239,191,189,239,191,189,36,82,239,191,189,68,239,191,189,112,239,191,189,22,77,86,239,191,189,19,14,56,239,191,189,115,97,239,191,189,219,136,116,56,126,239,191,189,239,191,189,42,62,239,191,189,10,18,123,120,239,191,189,239,191,189,67,239,191,189,32,239,191,189,86,239,191,189,239,191,189,93,76,239,191,189,239,191,189,239,191,189,22,120,7,122,21,4,239,191,189,25,53,239,191,189,239,191,189,22,239,191,189,115,49,13,12,58,239,191,189,22,106,47,239,191,189,82,82,239,191,189,127,27,239,191,189,23,239,191,189,239,191,189,72,239,191,189,19,198,171,239,191,189,239,191,189,119,207,143,239,191,189,87,239,191,189,10,59,239,191,189,239,191,189,81,18,239,191,189,115,102,230,131,180,39,116,239,191,189,239,191,189,239,191,189,29,0,239,191,189,206,150,95,106,97,124,62,99,71,219,133,239,191,189,125,72,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,213,135,45,67,239,191,189,104,239,191,189,239,191,189,65,0,239,191,189,86,239,191,189,60,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,97,43,239,191,189,97,239,191,189,55,239,191,189,14,239,191,189,1,239,191,189,86,39,239,191,189,239,191,189,14,50,39,106,19,239,191,189,113,5,239,191,189,239,191,189,70,239,191,189,12,239,191,189,25,104,11,239,191,189,5,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,121,9,64,11,53,47,6,67,239,191,189,81,239,191,189,35,239,191,189,30,239,191,189,37,239,191,189,103,239,191,189,239,191,189,239,191,189,78,206,152,239,191,189,100,34,34,79,18,102,201,170,239,191,189,60,103,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,41,239,191,189,108,239,191,189,48,239,191,189,200,131,76,100,239,191,189,37,239,191,189,43,59,239,191,189,34,239,191,189,13,239,191,189,239,191,189,239,191,189,50,121,56,239,191,189,97,223,162,239,191,189,4,8,37,5,43,1,52,59,90,239,191,189,239,191,189,1,10,239,191,189,239,191,189,16,44,28,239,191,189,239,191,189,9,239,191,189,214,164,239,191,189,58,110,239,191,189,4,63,34,108,239,191,189,55,33,239,191,189,6,53,125,32,239,191,189,210,137,39,239,191,189,239,191,189,39,239,191,189,103,239,191,189,91,68,49,239,191,189,126,81,49,239,191,189,40,239,191,189,59,54,26,239,191,189,88,63,239,191,189,99,31,10,239,191,189,239,191,189,239,191,189,88,55,40,239,191,189,239,191,189,239,191,189,19,122,239,191,189,51,239,191,189,239,191,189,58,20,239,191,189,239,191,189,126,239,191,189,13,239,191,189,239,191,189,95,239,191,189,110,125,102,239,191,189,84,239,191,189,71,239,191,189,100,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=5120-5631",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06563 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06563_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06563_s.txt", Encoding.UTF8);

    public Test06563() : base(recordedRequest, recordedResponse, "accounts8d439ff4b86cf83")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{38,239,191,189,12,239,191,189,239,191,189,3,239,191,189,71,239,191,189,239,191,189,111,239,191,189,10,106,239,191,189,239,191,189,41,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,204,153,239,191,189,49,239,191,189,43,239,191,189,239,191,189,226,159,176,121,51,100,1,101,26,239,191,189,125,76,239,191,189,239,191,189,8,239,191,189,76,239,191,189,61,239,191,189,239,191,189,125,239,191,189,239,191,189,3,63,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,85,89,239,191,189,40,39,49,112,239,191,189,37,86,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,95,47,100,239,191,189,239,191,189,239,191,189,47,37,3,239,191,189,73,239,191,189,98,239,191,189,239,191,189,81,239,191,189,87,91,122,20,92,239,191,189,13,76,239,191,189,44,42,81,109,82,239,191,189,239,191,189,44,98,239,191,189,41,239,191,189,239,191,189,239,191,189,82,3,36,107,39,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,2,239,191,189,86,92,13,239,191,189,4,211,150,115,92,239,191,189,53,39,12,40,7,239,191,189,95,40,17,56,41,239,191,189,106,239,191,189,96,21,239,191,189,239,191,189,92,98,123,82,95,28,239,191,189,78,127,50,77,47,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,8,115,239,191,189,43,42,67,239,191,189,239,191,189,112,112,239,191,189,18,104,239,191,189,29,7,23,239,191,189,98,239,191,189,239,191,189,239,191,189,85,239,191,189,74,44,239,191,189,239,191,189,49,27,102,110,239,191,189,13,65,239,191,189,48,55,55,239,191,189,239,191,189,239,191,189,97,92,109,239,191,189,94,17,239,191,189,239,191,189,208,161,239,191,189,239,191,189,24,29,30,239,191,189,239,191,189,105,239,191,189,31,62,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,43,88,50,67,239,191,189,92,239,191,189,98,123,239,191,189,36,80,74,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,79,56,206,164,117,109,12,239,191,189,239,191,189,28,125,53,54,239,191,189,13,118,81,239,191,189,239,191,189,41,239,191,189,3,239,191,189,239,191,189,21,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,235,183,181,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,19,69,239,191,189,239,191,189,239,191,189,86,60,78,114,49,32,239,191,189,239,191,189,76,239,191,189,239,191,189,122,239,191,189,1,8,239,191,189,75,239,191,189,125,239,191,189,99,239,191,189,25,239,191,189,239,191,189,0,65,54,239,191,189,86,239,191,189,122,12,239,191,189,239,191,189,120,107,239,191,189,203,189,239,191,189,73,239,191,189,122,36,65,84,239,191,189,39,239,191,189,108,28,109,239,191,189,53,239,191,189,66,32,239,191,189,239,191,189,92,69,239,191,189,20,109,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,122,239,191,189,239,191,189,91,239,191,189,239,191,189,93,239,191,189,94,239,191,189,239,191,189,20,67,239,191,189,92,239,191,189,5,61,239,191,189,239,191,189,15,239,191,189,107,239,191,189,239,191,189,76,239,191,189,92,239,191,189,239,191,189,33,239,191,189,89,239,191,189,116,92,239,191,189,239,191,189,112,239,191,189,239,191,189,68,31,76,239,191,189,80,26,239,191,189,101,44,239,191,189,22,106,239,191,189,63,239,191,189,239,191,189,33,16,239,191,189,1,239,191,189,239,191,189,239,191,189,60,239,191,189,54,239,191,189,78,89,239,191,189,24,89,6,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,50,127,239,191,189,53,239,191,189,46,114,215,147,239,191,189,239,191,189,121,43,239,191,189,239,191,189,239,191,189,239,191,189,18,22,239,191,189,47,239,191,189,17,239,191,189,24,24,25,99,19,81,95,111,31,239,191,189,45,77,12,1,239,191,189,32,239,191,189,232,132,164,13,239,191,189,102,6,16,116,239,191,189,239,191,189,78,239,191,189,3,239,191,189,239,191,189,239,191,189,28,239,191,189,20,15,239,191,189,66,84,239,191,189,89,106,114,94,123,239,191,189,28,239,191,189,239,191,189,71,121,109,239,191,189,107,239,191,189,19,82,239,191,189,239,191,189,239,191,189,32,71,239,191,189,239,191,189,112,35,239,191,189,91,11,239,191,189,36,66,79,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,88,239,191,189,7,112,34,239,191,189,239,191,189,0,239,191,189,36,239,191,189,239,191,189,105,18,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,22,35,55,29,66,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,93,2,239,191,189,239,191,189,1,51,115,10,26,239,191,189,239,191,189,239,191,189,26,65,79,239,191,189,194,160,199,177,110,211,152,239,191,189,83,239,191,189,50,239,191,189,26,126,239,191,189,37,239,191,189,239,191,189,239,191,189,33,239,191,189,87,239,191,189,77,239,191,189,239,191,189,35,239,191,189,81,40,239,191,189,102,239,191,189,239,191,189,6,28,239,191,189,89,239,191,189,105,212,172,32,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,100,239,191,189,239,191,189,116,65,1,239,191,189,239,191,189,239,191,189,239,191,189,60,119,239,191,189,120,71,43,64,77,67,54,48,12,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,7,11,239,191,189,30,72,203,177,239,191,189,239,191,189,104,239,191,189,117,239,191,189,239,191,189,9,90,46,49,96,100,94,239,191,189,18,239,191,189,88,56,239,191,189,210,167,85,9,122,9,239,191,189,49,239,191,189,122,48,124,122,75,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,56,239,191,189,63,125,125,239,191,189,94,239,191,189,123,239,191,189,81,239,191,189,239,191,189,34,239,191,189,85,95,91,108,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,69,113,194,159,239,191,189,57,103,216,139,239,191,189,239,191,189,28,239,191,189,14,40,64,239,191,189,41,239,191,189,66,109,239,191,189,42,239,191,189,239,191,189,72,96,126,239,191,189,1,69,4,239,191,189,101,239,191,189,45,239,191,189,49,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,65,239,191,189,214,180,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,7,89,239,191,189,239,191,189,101,23,50,239,191,189,72,19,239,191,189,116,63,73,197,153,53,105,239,191,189,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,86,46,207,142,109,239,191,189,239,191,189,51,239,191,189,125,34,18,57,91,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,204,175,239,191,189,239,191,189,61,60,45,49,50,239,191,189,93,239,191,189,239,191,189,239,191,189,14,239,191,189,98,26,239,191,189,125,239,191,189,64,71,203,163,239,191,189,239,191,189,14,9,33,111,59,22,43,239,191,189,239,191,189,80,49,104,239,191,189,1,16,31,239,191,189,79,105,76,239,191,189,70,125,239,191,189,44,212,139,103,239,191,189,75,239,191,189,63,31,39,17,120,34,239,191,189,239,191,189,239,191,189,103,71,239,191,189,201,170,21,55,63,55,239,191,189,25,54,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,86,104,63,223,149,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,239,191,189,196,180,239,191,189,23,239,191,189,76,48,22,50,239,191,189,239,191,189,94,239,191,189,54,239,191,189,122,239,191,189,64,115,39,104,239,191,189,47,239,191,189,204,152,79,239,191,189,239,191,189,17,126,4,219,161,22,61,239,191,189,210,185,27,14,239,191,189,98,25,67,234,168,185,16,239,191,189,111,119,26,239,191,189,39,215,133,47,75,4,239,191,189,239,191,189,103,32,1,239,191,189,239,191,189,85,32,73,239,191,189,198,135,87,24,239,191,189,239,191,189,21,117,239,191,189,239,191,189,44,239,191,189,7,239,191,189,28,121,63,239,191,189,239,191,189,239,191,189,239,191,189,31,125,97,66,24,239,191,189,104,82,239,191,189,239,191,189,199,169,239,191,189,194,166,239,191,189,76,111,239,191,189,105,19,102,2,59,125,239,191,189,239,191,189,101,239,191,189,239,191,189,42,63,239,191,189,56,239,191,189,61,71,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,100,239,191,189,23,38,118,239,191,189,239,191,189,71,239,191,189,29,239,191,189,239,191,189,122,38,239,191,189,29,239,191,189,2,117,239,191,189,53,239,191,189,105,30,239,191,189,11,75,5,114,239,191,189,239,191,189,116,105,59,214,132,239,191,189,239,191,189,239,191,189,239,191,189,74,84,33,47,127,31,22,239,191,189,239,191,189,239,191,189,119,40,68,239,191,189,199,143,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,45,45,79,63,79,63,58,67,19,239,191,189,239,191,189,239,191,189,73,71,239,191,189,11,239,191,189,52,239,191,189,239,191,189,239,191,189,120,76,36,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,71,0,117,94,239,191,189,2,47,239,191,189,239,191,189,67,239,191,189,239,191,189,100,239,191,189,121,239,191,189,126,71,9,239,191,189,127,111,107,66,19,239,191,189,239,191,189,42,239,191,189,64,74,80,71,239,191,189,65,239,191,189,117,239,191,189,83,239,191,189,239,191,189,10,109,62,239,191,189,40,20,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,107,5,216,149,51,74,63,33,4,75,239,191,189,239,191,189,84,114,239,191,189,93,239,191,189,49,239,191,189,239,191,189,29,239,191,189,116,2,44,84,239,191,189,51,127,239,191,189,239,191,189,239,191,189,111,220,137,105,52,66,239,191,189,19,239,191,189,215,191,239,191,189,70,239,191,189,239,191,189,63,80,239,191,189,239,191,189,239,191,189,239,191,189,195,182,239,191,189,239,191,189,105,239,191,189,94,239,191,189,238,132,184,239,191,189,91,239,191,189,75,239,191,189,123,239,191,189,239,191,189,239,191,189,82,220,180,27,239,191,189,53,97,239,191,189,194,177,239,191,189,37,239,191,189,239,191,189,239,191,189,99,66,117,239,191,189,83,7,15,239,191,189,32,239,191,189,92,239,191,189,239,191,189,11,239,191,189,112,239,191,189,220,187,239,191,189,36,40,60,10,0,239,191,189,38,119,57,111,82,96,239,191,189,239,191,189,239,191,189,107,117,239,191,189,239,191,189,11,239,191,189,7,21,110,239,191,189,3,239,191,189,11,59,75,29,239,191,189,71,63,25,56,239,191,189,82,17,239,191,189,115,122,239,191,189,239,191,189,239,191,189,239,191,189,85,91,109,239,191,189,80,47,239,191,189,239,191,189,29,19,206,131,239,191,189,21,239,191,189,107,239,191,189,35,52,239,191,189,104,76,239,191,189,50,239,191,189,55,239,191,189,34,239,191,189,239,191,189,101,204,139,51,239,191,189,73,239,191,189,64,239,191,189,239,191,189,41,239,191,189,34,6,105,79,84,239,191,189,104,7,125,239,191,189,108,115,104,9,239,191,189,59,87,24,239,191,189,239,191,189,1,239,191,189,239,191,189,2,239,191,189,202,138,55,206,188,40,70,94,239,191,189,42,239,191,189,239,191,189,84,226,158,186,126,15,239,191,189,95,23,203,129,239,191,189,98,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,88,103,87,239,191,189,113,48,57,239,191,189,100,38,20,239,191,189,239,191,189,52,114,3,53,239,191,189,210,131,239,191,189,213,162,239,191,189,239,191,189,9,239,191,189,107,239,191,189,69,239,191,189,239,191,189,239,191,189,55,97,239,191,189,87,45,239,191,189,69,79,116,57,2,11,239,191,189,79,239,191,189,239,191,189,101,239,191,189,58,16,239,191,189,239,191,189,119,239,191,189,104,126,239,191,189,239,191,189,30,58,82,239,191,189,69,239,191,189,17,6,239,191,189,239,191,189,73,61,49,96,105,239,191,189,239,191,189,102,99,123,237,152,134,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,119,98,85,239,191,189,239,191,189,56,93,82,239,191,189,239,191,189,206,158,239,191,189,239,191,189,239,191,189,34,90,239,191,189,239,191,189,1,26,82,239,191,189,239,191,189,239,191,189,89,34,239,191,189,72,116,239,191,189,18,2,61,239,191,189,239,191,189,10,106,45,239,191,189,9,16,239,191,189,14,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,65,239,191,189,51,239,191,189,239,191,189,37,99,239,191,189,75,86,21,239,191,189,10,106,95,239,191,189,239,191,189,67,54,15,24,239,191,189,108,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,109,18,239,191,189,50,239,191,189,239,191,189,62,77,239,191,189,107,59,31,214,165,104,5,49,239,191,189,12,75,53,126,239,191,189,121,81,127,85,239,191,189,239,191,189,111,114,17,127,117,239,191,189,239,191,189,84,56,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,209,149,56,239,191,189,4,239,191,189,66,239,191,189,127,239,191,189,239,191,189,120,60,239,191,189,20,239,191,189,115,103,49,239,191,189,42,239,191,189,97,239,191,189,218,177,239,191,189,239,191,189,47,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,59,239,191,189,239,191,189,48,95,0,200,185,21,23,87,239,191,189,83,239,191,189,99,239,191,189,239,191,189,49,52,59,239,191,189,82,239,191,189,94,239,191,189,239,191,189,109,4,239,191,189,239,191,189,96,41,109,56,239,191,189,69,239,191,189,203,158,239,191,189,68,197,154,239,191,189,44,239,191,189,4,239,191,189,239,191,189,74,239,191,189,78,239,191,189,225,133,142,98,239,191,189,239,191,189,110,91,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,7,29,239,191,189,230,146,156,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,126,55,239,191,189,17,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,48,61,239,191,189,49,33,239,191,189,239,191,189,239,191,189,82,239,191,189,105,103,6,239,191,189,25,239,191,189,239,191,189,122,239,191,189,56,239,191,189,53,92,239,191,189,239,191,189,24,90,239,191,189,15,57,239,191,189,239,191,189,98,94,103,239,191,189,239,191,189,59,239,191,189,239,191,189,58,18,21,207,171,85,91,239,191,189,28,34,104,86,239,191,189,78,239,191,189,90,239,191,189,91,198,134,239,191,189,83,239,191,189,47,122,13,89,239,191,189,239,191,189,239,191,189,62,63,13,239,191,189,239,191,189,239,191,189,32,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,209,150,68,20,239,191,189,13,239,191,189,59,117,11,19,239,191,189,120,239,191,189,84,239,191,189,239,191,189,239,191,189,30,68,239,191,189,41,72,44,239,191,189,16,57,73,64,53,239,191,189,239,191,189,113,239,191,189,93,239,191,189,239,191,189,68,239,191,189,118,239,191,189,2,239,191,189,1,116,239,191,189,20,58,55,124,239,191,189,28,239,191,189,239,191,189,8,239,191,189,77,23,109,239,191,189,211,159,239,191,189,63,66,47,117,203,136,112,212,183,239,191,189,239,191,189,85,239,191,189,95,70,239,191,189,239,191,189,239,191,189,239,191,189,17,196,162,239,191,189,73,211,164,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,79,7,239,191,189,239,191,189,68,75,72,239,191,189,199,167,239,191,189,117,239,191,189,71,38,73,6,95,239,191,189,239,191,189,211,141,54,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,34,239,191,189,93,5,5,239,191,189,212,134,114,239,191,189,239,191,189,78,74,28,239,191,189,54,86,239,191,189,125,108,239,191,189,82,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,94,239,191,189,33,239,191,189,239,191,189,239,191,189,23,239,191,189,66,76,116,127,239,191,189,239,191,189,239,191,189,239,191,189,67,26,239,191,189,94,239,191,189,22,239,191,189,103,73,207,145,239,191,189,53,67,9,239,191,189,92,20,239,191,189,112,92,239,191,189,239,191,189,30,105,73,49,239,191,189,16,102,98,239,191,189,73,126,239,191,189,21,239,191,189,206,146,120,118,239,191,189,239,191,189,105,79,239,191,189,239,191,189,66,239,191,189,35,239,191,189,239,191,189,109,20,239,191,189,12,63,38,239,191,189,120,111,57,105,47,50,239,191,189,239,191,189,83,209,144,70,95,26,239,191,189,239,191,189,239,191,189,97,207,178,74,239,191,189,106,239,191,189,102,40,53,239,191,189,49,9,239,191,189,239,191,189,239,191,189,0,7,107,76,58,28,239,191,189,57,238,187,146,239,191,189,239,191,189,82,27,47,239,191,189,239,191,189,112,116,239,191,189,239,191,189,5,76,239,191,189,239,191,189,9,239,191,189,45,34,239,191,189,4,239,191,189,239,191,189,26,239,191,189,76,239,191,189,38,239,191,189,239,191,189,16,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,25,103,239,191,189,94,28,51,66,118,1,31,112,113,19,20,12,239,191,189,239,191,189,239,191,189,2,56,41,239,191,189,14,239,191,189,239,191,189,239,191,189,113,239,191,189,86,239,191,189,239,191,189,239,191,189,51,239,191,189,197,147,106,239,191,189,107,86,239,191,189,239,191,189,45,36,239,191,189,239,191,189,239,191,189,4,50,239,191,189,239,191,189,12,199,158,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,45,239,191,189,114,239,191,189,119,71,56,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,30,239,191,189,108,87,239,191,189,37,239,191,189,54,239,191,189,239,191,189,64,19,239,191,189,239,191,189,198,133,239,191,189,70,239,191,189,239,191,189,66,239,191,189,90,239,191,189,239,191,189,51,37,239,191,189,28,10,239,191,189,206,150,11,64,239,191,189,100,239,191,189,15,8,239,191,189,60,74,239,191,189,6,37,239,191,189,29,239,191,189,38,239,191,189,239,191,189,89,239,191,189,94,96,239,191,189,93,103,239,191,189,74,26,239,191,189,239,191,189,114,124,239,191,189,72,239,191,189,32,35,54,239,191,189,239,191,189,6,117,239,191,189,239,191,189,239,191,189,59,8,239,191,189,239,191,189,46,239,191,189,24,61,127,226,137,181,55,239,191,189,8,119,34,239,191,189,213,147,239,191,189,114,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,35,92,46,89,63,5,102,82,107,239,191,189,239,191,189,86,228,182,187,35,42,239,191,189,52,239,191,189,239,191,189,117,12,89,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,17,239,191,189,239,191,189,98,239,191,189,58,106,108,110,239,191,189,239,191,189,239,191,189,43,239,191,189,51,239,191,189,49,20,239,191,189,94,98,194,159,51,239,191,189,33,0,239,191,189,11,108,239,191,189,239,191,189,61,18,239,191,189,98,239,191,189,84,19,239,191,189,239,191,189,92,239,191,189,82,86,239,191,189,239,191,189,126,89,200,165,239,191,189,79,25,78,84,239,191,189,123,239,191,189,58,239,191,189,97,2,239,191,189,239,191,189,24,239,191,189,209,186,239,191,189,1,239,191,189,6,239,191,189,76,239,191,189,61,65,117,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,27,217,142,239,191,189,239,191,189,239,191,189,239,191,189,89,106,25,199,152,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,18,81,8,239,191,189,61,67,239,191,189,207,175,94,5,35,239,191,189,31,98,195,159,3,114,61,239,191,189,11,57,239,191,189,114,35,122,239,191,189,96,18,239,191,189,78,239,191,189,62,239,191,189,61,5,45,239,191,189,74,239,191,189,18,75,100,84,70,121,239,191,189,53,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,7,24,21,123,25,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,86,98,57,37,239,191,189,113,103,40,82,239,191,189,239,191,189,213,158,43,239,191,189,210,167,117,18,239,191,189,29,15,74,239,191,189,37,239,178,130,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,110,15,44,239,191,189,127,8,106,74,71,66,119,79,110,239,191,189,63,239,191,189,239,191,189,212,153,71,24,90,0,205,191,239,191,189,79,6,17,22,0,59,239,191,189,99,239,191,189,73,239,191,189,81,21,239,191,189,0,239,191,189,239,191,189,120,98,19,239,191,189,195,170,36,239,191,189,4,239,191,189,239,191,189,20,14,94,206,154,96,27,67,53,44,118,20,219,147,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,24,239,191,189,30,85,93,239,191,189,31,239,191,189,92,239,191,189,43,239,191,189,239,191,189,239,191,189,79,239,191,189,234,181,183,239,191,189,239,191,189,239,191,189,97,239,191,189,1,77,56,239,191,189,28,239,191,189,30,103,239,191,189,5,239,191,189,81,239,191,189,9,113,239,191,189,65,239,191,189,239,191,189,72,0,121,239,191,189,69,68,30,239,191,189,80,239,191,189,239,191,189,25,91,96,105,83,15,239,191,189,41,110,98,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,115,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,206,156,239,191,189,239,191,189,239,191,189,239,191,189,97,47,23,33,239,191,189,121,60,239,191,189,239,191,189,71,239,191,189,239,191,189,11,239,191,189,91,32,239,191,189,71,239,191,189,239,191,189,67,239,191,189,120,112,45,0,39,203,161,35,12,18,43,239,191,189,92,239,191,189,79,239,191,189,119,239,191,189,239,191,189,91,105,122,79,194,191,85,239,191,189,4,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,87,120,20,50,82,115,58,113,239,191,189,41,29,239,191,189,71,54,239,191,189,60,65,107,75,14,239,191,189,239,191,189,62,104,117,239,191,189,31,99,65,64,239,191,189,54,239,191,189,39,239,191,189,38,99,87,239,191,189,239,191,189,47,8,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,121,58,239,191,189,239,191,189,125,84,239,191,189,48,120,101,239,191,189,65,32,62,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,72,239,191,189,239,191,189,32,81,80,98,239,191,189,239,191,189,16,239,191,189,45,108,126,236,183,155,8,239,191,189,87,239,191,189,29,52,239,191,189,19,99,239,191,189,127,239,191,189,239,191,189,239,191,189,217,176,239,191,189,49,239,191,189,239,191,189,43,3,117,239,191,189,239,191,189,84,239,191,189,20,239,191,189,239,191,189,239,191,189,34,78,239,191,189,207,135,21,42,113,12,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,32,125,239,191,189,77,86,239,191,189,239,191,189,221,144,239,191,189,84,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,10,40,239,191,189,6,35,216,143,61,66,239,191,189,239,191,189,9,17,205,150,19,114,62,80,78,239,191,189,63,239,191,189,239,191,189,239,191,189,63,13,62,239,191,189,239,191,189,89,102,81,21,85,239,191,189,71,51,239,191,189,111,239,191,189,78,80,239,191,189,51,239,191,189,239,191,189,105,239,191,189,94,239,191,189,72,34,239,191,189,203,131,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,55,239,191,189,239,191,189,239,191,189,64,43,42,11,85,239,191,189,95,239,191,189,84,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,78,17,67,96,74,239,191,189,239,191,189,47,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,14,72,41,112,51,239,191,189,239,191,189,67,239,191,189,239,191,189,46,239,191,189,92,239,191,189,89,239,191,189,91,239,191,189,73,38,95,95,108,110,57,239,191,189,106,239,191,189,239,191,189,239,191,189,113,43,239,191,189,239,191,189,122,50,95,239,191,189,31,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,8,14,69,62,110,101,48,239,191,189,220,187,54,55,52,239,191,189,81,239,191,189,230,146,136,49,25,98,99,41,94,239,191,189,7,95,239,191,189,239,191,189,239,191,189,66,40,239,191,189,239,191,189,239,191,189,119,239,191,189,45,12,239,191,189,6,26,239,191,189,239,191,189,39,123,33,239,191,189,239,191,189,239,191,189,16,111,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,94,239,191,189,28,239,191,189,239,191,189,239,191,189,15,239,191,189,17,110,92,48,101,124,54,18,72,239,191,189,46,55,30,229,177,151,113,239,191,189,211,134,239,191,189,70,55,91,239,191,189,88,239,191,189,42,239,191,189,58,239,191,189,6,24,239,191,189,16,63,239,191,189,89,239,191,189,239,191,189,107,239,191,189,93,7,239,191,189,239,191,189,120,30,239,191,189,111,54,33,239,191,189,239,191,189,239,191,189,55,0,90,13,239,191,189,11,40,14,239,191,189,40,30,62,239,191,189,114,239,191,189,23,15,239,191,189,26,58,239,191,189,48,110,45,239,191,189,53,11,100,202,152,239,191,189,36,69,8,239,191,189,239,191,189,239,191,189,36,95,125,79,49,197,137,119,239,191,189,239,191,189,239,191,189,88,39,65,110,239,191,189,239,191,189,6,239,191,189,44,107,239,191,189,0,239,191,189,67,60,67,239,191,189,25,239,191,189,105,92,23,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,95,239,191,189,114,112,239,191,189,32,239,191,189,100,2,11,239,191,189,49,239,191,189,95,239,191,189,11,239,191,189,239,191,189,93,18,66,46,64,239,191,189,239,191,189,239,191,189,239,191,189,70,7,239,191,189,64,5,239,191,189,239,191,189,239,191,189,204,159,111,117,43,103,81,69,64,48,91,2,239,191,189,10,39,239,191,189,206,128,28,239,191,189,50,239,191,189,30,109,239,191,189,30,239,191,189,35,74,239,191,189,239,191,189,58,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,85,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,63,239,191,189,16,239,191,189,2,239,191,189,12,108,45,239,191,189,79,239,191,189,239,191,189,51,83,239,191,189,69,32,239,191,189,65,239,191,189,55,70,239,191,189,20,31,102,239,191,189,98,109,126,1,58,239,191,189,239,191,189,23,97,239,191,189,82,239,191,189,110,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,99,28,123,239,191,189,239,191,189,239,191,189,66,114,103,202,183,239,191,189,117,239,191,189,111,202,142,208,167,97,239,191,189,239,191,189,239,191,189,227,152,147,239,191,189,239,191,189,29,55,33,30,88,239,191,189,3,239,191,189,239,191,189,239,191,189,22,239,191,189,29,52,77,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,113,83,3,91,239,191,189,82,239,191,189,35,239,191,189,43,110,85,47,239,191,189,239,191,189,239,191,189,226,162,142,239,191,189,239,191,189,221,144,104,239,191,189,239,191,189,123,57,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,26,239,191,189,239,191,189,87,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,16,4,239,191,189,239,191,189,112,2,239,191,189,118,115,239,191,189,99,41,239,191,189,93,37,65,239,191,189,239,191,189,29,105,239,191,189,127,239,191,189,58,75,239,191,189,239,191,189,80,239,191,189,221,190,125,239,191,189,40,239,191,189,239,191,189,239,191,189,100,53,49,87,239,191,189,9,68,45,239,191,189,239,191,189,103,239,191,189,73,239,191,189,203,145,107,239,191,189,70,113,112,67,239,191,189,239,191,189,20,239,191,189,239,191,189,0,52,43,239,191,189,239,191,189,52,239,191,189,56,239,191,189,216,143,239,191,189,29,71,239,191,189,239,191,189,41,92,239,191,189,20,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,60,50,239,191,189,239,191,189,239,191,189,99,73,239,191,189,239,191,189,239,191,189,41,41,239,191,189,91,105,111,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,35,74,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,48,83,127,239,191,189,220,177,47,239,191,189,239,191,189,239,191,189,90,106,239,191,189,13,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,123,239,191,189,24,239,191,189,239,191,189,66,115,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,61,74,53,239,191,189,239,191,189,92,111,118,46,239,191,189,98,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,12,80,20,239,191,189,239,191,189,102,52,32,111,239,191,189,239,191,189,47,4,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,94,239,191,189,73,56,4,111,96,41,40,116,42,239,191,189,239,191,189,46,239,191,189,34,239,191,189,67,239,191,189,239,191,189,0,239,191,189,124,239,191,189,117,71,41,239,191,189,123,239,191,189,239,191,189,121,117,64,98,89,6,219,175,69,5,10,239,191,189,239,191,189,239,191,189,79,97,239,191,189,63,239,191,189,24,239,191,189,70,239,191,189,239,191,189,239,191,189,54,239,191,189,195,189,69,239,191,189,239,191,189,75,123,239,191,189,52,239,191,189,239,191,189,74,28,195,148,66,239,191,189,239,191,189,239,191,189,239,191,189,14,37,239,191,189,83,239,191,189,239,191,189,239,191,189,103,50,236,180,163,34,93,23,239,191,189,0,123,91,239,191,189,126,239,191,189,26,239,191,189,10,239,191,189,239,191,189,85,239,191,189,4,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,125,72,239,191,189,40,39,239,191,189,239,191,189,239,191,189,66,99,239,191,189,239,191,189,3,44,10,16,72,239,191,189,13,111,107,46,65,30,239,191,189,110,239,191,189,121,26,14,239,191,189,99,36,107,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,71,239,191,189,27,239,191,189,109,239,191,189,199,169,83,239,191,189,24,239,191,189,79,7,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,51,239,191,189,55,214,152,239,191,189,56,19,102,239,191,189,36,239,191,189,16,108,239,191,189,35,113,239,191,189,84,239,191,189,82,100,50,120,11,239,191,189,20,239,191,189,67,69,19,239,191,189,119,210,141,107,239,191,189,68,24,239,191,189,91,239,191,189,66,239,191,189,239,191,189,83,239,191,189,239,191,189,14,239,191,189,42,239,191,189,239,191,189,76,53,207,170,239,191,189,239,191,189,213,180,109,239,191,189,33,239,191,189,56,77,62,222,141,95,44,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,42,50,239,191,189,239,191,189,27,23,68,43,239,191,189,239,191,189,239,191,189,5,122,67,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,5,89,3,239,191,189,54,239,191,189,87,239,191,189,194,150,239,191,189,239,191,189,11,18,239,191,189,239,191,189,239,191,189,33,5,239,191,189,239,191,189,33,239,191,189,32,239,191,189,90,239,191,189,97,239,191,189,239,191,189,239,191,189,0,239,191,189,37,239,191,189,239,191,189,47,59,119,28,239,191,189,76,105,6,17,239,191,189,239,191,189,103,239,191,189,110,60,239,191,189,27,24,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,56,38,220,171,6,239,191,189,95,239,191,189,82,117,239,191,189,239,191,189,232,167,184,239,191,189,14,4,96,74,239,191,189,80,95,239,191,189,239,191,189,217,139,239,191,189,23,75,239,191,189,239,191,189,239,191,189,239,191,189,19,66,41,102,239,191,189,19,7,239,191,189,28,239,191,189,23,50,47,239,191,189,43,30,213,174,124,1,46,239,191,189,239,191,189,239,191,189,239,191,189,45,90,239,191,189,239,191,189,6,239,191,189,16,24,32,239,191,189,117,113,239,191,189,67,76,66,9,51,239,191,189,223,179,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,30,207,154,43,124,67,239,191,189,239,191,189,239,191,189,118,239,191,189,21,239,191,189,7,25,15,94,239,191,189,239,191,189,45,107,47,239,191,189,37,239,191,189,45,5,19,239,191,189,239,191,189,239,191,189,200,144,19,239,191,189,73,239,191,189,104,239,191,189,45,8,239,191,189,239,191,189,239,191,189,12,30,239,191,189,216,153,239,191,189,58,239,191,189,77,73,111,239,191,189,16,117,118,78,61,239,191,189,16,239,191,189,239,191,189,52,239,191,189,239,191,189,20,207,137,239,191,189,239,191,189,126,36,239,191,189,239,191,189,239,191,189,24,239,191,189,109,45,121,239,191,189,0,123,70,239,191,189,3,57,16,239,191,189,239,191,189,124,239,191,189,239,191,189,67,215,152,239,191,189,239,191,189,239,191,189,16,67,50,239,191,189,36,239,191,189,83,29,92,239,191,189,239,191,189,16,18,39,112,239,191,189,239,191,189,62,33,17,239,191,189,121,4,16,239,191,189,239,191,189,29,239,191,189,239,191,189,65,239,191,189,114,105,239,191,189,239,191,189,67,206,172,34,239,191,189,28,239,191,189,17,239,191,189,239,191,189,106,119,44,239,191,189,29,90,216,177,52,239,191,189,63,33,63,125,239,191,189,85,110,27,239,191,189,110,239,191,189,99,79,44,239,191,189,12,28,48,98,121,239,191,189,239,191,189,71,239,191,189,61,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,122,64,4,239,191,189,109,239,191,189,91,90,239,191,189,239,191,189,47,90,57,7,40,0,2,16,61,239,191,189,79,239,191,189,239,191,189,76,217,144,63,239,191,189,123,239,191,189,62,239,191,189,239,191,189,239,191,189,14,40,12,239,191,189,119,239,191,189,7,239,191,189,44,239,191,189,239,191,189,117,54,126,239,191,189,239,191,189,18,102,239,191,189,104,239,191,189,109,239,191,189,239,191,189,239,191,189,101,108,239,191,189,50,239,191,189,239,191,189,75,30,25,239,191,189,239,191,189,113,239,191,189,239,191,189,72,239,166,137,239,191,189,26,9,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,112,57,239,191,189,17,103,49,239,191,189,239,191,189,239,191,189,104,41,23,100,239,191,189,239,191,189,239,191,189,239,191,189,30,32,239,191,189,239,191,189,46,239,191,189,239,191,189,91,239,191,189,36,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,119,103,239,191,189,239,191,189,239,191,189,107,23,85,26,239,191,189,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,67,56,239,191,189,101,88,239,191,189,66,82,239,191,189,239,191,189,108,12,239,191,189,208,182,239,191,189,100,33,239,191,189,62,239,191,189,239,191,189,8,122,239,191,189,117,99,239,191,189,106,239,191,189,106,23,119,239,191,189,239,191,189,95,239,191,189,239,191,189,37,105,239,191,189,239,191,189,239,191,189,10,99,73,2,239,191,189,239,191,189,239,191,189,31,40,81,82,76,18,92,239,191,189,44,239,191,189,239,191,189,44,75,125,239,191,189,239,191,189,88,239,191,189,239,191,189,4,239,191,189,78,107,239,191,189,64,239,191,189,239,191,189,22,99,115,239,191,189,69,239,191,189,239,191,189,66,239,191,189,37,239,191,189,239,191,189,2,239,191,189,113,89,123,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,45,211,135,77,208,188,124,17,96,96,94,239,191,189,239,191,189,89,71,230,178,173,95,20,50,63,31,1,239,191,189,239,191,189,18,89,239,191,189,57,47,239,191,189,239,191,189,114,69,211,190,75,239,191,189,239,191,189,73,19,52,105,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,0,239,191,189,8,117,239,191,189,238,180,133,239,191,189,239,191,189,34,86,38,49,239,191,189,57,85,19,116,40,102,239,191,189,239,191,189,239,191,189,31,10,239,191,189,93,239,191,189,53,18,37,30,57,90,239,191,189,24,239,191,189,87,30,56,239,191,189,12,239,191,189,38,239,191,189,13,56,239,191,189,239,191,189,82,239,191,189,116,239,191,189,38,47,239,191,189,239,191,189,239,191,189,239,191,189,40,195,189,239,191,189,239,191,189,56,239,191,189,239,191,189,57,33,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,97,239,191,189,125,127,7,239,191,189,38,101,239,191,189,239,191,189,51,94,109,22,116,31,15,239,191,189,78,68,41,239,191,189,32,97,239,191,189,239,191,189,239,191,189,48,106,239,191,189,239,191,189,51,6,60,230,129,168,239,191,189,239,191,189,112,239,191,189,239,191,189,78,239,191,189,219,179,239,191,189,72,53,239,191,189,83,239,191,189,122,239,191,189,239,191,189,27,239,191,189,103,49,239,191,189,239,191,189,36,239,191,189,239,191,189,42,103,217,141,239,191,189,102,64,116,212,145,239,191,189,209,190,239,191,189,239,191,189,38,239,191,189,52,239,191,189,73,49,123,239,191,189,96,10,102,239,191,189,84,239,191,189,122,239,191,189,106,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,122,104,239,191,189,239,191,189,239,191,189,239,191,189,10,92,19,123,10,14,199,129,99,124,239,191,189,239,191,189,120,239,191,189,55,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,48,239,191,189,23,239,191,189,117,45,239,191,189,41,239,191,189,83,239,191,189,239,191,189,122,239,191,189,9,239,191,189,216,158,107,239,191,189,239,191,189,62,119,1,111,56,55,96,239,191,189,124,19,239,191,189,239,191,189,90,218,146})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff4b86cf83",
                        container: "containers156b64a757b04bbd97b708b10d38f463",
                        blob: "Blob3b01be4df9234bf592ca36428bb6cb80_WriteProtectedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07052 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07052_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07052_s.txt", Encoding.UTF8);

    public Test07052() : base(recordedRequest, recordedResponse, "accounts8d439ffa42a2bfe")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffa42a2bfe",
                        container: "containers020022e150474c9c944ce7cb6d2ecf79",
                        blob: "Blobefb0f817044c4a399a44597cb69cf4da",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06957 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06957_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06957_s.txt", Encoding.UTF8);

    public Test06957() : base(recordedRequest, recordedResponse, "accounts8d439ff90a45290")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff90a45290",
                        container: "containers70717ea0c0b141d285715e30cb5ec564",
                        blob: "PageBlob82d8ef725ec44cd482ea7497ce7f1371",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05880 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05880_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05880_s.txt", Encoding.UTF8);

    public Test05880() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers29aac548564c490193dbe830fea9b09c",
                        blob: "PageBlob1138e9065709424ba83cd384f8c837f3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05399 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05399_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05399_s.txt", Encoding.UTF8);

    public Test05399() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{52,239,191,189,8,118,23,239,191,189,125,239,191,189,40,239,191,189,239,191,189,73,239,191,189,116,16,94,1,109,16,127,239,191,189,56,239,191,189,239,191,189,122,32,239,191,189,239,191,189,70,239,191,189,239,191,189,22,48,35,82,103,239,191,189,12,104,239,191,189,113,25,34,239,191,189,106,115,239,191,189,239,191,189,19,239,191,189,239,191,189,69,82,87,239,191,189,239,191,189,87,111,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,26,239,191,189,25,239,191,189,33,239,191,189,239,191,189,239,191,189,4,91,13,239,191,189,22,239,191,189,47,6,126,37,123,239,191,189,239,191,189,80,239,191,189,217,135,86,15,97,15,113,206,131,221,143,239,191,189,239,191,189,90,239,191,189,102,106,44,239,191,189,64,239,191,189,73,239,191,189,239,191,189,64,239,191,189,120,239,191,189,114,239,191,189,239,191,189,239,191,189,23,63,79,203,153,44,229,147,141,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,239,191,189,16,94,239,191,189,15,204,144,239,191,189,112,109,33,26,239,191,189,13,16,45,239,191,189,239,191,189,119,26,124,239,191,189,239,191,189,0,3,239,191,189,105,239,191,189,239,191,189,94,239,191,189,239,191,189,72,239,191,189,1,98,82,16,239,191,189,75,239,191,189,239,191,189,90,44,11,203,153,127,122,239,191,189,239,191,189,32,39,239,191,189,53,35,64,94,239,191,189,97,98,209,177,17,209,128,239,191,189,50,12,239,191,189,218,161,41,44,107,239,191,189,64,239,191,189,239,191,189,56,19,239,191,189,68,67,239,191,189,124,120,239,191,189,239,191,189,239,191,189,33,239,191,189,71,89,239,191,189,239,191,189,239,191,189,72,90,239,191,189,239,191,189,103,115,239,191,189,239,191,189,51,239,191,189,239,191,189,38,92,239,191,189,105,239,191,189,78,120,239,191,189,110,239,191,189,84,7,26,239,191,189,46,239,191,189,239,191,189,90,239,191,189,68,239,191,189,239,191,189,239,191,189,73,105,62,239,191,189,118,120,104,85,239,191,189,125,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,11,111,81,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,68,63,239,191,189,239,191,189,37,239,191,189,239,191,189,118,239,191,189,81,0,82,239,191,189,1,20,5,50,206,138,239,191,189,109,51,5,92,239,191,189,239,191,189,239,191,189,59,98,56,67,239,191,189,94,239,191,189,50,56,116,125,96,239,191,189,239,191,189,239,191,189,16,52,239,191,189,99,105,110,60,126,239,191,189,55,239,191,189,85,87,17,58,239,191,189,52,96,239,191,189,94,19,239,191,189,14,25,239,191,189,239,191,189,220,144,239,191,189,110,195,146,239,191,189,34,239,191,189,239,191,189,64,92,102,239,191,189,239,191,189,12,239,191,189,8,239,191,189,32,239,191,189,239,191,189,72,0,228,152,170,95,38,112,111,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,53,195,167,239,191,189,105,239,191,189,239,191,189,3,124,95,48,5,1,44,239,191,189,42,239,191,189,221,179,109,110,239,191,189,239,191,189,5,195,170,98,209,173,200,157,239,191,189,239,191,189,67,239,191,189,69,239,191,189,50,239,191,189,25,84,239,191,189,104,56,122,89,36,67,239,191,189,239,191,189,239,191,189,59,106,90,85,200,162,43,239,191,189,97,35,86,239,191,189,239,191,189,59,50,239,191,189,116,239,191,189,66,124,72,239,191,189,24,113,119,239,191,189,239,191,189,105,239,191,189,30,77,41,239,191,189,26,239,191,189,105,239,191,189,98,124,69,7,214,183,49,239,191,189,239,191,189,118,62,39,103,239,191,189,239,191,189,66,114,58,239,191,189,82,239,191,189,239,191,189,7})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersaf7cbdac83ec4766ba2459b2343c50e7",
                        blob: "PageBlob8a0dad7990674dd5b1292f00185882ae",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07164 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07164_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07164_s.txt", Encoding.UTF8);

    public Test07164() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,51,239,191,189,24,239,191,189,3,54,239,191,189,29,43,25,239,191,189,239,191,189,239,191,189,239,191,189,19,0,239,191,189,239,191,189,239,191,189,49,125,74,239,191,189,239,191,189,73,108,127,56,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,217,174,116,239,191,189,239,191,189,55,239,191,189,73,126,58,239,191,189,239,191,189,65,122,239,191,189,239,191,189,91,239,191,189,110,81,31,239,191,189,30,47,98,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,236,165,156,16,100,239,191,189,68,1,239,191,189,239,191,189,52,204,132,239,191,189,42,4,239,191,189,239,191,189,99,239,191,189,56,239,191,189,239,191,189,239,191,189,68,82,1,239,191,189,30,239,191,189,17,239,191,189,16,1,239,191,189,106,45,24,23,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,67,239,191,189,108,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,31,239,191,189,70,239,191,189,239,191,189,1,98,115,239,191,189,239,191,189,219,161,239,191,189,239,191,189,121,239,191,189,75,27,75,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,49,43,8,239,191,189,91,6,239,191,189,74,89,239,191,189,37,239,191,189,239,191,189,110,119,97,239,191,189,103,30,239,191,189,25,114,239,191,189,239,191,189,239,191,189,104,33,239,191,189,73,239,191,189,69,94,106,53,48,71,239,191,189,63,239,191,189,239,191,189,239,191,189,79,32,7,38,113,96,106,103,116,78,239,191,189,117,239,191,189,239,191,189,239,191,189,111,75,239,191,189,239,191,189,239,191,189,239,191,189,0,123,239,191,189,239,191,189,63,239,191,189,62,47,239,191,189,104,239,191,189,52,239,191,189,82,239,191,189,239,191,189,83,7,239,191,189,239,191,189,213,143,239,191,189,233,189,129,113,239,191,189,102,82,239,191,189,239,191,189,239,191,189,78,239,191,189,123,96,50,239,191,189,44,55,239,191,189,239,191,189,239,191,189,120,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,46,80,43,239,191,189,239,191,189,220,129,52,239,191,189,87,72,21,90,239,191,189,94,123,239,191,189,57,54,33,92,239,191,189,85,16,239,191,189,239,191,189,239,191,189,68,239,191,189,4,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,118,95,239,191,189,124,239,191,189,88,37,25,110,239,191,189,239,191,189,127,120,239,191,189,239,191,189,239,191,189,26,66,239,191,189,239,191,189,60,239,191,189,239,191,189,57,239,191,189,92,239,191,189,68,239,191,189,87,239,191,189,239,191,189,112,239,191,189,41,117,239,191,189,217,159,239,191,189,43,40,68,239,191,189,50,64,19,239,191,189,9,118,239,191,189,239,191,189,115,217,151,239,191,189,239,191,189,114,239,191,189,239,191,189,63,22,239,191,189,239,191,189,239,191,189,7,239,191,189,123,239,191,189,239,191,189,104,73,18,17,116,239,191,189,239,191,189,101,28,239,191,189,98,81,78,125,239,191,189,18,239,191,189,12,239,191,189,207,176,102,239,191,189,239,191,189,239,191,189,17,121,239,191,189,100,57,107,102,2,239,191,189,14,104,239,191,189,98,101,19,8,126,86,239,191,189,126,239,191,189,239,191,189,77,239,191,189,10,239,191,189,239,191,189,239,191,189,1,73,33,37,98,10,239,191,189,0,239,191,189,58,239,191,189,78,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,49,16,5,114,239,191,189,74,43,197,169,46,239,191,189,125,75,239,191,189,12,30,107,60,3,8,38,126,115,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,54,112,239,191,189,105,239,191,189,239,191,189,67,239,191,189,39,24,239,191,189,28,86,239,191,189,107,126,2,29,98,102,25,93,239,191,189,119,239,191,189,239,191,189,239,191,189,69,239,191,189,94,77,76,86,115,239,191,189,239,191,189,19,91,9,27,218,188,20,239,191,189,40,9,39,239,191,189,85,4,239,191,189,239,191,189,124,8,28,19,81,239,191,189,80,239,191,189,84,239,191,189,239,191,189,239,191,189,202,147,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,19,70,239,191,189,93,72,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,78,87,239,191,189,239,191,189,33,11,24,239,191,189,239,191,189,239,191,189,75,32,239,191,189,67,68,239,191,189,195,153,239,191,189,239,191,189,53,124,239,191,189,202,153,239,191,189,239,191,189,102,119,14,239,191,189,8,91,239,191,189,119,239,191,189,77,9,73,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,83,70,21,44,82,204,163,239,191,189,209,152,239,191,189,239,191,189,125,81,239,191,189,78,239,191,189,43,66,239,191,189,239,191,189,203,184,122,239,191,189,80,88,207,180,239,191,189,95,239,191,189,2,239,191,189,102,31,98,239,191,189,127,59,239,191,189,39,239,191,189,239,191,189,109,27,239,191,189,74,73,49,239,191,189,52,239,191,189,239,191,189,231,135,141,239,191,189,114,2,115,239,191,189,239,191,189,4,56,17,239,191,189,239,191,189,239,191,189,239,191,189,6,14,239,191,189,37,239,191,189,12,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,43,18,49,2,222,145,239,191,189,112,125,239,191,189,239,191,189,64,239,191,189,239,191,189,92,47,55,95,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,59,98,200,141,239,191,189,125,102,77,99,25,13,239,191,189,239,191,189,239,191,189,12,1,36,123,46,62,42,106,239,191,189,10,239,191,189,111,77,239,191,189,239,191,189,61,239,191,189,95,109,239,191,189,124,239,191,189,58,239,191,189,239,191,189,97,239,191,189,221,136,239,191,189,93,117,239,191,189,83,239,191,189,33,123,90,116,239,191,189,239,191,189,222,189,239,191,189,99,47,239,191,189,125,37,36,106,239,191,189,76,201,143,56,239,191,189,239,191,189,46,220,149,239,191,189,239,191,189,93,83,239,191,189,239,191,189,90,27,28,121,72,239,191,189,239,191,189,239,191,189,239,191,189,11,93,57,208,169,23,239,191,189,99,66,239,191,189,40,239,191,189,239,191,189,124,55,239,191,189,43,239,191,189,3,66,239,191,189,95,239,191,189,105,239,191,189,93,98,9,239,191,189,33,239,191,189,119,239,191,189,239,191,189,44,239,191,189,239,191,189,94,51,125,214,151,27,239,191,189,239,191,189,203,151,239,191,189,239,191,189,239,191,189,28,82,209,179,239,191,189,239,191,189,239,191,189,239,191,189,71,76,239,191,189,239,191,189,239,191,189,32,7,239,191,189,8,239,191,189,80,239,191,189,239,191,189,239,191,189,100,239,191,189,107,75,68,239,191,189,239,191,189,239,191,189,36,239,191,189,4,99,239,191,189,31,54,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,78,59,239,191,189,79,239,191,189,76,72,111,103,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,10,239,191,189,239,191,189,239,191,189,35,239,191,189,125,239,191,189,66,109,73,98,120,239,191,189,239,191,189,117,239,191,189,239,191,189,118,89,239,191,189,239,191,189,25,213,158,239,191,189,96,214,159,239,191,189,239,191,189,239,191,189,21,239,191,189,43,126,72,239,191,189,239,191,189,111,239,191,189,5,1,29,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,0,102,44,239,191,189,18,212,182,29,239,191,189,42,29,239,191,189,122,107,118,99,34,239,191,189,239,191,189,239,191,189,40,28,7,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,90,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=6144-7167",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07004 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07004_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07004_s.txt", Encoding.UTF8);

    public Test07004() : base(recordedRequest, recordedResponse, "accounts8d439ff91164f0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,125,239,191,189,18,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,104,126,239,191,189,239,191,189,3,239,191,189,127,239,191,189,239,191,189,110,11,239,191,189,239,191,189,61,239,191,189,94,115,92,32,239,191,189,227,145,190,239,191,189,48,239,191,189,199,141,239,191,189,239,191,189,239,191,189,84,239,191,189,39,124,46,39,22,239,191,189,118,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,124,100,55,11,1,215,191,239,191,189,118,98,16,239,191,189,23,239,191,189,12,239,191,189,239,191,189,21,114,48,75,70,42,26,68,239,191,189,92,3,239,191,189,239,191,189,239,191,189,61,113,239,191,189,73,239,191,189,79,239,191,189,78,239,191,189,239,191,189,239,191,189,1,239,191,189,202,179,239,191,189,53,239,191,189,239,191,189,5,48,30,13,239,191,189,4,99,239,191,189,199,188,30,89,239,191,189,239,191,189,37,68,93,239,191,189,197,181,226,154,145,69,239,191,189,67,45,239,191,189,80,239,191,189,112,50,21,239,191,189,13,82,239,191,189,88,57,75,89,112,239,191,189,239,191,189,239,191,189,41,28,203,165,110,124,101,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,89,120,239,191,189,209,141,239,191,189,75,239,191,189,68,49,239,191,189,210,138,5,239,191,189,122,92,113,239,191,189,239,191,189,126,109,39,97,239,191,189,239,191,189,88,10,56,72,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,127,112,239,191,189,239,191,189,239,191,189,73,239,191,189,81,117,229,171,153,65,239,191,189,239,191,189,239,191,189,85,13,239,191,189,6,239,191,189,5,212,142,239,191,189,238,163,136,60,98,26,239,191,189,239,191,189,58,239,191,189,239,191,189,223,145,210,168,19,111,239,191,189,239,191,189,55,93,106,40,239,191,189,74,239,191,189,239,191,189,76,112,239,191,189,122,239,191,189,35,44,4,239,191,189,99,21,18,202,173,239,191,189,6,239,191,189,36,239,191,189,239,191,189,58,239,191,189,239,191,189,100,6,50,86,91,239,191,189,122,239,191,189,239,191,189,85,239,191,189,113,62,62,59,239,191,189,100,239,191,189,1,239,191,189,90,239,191,189,215,137,239,191,189,99,45,197,136,239,191,189,92,124,239,191,189,115,105,239,191,189,209,128,43,239,191,189,35,89,117,239,191,189,70,199,188,239,191,189,6,96,107,239,191,189,67,10,25,90,204,181,32,77,239,191,189,105,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,55,239,191,189,98,239,191,189,94,239,191,189,113,220,130,239,191,189,31,110,56,239,191,189,90,14,1,28,95,239,191,189,235,185,132,239,191,189,239,191,189,82,31,239,191,189,22,23,239,191,189,28,23,88,210,134,239,191,189,62,87,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,27,111,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,125,14,239,191,189,239,191,189,12,123,127,239,191,189,106,239,191,189,2,87,223,185,239,191,189,22,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,4,239,191,189,84,42,87,45,31,89,85,119,65,88,74,8,92,54,123,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,42,239,191,189,20,239,191,189,15,239,191,189,218,183,36,117,119,239,191,189,114,64,94,239,191,189,55,239,191,189,100,93,239,191,189,105,121,210,165,239,191,189,87,239,191,189,87,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,42,73,239,191,189,239,191,189,239,191,189,51,213,145,94,239,191,189,59,59,239,191,189,87,85,239,191,189,62,239,191,189,239,191,189,55,66,79,86,82,64,96,239,191,189,239,191,189,23,239,191,189,64,239,191,189,239,191,189,13,60,239,191,189,239,191,189,74,53,239,191,189,64,71,239,191,189,27,94,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,62,111,239,191,189,239,191,189,239,191,189,88,91,41,65,26,239,191,189,70,239,191,189,239,191,189,239,191,189,22,74,25,69,125,239,191,189,239,191,189,239,191,189,1,8,97,54,239,191,189,239,191,189,23,85,47,111,239,191,189,2,72,239,191,189,50,72,96,100,33,239,191,189,1,239,191,189,32,239,191,189,108,239,191,189,75,95,42,65,239,191,189,239,191,189,239,191,189,210,146,33,121,76,41,196,141,239,191,189,239,191,189,239,191,189,59,49,23,239,191,189,239,191,189,24,108,239,191,189,8,125,6,101,21,8,111,239,191,189,9,239,191,189,68,239,191,189,79,107,15,96,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,40,239,191,189,59,121,123,122,18,239,191,189,28,239,191,189,87,239,191,189,45,11,113,221,163,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,34,239,191,189,26,239,191,189,45,239,191,189,239,191,189,66,239,191,189,239,191,189,102,239,191,189,105,52,13,239,191,189,85,50,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,50,121,239,191,189,39,10,57,239,191,189,239,191,189,126,239,191,189,25,239,191,189,96,239,191,189,239,191,189,60,81,239,191,189,239,191,189,239,191,189,239,191,189,29,7,239,191,189,239,191,189,44,103,95,92,119,58,106,35,239,191,189,115,239,191,189,239,191,189,239,191,189,55,77,66,239,191,189,111,239,191,189,27,75,45,239,191,189,77,239,191,189,239,191,189,3,239,191,189,239,191,189,20,114,78,239,191,189,239,191,189,239,191,189,57,95,7,239,191,189,239,191,189,239,191,189,239,191,189,96,49,239,191,189,239,191,189,91,239,191,189,239,191,189,29,239,191,189,107,239,191,189,74,239,191,189,239,191,189,17,239,191,189,239,191,189,55,239,191,189,127,239,191,189,94,64,81,18,88,122,8,74,103,8,108,239,191,189,94,32,27,13,52,239,191,189,98,239,191,189,239,191,189,102,6,239,191,189,70,239,191,189,239,191,189,40,239,191,189,113,92,43,31,239,191,189,1,239,191,189,73,239,191,189,2,9,239,191,189,239,191,189,70,98,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,32,239,191,189,43,239,191,189,57,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,95,30,42,195,153,239,191,189,89,83,239,191,189,31,239,191,189,239,191,189,239,191,189,64,37,50,7,15,239,191,189,10,239,191,189,239,191,189,9,239,191,189,239,191,189,207,137,121,239,191,189,53,80,239,191,189,239,191,189,16,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,89,216,149,239,191,189,34,55,105,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,20,115,10,239,191,189,27,223,143,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,125,103,38,71,239,191,189,67,98,122,48,33,202,173,82,15,22,239,191,189,105,214,170,26,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,231,165,189,9,239,191,189,47,239,191,189,54,239,191,189,69,110,239,191,189,239,191,189,239,191,189,17,239,191,189,81,63,28,239,191,189,239,191,189,121,239,191,189,101,23,22,126,76,239,191,189,16,79,71,23,92,239,191,189,239,191,189,39,122,239,191,189,34,28,35,239,191,189,49})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff91164f0c",
                        container: "containerse9e15e20033f4188863d0457f6c0b446",
                        blob: "PageBlobcbe7d5e1c91748aaacdf804e925a475f",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07165 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07165_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07165_s.txt", Encoding.UTF8);

    public Test07165() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-1535",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05401 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05401_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05401_s.txt", Encoding.UTF8);

    public Test05401() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{52,239,191,189,8,118,23,239,191,189,125,239,191,189,40,239,191,189,239,191,189,73,239,191,189,116,16,94,1,109,16,127,239,191,189,56,239,191,189,239,191,189,122,32,239,191,189,239,191,189,70,239,191,189,239,191,189,22,48,35,82,103,239,191,189,12,104,239,191,189,113,25,34,239,191,189,106,115,239,191,189,239,191,189,19,239,191,189,239,191,189,69,82,87,239,191,189,239,191,189,87,111,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,26,239,191,189,25,239,191,189,33,239,191,189,239,191,189,239,191,189,4,91,13,239,191,189,22,239,191,189,47,6,126,37,123,239,191,189,239,191,189,80,239,191,189,217,135,86,15,97,15,113,206,131,221,143,239,191,189,239,191,189,90,239,191,189,102,106,44,239,191,189,64,239,191,189,73,239,191,189,239,191,189,64,239,191,189,120,239,191,189,114,239,191,189,239,191,189,239,191,189,23,63,79,203,153,44,229,147,141,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,239,191,189,16,94,239,191,189,15,204,144,239,191,189,112,109,33,26,239,191,189,13,16,45,239,191,189,239,191,189,119,26,124,239,191,189,239,191,189,0,3,239,191,189,105,239,191,189,239,191,189,94,239,191,189,239,191,189,72,239,191,189,1,98,82,16,239,191,189,75,239,191,189,239,191,189,90,44,11,203,153,127,122,239,191,189,239,191,189,32,39,239,191,189,53,35,64,94,239,191,189,97,98,209,177,17,209,128,239,191,189,50,12,239,191,189,218,161,41,44,107,239,191,189,64,239,191,189,239,191,189,56,19,239,191,189,68,67,239,191,189,124,120,239,191,189,239,191,189,239,191,189,33,239,191,189,71,89,239,191,189,239,191,189,239,191,189,72,90,239,191,189,239,191,189,103,115,239,191,189,239,191,189,51,239,191,189,239,191,189,38,92,239,191,189,105,239,191,189,78,120,239,191,189,110,239,191,189,84,7,26,239,191,189,46,239,191,189,239,191,189,90,239,191,189,68,239,191,189,239,191,189,239,191,189,73,105,62,239,191,189,118,120,104,85,239,191,189,125,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,11,111,81,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,68,63,239,191,189,239,191,189,37,239,191,189,239,191,189,118,239,191,189,81,0,82,239,191,189,1,20,5,50,206,138,239,191,189,109,51,5,92,239,191,189,239,191,189,239,191,189,59,98,56,67,239,191,189,94,239,191,189,50,56,116,125,96,239,191,189,239,191,189,239,191,189,16,52,239,191,189,99,105,110,60,126,239,191,189,55,239,191,189,85,87,17,58,239,191,189,52,96,239,191,189,94,19,239,191,189,14,25,239,191,189,239,191,189,220,144,239,191,189,110,195,146,239,191,189,34,239,191,189,239,191,189,64,92,102,239,191,189,239,191,189,12,239,191,189,8,239,191,189,32,239,191,189,239,191,189,72,0,228,152,170,95,38,112,111,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,53,195,167,239,191,189,105,239,191,189,239,191,189,3,124,95,48,5,1,44,239,191,189,42,239,191,189,221,179,109,110,239,191,189,239,191,189,5,195,170,98,209,173,200,157,239,191,189,239,191,189,67,239,191,189,69,239,191,189,50,239,191,189,25,84,239,191,189,104,56,122,89,36,67,239,191,189,239,191,189,239,191,189,59,106,90,85,200,162,43,239,191,189,97,35,86,239,191,189,239,191,189,59,50,239,191,189,116,239,191,189,66,124,72,239,191,189,24,113,119,239,191,189,239,191,189,105,239,191,189,30,77,41,239,191,189,26,239,191,189,105,239,191,189,98,124,69,7,214,183,49,239,191,189,239,191,189,118,62,39,103,239,191,189,239,191,189,66,114,58,239,191,189,82,239,191,189,239,191,189,7})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersaf7cbdac83ec4766ba2459b2343c50e7",
                        blob: "PageBlob8a0dad7990674dd5b1292f00185882ae",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06358 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06358_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06358_s.txt", Encoding.UTF8);

    public Test06358() : base(recordedRequest, recordedResponse, "accounts8d439ff3ef1e57e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,60,239,191,189,239,191,189,111,239,191,189,20,239,191,189,239,191,189,239,191,189,71,239,191,189,79,239,191,189,28,239,191,189,239,191,189,25,239,191,189,89,239,191,189,80,86,107,239,191,189,90,36,96,239,191,189,34,39,93,91,49,239,191,189,61,239,191,189,239,191,189,123,102,90,41,4,101,239,191,189,50,32,87,239,191,189,62,239,191,189,21,239,191,189,239,191,189,81,126,239,191,189,97,239,191,189,21,107,239,191,189,24,239,191,189,118,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,76,239,191,189,57,204,166,92,91,17,106,102,239,191,189,65,86,93,239,191,189,101,239,191,189,239,191,189,17,124,239,191,189,216,173,3,95,239,191,189,76,239,191,189,119,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,95,219,158,13,239,191,189,44,101,126,30,62,239,191,189,239,191,189,239,191,189,97,56,110,88,112,239,191,189,2,239,191,189,239,191,189,54,108,239,191,189,15,239,191,189,239,191,189,239,191,189,111,15,15,96,239,191,189,56,239,191,189,93,239,191,189,84,80,239,191,189,89,239,191,189,196,170,82,239,191,189,107,62,26,239,191,189,96,98,239,191,189,239,191,189,108,239,191,189,49,65,239,191,189,239,191,189,202,157,239,191,189,46,239,191,189,38,239,191,189,40,239,191,189,17,239,191,189,27,126,121,118,98,113,239,191,189,121,88,34,92,239,191,189,210,174,239,191,189,109,239,191,189,239,191,189,239,191,189,43,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,43,239,191,189,67,239,191,189,9,239,191,189,68,239,191,189,121,113,10,51,110,239,191,189,83,122,110,239,191,189,220,128,239,191,189,239,191,189,49,92,239,191,189,239,191,189,104,115,203,186,239,191,189,239,191,189,219,191,77,239,191,189,239,191,189,203,189,239,191,189,105,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,84,56,80,239,191,189,5,21,9,114,239,191,189,239,191,189,239,191,189,36,116,239,191,189,24,239,191,189,239,191,189,239,191,189,88,239,191,189,121,194,155,239,191,189,25,239,191,189,22,49,239,191,189,239,191,189,24,39,239,191,189,30,239,191,189,106,239,191,189,123,197,182,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,57,88,14,23,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,215,174,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,12,239,191,189,239,191,189,239,191,189,199,163,239,191,189,239,191,189,102,126,239,191,189,239,191,189,78,97,239,191,189,25,239,191,189,239,191,189,239,191,189,6,93,239,191,189,239,191,189,45,73,239,191,189,83,239,191,189,239,191,189,239,191,189,41,239,191,189,44,239,191,189,21,121,239,191,189,239,191,189,14,76,239,191,189,239,191,189,85,31,98,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,220,175,239,191,189,25,112,125,239,191,189,75,227,131,154,88,239,191,189,239,191,189,52,239,191,189,3,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,13,239,191,189,99,239,191,189,7,239,191,189,239,191,189,73,239,191,189,125,239,191,189,239,191,189,8,77,0,239,191,189,104,52,239,191,189,239,191,189,114,198,182,239,191,189,223,148,102,239,191,189,239,191,189,33,9,239,191,189,239,191,189,99,239,191,189,58,239,191,189,42,123,239,191,189,239,191,189,99,197,183,1,7,63,114,239,191,189,239,191,189,81,112,96,239,191,189,239,191,189,33,7,109,239,191,189,115,85,1,96,239,191,189,115,114,107,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,8,60,14,0,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,208,152,38,4,239,191,189,116,51,121,81,8,239,191,189,239,191,189,2,16,68,239,191,189,239,191,189,239,191,189,239,191,189,52,16,19,239,191,189,87,79,239,191,189,33,8,121,1,31,97,101,99,239,191,189,239,191,189,76,102,239,191,189,67,239,191,189,97,239,191,189,239,191,189,126,12,239,191,189,102,59,239,191,189,57,104,239,191,189,239,191,189,206,181,58,83,42,0,79,239,191,189,38,88,239,191,189,44,105,66,53,239,191,189,118,239,191,189,239,191,189,38,7,239,191,189,208,128,49,77,18,239,191,189,101,40,239,191,189,119,39,239,191,189,125,239,191,189,239,191,189,239,191,189,104,96,239,191,189,239,191,189,90,38,109,239,191,189,80,35,5,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,237,136,131,239,191,189,91,38,5,111,196,131,25,239,191,189,57,78,239,191,189,63,125,239,191,189,19,110,239,191,189,239,191,189,239,191,189,105,102,54,59,239,191,189,32,239,191,189,239,191,189,239,191,189,207,139,115,21,67,92,239,191,189,70,239,191,189,239,191,189,95,239,191,189,239,191,189,60,239,191,189,239,191,189,14,239,191,189,121,58,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,37,239,191,189,116,79,61,239,191,189,47,239,191,189,239,191,189,239,191,189,114,239,191,189,32,239,191,189,204,177,28,239,191,189,63,239,191,189,42,239,191,189,77,239,191,189,239,191,189,13,239,191,189,68,28,239,191,189,116,78,41,198,164,91,73,239,191,189,33,202,178,239,191,189,239,191,189,18,239,191,189,239,191,189,89,89,239,191,189,1,239,191,189,111,239,191,189,239,191,189,108,125,239,191,189,239,191,189,239,191,189,48,35,239,191,189,2,103,36,239,191,189,90,59,113,103,239,191,189,110,116,211,165,239,191,189,58,239,191,189,239,191,189,57,106,27,239,191,189,5,198,148,90,39,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,220,171,118,239,191,189,239,191,189,30,104,239,191,189,55,1,18,239,191,189,198,180,99,10,239,191,189,124,239,191,189,126,26,97,93,62,0,19,239,191,189,16,239,191,189,125,239,191,189,13,239,191,189,239,191,189,112,28,239,191,189,26,2,239,191,189,239,191,189,4,239,191,189,212,147,115,89,76,239,191,189,116,239,191,189,69,108,239,191,189,73,25,239,191,189,239,191,189,10,239,191,189,239,191,189,115,239,191,189,69,239,191,189,13,239,191,189,211,154,239,191,189,239,191,189,239,191,189,126,239,191,189,105,93,239,191,189,105,108,239,191,189,90,239,191,189,239,191,189,8,15,239,191,189,76,41,70,86,239,191,189,239,191,189,15,78,239,191,189,60,239,191,189,111,33,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,111,88,239,191,189,111,35,239,191,189,106,90,197,149,123,53,239,191,189,239,191,189,239,191,189,239,191,189,67,53,16,239,191,189,48,5,45,239,191,189,57,71,239,191,189,239,191,189,239,191,189,18,239,191,189,90,33,0,239,191,189,239,191,189,90,239,191,189,107,36,239,191,189,239,191,189,50,239,191,189,4,58,54,239,191,189,13,239,191,189,109,239,191,189,47,239,191,189,105,43,14,54,220,170,118,239,191,189,239,191,189,239,191,189,32,19,239,191,189,239,191,189,239,191,189,50,93,239,191,189,239,191,189,26,60,211,133,239,191,189,239,191,189,17,33,239,191,189,219,164,210,189,239,191,189,105,115,239,191,189,76,239,191,189,239,191,189,121,46,109,126,239,191,189,239,191,189,38,75,239,191,189,64,239,191,189,16,33,239,191,189,20,90,239,191,189,239,191,189,53,54,202,137,239,191,189,239,191,189,14,4,99,33,239,191,189,111,39,239,191,189,57,113,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,21,239,191,189,239,191,189,11,239,191,189,15,239,191,189,0,23,122,239,191,189,239,191,189,239,191,189,111,204,128,5,239,191,189,114,25,239,191,189,100,239,191,189,63,40,239,191,189,65,239,191,189,64,93,5,74,239,191,189,122,82,88,67,114,239,191,189,38,239,191,189,50,116,239,191,189,78,11,239,191,189,239,191,189,116,239,191,189,239,191,189,204,140,52,48,239,191,189,203,180,239,191,189,239,191,189,16,239,191,189,28,239,191,189,239,191,189,239,191,189,44,239,191,189,121,40,239,191,189,88,239,191,189,239,191,189,17,49,115,239,191,189,218,128,92,6,203,139,10,126,93,97,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,22,239,191,189,219,154,239,191,189,239,191,189,111,76,16,239,191,189,239,191,189,34,239,191,189,85,13,239,191,189,2,63,9,12,239,191,189,239,191,189,39,86,203,170,239,191,189,51,105,239,191,189,239,191,189,26,27,239,191,189,239,191,189,64,239,191,189,109,239,191,189,126,122,104,239,191,189,239,191,189,62,76,52,126,239,191,189,239,191,189,12,239,191,189,0,239,191,189,68,20,68,127,239,191,189,239,191,189,57,0,239,191,189,8,239,191,189,43,239,191,189,96,239,191,189,114,239,191,189,22,76,239,191,189,239,191,189,239,191,189,94,239,191,189,29,127,124,52,239,191,189,47,239,191,189,239,191,189,46,239,191,189,239,191,189,40,23,205,158,47,239,191,189,5,54,105,239,191,189,83,27,239,191,189,239,191,189,92,110,239,191,189,31,239,191,189,239,191,189,239,191,189,196,147,93,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,211,169,90,239,191,189,120,29,1,239,191,189,86,239,191,189,29,239,191,189,100,239,191,189,79,53,239,191,189,39,10,15,74,5,66,83,57,65,114,239,191,189,22,94,29,239,191,189,86,125,239,191,189,59,63,239,191,189,239,191,189,239,191,189,29,35,49,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,5,36,239,191,189,239,191,189,82,239,191,189,103,7,239,191,189,55,239,191,189,58,119,239,191,189,239,191,189,89,115,239,191,189,55,19,239,191,189,54,49,117,239,191,189,38,239,191,189,80,239,191,189,112,72,239,191,189,73,94,89,239,191,189,239,191,189,106,42,239,191,189,239,191,189,56,21,239,191,189,239,191,189,239,191,189,57,25,77,85,17,239,191,189,105,239,191,189,239,191,189,239,191,189,89,239,191,189,43,239,191,189,22,91,22,239,191,189,6,239,191,189,24,239,191,189,239,191,189,99,9,239,191,189,77,63,239,191,189,33,113,239,191,189,15,122,239,191,189,54,95,27,54,15,239,191,189,239,191,189,5,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,75,85,72,41,4,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,17,125,19,239,191,189,199,154,239,191,189,93,239,191,189,239,191,189,34,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,198,182,239,191,189,222,131,206,131,77,239,191,189,239,191,189,239,191,189,3,24,239,191,189,239,191,189,22,239,191,189,96,34,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,38,239,191,189,239,191,189,96,239,191,189,43,239,191,189,47,90,239,191,189,53,86,239,191,189,22,111,205,164,239,191,189,31,239,191,189,239,191,189,61,239,191,189,120,239,191,189,83,30,71,239,191,189,15,115,84,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,91,239,191,189,64,239,191,189,239,191,189,48,81,9,42,239,191,189,41,30,2,36,106,87,108,239,191,189,239,191,189,239,191,189,71,50,13,239,191,189,84,74,114,239,191,189,80,95,237,158,170,239,191,189,70,72,239,191,189,239,191,189,239,191,189,38,239,191,189,41,239,191,189,30,239,191,189,13,78,239,191,189,76,59,39,239,191,189,70,239,191,189,40,203,177,104,60,239,191,189,112,86,239,191,189,59,60,239,191,189,87,239,191,189,36,15,112,239,191,189,92,194,181,8,239,191,189,113,239,191,189,60,36,239,191,189,103,20,56,102,87,239,191,189,123,122,239,191,189,239,191,189,123,239,191,189,59,79,71,239,191,189,60,239,191,189,239,191,189,239,191,189,61,239,191,189,79,42,239,191,189,239,191,189,32,65,63,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,2,239,191,189,40,94,5,239,191,189,120,239,191,189,92,124,12,122,239,191,189,67,239,191,189,91,239,191,189,85,48,41,74,239,191,189,60,239,191,189,239,191,189,91,57,87,239,191,189,123,70,59,75,239,191,189,68,12,19,87,239,191,189,28,239,191,189,239,191,189,239,191,189,119,239,191,189,102,239,191,189,239,191,189,117,121,67,73,239,191,189,122,25,239,191,189,85,98,239,191,189,111,33,26,239,191,189,53,239,191,189,46,46,239,191,189,239,191,189,72,46,239,191,189,19,100,92,239,191,189,239,191,189,91,122,239,191,189,59,239,191,189,77,1,2,239,191,189,15,42,114,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,18,120,239,191,189,83,56,239,191,189,46,45,75,239,191,189,53,96,29,34,11,239,191,189,239,191,189,51,123,239,191,189,239,191,189,50,222,168,30,239,191,189,15,239,191,189,58,109,102,239,191,189,239,191,189,239,191,189,21,239,191,189,39,239,191,189,60,119,31,239,191,189,75,239,191,189,37,239,191,189,7,102,239,191,189,11,106,121,40,5,51,70,200,170,25,42,30,239,191,189,17,73,207,159,239,191,189,62,239,191,189,69,239,191,189,239,191,189,239,191,189,3,239,191,189,40,239,191,189,33,239,191,189,44,204,169,239,191,189,46,3,236,152,133,239,191,189,239,191,189,239,191,189,124,239,191,189,18,89,125,239,191,189,1,239,191,189,94,239,191,189,112,125,73,113,239,191,189,37,87,10,95,239,191,189,38,239,191,189,93,117,239,191,189,239,191,189,70,239,191,189,7,14,239,191,189,39,89,69,86,239,191,189,48,239,191,189,239,191,189,52,239,191,189,239,191,189,2,57,73,239,191,189,105,114,45,239,191,189,112,69,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,125,79,60,72,36,4,27,239,191,189,122,39,239,191,189,121,114,41,30,91,60,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,19,239,191,189,48,198,141,239,191,189,41,42,239,191,189,126,239,191,189,239,191,189,37,239,191,189,118,239,191,189,239,191,189,6,32,239,191,189,239,191,189,44,239,191,189,89,239,191,189,18,239,191,189,7,239,191,189,239,191,189,110,86,239,191,189,16,21,123,110,239,191,189,239,191,189,239,191,189,80,72,239,191,189,239,191,189,239,191,189,75,106,31,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,8,239,191,189,31,122,239,191,189,34,239,191,189,239,191,189,16,111,95,21,239,191,189,239,191,189,92,68,108,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,82,114,239,191,189,239,191,189,31,239,191,189,46,239,191,189,18,239,191,189,37,239,191,189,85,84,65,81,88,109,104,27,239,191,189,63,16,18,239,191,189,239,191,189,91,88,239,191,189,73,124,222,144,68,119,239,191,189,197,175,77,239,191,189,119,239,191,189,113,105,239,191,189,111,81,78,239,191,189,239,191,189,239,191,189,38,40,239,191,189,27,19,98,239,191,189,239,191,189,75,104,239,191,189,239,191,189,239,191,189,18,70,91,17,221,185,239,191,189,239,191,189,32,208,164,239,191,189,205,167,115,85,239,191,189,12,239,191,189,38,85,86,239,191,189,239,191,189,40,99,38,65,239,191,189,1,48,239,191,189,239,191,189,86,88,19,63,113,239,191,189,4,75,5,88,15,67,69,239,191,189,16,122,239,191,189,91,4,239,191,189,115,239,191,189,239,191,189,126,239,191,189,121,239,191,189,74,239,191,189,30,239,191,189,2,239,191,189,37,80,27,65,66,239,191,189,2,34,9,80,94,239,191,189,239,191,189,30,107,48,101,56,213,157,20,53,239,191,189,199,149,86,239,191,189,60,239,191,189,239,191,189,239,191,189,13,80,32,106,239,191,189,56,239,191,189,239,191,189,1,239,191,189,105,107,50,239,191,189,3,91,39,25,98,239,191,189,239,191,189,100,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,103,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,0,59,45,239,191,189,21,239,191,189,101,239,191,189,47,239,191,189,239,191,189,83,239,191,189,20,239,191,189,32,0,239,191,189,112,49,239,191,189,239,191,189,239,191,189,239,191,189,28,59,70,239,191,189,1,239,191,189,239,191,189,111,93,39,239,191,189,53,53,239,191,189,239,191,189,121,35,239,191,189,239,191,189,200,152,6,239,191,189,239,191,189,101,105,239,191,189,23,35,239,191,189,75,239,191,189,239,191,189,20,239,191,189,97,30,239,191,189,46,9,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,14,46,239,191,189,239,191,189,3,22,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,69,239,191,189,32,239,191,189,102,91,57,88,239,191,189,212,180,239,191,189,239,191,189,4,121,239,191,189,126,54,44,239,191,189,28,239,191,189,239,191,189,17,239,191,189,216,158,107,239,191,189,52,26,239,191,189,239,191,189,17,124,86,239,191,189,123,122,239,191,189,239,191,189,239,191,189,47,239,191,189,79,80,239,191,189,123,3,239,191,189,86,239,191,189,30,209,191,239,191,189,239,191,189,15,219,142,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,22,239,191,189,239,191,189,35,239,191,189,3,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,19,34,104,239,191,189,239,191,189,119,122,239,191,189,82,236,158,155,239,191,189,239,191,189,239,191,189,6,20,239,191,189,54,52,58,18,239,191,189,239,191,189,4,82,239,191,189,239,191,189,121,10,239,191,189,78,74,123,239,191,189,101,35,239,191,189,66,239,191,189,55,96,239,191,189,239,191,189,89,99,208,176,239,191,189,49,214,182,239,191,189,86,1,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,84,112,69,239,191,189,239,191,189,12,239,191,189,2,239,191,189,88,91,239,191,189,239,191,189,23,239,191,189,2,71,52,22,239,191,189,239,191,189,122,106,222,138,23,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,11,14,96,106,67,64,239,191,189,239,191,189,239,191,189,84,79,239,191,189,44,239,191,189,120,15,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,101,239,191,189,64,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,7,105,83,200,160,42,239,191,189,239,191,189,239,191,189,124,58,239,191,189,75,239,191,189,12,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,214,130,24,239,191,189,36,56,239,191,189,77,239,191,189,239,191,189,239,191,189,53,239,191,189,68,104,239,191,189,239,191,189,239,191,189,72,16,239,191,189,119,6,59,118,52,239,191,189,239,191,189,31,50,76,239,191,189,61,44,239,191,189,208,176,13,5,90,45,79,239,191,189,120,7,21,107,200,143,239,191,189,239,191,189,71,112,18,94,124,239,191,189,27,239,191,189,239,191,189,46,239,191,189,117,239,191,189,239,191,189,94,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,51,96,239,191,189,239,191,189,32,98,67,239,191,189,239,191,189,239,191,189,25,51,84,239,191,189,239,191,189,21,239,191,189,88,33,56,3,77,30,13,22,239,191,189,239,191,189,59,239,191,189,89,239,191,189,239,191,189,239,191,189,238,168,187,39,221,180,239,191,189,69,239,191,189,30,42,69,125,67,62,239,191,189,239,191,189,58,239,191,189,86,125,239,191,189,239,191,189,66,239,191,189,239,191,189,39,239,191,189,8,239,191,189,66,63,126,239,191,189,101,42,54,239,191,189,213,164,85,239,191,189,58,46,239,191,189,200,153,239,191,189,108,122,42,31,3,67,43,100,239,191,189,120,107,43,239,191,189,21,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,101,239,191,189,0,239,191,189,79,239,191,189,79,239,191,189,25,114,74,239,191,189,239,191,189,34,59,58,96,0,104,239,191,189,239,191,189,239,191,189,24,64,239,191,189,69,82,8,2,239,191,189,239,191,189,88,239,191,189,105,239,191,189,30,67,239,191,189,21,10,41,120,17,25,202,175,77,239,191,189,239,191,189,239,191,189,239,191,189,220,171,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,9,101,70,239,191,189,114,239,191,189,239,191,189,62,104,28,239,191,189,239,191,189,239,191,189,93,239,191,189,10,239,191,189,239,191,189,117,6,239,191,189,239,191,189,87,118,20,239,191,189,239,191,189,35,41,239,191,189,82,239,191,189,239,191,189,11,239,191,189,226,134,159,126,239,191,189,19,14,80,239,191,189,239,191,189,239,191,189,239,191,189,77,56,53,34,239,191,189,74,239,191,189,17,239,191,189,239,191,189,122,94,239,191,189,69,120,20,105,239,191,189,116,239,191,189,224,185,177,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,65,9,94,239,191,189,239,191,189,220,132,57,239,191,189,239,191,189,239,191,189,239,191,189,12,65,222,147,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,16,239,191,189,239,191,189,239,191,189,41,77,239,191,189,239,191,189,40,239,191,189,42,239,191,189,29,239,191,189,239,191,189,32,239,191,189,70,59,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,9,88,239,191,189,96,239,191,189,239,191,189,96,239,191,189,239,191,189,99,66,239,191,189,54,239,191,189,36,239,191,189,82,239,191,189,116,35,71,239,191,189,12,239,191,189,90,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,59,113,239,191,189,239,191,189,239,191,189,56,36,47,211,189,239,191,189,28,42,239,191,189,239,191,189,15,239,191,189,239,191,189,22,239,191,189,239,191,189,1,239,191,189,90,91,75,21,6,120,239,191,189,114,239,191,189,22,239,191,189,7,65,239,191,189,232,162,151,45,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,52,31,17,36,239,191,189,57,239,191,189,80,71,54,34,30,239,191,189,239,191,189,75,239,191,189,5,239,191,189,214,151,239,191,189,239,191,189,43,126,96,89,96,45,239,191,189,239,191,189,104,25,239,191,189,5,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,100,58,239,191,189,108,117,15,239,191,189,27,222,139,81,38,239,191,189,239,191,189,109,239,191,189,239,191,189,124,216,175,239,191,189,124,239,191,189,9,239,191,189,239,191,189,72,239,191,189,12,19,239,191,189,8,51,75,38,239,191,189,9,81,119,239,191,189,18,239,191,189,63,22,239,191,189,23,61,94,44,46,69,239,191,189,239,191,189,239,191,189,35,239,191,189,107,119,48,100,34,239,191,189,119,239,191,189,30,239,191,189,239,191,189,71,52,239,191,189,114,5,37,239,191,189,239,191,189,60,239,191,189,22,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,19,126,239,191,189,3,32,239,191,189,239,191,189,71,79,239,191,189,0,200,147,239,191,189,239,191,189,116,239,191,189,41,239,191,189,239,191,189,64,239,191,189,23,239,191,189,239,191,189,239,191,189,85,123,239,191,189,88,239,191,189,239,191,189,239,191,189,11,55,239,191,189,68,20,234,152,189,213,173,239,191,189,116,35,65,19,38,21,113,59,41,71,67,102,239,191,189,28,57,73,93,239,191,189,239,191,189,103,14,54,239,191,189,201,176,239,191,189,239,191,189,21,239,191,189,34,239,191,189,239,191,189,106,239,191,189,114,239,191,189,19,104,111,66,23,239,191,189,103,239,191,189,239,191,189,239,191,189,12,39,218,161,59,11,239,191,189,70,239,191,189,61,239,191,189,120,99,239,191,189,99,91,239,191,189,6,239,191,189,73,239,191,189,239,191,189,117,53,239,191,189,66,239,191,189,79,87,239,191,189,239,191,189,1,239,191,189,118,239,191,189,58,24,239,191,189,119,26,35,64,52,57,239,191,189,4,239,191,189,222,187,53,96,239,191,189,126,239,191,189,38,125,101,107,69,239,191,189,43,239,191,189,102,110,239,191,189,118,239,191,189,44,239,191,189,33,104,31,77,46,216,165,116,60,239,191,189,239,191,189,117,212,148,34,109,239,191,189,239,191,189,11,80,11,212,173,239,191,189,239,191,189,239,191,189,45,239,191,189,198,147,36,239,191,189,239,191,189,4,239,191,189,239,191,189,65,239,191,189,80,239,191,189,239,191,189,9,41,239,191,189,84,83,86,98,68,0,239,191,189,239,191,189,120,239,191,189,239,191,189,76,239,191,189,125,239,191,189,62,239,191,189,203,174,239,191,189,117,112,239,191,189,239,191,189,239,191,189,84,44,87,50,15,239,191,189,2,239,191,189,239,191,189,77,89,239,191,189,202,149,239,191,189,239,191,189,49,8,239,191,189,54,77,18,239,191,189,0,17,80,239,191,189,90,239,191,189,91,239,191,189,126,239,191,189,104,239,191,189,239,191,189,86,239,191,189,104,12,203,161,239,191,189,47,70,239,191,189,239,191,189,54,239,191,189,239,191,189,68,103,17,239,191,189,239,191,189,65,103,87,32,239,191,189,27,239,191,189,41,239,191,189,105,239,191,189,18,98,239,191,189,239,191,189,111,239,191,189,239,191,189,107,239,191,189,52,239,191,189,239,191,189,107,112,125,113,239,191,189,23,124,108,236,187,174,108,239,191,189,239,191,189,239,191,189,239,191,189,35,119,93,239,191,189,107,239,191,189,125,239,191,189,239,191,189,50,239,191,189,239,191,189,89,46,1,12,211,158,239,191,189,78,239,191,189,54,106,105,239,191,189,109,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,51,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,122,239,191,189,67,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,90,83,239,191,189,13,239,191,189,239,191,189,239,191,189,110,214,155,113,239,191,189,6,209,147,239,191,189,239,191,189,52,4,80,239,191,189,92,239,191,189,239,191,189,239,191,189,37,56,90,103,239,191,189,84,239,191,189,48,239,191,189,114,91,38,239,191,189,239,191,189,79,104,28,80,9,239,191,189,61,239,191,189,127,239,191,189,239,191,189,109,239,191,189,15,15,239,191,189,239,191,189,49,47,206,160,239,191,189,7,239,191,189,71,239,191,189,112,36,53,32,239,191,189,239,191,189,81,15,1,116,63,97,239,191,189,239,191,189,239,191,189,85,219,143,2,239,191,189,88,32,210,157,239,191,189,42,239,191,189,21,85,239,191,189,97,51,8,239,191,189,123,24,239,191,189,94,75,67,28,239,191,189,14,239,191,189,239,191,189,64,127,61,239,191,189,75,239,191,189,119,239,191,189,96,45,80,81,239,191,189,80,97,239,191,189,59,239,191,189,85,19,12,88,46,118,207,166,124,68,239,191,189,239,191,189,239,191,189,18,55,223,143,239,191,189,239,191,189,47,9,239,191,189,239,191,189,77,239,191,189,86,42,239,191,189,22,14,239,191,189,239,191,189,202,184,239,191,189,239,191,189,239,191,189,81,239,191,189,21,239,191,189,75,51,39,239,191,189,90,62,26,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,113,40,239,191,189,239,191,189,239,191,189,75,8,239,191,189,110,89,43,239,191,189,8,89,239,191,189,44,239,191,189,89,239,191,189,26,101,239,191,189,239,191,189,38,18,239,191,189,239,191,189,94,77,52,239,191,189,239,191,189,26,71,94,239,191,189,55,121,123,13,20,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,106,239,191,189,24,92,6,239,191,189,74,239,191,189,114,239,191,189,239,191,189,239,191,189,94,92,49,32,37,239,191,189,21,239,191,189,18,81,57,112,239,191,189,117,13,80,239,191,189,239,191,189,42,102,239,191,189,8,66,239,191,189,52,216,148,239,191,189,239,191,189,111,239,191,189,92,239,191,189,239,191,189,28,239,191,189,226,188,180,106,239,191,189,100,239,191,189,24,82,239,191,189,124,239,191,189,239,191,189,239,191,189,27,239,191,189,108,56,47,86,25,94,239,191,189,77,239,191,189,50,29,239,191,189,100,239,191,189,239,191,189,64,88,92,110,0,40,239,191,189,239,191,189,70,54,41,239,191,189,239,191,189,91,4,239,191,189,239,191,189,83,86,239,191,189,96,112,198,151,239,191,189,239,191,189,103,109,99,70,46,239,191,189,117,239,191,189,60,55,239,191,189,239,191,189,27,109,239,191,189,103,239,191,189,32,239,191,189,239,191,189,94,239,191,189,239,191,189,52,71,79,14,239,191,189,120,207,146,239,191,189,239,191,189,47,239,191,189,82,108,239,191,189,7,117,10,239,191,189,31,239,191,189,117,74,55,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,118,117,46,239,191,189,222,165,239,191,189,87,108,239,191,189,196,161,239,191,189,89,239,191,189,239,191,189,24,122,211,161,239,191,189,43,239,191,189,239,191,189,24,36,239,191,189,127,72,239,191,189,29,69,239,191,189,74,239,191,189,62,0,40,207,131,101,239,191,189,39,239,191,189,239,191,189,75,60,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,208,164,73,111,1,198,129,239,191,189,239,191,189,35,239,191,189,239,191,189,91,46,98,124,239,191,189,239,191,189,239,191,189,80,59,30,3,13,84,239,191,189,239,191,189,194,130,239,191,189,95,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,98,78,239,191,189,239,191,189,239,191,189,112,10,77,29,239,191,189,107,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,98,239,191,189,239,191,189,239,191,189,25,84,120,87,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,2,6,239,191,189,15,87,66,239,191,189,239,191,189,108,239,191,189,89,31,77,107,81,104,239,191,189,239,191,189,56,23,24,83,101,239,191,189,28,239,191,189,81,239,191,189,15,39,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,74,239,191,189,239,191,189,18,239,191,189,239,191,189,74,239,191,189,231,157,156,239,191,189,239,191,189,37,239,191,189,27,117,118,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,69,24,114,39,239,191,189,12,239,191,189,29,43,239,191,189,38,239,191,189,239,191,189,8,110,239,191,189,126,239,191,189,239,191,189,47,233,129,188,113,239,191,189,54,239,191,189,4,119,239,191,189,239,191,189,32,83,239,191,189,5,239,191,189,117,118,1,118,239,191,189,7,121,81,78,239,191,189,239,191,189,239,191,189,51,239,191,189,116,239,191,189,35,239,191,189,239,191,189,239,191,189,91,1,239,191,189,100,92,239,191,189,239,191,189,239,191,189,239,191,189,5,66,239,191,189,3,239,191,189,127,8,239,191,189,87,64,239,191,189,7,107,35,239,191,189,62,8,209,154,33,239,191,189,239,191,189,84,23,66,239,191,189,116,207,156,26,73,98,239,191,189,115,72,239,191,189,86,239,191,189,239,191,189,94,108,11,203,190,239,191,189,239,191,189,239,191,189,4,38,83,239,191,189,11,115,239,191,189,8,239,191,189,239,191,189,14,11,56,71,61,239,191,189,127,35,239,191,189,239,191,189,4,239,191,189,100,46,59,239,191,189,239,191,189,49,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,116,86,113,239,191,189,63,239,191,189,239,191,189,239,191,189,82,52,195,142,239,191,189,104,239,191,189,239,191,189,3,0,62,239,191,189,207,190,239,191,189,239,191,189,87,91,58,124,116,109,239,191,189,119,239,191,189,41,239,191,189,100,239,191,189,85,26,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,239,191,189,237,154,147,239,191,189,55,239,191,189,207,134,239,191,189,239,191,189,104,87,113,239,191,189,23,239,191,189,239,191,189,239,191,189,23,69,63,239,191,189,104,239,191,189,36,108,11,239,191,189,61,239,191,189,52,239,191,189,239,191,189,77,239,191,189,225,162,153,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,218,130,10,239,191,189,59,239,191,189,239,191,189,239,191,189,6,7,42,30,19,106,196,159,117,239,191,189,52,239,191,189,239,191,189,90,53,239,191,189,36,89,119,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,122,239,191,189,239,191,189,220,132,239,191,189,239,191,189,239,191,189,13,71,219,183,239,191,189,239,191,189,53,239,191,189,2,239,191,189,239,191,189,239,191,189,47,204,128,77,14,239,191,189,239,191,189,19,239,191,189,239,191,189,30,49,239,191,189,113,239,191,189,239,191,189,59,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,18,90,69,239,191,189,239,191,189,65,239,191,189,239,191,189,93,239,191,189,56,126,239,191,189,18,58,239,191,189,239,160,149,7,35,40,239,191,189,239,191,189,18,239,191,189,94,239,191,189,62,239,191,189,112,114,95,239,191,189,109,239,191,189,239,191,189,239,191,189,14,239,191,189,83,78,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,1,239,191,189,239,191,189,200,172,234,176,130,239,191,189,239,191,189,239,191,189,239,191,189,92,197,143,239,191,189,31,239,191,189,239,191,189,71,4,239,191,189,239,191,189,194,179,239,191,189,103,118,7,31,1,239,191,189,239,191,189,72,239,191,189,239,191,189,124,239,191,189,79,239,191,189,66,70,101,38,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,56,31,239,191,189,239,191,189,6,51,51,21,216,130,57,123,110,239,191,189,73,63,19,46,239,191,189,73,239,191,189,98,34,4,239,191,189,239,191,189,107,239,191,189,80,239,191,189,107,239,191,189,17,76,239,191,189,122,239,191,189,87,239,191,189,119,73,239,191,189,119,239,191,189,8,239,191,189,239,191,189,64,239,191,189,35,239,191,189,205,190,239,191,189,73,239,191,189,239,191,189,239,191,189,51,111,239,191,189,96,239,191,189,239,191,189,23,102,105,33,28,239,191,189,71,239,191,189,239,191,189,109,0,8,239,191,189,35,239,191,189,239,191,189,43,45,45,3,239,191,189,20,101,3,239,191,189,125,67,35,32,239,191,189,233,187,129,239,191,189,97,239,191,189,35,239,191,189,239,191,189,34,47,81,239,191,189,64,239,191,189,217,185,65,208,155,50,239,191,189,239,191,189,120,81,4,29,41,81,3,239,191,189,124,239,191,189,23,77,104,58,89,239,191,189,239,191,189,7,86,81,239,191,189,111,194,185,239,191,189,6,239,191,189,239,191,189,239,191,189,80,20,239,191,189,36,239,191,189,112,80,93,239,191,189,239,191,189,239,191,189,216,137,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,6,239,191,189,239,191,189,70,16,9,239,191,189,75,91,35,239,191,189,121,239,191,189,44,239,191,189,96,40,239,191,189,239,191,189,8,51,18,14,239,191,189,120,88,239,191,189,46,36,207,130,5,42,48,73,239,191,189,239,191,189,239,191,189,126,103,239,191,189,17,92,239,191,189,239,191,189,95,210,134,239,191,189,51,202,170,239,191,189,87,125,239,191,189,9,205,184,76,96,38,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,39,239,191,189,74,90,98,70,33,239,191,189,55,239,191,189,25,239,191,189,53,65,239,191,189,4,239,191,189,48,211,178,84,239,191,189,239,191,189,16,239,191,189,26,97,239,191,189,239,191,189,54,45,16,75,239,191,189,196,174,239,191,189,80,113,16,92,63,77,13,239,191,189,50,23,30,53,239,191,189,239,191,189,120,123,211,142,44,239,191,189,58,239,191,189,72,239,191,189,53,239,191,189,1,239,191,189,9,58,239,191,189,125,67,239,191,189,239,191,189,239,191,189,239,191,189,86,21,239,191,189,239,191,189,92,239,191,189,3,66,239,191,189,73,109,239,191,189,239,191,189,120,21,239,191,189,239,191,189,69,239,191,189,41,43,38,90,76,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,64,239,191,189,239,191,189,125,121,239,191,189,239,191,189,239,191,189,1,69,239,191,189,127,239,191,189,239,191,189,25,116,239,191,189,124,239,191,189,73,62,203,149,239,191,189,47,239,191,189,96,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,71,44,239,191,189,239,191,189,239,191,189,239,191,189,23,8,103,239,191,189,228,135,166,239,191,189,239,191,189,38,54,54,8,239,191,189,239,191,189,239,191,189,117,36,34,77,239,191,189,31,108,45,102,239,191,189,2,239,191,189,83,103,29,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,15,239,191,189,15,239,191,189,239,191,189,239,191,189,93,122,99,117,239,191,189,27,239,191,189,239,191,189,215,184,239,191,189,239,191,189,239,191,189,239,191,189,58,84,29,239,191,189,239,191,189,108,81,8,239,191,189,112,40,239,191,189,103,239,191,189,101,114,19,239,191,189,239,191,189,119,15,239,191,189,3,80,29,239,191,189,207,175,70,239,191,189,25,2,214,164,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,87,84,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,81,100,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,81,239,191,189,102,75,239,191,189,239,191,189,194,186,86,37,22,239,191,189,80,239,191,189,222,137,38,53,31,239,191,189,239,191,189,15,3,38,239,191,189,55,94,239,191,189,61,48,239,191,189,85,24,21,106,239,191,189,35,82,239,191,189,36,239,191,189,39,239,191,189,239,191,189,71,239,191,189,239,191,189,27,239,191,189,239,191,189,96,209,178,65,239,191,189,64,95,101,67,239,191,189,124,38,61,239,191,189,239,191,189,58,64,22,101,239,191,189,67,106,40,239,191,189,115,239,191,189,68,239,191,189,239,191,189,91,34,109,3,239,191,189,70,99,40,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,118,239,191,189,32,69,12,103,111,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,99,116,239,191,189,239,191,189,90,239,191,189,58,239,191,189,100,239,191,189,23,24,239,191,189,239,191,189,239,191,189,117,9,239,191,189,239,191,189,36,239,191,189,239,191,189,79,239,191,189,108,127})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff3ef1e57e",
                        container: "containerse1bcd890ed6444c7828a9703e11254a5",
                        blob: "Blob18f87496108f400b81794ea892de029d_WriteProtectedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06947 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06947_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06947_s.txt", Encoding.UTF8);

    public Test06947() : base(recordedRequest, recordedResponse, "accounts8d439ff9089ec8f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff9089ec8f",
                        container: "containersaf8f7f58ce7b4ffda9571a469ced0818",
                        blob: "PageBlobd426679a401848c787d1bce90346436e",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07166 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07166_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07166_s.txt", Encoding.UTF8);

    public Test07166() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=5632-6143",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07152 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07152_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07152_s.txt", Encoding.UTF8);

    public Test07152() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{62,33,106,2,239,191,189,73,13,48,59,93,239,191,189,8,3,239,191,189,75,239,191,189,239,191,189,40,239,191,189,103,19,239,191,189,89,239,191,189,108,112,239,191,189,239,191,189,46,239,191,189,61,84,16,125,239,191,189,33,39,28,37,105,239,191,189,239,191,189,92,239,191,189,239,191,189,78,239,191,189,25,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,42,110,16,23,93,239,191,189,116,239,191,189,13,120,99,239,191,189,239,191,189,125,239,191,189,119,239,191,189,2,60,239,191,189,111,86,239,191,189,83,29,215,128,239,191,189,46,239,191,189,77,91,68,82,95,17,16,239,191,189,76,239,191,189,17,239,191,189,239,191,189,91,239,191,189,91,22,239,191,189,30,239,191,189,67,239,191,189,20,239,191,189,24,118,239,191,189,63,2,239,191,189,239,191,189,222,175,22,89,239,191,189,47,29,239,191,189,103,25,239,191,189,70,239,191,189,239,191,189,114,63,112,239,191,189,239,191,189,228,149,166,239,191,189,94,239,191,189,48,239,191,189,71,239,191,189,76,127,74,1,40,239,191,189,52,68,239,191,189,239,191,189,239,191,189,126,112,33,42,57,118,110,239,191,189,55,82,124,65,16,84,56,41,239,191,189,239,191,189,125,239,191,189,239,191,189,19,26,239,191,189,107,69,125,30,62,239,191,189,239,191,189,21,239,191,189,101,36,239,191,189,91,37,39,194,178,239,191,189,99,239,191,189,2,8,239,191,189,212,128,11,239,191,189,239,191,189,47,78,239,191,189,92,6,239,191,189,239,191,189,48,239,191,189,239,191,189,103,60,108,103,104,239,191,189,47,239,191,189,205,147,239,191,189,239,191,189,239,191,189,51,239,191,189,33,239,191,189,98,84,239,191,189,239,191,189,50,110,24,230,138,188,239,191,189,126,239,191,189,87,239,191,189,239,191,189,239,191,189,58,39,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,62,239,191,189,59,115,104,117,239,191,189,239,191,189,239,191,189,107,239,191,189,72,39,52,239,191,189,83,239,191,189,239,191,189,239,191,189,103,52,2,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,14,3,239,191,189,239,191,189,117,239,191,189,114,33,71,27,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,5,89,57,25,239,191,189,88,62,239,191,189,60,239,191,189,239,191,189,239,191,189,111,123,36,81,239,191,189,239,191,189,239,191,189,68,87,64,88,118,15,239,191,189,239,191,189,75,239,191,189,46,80,239,191,189,98,51,239,191,189,47,90,239,191,189,0,239,191,189,239,191,189,54,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,72,239,191,189,65,77,68,109,239,191,189,0,239,191,189,10,4,239,191,189,239,191,189,239,191,189,13,108,31,38,60,239,191,189,239,191,189,239,191,189,22,239,191,189,24,126,32,239,191,189,239,191,189,57,37,12,239,191,189,84,83,86,15,50,29,239,191,189,45,47,239,191,189,239,191,189,239,191,189,2,239,191,189,57,239,191,189,75,30,239,191,189,116,67,2,81,239,191,189,239,191,189,53,239,191,189,76,62,95,239,191,189,239,191,189,239,191,189,216,157,239,191,189,239,191,189,93,239,191,189,9,118,90,239,191,189,95,60,239,191,189,21,239,191,189,239,191,189,239,191,189,85,27,99,239,191,189,239,191,189,82,2,239,191,189,119,239,191,189,87,121,239,191,189,239,191,189,13,239,191,189,4,41,53,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,31,26,101,98,10,110,239,191,189,96,66,75,239,191,189,33,239,191,189,239,191,189,239,191,189,106,239,191,189,81,70,239,191,189,239,191,189,117,87,239,191,189,102,233,170,153,239,191,189,21,16,16,239,191,189,239,191,189,61,19,239,191,189,196,158})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07167 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07167_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07167_s.txt", Encoding.UTF8);

    public Test07167() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=7168-8191",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07153 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07153_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07153_s.txt", Encoding.UTF8);

    public Test07153() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,7,65,7,0,126,70,239,191,189,62,67,51,239,191,189,13,123,239,191,189,239,191,189,239,191,189,198,148,53,239,191,189,17,90,18,116,239,191,189,239,191,189,49,239,191,189,239,191,189,3,5,239,191,189,112,19,95,239,191,189,239,191,189,239,191,189,47,239,191,189,112,239,191,189,72,239,191,189,239,191,189,6,18,32,25,239,191,189,239,191,189,82,239,191,189,80,194,173,46,239,191,189,22,239,191,189,20,239,191,189,109,63,45,25,239,191,189,104,68,239,191,189,51,45,101,103,39,63,17,104,239,191,189,239,191,189,239,191,189,17,239,191,189,49,38,239,191,189,239,191,189,31,80,239,191,189,121,15,239,191,189,239,191,189,239,191,189,239,191,189,99,8,124,126,104,239,191,189,239,191,189,60,108,239,191,189,239,191,189,77,40,239,191,189,239,191,189,198,183,50,239,191,189,3,84,60,24,123,66,125,23,239,191,189,99,35,239,191,189,215,172,239,191,189,239,191,189,8,239,191,189,93,123,31,53,92,239,191,189,119,196,138,239,191,189,239,191,189,22,239,191,189,88,81,239,191,189,239,191,189,46,38,239,191,189,0,60,239,191,189,72,239,191,189,72,5,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,75,124,239,191,189,239,191,189,89,33,239,191,189,118,239,191,189,24,239,191,189,32,239,191,189,239,191,189,239,191,189,123,113,239,191,189,239,191,189,114,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,78,73,239,191,189,99,71,239,191,189,39,125,239,191,189,239,191,189,239,191,189,14,239,191,189,121,239,191,189,57,38,43,239,191,189,116,239,191,189,48,9,239,191,189,20,37,239,191,189,239,191,189,205,190,34,13,63,6,202,162,239,191,189,44,69,32,92,239,191,189,197,184,63,99,50,10,239,191,189,239,191,189,115,239,191,189,6,239,191,189,239,191,189,30,63,239,191,189,78,33,239,191,189,79,239,191,189,239,191,189,210,156,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,106,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,75,79,7,125,84,239,191,189,98,239,191,189,239,191,189,36,78,12,79,239,191,189,229,163,148,70,91,239,191,189,38,121,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,46,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,2,239,191,189,28,239,191,189,114,12,239,191,189,239,191,189,108,239,191,189,28,239,191,189,239,191,189,76,239,191,189,239,191,189,97,239,191,189,212,159,239,191,189,116,239,191,189,63,239,191,189,106,239,191,189,239,191,189,54,98,14,67,239,191,189,88,239,191,189,110,93,44,210,157,5,32,239,191,189,61,239,191,189,239,191,189,79,23,239,191,189,239,191,189,33,239,191,189,124,239,191,189,9,115,239,191,189,239,191,189,239,191,189,7,99,4,92,9,239,191,189,239,191,189,239,191,189,59,239,191,189,115,116,53,239,191,189,54,239,191,189,239,191,189,239,191,189,117,27,239,191,189,239,191,189,102,65,58,198,181,79,68,115,239,191,189,97,239,191,189,57,1,239,191,189,120,96,239,191,189,239,191,189,20,239,191,189,79,91,239,191,189,239,191,189,69,94,49,239,191,189,122,30,85,239,191,189,239,191,189,30,239,191,189,200,162,17,74,239,191,189,79,0,239,191,189,239,191,189,35,239,191,189,239,191,189,19,121,32,20,239,191,189,7,13,239,191,189,10,85,85,239,191,189,87,30,239,191,189,239,191,189,98,11,239,191,189,102,239,191,189,207,176,239,191,189,239,191,189,55,40,51,79,103,23,239,191,189,72,239,191,189,29,7,90,9,97,239,191,189,196,136,239,191,189,114,77,239,191,189,239,191,189,205,140,7,239,191,189,239,191,189,69,239,191,189,239,191,189,68,239,191,189,98,125,239,191,189,239,191,189,239,191,189,70,239,191,189,62,239,191,189,56,239,191,189,0,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,89,239,191,189,61,111,7,68,90,239,191,189,71,239,191,189,78,123,239,191,189,15,239,191,189,61,239,191,189,239,191,189,239,191,189,6,239,191,189,66,71,52,239,191,189,87,97,239,191,189,239,191,189,105,57,31,76,239,191,189,92,95,239,191,189,239,191,189,117,121,239,191,189,50,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,39,125,239,191,189,239,191,189,5,239,191,189,23,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,221,156,46,47,239,191,189,239,191,189,121,239,191,189,5,22,42,239,191,189,239,191,189,67,122,68,239,191,189,239,191,189,223,165,83,239,191,189,108,25,89,61,69,195,131,60,198,150,239,191,189,92,32,48,239,191,189,239,191,189,239,191,189,207,173,203,159,239,191,189,239,191,189,113,239,191,189,239,191,189,33,239,191,189,20,239,191,189,2,239,191,189,25,47,21,213,128,108,239,191,189,46,239,191,189,80,239,191,189,239,191,189,92,35,74,239,191,189,239,191,189,9,15,239,191,189,239,191,189,36,239,191,189,62,239,191,189,62,114,239,191,189,239,191,189,39,239,191,189,14,239,191,189,7,0,239,191,189,18,72,99,239,191,189,239,191,189,239,191,189,100,70,230,162,175,239,191,189,65,90,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,65,239,191,189,20,111,239,191,189,104,239,191,189,124,239,191,189,28,73,215,167,239,191,189,239,191,189,0,239,191,189,78,83,239,191,189,2,239,191,189,239,191,189,239,191,189,125,239,191,189,19,239,191,189,29,239,191,189,18,239,191,189,239,191,189,36,6,105,239,191,189,46,53,239,191,189,70,105,31,239,191,189,239,191,189,106,239,191,189,19,70,239,191,189,18,239,191,189,36,239,191,189,239,191,189,54,75,239,191,189,239,191,189,85,94,95,239,191,189,9,239,191,189,1,239,191,189,239,191,189,66,29,239,191,189,24,88,239,191,189,239,191,189,124,47,59,18,25,239,191,189,91,45,239,191,189,107,100,239,191,189,57,95,51,239,191,189,60,97,239,191,189,239,191,189,10,120,239,191,189,239,191,189,104,48,88,3,239,191,189,87,239,191,189,239,191,189,44,81,41,6,15,223,186,85,3,49,221,158,93,10,72,91,15,239,191,189,126,239,191,189,239,191,189,200,143,3,239,191,189,110,239,191,189,239,191,189,87,90,113,222,151,239,191,189,239,191,189,54,44,239,191,189,92,239,191,189,80,239,191,189,216,155,239,191,189,111,94,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,26,100,239,191,189,37,96,239,191,189,53,209,174,239,191,189,239,191,189,107,239,191,189,239,191,189,64,96,36,239,191,189,239,191,189,34,16,96,239,191,189,104,239,191,189,239,191,189,75,0,239,191,189,100,13,239,191,189,8,125,102,37,16,239,191,189,239,191,189,39,213,162,57,0,47,43,239,191,189,30,239,191,189,239,191,189,16,78,239,191,189,197,185,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,71,239,191,189,210,183,71,239,191,189,59,20,22,23,239,191,189,59,239,191,189,239,191,189,239,191,189,56,239,191,189,84,44,121,239,191,189,83,239,191,189,239,191,189,67,239,191,189,239,191,189,26,83,39,68,61,5,239,191,189,239,191,189,53,93,116,98,68,76,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,21,77,239,191,189,86,51,239,191,189,11,239,191,189,115,239,191,189,239,191,189,33,239,191,189,239,191,189,210,189,53,31,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,45,12,90,239,191,189,38,239,191,189,239,191,189,14,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07154 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07154_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07154_s.txt", Encoding.UTF8);

    public Test07154() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,42,110,0,239,191,189,79,42,2,10,100,239,191,189,84,239,191,189,32,211,169,239,191,189,91,239,191,189,41,38,239,191,189,239,191,189,201,186,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,86,108,27,17,239,191,189,2,9,79,35,39,101,239,191,189,239,191,189,239,191,189,37,24,239,191,189,239,191,189,239,191,189,68,101,239,191,189,239,191,189,70,37,104,239,191,189,16,45,239,191,189,239,191,189,239,191,189,39,105,124,61,239,191,189,74,58,38,29,73,96,239,191,189,85,239,191,189,239,191,189,105,239,191,189,239,191,189,64,239,191,189,1,112,81,239,191,189,239,191,189,239,191,189,239,191,189,49,51,239,191,189,34,239,191,189,102,239,191,189,198,132,117,239,191,189,58,80,112,95,38,28,69,3,239,191,189,88,111,102,66,104,71,47,203,182,23,239,191,189,117,9,94,9,239,191,189,36,38,239,191,189,58,239,191,189,6,117,239,191,189,239,191,189,239,191,189,32,239,191,189,73,52,107,239,191,189,239,191,189,239,191,189,204,182,239,191,189,83,55,239,191,189,15,108,239,191,189,114,49,239,191,189,103,107,2,239,191,189,127,239,191,189,51,82,239,191,189,114,93,239,191,189,88,14,41,109,239,191,189,96,239,191,189,37,239,191,189,71,38,109,108,113,3,239,191,189,239,191,189,9,74,114,88,239,191,189,239,191,189,54,70,62,239,191,189,239,191,189,239,191,189,64,239,191,189,90,88,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,73,239,191,189,11,39,31,69,239,191,189,239,191,189,14,239,191,189,67,91,239,191,189,39,239,191,189,91,84,239,191,189,38,239,191,189,116,239,191,189,117,239,191,189,127,239,191,189,21,239,191,189,118,239,191,189,78,85,127,0,239,191,189,77,213,154,239,191,189,239,191,189,52,109,239,191,189,239,191,189,51,109,84,239,191,189,212,174,123,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,121,127,239,191,189,239,191,189,239,191,189,239,191,189,5,112,38,56,57,239,191,189,239,191,189,2,116,238,150,130,8,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,5,239,191,189,217,154,43,239,191,189,239,191,189,56,239,191,189,118,50,239,191,189,69,73,120,239,191,189,102,12,53,26,26,26,239,191,189,7,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,184,239,191,189,239,191,189,84,44,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,65,47,81,56,239,191,189,239,191,189,64,239,191,189,114,35,239,191,189,239,191,189,239,191,189,209,163,239,191,189,33,40,64,2,239,191,189,90,6,239,191,189,99,35,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,91,32,239,191,189,239,191,189,239,191,189,78,239,191,189,50,239,191,189,85,102,239,191,189,7,239,191,189,96,91,50,13,110,90,12,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,108,18,239,191,189,123,204,139,239,191,189,239,191,189,10,239,191,189,0,239,191,189,41,14,74,63,239,191,189,112,122,103,239,191,189,87,94,3,55,61,239,191,189,239,191,189,41,223,158,29,120,239,191,189,31,7,218,153,9,26,108,239,191,189,80,85,12,239,191,189,48,239,191,189,113,239,191,189,239,191,189,84,110,239,191,189,239,191,189,80,120,239,191,189,78,45,239,191,189,43,62,239,191,189,90,239,191,189,239,191,189,67,101,90,103,96,239,191,189,53,6,9,239,191,189,239,191,189,12,239,191,189,45,114,239,191,189,239,191,189,239,191,189,10,239,191,189,100,239,191,189,98,3,239,191,189,239,191,189,125,239,191,189,36,23,41,64,239,191,189,16,46,81,239,191,189,81,239,191,189,115,115,239,191,189,71,239,191,189,239,191,189,65,107,239,191,189,56,63,88,27,80,239,191,189,239,191,189,239,191,189,3,86,239,191,189,114,125,83,239,191,189,239,191,189,239,191,189,90,115,239,191,189,239,191,189,32,84,239,191,189,212,150,117,239,191,189,111,239,191,189,10,121,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,234,134,162,78,65,239,191,189,239,191,189,239,191,189,32,239,191,189,85,239,191,189,239,191,189,205,185,239,191,189,24,239,191,189,239,191,189,71,239,191,189,57,239,191,189,28,34,76,51,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,106,239,191,189,42,92,239,191,189,19,239,191,189,82,239,191,189,84,239,191,189,26,43,107,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,44,239,191,189,114,239,191,189,53,119,239,191,189,33,239,191,189,52,68,239,191,189,101,71,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,2,239,191,189,239,191,189,40,239,191,189,23,1,57,239,191,189,51,239,191,189,126,215,165,31,125,239,191,189,107,239,191,189,8,239,191,189,53,54,103,57,239,191,189,74,35,37,239,191,189,29,202,176,239,191,189,52,18,239,191,189,104,109,96,239,191,189,239,191,189,239,191,189,0,106,16,239,191,189,239,191,189,239,191,189,87,51,239,191,189,8,239,191,189,9,194,170,32,239,191,189,52,239,191,189,239,191,189,20,37,21,14,239,191,189,84,112,12,239,191,189,89,239,191,189,124,52,17,54,53,239,191,189,40,5,239,191,189,107,205,159,111,194,189,121,114,104,239,191,189,120,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,66,58,49,239,191,189,239,191,189,217,176,239,191,189,239,191,189,239,191,189,239,191,189,116,35,239,191,189,46,36,115,70,239,191,189,239,191,189,76,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,62,93,74,239,191,189,239,191,189,239,191,189,118,239,191,189,9,197,191,53,239,191,189,239,191,189,239,191,189,239,191,189,10,111,239,191,189,239,191,189,83,69,15,50,95,52,7,239,191,189,239,191,189,239,191,189,126,239,191,189,46,41,239,191,189,239,191,189,99,239,191,189,239,191,189,61,239,191,189,239,191,189,22,18,88,22,239,191,189,35,47,239,191,189,121,239,191,189,239,191,189,9,5,239,191,189,239,191,189,107,66,239,191,189,14,239,191,189,211,146,127,200,184,239,191,189,35,208,166,239,191,189,239,191,189,79,239,191,189,94,239,191,189,31,7,29,86,239,191,189,239,191,189,48,41,239,191,189,7,37,36,239,191,189,45,239,191,189,106,239,191,189,46,239,191,189,18,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,95,20,239,191,189,239,191,189,98,117,239,191,189,239,191,189,239,191,189,100,37,96,54,2,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,87,239,191,189,32,239,191,189,75,117,239,191,189,118,239,191,189,111,239,191,189,106,28,114,206,164,239,191,189,125,89,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,111,27,239,191,189,239,191,189,239,191,189,65,206,188,103,96,33,65,239,191,189,90,34,6,239,191,189,102,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,39,239,191,189,7,24,18,51,40,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,46,9,239,191,189,239,191,189,18,239,191,189,99,239,191,189,34,54,239,191,189,239,191,189,222,171,239,191,189,87,239,191,189,36,239,191,189,239,191,189,26,239,191,189,239,191,189,78,77,239,191,189,24,36,126,239,191,189,76,69,116,239,191,189,85,239,191,189,239,191,189,239,191,189,68,239,191,189,6,4,239,191,189,116,112,52,239,191,189,239,191,189,88,239,191,189,53,239,191,189,239,191,189,8,20,19,239,191,189,102,196,190,74,239,191,189,239,191,189,109,71,98,105,239,191,189,68,108,24,64,239,191,189,239,191,189,239,191,189,21,83,64,239,191,189,25,101,239,191,189,204,139,239,191,189,118,81,107,239,191,189,65,239,191,189,106,31,239,191,189,110,80,96,52,45,14,202,160,75,239,191,189,239,191,189,239,191,189,55,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,24,239,191,189,239,191,189,17,239,191,189,58,2,122,239,191,189,32,25,239,191,189,239,191,189,239,191,189,31,19,239,191,189,79,239,191,189,61,225,177,157,63,86,70,239,191,189,239,191,189,58,239,191,189,116,44,239,191,189,103,72,89,92,239,191,189,239,191,189,101,72,112,45,239,191,189,30,110,239,191,189,74,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,7,103,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,204,171,239,191,189,239,191,189,43,108,198,183,209,130,95,239,191,189,112,239,191,189,239,191,189,32,239,191,189,101,239,191,189,39,24,239,191,189,40,95,239,191,189,28,239,191,189,67,20,239,191,189,239,191,189,49,96,41,49,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,117,112,239,191,189,4,37,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,203,139,239,191,189,239,191,189,109,239,191,189,44,63,35,239,191,189,239,191,189,87,75,239,191,189,6,239,191,189,62,62,98,239,191,189,239,191,189,239,191,189,239,191,189,90,112,16,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,216,156,82,48,239,191,189,91,107,239,191,189,99,87,239,191,189,214,128,123,239,191,189,239,191,189,239,191,189,239,191,189,102,84,239,191,189,31,2,239,191,189,3,239,191,189,29,93,239,191,189,5,239,191,189,103,9,19,126,239,191,189,53,213,170,239,191,189,211,177,51,113,62,239,191,189,239,191,189,239,191,189,87,23,239,191,189,239,191,189,85,64,234,185,154,239,191,189,45,109,61,13,239,191,189,93,239,191,189,88,239,191,189,109,239,191,189,10,104,239,191,189,82,239,191,189,239,191,189,65,239,191,189,79,50,239,191,189,39,6,239,191,189,121,42,18,239,191,189,41,239,191,189,20,112,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,107,239,191,189,76,239,191,189,239,191,189,57,209,190,239,191,189,239,191,189,8,117,239,191,189,239,191,189,21,7,44,239,191,189,118,69,3,68,55,239,191,189,239,191,189,27,21,222,188,114,21,239,191,189,105,46,76,47,239,191,189,7,239,191,189,239,191,189,65,10,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,0,39,239,191,189,85,239,191,189,239,191,189,35,239,191,189,2,54,239,191,189,71,11,239,191,189,104,239,191,189,77,37,50,239,191,189,4,239,191,189,239,191,189,64,239,191,189,239,191,189,110,239,191,189,79,239,191,189,239,191,189,35,103,239,191,189,45,37,109,100,80,6,239,191,189,78,7,73,62,239,191,189,239,191,189,239,191,189,30,239,191,189,112,124,239,191,189,211,154,7,98,239,191,189,106,239,191,189,61,239,191,189,239,191,189,3,100,239,191,189,239,191,189,65,239,191,189,67,121,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,122,2,39,11,239,191,189,111,239,191,189,239,191,189,84,99,239,191,189,47,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,4,239,191,189,239,191,189,66,239,191,189,46,239,191,189,239,191,189,239,191,189,25,239,191,189,21,239,191,189,127,67,239,191,189,239,191,189,38,239,191,189,117,15,49,74,17,120,239,191,189,239,191,189,239,191,189,63,99,239,191,189,10,239,191,189,89,67,92,74,239,191,189,121,5,239,191,189,239,191,189,123,74,17,239,191,189,108,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=3072-4607",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07006 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07006_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07006_s.txt", Encoding.UTF8);

    public Test07006() : base(recordedRequest, recordedResponse, "accounts8d439ff91164f0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,125,239,191,189,18,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,104,126,239,191,189,239,191,189,3,239,191,189,127,239,191,189,239,191,189,110,11,239,191,189,239,191,189,61,239,191,189,94,115,92,32,239,191,189,227,145,190,239,191,189,48,239,191,189,199,141,239,191,189,239,191,189,239,191,189,84,239,191,189,39,124,46,39,22,239,191,189,118,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,124,100,55,11,1,215,191,239,191,189,118,98,16,239,191,189,23,239,191,189,12,239,191,189,239,191,189,21,114,48,75,70,42,26,68,239,191,189,92,3,239,191,189,239,191,189,239,191,189,61,113,239,191,189,73,239,191,189,79,239,191,189,78,239,191,189,239,191,189,239,191,189,1,239,191,189,202,179,239,191,189,53,239,191,189,239,191,189,5,48,30,13,239,191,189,4,99,239,191,189,199,188,30,89,239,191,189,239,191,189,37,68,93,239,191,189,197,181,226,154,145,69,239,191,189,67,45,239,191,189,80,239,191,189,112,50,21,239,191,189,13,82,239,191,189,88,57,75,89,112,239,191,189,239,191,189,239,191,189,41,28,203,165,110,124,101,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,89,120,239,191,189,209,141,239,191,189,75,239,191,189,68,49,239,191,189,210,138,5,239,191,189,122,92,113,239,191,189,239,191,189,126,109,39,97,239,191,189,239,191,189,88,10,56,72,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,127,112,239,191,189,239,191,189,239,191,189,73,239,191,189,81,117,229,171,153,65,239,191,189,239,191,189,239,191,189,85,13,239,191,189,6,239,191,189,5,212,142,239,191,189,238,163,136,60,98,26,239,191,189,239,191,189,58,239,191,189,239,191,189,223,145,210,168,19,111,239,191,189,239,191,189,55,93,106,40,239,191,189,74,239,191,189,239,191,189,76,112,239,191,189,122,239,191,189,35,44,4,239,191,189,99,21,18,202,173,239,191,189,6,239,191,189,36,239,191,189,239,191,189,58,239,191,189,239,191,189,100,6,50,86,91,239,191,189,122,239,191,189,239,191,189,85,239,191,189,113,62,62,59,239,191,189,100,239,191,189,1,239,191,189,90,239,191,189,215,137,239,191,189,99,45,197,136,239,191,189,92,124,239,191,189,115,105,239,191,189,209,128,43,239,191,189,35,89,117,239,191,189,70,199,188,239,191,189,6,96,107,239,191,189,67,10,25,90,204,181,32,77,239,191,189,105,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,55,239,191,189,98,239,191,189,94,239,191,189,113,220,130,239,191,189,31,110,56,239,191,189,90,14,1,28,95,239,191,189,235,185,132,239,191,189,239,191,189,82,31,239,191,189,22,23,239,191,189,28,23,88,210,134,239,191,189,62,87,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,27,111,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,125,14,239,191,189,239,191,189,12,123,127,239,191,189,106,239,191,189,2,87,223,185,239,191,189,22,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,4,239,191,189,84,42,87,45,31,89,85,119,65,88,74,8,92,54,123,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,42,239,191,189,20,239,191,189,15,239,191,189,218,183,36,117,119,239,191,189,114,64,94,239,191,189,55,239,191,189,100,93,239,191,189,105,121,210,165,239,191,189,87,239,191,189,87,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,42,73,239,191,189,239,191,189,239,191,189,51,213,145,94,239,191,189,59,59,239,191,189,87,85,239,191,189,62,239,191,189,239,191,189,55,66,79,86,82,64,96,239,191,189,239,191,189,23,239,191,189,64,239,191,189,239,191,189,13,60,239,191,189,239,191,189,74,53,239,191,189,64,71,239,191,189,27,94,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,62,111,239,191,189,239,191,189,239,191,189,88,91,41,65,26,239,191,189,70,239,191,189,239,191,189,239,191,189,22,74,25,69,125,239,191,189,239,191,189,239,191,189,1,8,97,54,239,191,189,239,191,189,23,85,47,111,239,191,189,2,72,239,191,189,50,72,96,100,33,239,191,189,1,239,191,189,32,239,191,189,108,239,191,189,75,95,42,65,239,191,189,239,191,189,239,191,189,210,146,33,121,76,41,196,141,239,191,189,239,191,189,239,191,189,59,49,23,239,191,189,239,191,189,24,108,239,191,189,8,125,6,101,21,8,111,239,191,189,9,239,191,189,68,239,191,189,79,107,15,96,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,40,239,191,189,59,121,123,122,18,239,191,189,28,239,191,189,87,239,191,189,45,11,113,221,163,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,34,239,191,189,26,239,191,189,45,239,191,189,239,191,189,66,239,191,189,239,191,189,102,239,191,189,105,52,13,239,191,189,85,50,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,50,121,239,191,189,39,10,57,239,191,189,239,191,189,126,239,191,189,25,239,191,189,96,239,191,189,239,191,189,60,81,239,191,189,239,191,189,239,191,189,239,191,189,29,7,239,191,189,239,191,189,44,103,95,92,119,58,106,35,239,191,189,115,239,191,189,239,191,189,239,191,189,55,77,66,239,191,189,111,239,191,189,27,75,45,239,191,189,77,239,191,189,239,191,189,3,239,191,189,239,191,189,20,114,78,239,191,189,239,191,189,239,191,189,57,95,7,239,191,189,239,191,189,239,191,189,239,191,189,96,49,239,191,189,239,191,189,91,239,191,189,239,191,189,29,239,191,189,107,239,191,189,74,239,191,189,239,191,189,17,239,191,189,239,191,189,55,239,191,189,127,239,191,189,94,64,81,18,88,122,8,74,103,8,108,239,191,189,94,32,27,13,52,239,191,189,98,239,191,189,239,191,189,102,6,239,191,189,70,239,191,189,239,191,189,40,239,191,189,113,92,43,31,239,191,189,1,239,191,189,73,239,191,189,2,9,239,191,189,239,191,189,70,98,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,32,239,191,189,43,239,191,189,57,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,95,30,42,195,153,239,191,189,89,83,239,191,189,31,239,191,189,239,191,189,239,191,189,64,37,50,7,15,239,191,189,10,239,191,189,239,191,189,9,239,191,189,239,191,189,207,137,121,239,191,189,53,80,239,191,189,239,191,189,16,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,89,216,149,239,191,189,34,55,105,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,20,115,10,239,191,189,27,223,143,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,125,103,38,71,239,191,189,67,98,122,48,33,202,173,82,15,22,239,191,189,105,214,170,26,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,231,165,189,9,239,191,189,47,239,191,189,54,239,191,189,69,110,239,191,189,239,191,189,239,191,189,17,239,191,189,81,63,28,239,191,189,239,191,189,121,239,191,189,101,23,22,126,76,239,191,189,16,79,71,23,92,239,191,189,239,191,189,39,122,239,191,189,34,28,35,239,191,189,49})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff91164f0c",
                        container: "containerse9e15e20033f4188863d0457f6c0b446",
                        blob: "PageBlobcbe7d5e1c91748aaacdf804e925a475f",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07155 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07155_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07155_s.txt", Encoding.UTF8);

    public Test07155() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,119,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,103,48,239,191,189,239,191,189,40,83,38,239,191,189,83,102,239,191,189,239,191,189,111,98,97,239,191,189,239,191,189,102,239,191,189,33,55,90,76,113,89,94,239,191,189,225,170,190,127,58,239,191,189,108,69,239,191,189,239,191,189,112,239,191,189,70,239,191,189,239,191,189,239,191,189,126,47,31,114,21,239,191,189,239,191,189,99,239,191,189,127,97,13,239,191,189,37,239,191,189,202,147,68,85,239,191,189,239,191,189,88,239,191,189,3,29,239,191,189,239,191,189,87,126,32,219,128,200,156,239,191,189,42,62,77,239,191,189,239,191,189,239,191,189,27,239,191,189,89,10,55,239,191,189,239,191,189,239,191,189,30,239,191,189,1,97,239,191,189,239,191,189,38,239,191,189,27,84,83,239,191,189,126,229,146,163,239,191,189,69,71,50,85,239,191,189,69,120,115,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,6,45,103,95,45,239,191,189,30,239,191,189,239,191,189,205,164,34,239,191,189,121,3,106,54,239,191,189,41,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,84,55,34,110,76,239,191,189,23,239,191,189,101,239,191,189,239,191,189,123,116,101,239,191,189,105,76,239,191,189,111,64,239,191,189,220,152,239,191,189,239,191,189,239,191,189,239,191,189,127,80,48,119,239,191,189,120,108,239,191,189,239,191,189,44,84,83,239,191,189,239,191,189,239,191,189,102,119,0,38,239,191,189,41,97,239,191,189,126,18,104,120,239,191,189,83,123,239,191,189,12,73,239,191,189,239,191,189,120,239,191,189,4,239,191,189,239,191,189,68,105,239,191,189,239,191,189,27,239,191,189,239,191,189,77,239,191,189,104,124,239,191,189,123,239,191,189,30,198,178,100,108,239,191,189,205,172,14,113,71,9,239,191,189,239,191,189,115,239,191,189,114,98,57,239,191,189,239,191,189,239,191,189,239,191,189,98,37,239,191,189,43,239,191,189,239,191,189,239,191,189,42,239,191,189,101,20,198,178,223,159,49,239,191,189,119,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,56,239,191,189,9,46,66,64,239,191,189,127,14,79,63,239,191,189,239,191,189,239,191,189,239,191,189,15,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,76,43,3,239,191,189,86,239,191,189,66,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,78,37,49,70,239,191,189,239,191,189,96,73,24,239,191,189,239,191,189,239,191,189,25,29,63,7,239,191,189,119,239,191,189,54,239,191,189,239,191,189,20,223,148,239,191,189,239,191,189,239,191,189,78,76,30,107,26,75,103,126,239,191,189,239,191,189,29,101,114,239,191,189,52,239,191,189,9,71,61,113,2,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,89,16,82,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,127,239,191,189,239,191,189,206,181,239,191,189,85,33,89,55,239,191,189,21,239,191,189,239,191,189,239,191,189,77,122,78,239,191,189,239,191,189,239,191,189,219,178,91,77,13,110,95,239,191,189,50,239,191,189,15,239,191,189,104,14,123,239,191,189,110,239,191,189,65,60,239,191,189,239,191,189,239,191,189,232,153,137,124,100,112,239,191,189,105,62,73,239,191,189,239,191,189,45,239,191,189,239,191,189,82,239,191,189,54,38,239,191,189,239,191,189,41,87,120,90,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,96,100,116,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,31,106,239,191,189,239,191,189,239,191,189,20,239,191,189,70,112,239,191,189,239,191,189,70,239,191,189,66,17,34,239,191,189,100,238,176,190,110,239,191,189,239,191,189,239,191,189,28,52,110,19,239,191,189,99,239,191,189,14,122,56,13,239,191,189,239,191,189,29,126,239,191,189,57,106,44,80,26,239,191,189,50,239,191,189,239,191,189,239,191,189,93,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,96,84,55,68,9,4,102,239,191,189,70,112,239,191,189,4,239,191,189,90,239,191,189,118,2,239,191,189,82,0,6,101,26,239,191,189,239,191,189,87,239,191,189,59,76,239,191,189,71,6,239,191,189,239,191,189,239,191,189,239,191,189,96,40,239,191,189,89,239,191,189,23,239,191,189,12,107,239,191,189,46,239,191,189,16,90,239,191,189,239,191,189,239,191,189,90,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,210,160,126,90,239,191,189,93,239,191,189,22,239,191,189,239,191,189,239,191,189,39,239,191,189,13,30,239,191,189,40,46,42,239,191,189,239,191,189,98,37,239,191,189,113,13,197,165,239,191,189,33,239,191,189,60,29,239,191,189,107,239,191,189,80,115,59,64,68,4,23,239,191,189,107,64,15,239,191,189,239,191,189,239,191,189,112,114,8,17,62,88,111,74,80,10,112,50,239,191,189,62,239,191,189,239,191,189,202,161,48,239,191,189,239,191,189,239,191,189,233,173,187,74,62,82,5,204,181,9,3,239,191,189,74,239,191,189,20,239,191,189,45,239,191,189,239,191,189,41,239,191,189,54,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,118,110,107,22,239,191,189,124,239,191,189,91,86,239,191,189,26,29,68,239,191,189,84,102,46,16,239,191,189,31,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,223,148,239,191,189,107,86,71,239,191,189,239,191,189,239,191,189,239,191,189,66,239,191,189,124,57,123,239,191,189,239,191,189,101,239,191,189,109,239,191,189,90,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,105,67,116,214,129,108,20,239,191,189,119,239,191,189,46,13,239,191,189,65,68,37,239,191,189,2,123,58,31,233,166,162,239,191,189,108,69,239,191,189,239,191,189,23,239,191,189,239,191,189,77,205,131,239,191,189,89,107,55,15,36,239,191,189,75,12,55,212,164,98,22,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,21,38,239,191,189,239,191,189,96,76,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,108,22,42,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,110,77,103,239,191,189,214,141,29,2,239,191,189,102,34,239,191,189,78,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,90,239,191,189,63,17,239,191,189,239,191,189,239,191,189,239,191,189,2,102,9,78,67,33,90,239,191,189,239,191,189,127,50,221,187,239,191,189,67,10,239,191,189,239,191,189,239,191,189,219,178,218,137,239,191,189,28,63,20,239,191,189,39,239,191,189,64,239,191,189,32,239,191,189,33,92,211,165,115,239,191,189,239,191,189,36,98,239,191,189,239,191,189,232,137,129,52,105,18,38,239,191,189,47,40,239,191,189,34,50,3,12,239,191,189,239,191,189,239,191,189,62,76,70,239,191,189,239,191,189,33,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,39,5,79,87,239,191,189,6,239,191,189,53,45,239,191,189,239,191,189,239,191,189,239,191,189,69,58,239,191,189,239,191,189,102,33,33,39,35,239,191,189,239,191,189,77,239,191,189,95,239,191,189,239,191,189,53,23,239,191,189,111,114,239,191,189,29,226,171,130,239,191,189,239,191,189,239,191,189,17,239,191,189,90,239,191,189,39,239,191,189,115,51,59,239,191,189,198,159,239,191,189,4,111,239,191,189,10,239,191,189,110,239,191,189,239,191,189,239,191,189,41,239,191,189,77,239,191,189,29,239,191,189,239,191,189,239,191,189,85,67,96,18,7,44,239,191,189,122,239,191,189,18,95,239,191,189,110,239,191,189,239,191,189,228,177,173,26,239,191,189,239,191,189,37,111,37,24,239,191,189,48,40,239,191,189,76,86,117,69,239,191,189,113,91,46,239,191,189,104,239,191,189,103,109,34,91,65,239,191,189,57,46,239,191,189,105,239,191,189,111,239,191,189,84,73,47,239,191,189,58,239,191,189,33,239,191,189,122,239,191,189,55,239,191,189,234,180,169,239,191,189,116,239,191,189,239,191,189,69,126,58,45,2,19,239,191,189,25,239,191,189,2,119,112,109,239,191,189,239,191,189,239,191,189,123,65,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,87,74,239,191,189,239,191,189,60,239,191,189,32,42,37,25,28,44,239,191,189,85,239,191,189,116,239,191,189,3,49,239,191,189,239,191,189,25,239,191,189,45,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,97,23,115,239,191,189,239,191,189,28,94,58,239,191,189,77,239,191,189,239,191,189,239,191,189,95,20,197,157,24,210,166,239,191,189,33,239,191,189,61,239,191,189,99,91,78,239,191,189,89,43,71,203,186,21,78,239,191,189,17,88,239,191,189,239,191,189,116,125,24,109,239,191,189,239,191,189,51,40,36,239,191,189,44,56,101,239,191,189,239,191,189,239,191,189,79,71,239,191,189,2,239,191,189,239,191,189,239,191,189,100,11,239,191,189,239,191,189,119,239,191,189,6,121,11,31,37,239,191,189,239,191,189,208,154,239,191,189,40,37,204,171,239,191,189,15,102,239,191,189,31,239,191,189,121,202,159,239,191,189,220,168,239,191,189,239,191,189,9,239,191,189,40,51,239,191,189,79,239,191,189,239,191,189,44,69,239,191,189,82,239,191,189,127,239,191,189,35,239,191,189,239,191,189,239,191,189,71,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,91,59,239,191,189,115,67,125,26,43,198,185,109,239,191,189,115,125,3,77,239,191,189,32,82,204,177,239,191,189,29,124,239,191,189,20,239,191,189,66,239,191,189,239,191,189,59,119,83,239,191,189,239,191,189,108,216,185,1,36,55,201,184,239,191,189,239,191,189,83,239,191,189,67,67,114,239,191,189,94,19,31,97,29,93,239,191,189,46,239,191,189,239,191,189,52,17,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,41,30,46,239,191,189,239,191,189,65,43,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,66,239,191,189,24,63,239,191,189,239,191,189,78,122,4,239,191,189,80,95,239,191,189,239,191,189,117,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,73,102,48,126,55,31,239,191,189,239,191,189,109,239,191,189,217,129,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,73,239,191,189,36,75,239,191,189,53,83,239,191,189,239,191,189,5,239,191,189,1,45,82,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,114,91,239,191,189,40,101,239,191,189,239,191,189,18,215,174,239,191,189,239,191,189,239,191,189,1,98,239,191,189,36,26,82,73,239,191,189,60,239,191,189,70,107,127,239,191,189,239,191,189,239,191,189,117,239,191,189,74,239,191,189,239,191,189,24,239,191,189,239,191,189,59,239,191,189,64,239,191,189,6,34,239,191,189,20,44,239,191,189,18,239,191,189,54,239,191,189,119,239,191,189,239,191,189,30,80,239,191,189,239,191,189,35,0,118,0,57,239,191,189,63,239,191,189,124,115,239,191,189,40,53,23,239,191,189,239,191,189,239,191,189,53,111,239,191,189,87,83,239,191,189,239,191,189,2,62,94,42,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,50,117,113,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=5120-6655",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07156 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07156_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07156_s.txt", Encoding.UTF8);

    public Test07156() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,1,43,239,191,189,239,191,189,79,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,239,191,189,14,73,239,191,189,239,191,189,239,191,189,239,191,189,104,61,29,239,191,189,24,48,86,60,239,191,189,77,239,191,189,108,239,191,189,239,191,189,239,191,189,72,72,67,239,191,189,239,191,189,209,162,96,116,239,191,189,239,191,189,102,239,191,189,239,191,189,126,239,191,189,39,44,127,239,191,189,50,239,191,189,42,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,88,120,239,191,189,12,68,0,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,113,239,191,189,63,201,185,239,191,189,98,93,124,63,103,66,239,191,189,239,191,189,30,239,191,189,31,28,18,239,191,189,27,81,28,90,88,239,191,189,239,191,189,71,43,239,191,189,239,191,189,9,117,75,80,19,239,191,189,239,191,189,57,77,105,239,191,189,57,84,201,172,116,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,35,85,239,191,189,34,111,97,206,154,22,81,78,127,56,34,64,239,191,189,239,191,189,43,45,217,165,47,63,24,200,144,239,191,189,66,47,239,191,189,77,239,191,189,99,97,81,239,191,189,239,191,189,239,191,189,107,239,191,189,83,239,191,189,239,191,189,212,145,239,191,189,52,239,191,189,218,178,239,191,189,2,239,191,189,22,112,90,223,181,239,191,189,107,239,191,189,4,124,28,239,191,189,239,191,189,75,6,236,167,161,109,239,191,189,220,180,45,239,191,189,239,191,189,34,14,100,239,191,189,239,191,189,239,191,189,94,93,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,71,204,134,109,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,79,61,16,23,98,67,102,239,191,189,125,7,239,191,189,105,239,191,189,99,120,115,108,239,191,189,85,3,202,142,239,191,189,15,45,239,191,189,59,69,106,37,239,191,189,198,144,239,191,189,122,78,70,124,18,48,239,191,189,68,97,64,239,191,189,29,239,191,189,84,64,68,124,20,239,191,189,6,239,191,189,239,191,189,100,7,53,239,191,189,42,239,191,189,39,88,103,12,239,191,189,10,239,191,189,42,44,239,191,189,36,63,239,191,189,45,106,21,15,239,191,189,239,191,189,4,38,239,191,189,239,191,189,44,239,191,189,12,239,191,189,239,191,189,63,70,239,191,189,5,40,28,8,239,191,189,239,191,189,68,239,191,189,107,22,23,239,191,189,120,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,67,239,191,189,1,239,191,189,239,191,189,239,191,189,78,239,191,189,28,64,239,191,189,13,31,23,105,36,239,191,189,38,239,191,189,37,123,239,191,189,14,28,18,239,191,189,239,191,189,13,74,239,191,189,76,32,239,191,189,239,191,189,239,191,189,27,88,239,191,189,15,239,191,189,239,191,189,78,239,191,189,41,239,191,189,106,85,239,191,189,239,191,189,92,104,239,191,189,90,112,200,168,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,20,93,239,191,189,77,204,150,23,239,191,189,92,45,23,239,191,189,58,239,191,189,98,19,119,237,135,128,198,135,239,191,189,239,191,189,40,239,191,189,49,239,191,189,105,239,191,189,123,239,191,189,239,191,189,88,85,239,191,189,42,71,239,191,189,210,180,239,191,189,20,239,191,189,239,191,189,13,88,34,239,191,189,119,121,239,191,189,239,191,189,32,195,141,99,239,191,189,36,6,100,47,107,239,191,189,239,191,189,239,191,189,92,239,191,189,82,106,239,191,189,47,92,239,191,189,239,191,189,65,115,95,88,27,109,15,35,239,191,189,94,239,191,189,239,191,189,104,239,191,189,200,148,239,191,189,34,239,191,189,109,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,90,239,191,189,73,239,191,189,20,84,239,191,189,25,4,66,9,239,191,189,85,11,121,37,26,239,191,189,239,191,189,76,239,191,189,239,191,189,90,12,239,191,189,71,70,40,239,191,189,118,91,106,239,191,189,64,239,191,189,99,20,15,239,191,189,19,19,239,191,189,239,191,189,76,25,239,191,189,24,121,239,191,189,107,239,191,189,37,239,191,189,41,68,239,191,189,52,61,239,191,189,239,191,189,14,90,55,239,191,189,231,158,162,20,66,22,16,11,49,239,191,189,57,239,191,189,69,14,239,191,189,239,191,189,47,204,136,118,239,191,189,53,239,191,189,239,191,189,239,191,189,68,47,239,191,189,89,239,191,189,5,239,191,189,119,1,100,122,78,3,55,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,104,62,38,74,211,157,65,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,57,239,191,189,87,219,128,101,67,239,191,189,120,239,191,189,43,239,191,189,239,191,189,27,239,191,189,64,239,191,189,221,147,5,9,239,191,189,239,191,189,60,239,191,189,239,191,189,28,239,191,189,239,191,189,121,239,191,189,56,239,191,189,34,16,239,191,189,239,191,189,112,3,239,191,189,124,239,191,189,64,113,239,191,189,209,164,239,191,189,113,29,239,191,189,239,191,189,239,191,189,221,171,43,26,23,239,191,189,239,191,189,39,239,191,189,239,191,189,25,65,92,93,239,191,189,213,163,239,191,189,109,239,191,189,10,239,191,189,239,191,189,70,239,191,189,24,22,18,29,64,108,239,191,189,100,64,239,191,189,118,239,191,189,239,191,189,239,191,189,84,211,133,239,191,189,38,48,79,115,239,191,189,41,239,191,189,75,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,32,239,191,189,59,55,6,239,191,189,31,239,191,189,201,162,102,239,191,189,114,32,239,191,189,111,83,114,239,191,189,239,191,189,51,239,191,189,86,239,191,189,239,191,189,239,191,189,97,239,191,189,83,51,239,191,189,39,56,239,191,189,97,239,191,189,239,191,189,74,25,197,180,53,239,191,189,53,21,68,97,239,191,189,109,239,191,189,39,239,191,189,239,191,189,239,191,189,0,62,239,191,189,109,56,118,239,191,189,70,239,191,189,239,191,189,63,239,191,189,197,191,3,239,191,189,239,191,189,39,108,58,126,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,41,71,239,191,189,96,239,191,189,56,72,18,239,191,189,54,109,239,191,189,22,239,191,189,90,127,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,110,76,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,96,44,21,21,116,5,95,77,124,84,21,239,191,189,4,17,20,97,239,191,189,89,11,94,86,45,61,239,191,189,239,191,189,239,191,189,81,19,239,191,189,56,239,191,189,100,44,239,191,189,13,115,0,239,191,189,239,191,189,122,66,77,60,239,191,189,239,191,189,201,178,93,56,101,113,96,239,191,189,24,72,50,239,191,189,98,126,239,191,189,75,94,67,197,177,239,191,189,108,3,239,191,189,96,239,191,189,115,239,191,189,27,8,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,219,136,239,191,189,46,239,191,189,20,79,218,132,239,191,189,97,2,239,191,189,239,191,189,239,191,189,239,191,189,19,57,44,70,89,239,191,189,5,239,191,189,239,191,189,18,239,191,189,63,65,239,191,189,239,191,189,239,191,189,5,239,191,189,112,239,191,189,124,239,191,189,239,191,189,29,41,27,239,191,189,75})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=6656-7679",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07072 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07072_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07072_s.txt", Encoding.UTF8);

    public Test07072() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{31,239,191,189,215,136,239,191,189,31,239,191,189,73,239,191,189,239,191,189,233,141,132,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,74,65,45,89,239,191,189,239,191,189,58,0,239,191,189,239,191,189,239,191,189,239,191,189,16,32,239,191,189,201,156,21,239,191,189,233,128,151,239,191,189,92,89,98,239,191,189,112,112,239,191,189,38,239,191,189,239,191,189,62,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,217,156,239,191,189,91,239,191,189,64,239,191,189,10,239,191,189,35,201,169,239,191,189,239,191,189,127,239,191,189,90,239,191,189,46,26,96,239,191,189,69,239,191,189,48,239,191,189,8,239,191,189,76,55,0,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,27,239,191,189,239,191,189,116,239,191,189,84,239,191,189,239,191,189,26,46,89,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,43,2,56,49,239,191,189,239,191,189,35,56,239,191,189,103,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,68,239,191,189,239,191,189,108,50,239,191,189,112,239,191,189,50,8,239,191,189,239,191,189,239,191,189,59,239,191,189,102,239,191,189,89,239,191,189,239,191,189,239,191,189,93,56,239,191,189,60,16,239,191,189,29,47,33,88,95,239,191,189,94,239,191,189,239,184,132,239,191,189,126,239,191,189,126,239,191,189,239,191,189,125,104,239,191,189,43,239,191,189,92,89,124,102,7,239,191,189,239,191,189,26,48,33,239,191,189,83,239,191,189,16,239,191,189,71,14,239,191,189,239,191,189,239,191,189,239,191,189,25,96,20,47,8,239,191,189,126,6,239,191,189,28,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,84,239,191,189,239,191,189,116,239,191,189,122,9,54,89,87,239,191,189,48,239,191,189,64,28,82,239,191,189,239,191,189,20,64,20,92,5,239,191,189,19,239,191,189,72,239,191,189,78,84,26,239,191,189,124,16,196,137,44,239,191,189,13,88,117,239,191,189,122,239,191,189,26,14,37,239,191,189,239,191,189,239,191,189,225,173,186,239,191,189,239,191,189,239,191,189,18,97,74,49,51,239,191,189,5,61,239,179,157,123,239,191,189,38,30,198,188,239,191,189,67,239,191,189,64,239,191,189,4,239,191,189,239,191,189,22,239,191,189,114,108,239,191,189,239,191,189,239,191,189,205,183,25,88,239,191,189,38,65,239,191,189,116,239,191,189,43,90,239,191,189,11,43,239,191,189,239,191,189,239,191,189,239,191,189,37,68,21,239,191,189,87,92,239,191,189,112,29,64,239,191,189,239,191,189,239,191,189,38,21,239,191,189,239,191,189,12,239,191,189,2,239,191,189,239,191,189,91,109,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,103,67,239,191,189,37,239,191,189,239,191,189,4,239,191,189,36,239,191,189,239,191,189,57,52,114,93,79,115,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,200,178,239,191,189,239,191,189,51,25,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,4,85,117,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,15,78,239,191,189,73,73,239,191,189,239,191,189,239,191,189,104,70,116,239,191,189,102,239,191,189,41,53,239,191,189,56,54,28,239,191,189,114,61,41,98,239,191,189,102,50,239,191,189,91,239,191,189,121,239,191,189,104,80,127,239,191,189,239,191,189,115,36,239,191,189,239,191,189,14,1,239,191,189,239,191,189,1,239,191,189,123,239,191,189,15,239,191,189,34,239,191,189,123,239,191,189,12,31,239,191,189,88,39,204,187,239,191,189,127,38,127,48,216,181,48,239,191,189,239,191,189,17,239,191,189,55,99,59,56,113,239,191,189,220,183,239,191,189,75,99,86,239,191,189,239,191,189,239,191,189,115,239,191,189,77,27,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,113,208,176,197,136,109,239,191,189,17,99,68,35,239,191,189,239,191,189,38,239,191,189,75,21,199,160,27,208,140,67,15,66,239,191,189,84,239,191,189,20,239,191,189,86,64,239,191,189,108,239,191,189,239,191,189,43,239,191,189,107,221,150,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,90,239,191,189,239,191,189,25,239,191,189,101,239,191,189,229,141,160,239,191,189,239,191,189,24,35,239,191,189,239,191,189,239,191,189,239,191,189,22,122,39,239,191,189,31,35,92,194,133,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,46,79,98,36,61,239,191,189,84,114,25,56,239,191,189,111,125,239,191,189,115,72,239,191,189,239,191,189,194,140,53,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,54,239,191,189,2,239,191,189,212,154,110,239,191,189,37,239,191,189,8,13,195,148,239,191,189,239,191,189,239,191,189,17,66,239,191,189,239,191,189,19,239,191,189,47,239,191,189,207,157,239,191,189,239,191,189,115,2,48,70,84,239,191,189,123,218,158,239,191,189,239,191,189,10,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,17,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,239,191,189,48,40,78,5,239,191,189,124,64,39,98,34,115,239,191,189,111,239,191,189,11,72,239,191,189,61,86,239,191,189,201,161,57,239,191,189,239,191,189,69,52,198,189,47,30,239,191,189,239,191,189,239,191,189,116,124,39,20,29,239,191,189,239,191,189,124,239,191,189,91,239,191,189,123,60,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,7,239,191,189,239,191,189,48,239,191,189,71,121,106,51,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,98,41,56,19,29,37,239,191,189,72,61,239,191,189,239,191,189,67,54,109,239,191,189,45,239,191,189,74,239,191,189,239,191,189,239,191,189,123,239,191,189,68,65,73,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,96,85,84,239,191,189,239,191,189,106,86,97,239,191,189,239,191,189,79,54,51,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,107,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,87,124,13,75,239,191,189,5,239,191,189,239,191,189,46,112,4,239,191,189,239,191,189,14,14,239,191,189,56,24,31,206,143,218,191,239,191,189,239,191,189,22,15,239,191,189,90,239,191,189,239,191,189,207,150,222,182,239,191,189,24,239,191,189,239,191,189,48,239,191,189,239,191,189,103,0,239,191,189,239,191,189,239,191,189,88,195,140,56,49,40,124,239,191,189,24,239,191,189,239,191,189,239,191,189,82,211,180,105,239,191,189,239,191,189,47,87,239,191,189,31,102,93,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,22,85,66,53,239,191,189,47,99,239,191,189,110,97,239,191,189,239,191,189,116,239,191,189,239,191,189,116,125,15,239,191,189,239,191,189,33,239,191,189,118,239,191,189,239,191,189,38,218,148,104,239,191,189,239,191,189,239,191,189,239,191,189,208,154,121,28,61,239,191,189,5,64,239,191,189,239,191,189,93,42,239,191,189,239,191,189,239,191,189,41,66,239,191,189,95,239,191,189,239,191,189,42,239,191,189,204,168,239,191,189,9,239,191,189,9,5,239,191,189,113,21,120,239,191,189,56,239,191,189,96,239,191,189,80,239,191,189,239,191,189,106,239,191,189,24,98,239,191,189,239,191,189,78,107,37,239,191,189,40,239,191,189,118,239,191,189,214,173,116,74,124,125})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8d7575ee34724bb28d1382d01f131c6b",
                        blob: "PageBlob623ff268bbff40a6b531e22fe8047c43",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07157 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07157_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07157_s.txt", Encoding.UTF8);

    public Test07157() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{82,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,2,66,239,191,189,23,15,239,191,189,239,191,189,5,239,191,189,239,191,189,7,239,191,189,24,124,124,73,239,191,189,40,47,124,67,121,124,71,239,191,189,37,73,54,9,15,109,36,45,82,122,84,64,112,14,239,191,189,32,239,191,189,239,191,189,114,194,158,1,124,239,191,189,70,239,191,189,111,107,239,191,189,64,239,191,189,239,191,189,103,63,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,1,40,8,52,26,239,191,189,91,239,191,189,239,191,189,9,239,191,189,57,36,239,191,189,97,239,191,189,19,239,191,189,239,191,189,101,17,239,191,189,239,191,189,48,36,65,91,239,191,189,239,191,189,239,191,189,239,191,189,69,58,122,239,191,189,61,239,191,189,85,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,6,197,130,99,57,239,191,189,239,191,189,41,239,191,189,15,239,191,189,47,4,239,191,189,93,0,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,86,72,239,191,189,239,191,189,41,94,239,191,189,239,191,189,239,191,189,107,79,239,191,189,81,239,191,189,106,18,14,239,191,189,94,110,106,239,191,189,196,148,61,18,239,191,189,48,239,191,189,239,191,189,65,239,191,189,60,239,191,189,94,239,191,189,239,191,189,56,218,151,239,191,189,9,60,121,239,191,189,239,191,189,100,239,191,189,118,239,191,189,73,126,239,191,189,96,239,191,189,61,239,191,189,23,239,191,189,239,191,189,72,239,191,189,41,100,122,89,38,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,74,239,191,189,79,111,119,72,13,61,239,191,189,239,191,189,239,191,189,104,239,191,189,67,239,191,189,126,239,191,189,19,16,239,191,189,104,80,115,115,73,61,68,86,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,57,239,191,189,106,239,191,189,12,70,59,239,191,189,112,195,188,239,191,189,40,95,239,191,189,87,36,239,191,189,239,191,189,239,191,189,80,239,191,189,73,239,191,189,38,57,3,239,191,189,239,191,189,23,31,15,56,86,10,9,19,28,7,202,133,239,191,189,223,175,239,191,189,88,21,239,191,189,72,125,239,191,189,239,191,189,86,63,55,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,68,7,239,191,189,239,191,189,26,126,26,239,191,189,35,239,191,189,35,30,32,84,239,191,189,81,32,239,191,189,239,191,189,239,191,189,209,131,239,191,189,51,239,191,189,0,216,134,11,10,239,191,189,67,239,191,189,239,191,189,4,117,32,239,191,189,117,239,191,189,37,239,191,189,108,239,191,189,239,191,189,35,101,239,191,189,239,191,189,82,239,191,189,14,210,138,239,191,189,239,191,189,108,121,109,26,239,191,189,239,191,189,239,191,189,25,46,239,191,189,66,80,37,49,38,51,39,239,191,189,52,23,239,191,189,100,239,191,189,51,199,184,124,239,191,189,113,6,239,191,189,68,9,239,191,189,239,191,189,91,49,239,191,189,13,82,239,191,189,207,149,35,84,239,191,189,33,103,219,170,229,177,168,239,191,189,239,191,189,8,127,115,239,191,189,214,156,239,191,189,110,239,191,189,73,11,27,239,191,189,239,191,189,239,191,189,239,191,189,19,38,239,191,189,101,239,191,189,239,191,189,119,239,191,189,46,239,191,189,21,239,191,189,239,191,189,33,70,239,191,189,239,191,189,239,191,189,239,191,189,219,189,239,191,189,55,239,191,189,239,191,189,96,13,239,191,189,73,125,239,191,189,239,191,189,2,239,191,189,209,138,239,191,189,28,64,57,8,239,191,189,239,191,189,63,239,191,189,239,191,189,103,3,112,239,191,189,239,191,189,21,239,191,189,57,76,239,191,189,15,127,83,239,191,189,239,191,189,239,191,189,239,191,189,0,72,239,191,189,19,79,239,191,189,239,191,189,106,113,73,239,191,189,40,40,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,233,191,183,5,122,239,191,189,239,191,189,212,157,239,191,189,120,106,0,239,191,189,62,62,50,239,191,189,23,70,239,191,189,42,102,239,191,189,41,16,36,239,191,189,239,191,189,127,239,191,189,27,199,188,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,204,132,239,191,189,105,40,59,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,32,239,191,189,89,239,191,189,239,191,189,105,96,239,191,189,239,191,189,30,82,92,239,191,189,67,38,239,191,189,239,191,189,239,191,189,239,191,189,77,37,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,117,239,191,189,56,239,191,189,8,239,191,189,239,191,189,48,105,125,239,191,189,49,116,239,191,189,239,191,189,20,239,191,189,66,72,42,64,106,76,97,119,239,191,189,28,239,191,189,120,101,4,108,239,191,189,239,191,189,105,239,191,189,30,22,9,239,191,189,239,191,189,239,191,189,229,174,176,239,191,189,239,191,189,4,211,130,239,191,189,105,74,76,239,191,189,79,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,66,83,239,191,189,93,59,239,191,189,239,191,189,56,239,191,189,96,91,239,191,189,103,239,191,189,239,191,189,108,35,124,239,191,189,239,191,189,87,2,239,191,189,239,191,189,239,191,189,89,119,239,191,189,87,239,191,189,27,239,191,189,239,191,189,108,92,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,69,239,191,189,50,77,52,239,191,189,63,239,191,189,34,239,191,189,239,191,189,127,239,191,189,239,191,189,69,104,51,108,70,106,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,49,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,17,103,239,191,189,90,104,44,239,191,189,239,191,189,239,191,189,239,191,189,93,222,146,51,239,191,189,239,191,189,239,191,189,123,239,191,189,62,239,191,189,10,127,239,191,189,46,239,191,189,14,23,239,191,189,48,113,239,191,189,1,239,191,189,54,93,239,191,189,239,191,189,3,26,239,191,189,206,175,239,191,189,105,39,80,239,191,189,4,10,239,191,189,239,191,189,212,190,88,93,104,31,44,239,191,189,30,239,191,189,46,239,191,189,115,96,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,120,239,191,189,112,239,191,189,90,239,191,189,29,6,94,16,19,239,191,189,119,125,40,67,118,239,191,189,239,191,189,239,191,189,73,239,191,189,74,239,191,189,7,89,8,74,239,191,189,0,239,191,189,69,239,191,189,124,65,77,110,2,239,191,189,2,38,91,13,112,239,191,189,49,239,191,189,56,239,191,189,76,35,83,33,83,46,239,191,189,37,73,83,87,20,239,191,189,239,191,189,15,86,64,239,191,189,0,239,191,189,239,191,189,8,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,98,208,177,65,239,191,189,105,35,102,78,239,191,189,39,37,239,191,189,95,239,191,189,107,239,191,189,239,191,189,25,104,116,239,191,189,81,239,191,189,68,76,22,239,191,189,239,191,189,63,239,191,189,75,81,125,239,191,189,68,9,239,191,189,51,239,191,189,29,86,239,191,189,60,239,191,189,239,191,189,39,221,178,25,100,239,191,189,239,191,189,239,191,189,97,108,126,14,239,191,189,239,191,189,82,239,191,189,239,191,189,14,1,239,191,189,239,191,189,49,106,239,191,189,98,239,191,189,239,191,189,43,74,29,67,21,239,191,189,97,37,57,206,181,219,183,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,59,239,191,189,15,239,191,189,114,8,239,191,189,106,38,239,191,189,68,67,40,105,56,239,191,189,106,24,239,191,189,239,191,189,50,73,80,17,21,239,191,189,239,191,189,102,103,39,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,81,46,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,125,239,191,189,95,93,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,37,80,2,239,191,189,3,116,227,136,143,84,74,59,80,14,239,191,189,239,191,189,239,191,189,89,239,191,189,61,239,191,189,239,191,189,239,191,189,112,239,191,189,13,40,239,191,189,46,239,191,189,66,82,78,55,239,191,189,239,191,189,110,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,57,71,106,239,191,189,13,239,191,189,239,191,189,239,191,189,17,239,191,189,76,93,90,239,191,189,18,239,191,189,239,191,189,25,109,55,83,39,102,239,191,189,73,239,191,189,239,191,189,54,239,191,189,239,191,189,219,143,239,191,189,126,239,191,189,239,191,189,239,191,189,42,1,1,239,191,189,127,239,191,189,239,191,189,239,191,189,124,38,91,239,191,189,15,25,43,239,191,189,92,17,239,191,189,239,191,189,89,97,239,191,189,117,239,191,189,31,27,239,191,189,239,191,189,239,191,189,239,191,189,24,15,65,239,191,189,108,54,119,239,191,189,105,208,178,47,239,191,189,239,191,189,15,239,191,189,239,191,189,100,239,191,189,34,239,191,189,24,9,81,239,191,189,26,239,191,189,12,96,239,191,189,239,191,189,201,160,45,67,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,106,120,14,239,191,189,50,84,239,191,189,239,191,189,61,89,88,239,191,189,239,191,189,91,239,191,189,6,239,191,189,36,82,239,191,189,107,71,239,191,189,239,191,189,239,191,189,100,239,191,189,106,20,239,191,189,239,191,189,74,62,51,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,34,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,5,108,239,191,189,121,34,239,191,189,61,239,191,189,239,191,189,239,191,189,2,85,41,194,178,239,191,189,122,40,94,11,69,239,191,189,239,191,189,239,191,189,30,37,0,42,26,239,191,189,239,191,189,84,239,191,189,54,239,191,189,57,110,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,30,109,239,191,189,229,147,151,120,239,191,189,33,91,239,191,189,239,191,189,18,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,49,121,65,239,191,189,24,239,191,189,77,89,239,191,189,239,191,189,239,191,189,38,44,59,55,239,191,189,56,239,191,189,111,57,239,191,189,25,89,76,105,19,239,191,189,239,191,189,72,239,191,189,121,64,110,5,239,191,189,121,220,183,239,191,189,54,70,62,239,191,189,42,85,52,208,180,218,166,239,191,189,114,62,80,84,24,32,239,191,189,76,4,239,191,189,17,239,191,189,59,239,191,189,239,191,189,39,239,191,189,239,191,189,32,239,191,189,88,56,239,191,189,96,59,46,239,191,189,52,67,11,209,161,49,7,2,30,239,191,189,124,89,239,191,189,107,239,191,189,72,239,191,189,44,57,239,191,189,239,191,189,124,239,191,189,13,28,239,191,189,66,25,5,93,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,111,114,52,239,191,189,239,191,189,119,42,100,56,22,239,191,189,239,191,189,77,51,1,63,45,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,83,239,191,189,103,213,188,199,186,65,239,191,189,49,239,191,189,78,44,76,21,15,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=7680-9215",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07217 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07217_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07217_s.txt", Encoding.UTF8);

    public Test07217() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{90,239,191,189,66,239,191,189,239,191,189,55,3,36,239,191,189,239,191,189,50,203,158,239,191,189,239,191,189,239,191,189,14,239,191,189,0,54,49,239,191,189,4,239,191,189,72,81,239,191,189,79,3,239,191,189,239,191,189,4,239,191,189,239,191,189,7,239,191,189,26,239,191,189,14,239,191,189,239,191,189,26,239,191,189,22,56,239,191,189,118,104,87,239,191,189,54,75,239,191,189,114,52,239,191,189,239,191,189,239,191,189,57,239,191,189,70,239,191,189,32,68,50,45,65,11,239,191,189,239,191,189,239,191,189,125,239,191,189,67,91,22,81,239,191,189,108,104,219,136,239,191,189,36,106,239,191,189,126,24,94,239,191,189,69,124,87,239,191,189,117,38,239,191,189,66,239,191,189,10,239,191,189,106,197,158,4,239,191,189,106,65,22,30,47,239,191,189,49,208,174,239,191,189,239,191,189,239,191,189,217,177,239,191,189,40,239,191,189,27,116,94,38,92,239,191,189,53,28,14,10,97,239,191,189,112,239,191,189,89,32,239,191,189,22,60,1,64,87,239,191,189,74,239,191,189,213,183,106,239,191,189,104,49,91,116,239,191,189,239,191,189,42,239,191,189,239,191,189,14,115,239,191,189,1,32,239,191,189,239,191,189,5,62,239,191,189,98,239,191,189,39,239,191,189,114,39,107,239,191,189,239,191,189,19,239,191,189,239,191,189,22,239,191,189,31,239,191,189,239,191,189,5,86,239,191,189,24,46,122,32,7,239,191,189,32,63,54,239,191,189,122,239,191,189,239,191,189,239,191,189,8,31,65,239,191,189,239,191,189,77,82,239,191,189,56,239,191,189,239,191,189,93,22,239,191,189,123,239,191,189,202,175,239,191,189,239,191,189,51,98,7,239,191,189,239,191,189,6,44,239,191,189,40,239,191,189,29,239,191,189,90,239,191,189,239,191,189,100,67,27,8,95,51,239,191,189,239,191,189,45,239,191,189,107,10,93,239,191,189,239,191,189,239,191,189,10,239,191,189,212,189,58,2,64,71,38,88,16,239,191,189,213,151,2,83,239,191,189,22,239,191,189,239,191,189,239,191,189,45,239,191,189,60,122,239,191,189,18,61,239,191,189,239,191,189,239,191,189,61,239,191,189,75,239,191,189,239,191,189,66,42,64,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,87,239,191,189,104,239,191,189,123,239,191,189,78,0,43,239,191,189,41,239,191,189,67,95,239,191,189,2,75,86,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,41,239,191,189,68,84,44,239,191,189,239,191,189,32,7,87,86,239,191,189,239,191,189,80,239,191,189,118,239,191,189,84,20,239,191,189,239,191,189,55,239,191,189,82,219,185,239,191,189,45,69,239,191,189,84,65,239,191,189,239,191,189,239,191,189,45,6,2,90,239,191,189,40,106,239,191,189,42,14,239,191,189,33,11,239,191,189,111,17,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,115,239,191,189,239,191,189,239,191,189,30,2,21,70,237,137,171,111,239,191,189,239,191,189,49,239,191,189,97,239,191,189,239,191,189,67,58,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,11,37,239,191,189,63,19,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,39,239,191,189,90,51,239,191,189,79,0,50,239,191,189,16,239,191,189,85,100,48,239,191,189,61,239,191,189,21,239,191,189,5,70,46,21,58,200,181,107,91,85,19,75,72,239,191,189,1,239,191,189,73,239,191,189,99,102,239,191,189,212,165,77,239,191,189,20,239,191,189,112,15,100,76,10,239,191,189,239,191,189,69,239,191,189,239,191,189,32,107,239,191,189,239,191,189,239,191,189,115,197,174,239,191,189,98,239,191,189,101,93,120,239,191,189,239,191,189,49})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers175310d22b4448bf801cb74c8b273047",
                        blob: "Blob1b488c5de8524cfa8e4ba01bb199e69c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=512-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07045 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07045_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07045_s.txt", Encoding.UTF8);

    public Test07045() : base(recordedRequest, recordedResponse, "accounts8d439ffa4162ea2")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffa4162ea2",
                        container: "containers1dcd67fb94ae44108c55c938bbefc117",
                        blob: "Bloba8e7188fdb174d57a241bd667a7220b8",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07073 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07073_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07073_s.txt", Encoding.UTF8);

    public Test07073() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{50,239,191,189,83,46,239,191,189,21,14,239,191,189,239,191,189,239,191,189,0,239,191,189,69,239,191,189,127,58,239,191,189,239,191,189,61,73,25,2,84,97,76,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,44,77,239,191,189,239,191,189,239,191,189,60,67,239,191,189,25,99,239,191,189,239,191,189,239,191,189,239,191,189,46,80,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,77,239,191,189,239,191,189,239,191,189,239,191,189,58,28,239,191,189,239,191,189,45,239,191,189,239,191,189,50,239,191,189,62,97,239,191,189,239,191,189,47,239,191,189,48,110,239,191,189,82,239,191,189,55,239,191,189,56,16,83,30,239,191,189,81,239,191,189,239,191,189,9,91,77,239,191,189,239,191,189,71,239,191,189,20,239,191,189,115,53,29,101,4,55,239,191,189,239,191,189,115,70,239,191,189,239,191,189,102,239,191,189,56,85,98,239,191,189,239,191,189,126,15,239,191,189,239,191,189,239,191,189,239,191,189,52,6,79,239,191,189,79,110,90,90,239,191,189,222,136,25,113,51,239,191,189,84,31,22,10,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,124,98,235,149,152,119,239,191,189,239,191,189,104,239,191,189,49,239,191,189,69,35,215,164,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,18,42,239,191,189,239,191,189,3,66,239,191,189,57,58,19,239,191,189,11,110,239,191,189,74,103,239,191,189,239,191,189,9,100,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,54,32,28,101,105,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,126,37,62,239,191,189,116,50,80,239,191,189,54,239,191,189,56,72,239,191,189,239,191,189,239,191,189,76,107,239,191,189,23,239,191,189,105,15,11,112,29,213,169,71,89,239,191,189,89,239,191,189,239,191,189,10,25,239,191,189,38,239,191,189,48,239,191,189,239,191,189,102,239,191,189,119,239,191,189,211,176,197,164,101,110,230,144,159,239,191,189,111,26,239,191,189,218,158,239,191,189,9,115,239,191,189,102,239,191,189,116,239,191,189,239,191,189,3,37,239,191,189,84,111,80,3,81,239,191,189,239,191,189,73,36,239,191,189,239,191,189,37,114,17,52,239,191,189,239,191,189,239,191,189,88,212,146,31,239,191,189,239,191,189,27,16,82,95,6,59,239,191,189,64,239,191,189,239,191,189,33,79,239,191,189,29,239,191,189,69,239,191,189,122,239,191,189,102,239,191,189,124,239,191,189,63,38,239,191,189,57,239,191,189,239,191,189,239,191,189,80,239,191,189,15,54,239,191,189,53,239,191,189,29,239,191,189,1,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,19,68,23,122,50,115,239,191,189,29,239,191,189,32,239,191,189,90,104,115,239,191,189,239,191,189,209,152,115,239,191,189,1,16,239,191,189,92,239,191,189,100,239,191,189,9,18,239,191,189,90,38,85,239,191,189,239,191,189,239,191,189,239,191,189,213,133,239,191,189,239,191,189,102,101,239,191,189,61,78,239,191,189,63,239,191,189,16,31,76,239,191,189,239,191,189,66,2,239,191,189,239,191,189,127,205,166,239,191,189,10,59,198,185,5,115,239,191,189,41,37,239,191,189,18,239,191,189,80,239,191,189,239,191,189,239,191,189,31,239,191,189,203,141,98,1,116,13,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,86,239,191,189,239,191,189,0,91,42,4,239,191,189,73,38,239,191,189,124,239,191,189,35,58,239,191,189,82,239,191,189,88,195,155,239,191,189,1,24,51,8,199,184,30,83,239,191,189,3,38,53,239,191,189,90,239,191,189,80,63,239,191,189,214,154,100,239,191,189,8,239,191,189,22,80,239,191,189,239,191,189,94,12,94,64,84,239,191,189,239,191,189,239,191,189,239,191,189,83,98,75,101,239,191,189,102,239,191,189,86,239,191,189,125,239,191,189,239,191,189,2,103,239,191,189,239,191,189,0,109,92,16,77,239,191,189,118,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,3,239,191,189,239,191,189,29,239,191,189,52,111,63,239,191,189,239,191,189,97,239,191,189,239,191,189,16,91,239,191,189,239,191,189,83,83,23,89,239,191,189,127,97,239,191,189,101,44,239,191,189,239,191,189,239,191,189,112,239,191,189,91,58,209,128,123,239,191,189,97,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,15,29,239,191,189,239,191,189,10,75,54,2,239,191,189,48,37,8,111,239,191,189,239,191,189,30,239,191,189,119,239,191,189,62,239,191,189,41,239,191,189,239,191,189,25,59,66,239,191,189,239,191,189,73,115,3,101,239,191,189,239,191,189,239,191,189,70,81,239,191,189,125,239,191,189,59,195,142,239,191,189,239,191,189,2,43,56,239,191,189,239,191,189,80,239,191,189,4,239,191,189,16,239,191,189,66,239,191,189,239,191,189,4,10,239,191,189,239,191,189,63,70,37,203,163,94,56,67,239,191,189,196,139,239,191,189,95,32,239,191,189,30,59,25,239,191,189,239,191,189,111,63,66,96,222,167,59,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,5,108,70,97,239,191,189,13,239,191,189,64,101,100,239,191,189,34,239,191,189,239,191,189,118,239,191,189,100,45,120,0,4,239,191,189,239,191,189,239,191,189,34,1,239,191,189,45,5,7,5,100,239,191,189,19,25,239,191,189,239,191,189,68,15,97,87,1,239,191,189,121,18,24,77,239,191,189,19,239,191,189,30,120,239,191,189,97,239,191,189,64,127,73,62,239,191,189,108,239,191,189,58,94,95,48,99,215,175,239,191,189,22,31,29,22,239,191,189,2,239,191,189,115,239,191,189,9,239,191,189,239,191,189,26,49,239,191,189,239,191,189,93,91,239,191,189,79,239,191,189,6,100,239,191,189,239,191,189,199,156,26,239,191,189,118,40,108,239,191,189,239,191,189,90,108,239,191,189,239,191,189,118,12,95,52,239,191,189,239,191,189,239,191,189,9,117,239,191,189,79,5,123,239,191,189,87,239,191,189,25,239,191,189,32,11,59,45,88,8,84,62,239,191,189,239,191,189,115,239,191,189,51,116,239,191,189,239,191,189,98,67,42,239,191,189,109,82,239,191,189,239,191,189,38,72,239,191,189,239,191,189,239,191,189,82,21,48,239,191,189,76,239,191,189,120,72,239,191,189,86,223,184,3,241,150,140,158,239,191,189,96,239,191,189,115,19,99,70,75,239,191,189,13,126,6,16,118,239,191,189,67,77,239,191,189,67,3,239,191,189,40,239,191,189,46,26,239,191,189,239,191,189,239,191,189,78,12,39,239,191,189,239,191,189,239,191,189,78,38,239,191,189,1,205,159,85,126,239,191,189,239,191,189,66,239,191,189,239,191,189,58,117,239,191,189,88,82,239,191,189,12,239,191,189,104,239,191,189,89,239,191,189,239,191,189,84,239,191,189,127,1,87,107,102,239,191,189,86,29,111,239,191,189,117,100,60,239,191,189,89,52,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,18,239,191,189,3,230,128,132,125,61,75,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,31,239,191,189,88,70,239,191,189,239,191,189,35,239,191,189,9,14,113,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,77,239,191,189,89,200,188,111,239,191,189,239,191,189,26,56,25,126,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,1,230,160,174,102,25})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8d7575ee34724bb28d1382d01f131c6b",
                        blob: "PageBlob623ff268bbff40a6b531e22fe8047c43",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07008 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07008_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07008_s.txt", Encoding.UTF8);

    public Test07008() : base(recordedRequest, recordedResponse, "accounts8d439ff91164f0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,125,239,191,189,18,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,104,126,239,191,189,239,191,189,3,239,191,189,127,239,191,189,239,191,189,110,11,239,191,189,239,191,189,61,239,191,189,94,115,92,32,239,191,189,227,145,190,239,191,189,48,239,191,189,199,141,239,191,189,239,191,189,239,191,189,84,239,191,189,39,124,46,39,22,239,191,189,118,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,124,100,55,11,1,215,191,239,191,189,118,98,16,239,191,189,23,239,191,189,12,239,191,189,239,191,189,21,114,48,75,70,42,26,68,239,191,189,92,3,239,191,189,239,191,189,239,191,189,61,113,239,191,189,73,239,191,189,79,239,191,189,78,239,191,189,239,191,189,239,191,189,1,239,191,189,202,179,239,191,189,53,239,191,189,239,191,189,5,48,30,13,239,191,189,4,99,239,191,189,199,188,30,89,239,191,189,239,191,189,37,68,93,239,191,189,197,181,226,154,145,69,239,191,189,67,45,239,191,189,80,239,191,189,112,50,21,239,191,189,13,82,239,191,189,88,57,75,89,112,239,191,189,239,191,189,239,191,189,41,28,203,165,110,124,101,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,89,120,239,191,189,209,141,239,191,189,75,239,191,189,68,49,239,191,189,210,138,5,239,191,189,122,92,113,239,191,189,239,191,189,126,109,39,97,239,191,189,239,191,189,88,10,56,72,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,127,112,239,191,189,239,191,189,239,191,189,73,239,191,189,81,117,229,171,153,65,239,191,189,239,191,189,239,191,189,85,13,239,191,189,6,239,191,189,5,212,142,239,191,189,238,163,136,60,98,26,239,191,189,239,191,189,58,239,191,189,239,191,189,223,145,210,168,19,111,239,191,189,239,191,189,55,93,106,40,239,191,189,74,239,191,189,239,191,189,76,112,239,191,189,122,239,191,189,35,44,4,239,191,189,99,21,18,202,173,239,191,189,6,239,191,189,36,239,191,189,239,191,189,58,239,191,189,239,191,189,100,6,50,86,91,239,191,189,122,239,191,189,239,191,189,85,239,191,189,113,62,62,59,239,191,189,100,239,191,189,1,239,191,189,90,239,191,189,215,137,239,191,189,99,45,197,136,239,191,189,92,124,239,191,189,115,105,239,191,189,209,128,43,239,191,189,35,89,117,239,191,189,70,199,188,239,191,189,6,96,107,239,191,189,67,10,25,90,204,181,32,77,239,191,189,105,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,55,239,191,189,98,239,191,189,94,239,191,189,113,220,130,239,191,189,31,110,56,239,191,189,90,14,1,28,95,239,191,189,235,185,132,239,191,189,239,191,189,82,31,239,191,189,22,23,239,191,189,28,23,88,210,134,239,191,189,62,87,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,27,111,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,125,14,239,191,189,239,191,189,12,123,127,239,191,189,106,239,191,189,2,87,223,185,239,191,189,22,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,4,239,191,189,84,42,87,45,31,89,85,119,65,88,74,8,92,54,123,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,42,239,191,189,20,239,191,189,15,239,191,189,218,183,36,117,119,239,191,189,114,64,94,239,191,189,55,239,191,189,100,93,239,191,189,105,121,210,165,239,191,189,87,239,191,189,87,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,42,73,239,191,189,239,191,189,239,191,189,51,213,145,94,239,191,189,59,59,239,191,189,87,85,239,191,189,62,239,191,189,239,191,189,55,66,79,86,82,64,96,239,191,189,239,191,189,23,239,191,189,64,239,191,189,239,191,189,13,60,239,191,189,239,191,189,74,53,239,191,189,64,71,239,191,189,27,94,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,62,111,239,191,189,239,191,189,239,191,189,88,91,41,65,26,239,191,189,70,239,191,189,239,191,189,239,191,189,22,74,25,69,125,239,191,189,239,191,189,239,191,189,1,8,97,54,239,191,189,239,191,189,23,85,47,111,239,191,189,2,72,239,191,189,50,72,96,100,33,239,191,189,1,239,191,189,32,239,191,189,108,239,191,189,75,95,42,65,239,191,189,239,191,189,239,191,189,210,146,33,121,76,41,196,141,239,191,189,239,191,189,239,191,189,59,49,23,239,191,189,239,191,189,24,108,239,191,189,8,125,6,101,21,8,111,239,191,189,9,239,191,189,68,239,191,189,79,107,15,96,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,40,239,191,189,59,121,123,122,18,239,191,189,28,239,191,189,87,239,191,189,45,11,113,221,163,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,34,239,191,189,26,239,191,189,45,239,191,189,239,191,189,66,239,191,189,239,191,189,102,239,191,189,105,52,13,239,191,189,85,50,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,50,121,239,191,189,39,10,57,239,191,189,239,191,189,126,239,191,189,25,239,191,189,96,239,191,189,239,191,189,60,81,239,191,189,239,191,189,239,191,189,239,191,189,29,7,239,191,189,239,191,189,44,103,95,92,119,58,106,35,239,191,189,115,239,191,189,239,191,189,239,191,189,55,77,66,239,191,189,111,239,191,189,27,75,45,239,191,189,77,239,191,189,239,191,189,3,239,191,189,239,191,189,20,114,78,239,191,189,239,191,189,239,191,189,57,95,7,239,191,189,239,191,189,239,191,189,239,191,189,96,49,239,191,189,239,191,189,91,239,191,189,239,191,189,29,239,191,189,107,239,191,189,74,239,191,189,239,191,189,17,239,191,189,239,191,189,55,239,191,189,127,239,191,189,94,64,81,18,88,122,8,74,103,8,108,239,191,189,94,32,27,13,52,239,191,189,98,239,191,189,239,191,189,102,6,239,191,189,70,239,191,189,239,191,189,40,239,191,189,113,92,43,31,239,191,189,1,239,191,189,73,239,191,189,2,9,239,191,189,239,191,189,70,98,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,32,239,191,189,43,239,191,189,57,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,95,30,42,195,153,239,191,189,89,83,239,191,189,31,239,191,189,239,191,189,239,191,189,64,37,50,7,15,239,191,189,10,239,191,189,239,191,189,9,239,191,189,239,191,189,207,137,121,239,191,189,53,80,239,191,189,239,191,189,16,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,89,216,149,239,191,189,34,55,105,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,20,115,10,239,191,189,27,223,143,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,125,103,38,71,239,191,189,67,98,122,48,33,202,173,82,15,22,239,191,189,105,214,170,26,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,231,165,189,9,239,191,189,47,239,191,189,54,239,191,189,69,110,239,191,189,239,191,189,239,191,189,17,239,191,189,81,63,28,239,191,189,239,191,189,121,239,191,189,101,23,22,126,76,239,191,189,16,79,71,23,92,239,191,189,239,191,189,39,122,239,191,189,34,28,35,239,191,189,49})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff91164f0c",
                        container: "containerse9e15e20033f4188863d0457f6c0b446",
                        blob: "PageBlobcbe7d5e1c91748aaacdf804e925a475f",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06806 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06806_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06806_s.txt", Encoding.UTF8);

    public Test06806() : base(recordedRequest, recordedResponse, "accounts8d439ff69627441")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,37,4,239,191,189,239,191,189,24,71,239,191,189,13,108,87,239,191,189,239,191,189,239,191,189,242,169,162,142,26,239,191,189,127,70,239,191,189,239,191,189,239,191,189,79,239,191,189,114,239,191,189,95,239,191,189,87,112,92,89,239,191,189,43,239,191,189,239,191,189,239,191,189,97,7,47,239,191,189,58,239,191,189,239,191,189,239,191,189,105,239,191,189,20,58,55,86,239,191,189,95,6,105,239,191,189,239,191,189,62,43,12,104,114,98,102,239,191,189,239,191,189,118,239,191,189,112,99,31,119,23,16,75,239,191,189,116,239,191,189,239,191,189,120,239,191,189,239,191,189,28,56,5,122,126,36,239,191,189,239,191,189,34,239,191,189,35,44,239,191,189,59,116,84,239,191,189,239,191,189,26,239,191,189,239,191,189,24,239,191,189,239,191,189,78,239,191,189,121,84,52,84,239,191,189,94,239,191,189,85,41,97,31,76,82,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,227,131,179,0,62,45,239,191,189,239,191,189,54,69,32,38,239,191,189,48,105,19,239,191,189,239,191,189,239,191,189,41,196,158,114,18,19,53,112,239,191,189,15,19,47,27,67,239,191,189,106,56,239,191,189,83,239,191,189,39,44,239,191,189,88,15,9,58,108,28,239,191,189,239,191,189,4,32,46,113,47,69,16,239,191,189,239,191,189,9,239,191,189,239,191,189,35,22,5,239,191,189,239,191,189,239,191,189,48,77,56,239,191,189,239,191,189,239,191,189,239,191,189,69,98,8,239,191,189,239,191,189,84,239,191,189,23,14,14,239,191,189,209,162,37,39,36,102,239,191,189,106,70,71,53,239,191,189,4,87,239,191,189,86,239,191,189,239,191,189,204,143,239,191,189,115,54,239,191,189,239,191,189,239,191,189,20,64,104,46,108,20,7,24,17,61,239,191,189,9,40,210,163,59,239,191,189,239,191,189,16,105,4,239,191,189,61,239,191,189,239,191,189,108,66,127,100,93,107,37,121,239,191,189,81,239,191,189,2,24,239,191,189,32,239,191,189,239,191,189,69,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,3,107,46,0,209,136,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,119,24,59,239,191,189,70,80,239,191,189,72,239,191,189,24,239,191,189,239,191,189,54,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,105,56,239,191,189,124,60,31,239,191,189,120,239,191,189,19,30,239,191,189,239,191,189,239,191,189,124,87,20,37,239,191,189,21,239,191,189,239,191,189,19,239,191,189,68,91,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,14,223,170,113,10,49,6,207,159,5,239,191,189,55,55,103,121,101,239,191,189,113,10,239,191,189,239,191,189,117,239,191,189,126,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,112,104,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,15,239,191,189,84,239,191,189,239,191,189,239,191,189,13,239,191,189,46,93,239,191,189,48,239,191,189,55,219,153,65,44,239,191,189,18,109,239,191,189,26,239,191,189,239,191,189,25,239,191,189,217,169,220,184,239,191,189,86,93,239,191,189,12,32,8,239,191,189,239,191,189,239,191,189,239,191,189,13,87,239,191,189,64,239,191,189,123,239,191,189,36,91,239,191,189,239,191,189,8,64,69,239,191,189,92,1,118,46,51,73,81,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,121,57,62,1,39,239,191,189,239,191,189,239,191,189,9,84,91,9,87,239,191,189,239,191,189,55,48,78,28,111,109,239,191,189,6,118,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff69627441",
                        container: "containersfa14127366454f36a41bbea3287d7bf4",
                        blob: "Blob527dd74f74264f1e9d03836a3eafe93f",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=29184-29695",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07138 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07138_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07138_s.txt", Encoding.UTF8);

    public Test07138() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{25,239,191,189,126,239,191,189,48,239,191,189,68,239,191,189,40,239,191,189,239,191,189,239,191,189,212,135,239,191,189,97,78,65,239,191,189,13,239,191,189,11,239,191,189,239,191,189,239,191,189,28,81,57,239,191,189,239,191,189,30,102,102,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,98,52,239,191,189,29,126,239,191,189,45,239,191,189,86,38,239,191,189,239,191,189,201,164,201,159,239,191,189,14,198,189,239,191,189,20,79,11,33,90,239,191,189,239,191,189,98,239,191,189,239,191,189,1,116,239,191,189,223,191,42,201,141,52,239,191,189,239,191,189,239,191,189,43,119,40,4,122,239,191,189,239,191,189,85,239,191,189,239,191,189,47,239,191,189,78,239,191,189,239,191,189,239,191,189,35,36,239,191,189,90,127,82,239,191,189,43,65,239,191,189,10,116,222,129,239,191,189,42,239,191,189,78,36,239,191,189,239,191,189,86,39,237,155,129,46,44,68,239,191,189,239,191,189,239,191,189,83,239,191,189,105,16,239,191,189,70,216,184,239,191,189,195,181,239,191,189,82,119,36,67,5,239,191,189,239,191,189,239,191,189,68,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,51,48,33,18,23,239,191,189,57,94,7,75,239,191,189,239,191,189,239,191,189,114,91,72,9,10,239,191,189,62,201,145,25,15,200,156,18,59,239,191,189,72,239,191,189,37,21,46,239,191,189,97,49,100,12,239,191,189,204,133,239,191,189,117,105,7,58,239,191,189,89,118,239,191,189,26,239,191,189,239,191,189,203,162,23,17,73,123,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,23,239,191,189,239,191,189,37,114,67,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,100,83,239,191,189,122,109,99,239,191,189,74,31,27,239,191,189,83,239,191,189,2,56,221,179,33,213,154,95,94,79,28,239,191,189,53,239,191,189,9,115,107,239,191,189,25,239,191,189,28,31,107,239,191,189,58,121,0,18,239,191,189,239,191,189,239,191,189,109,210,164,65,96,239,191,189,239,191,189,239,191,189,6,3,124,239,191,189,55,239,191,189,239,191,189,214,179,239,191,189,119,108,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,213,136,239,191,189,102,198,175,239,191,189,239,191,189,69,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,25,103,239,191,189,68,65,35,60,239,191,189,68,239,191,189,239,191,189,101,239,191,189,94,239,191,189,239,191,189,121,239,191,189,239,191,189,100,209,160,61,239,191,189,67,239,191,189,239,191,189,45,42,58,239,191,189,239,191,189,113,23,239,191,189,101,92,52,102,239,191,189,76,239,191,189,33,208,185,76,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,214,150,239,191,189,120,42,239,191,189,0,239,191,189,239,191,189,15,239,191,189,9,74,11,239,191,189,219,148,46,239,191,189,69,239,191,189,4,24,239,191,189,126,109,19,239,191,189,7,239,191,189,23,101,59,239,191,189,19,239,191,189,79,80,59,239,191,189,51,239,191,189,37,61,41,24,239,191,189,239,191,189,88,239,191,189,82,239,191,189,56,239,191,189,93,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,73,205,143,239,191,189,24,239,191,189,67,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,102,239,191,189,68,93,48,44,239,191,189,93,65,93,239,191,189,86,125,5,42,55,72,69,239,191,189,74,239,191,189,239,191,189,63,55,14,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,106,78,126,239,191,189,28,75,49,239,191,189,239,191,189,11})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5f95f33153e648bebfde1c9b606122ef",
                        blob: "Blob62dc96b81585493598ac468481890fc8",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=512-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06995 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06995_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06995_s.txt", Encoding.UTF8);

    public Test06995() : base(recordedRequest, recordedResponse, "accounts8d439ff9106225e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{92,239,191,189,239,191,189,239,191,189,239,191,189,75,59,106,10,41,239,191,189,10,195,157,239,191,189,239,191,189,63,110,61,239,191,189,239,191,189,10,79,239,191,189,86,239,191,189,60,96,239,191,189,239,191,189,239,191,189,66,239,191,189,96,69,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,21,58,239,191,189,124,99,33,126,79,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,71,70,239,191,189,239,191,189,14,219,183,20,56,77,57,98,88,239,191,189,239,191,189,239,191,189,239,191,189,86,37,239,191,189,239,191,189,21,239,191,189,239,191,189,56,27,239,191,189,98,104,62,68,126,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,216,188,26,0,2,239,191,189,67,0,201,164,82,239,191,189,200,167,45,211,146,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,83,67,121,101,126,104,239,191,189,239,191,189,18,54,239,191,189,56,82,60,16,105,117,239,191,189,81,239,191,189,43,84,55,82,239,191,189,239,191,189,239,191,189,239,191,189,84,8,239,191,189,239,191,189,79,46,81,14,239,191,189,99,41,239,191,189,18,239,191,189,31,75,44,239,191,189,239,191,189,239,191,189,68,66,239,191,189,108,106,239,191,189,111,239,191,189,12,39,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,14,239,191,189,35,239,191,189,1,239,191,189,18,115,239,191,189,205,141,53,239,191,189,38,50,67,6,239,191,189,17,239,191,189,23,29,126,239,191,189,82,2,93,239,191,189,239,191,189,31,22,239,191,189,21,239,191,189,29,239,191,189,125,239,191,189,67,93,113,239,191,189,239,191,189,4,239,191,189,239,191,189,33,0,113,85,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,105,99,239,191,189,239,191,189,239,191,189,83,239,191,189,109,239,191,189,239,191,189,31,81,8,239,191,189,239,191,189,53,61,239,191,189,18,29,63,122,222,137,239,191,189,92,76,58,127,239,191,189,111,239,191,189,0,44,59,25,56,67,239,191,189,30,23,112,77,81,239,191,189,239,191,189,239,191,189,239,191,189,105,61,239,191,189,115,123,239,191,189,239,191,189,15,30,42,6,239,191,189,239,191,189,28,32,239,191,189,80,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,44,239,191,189,239,191,189,16,101,104,239,191,189,21,93,239,191,189,28,239,191,189,123,76,239,191,189,40,37,239,191,189,24,111,239,191,189,49,48,25,127,27,239,191,189,239,191,189,108,68,239,191,189,127,117,239,191,189,239,191,189,239,191,189,48,13,197,157,239,191,189,215,190,239,191,189,115,239,191,189,97,5,23,239,191,189,239,191,189,48,219,151,75,239,191,189,92,197,145,73,239,191,189,199,169,25,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,122,114,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,204,152,112,204,163,221,150,198,156,107,123,123,239,191,189,53,46,239,191,189,239,191,189,214,188,239,191,189,124,123,220,187,73,96,37,239,191,189,239,191,189,239,191,189,30,221,142,73,239,191,189,17,239,191,189,239,191,189,239,191,189,49,2,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,60,125,204,177,239,191,189,239,191,189,239,191,189,16,80,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,61,239,191,189,76,239,191,189,239,191,189,126,59,29,239,191,189,40,220,139,198,185,124,80,30,222,173,239,191,189,35,239,191,189,6,78,239,191,189,57,239,191,189,85,239,191,189,73,239,191,189,120,11,239,191,189,25,63,239,191,189,126,52,1,95,207,136,239,191,189,106,43,86,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,210,129,239,191,189,239,191,189,239,191,189,79,68,239,191,189,239,191,189,8,239,191,189,37,19,239,191,189,52,98,17,31,95,120,239,191,189,239,191,189,239,191,189,125,90,124,112,239,191,189,239,191,189,239,191,189,93,239,191,189,33,239,191,189,57,3,58,64,71,46,239,191,189,112,239,191,189,199,169,239,191,189,87,113,33,113,89,118,68,28,239,191,189,15,239,191,189,98,239,191,189,58,239,191,189,98,239,191,189,220,170,57,3,105,239,191,189,49,39,239,191,189,239,191,189,49,239,191,189,120,43,37,211,139,36,239,191,189,239,191,189,100,239,191,189,239,191,189,97,5,239,191,189,41,110,216,156,13,79,239,191,189,239,191,189,239,191,189,28,112,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,18,239,191,189,111,239,191,189,112,239,191,189,24,22,223,161,86,74,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,79,51,239,191,189,239,191,189,239,191,189,239,191,189,111,8,99,239,191,189,54,15,239,191,189,27,8,71,78,113,82,70,239,191,189,73,239,191,189,239,191,189,111,239,191,189,95,113,88,239,191,189,239,191,189,69,239,191,189,44,239,191,189,85,239,191,189,49,239,191,189,239,191,189,116,103,43,87,239,191,189,239,191,189,239,191,189,59,65,123,239,191,189,239,191,189,85,17,239,191,189,5,239,191,189,239,191,189,113,15,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,32,239,191,189,115,29,217,165,209,150,29,44,22,239,191,189,25,36,47,239,191,189,13,62,239,191,189,103,239,191,189,1,239,191,189,239,191,189,73,118,239,191,189,96,98,239,191,189,90,46,26,239,191,189,8,108,239,191,189,239,191,189,63,47,231,130,188,239,191,189,239,191,189,63,239,191,189,211,189,239,191,189,0,239,191,189,59,43,13,114,94,80,92,90,222,189,239,191,189,39,68,239,191,189,9,239,191,189,211,160,239,191,189,63,71,55,13,35,68,239,191,189,9,239,191,189,227,162,171,239,191,189,108,239,191,189,238,128,150,14,100,83,239,191,189,80,42,239,191,189,239,191,189,239,191,189,11,54,43,0,28,44,239,191,189,239,191,189,4,30,239,191,189,46,114,239,191,189,83,239,191,189,239,191,189,27,30,56,239,191,189,239,191,189,26,33,61,239,191,189,37,239,191,189,98,239,191,189,239,191,189,106,239,191,189,93,239,191,189,239,191,189,125,239,191,189,126,45,239,191,189,239,191,189,208,149,104,239,191,189,239,191,189,0,51,85,14,239,191,189,92,239,191,189,18,27,10,194,138,6,239,191,189,67,29,59,127,127,20,53,127,52,23,239,191,189,239,191,189,11,17,9,74,239,191,189,239,191,189,239,191,189,127,239,191,189,46,239,191,189,239,191,189,239,191,189,81,239,191,189,116,239,191,189,114,32,239,191,189,119,87,239,191,189,209,148,21,239,191,189,112,239,191,189,239,191,189,61,121,239,191,189,81,239,191,189,9,239,191,189,127,238,147,135,239,191,189,21,239,191,189,103,239,191,189,45,109,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,56,239,191,189,117,239,191,189,111,14,106,46,84,91,239,191,189,0,2,107,239,191,189,239,191,189,50,103,239,191,189,109,108,69,44,103,239,191,189,25,239,191,189,239,191,189,62,70,239,191,189,208,157,20,239,191,189,26,9,2,36,121,127,239,191,189,55,12,239,191,189,45,107,84,239,191,189,239,191,189,239,191,189,51,56,70,35,239,191,189,14,48,85,94,239,191,189,239,191,189,13,124,6,98,239,191,189,239,191,189,239,191,189,48,66,118,239,191,189,13,32,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff9106225e",
                        container: "containers2de89ac466cd472daa58b19b3b90de27",
                        blob: "PageBlob44145bb1de0644d0be3a82b157b60484",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07219 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07219_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07219_s.txt", Encoding.UTF8);

    public Test07219() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{68,91,239,191,189,9,8,122,98,71,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,41,102,76,13,116,239,191,189,239,191,189,33,63,88,239,191,189,23,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,107,74,76,60,239,191,189,239,191,189,239,191,189,239,191,189,127,20,239,191,189,1,239,191,189,7,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,26,117,89,35,239,191,189,25,239,191,189,239,191,189,197,132,18,118,239,191,189,239,191,189,110,239,191,189,26,16,103,119,239,191,189,80,19,12,239,191,189,87,239,191,189,15,239,191,189,59,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,77,239,191,189,120,86,239,191,189,239,191,189,1,48,127,239,191,189,32,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,98,76,239,191,189,239,191,189,78,118,235,137,187,239,191,189,239,191,189,239,191,189,60,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,23,11,103,239,191,189,239,191,189,117,239,191,189,239,191,189,47,127,49,239,191,189,238,146,165,239,191,189,239,191,189,62,1,106,79,64,62,91,239,191,189,239,191,189,33,51,239,191,189,239,191,189,239,191,189,113,78,83,74,65,35,239,191,189,104,0,78,239,191,189,67,239,191,189,11,78,239,191,189,71,83,12,239,191,189,239,191,189,62,39,239,191,189,239,191,189,12,34,62,84,106,239,191,189,88,239,191,189,239,191,189,112,239,191,189,72,100,122,239,191,189,239,191,189,1,28,91,239,191,189,239,191,189,239,191,189,239,191,189,89,59,239,191,189,96,239,191,189,91,116,15,44,115,116,23,239,191,189,41,239,191,189,239,191,189,18,51,239,191,189,228,155,179,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,34,239,191,189,35,239,191,189,84,120,239,191,189,24,126,239,191,189,239,191,189,45,75,96,109,239,191,189,239,191,189,99,89,239,191,189,85,55,73,239,191,189,66,239,191,189,14,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,120,239,191,189,96,79,239,191,189,239,191,189,37,68,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,58,69,239,191,189,239,191,189,117,239,191,189,22,239,191,189,234,130,163,239,191,189,239,191,189,105,62,122,117,239,191,189,218,149,239,191,189,115,13,239,191,189,75,239,191,189,51,105,239,191,189,210,184,218,182,59,239,191,189,96,239,191,189,21,18,239,191,189,239,191,189,239,191,189,2,221,171,22,65,239,191,189,5,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,66,239,191,189,212,136,239,191,189,239,191,189,24,239,191,189,239,191,189,239,191,189,70,239,191,189,222,165,95,239,191,189,239,191,189,20,1,112,48,239,191,189,52,95,120,99,239,191,189,239,191,189,34,15,239,191,189,118,12,40,239,191,189,109,62,110,239,191,189,239,191,189,239,191,189,19,239,191,189,62,239,191,189,38,38,115,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,7,105,115,116,16,73,59,55,239,191,189,239,191,189,24,207,136,239,191,189,18,239,191,189,116,63,20,239,191,189,29,239,191,189,239,191,189,100,81,60,54,79,114,39,221,179,239,191,189,33,41,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,107,41,37,43,239,191,189,112,96,239,191,189,7,116,239,191,189,239,191,189,239,191,189,239,191,189,114,124,15,239,191,189,12,4,239,191,189,53,239,191,189,58,28,210,149,239,191,189,239,191,189,239,191,189,22,239,191,189,98,212,178,239,191,189,239,191,189,57,239,191,189,239,191,189,214,174,107,239,191,189,59,3,239,191,189,55,239,191,189,126,239,191,189,239,191,189,126,239,191,189,239,191,189,53,239,191,189,239,191,189,14,239,191,189,239,191,189,118,239,191,189,41,93,239,191,189,76,239,191,189,55,239,191,189,239,191,189,239,191,189,10,63,46,57,239,191,189,239,191,189,239,191,189,24,239,191,189,93,50,119,35,119,54,239,191,189,10,124,53,239,191,189,42,239,191,189,239,191,189,95,4,66,85,78,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,62,126,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,125,68,51,5,230,182,151,239,191,189,112,197,172,34,79,239,191,189,52,239,191,189,239,191,189,239,191,189,97,239,191,189,94,33,239,191,189,63,239,191,189,239,191,189,54,120,17,124,239,191,189,52,7,115,27,239,191,189,60,110,239,191,189,31,239,191,189,67,239,191,189,14,55,113,239,191,189,92,239,191,189,46,60,239,191,189,239,191,189,30,34,239,191,189,239,191,189,3,239,191,189,96,119,239,191,189,239,191,189,239,191,189,119,27,219,180,99,75,27,24,65,0,26,239,191,189,239,191,189,7,113,7,239,191,189,28,45,78,239,191,189,239,191,189,35,84,239,191,189,65,118,106,216,190,239,191,189,239,191,189,239,191,189,66,239,191,189,86,20,239,191,189,239,191,189,239,191,189,19,35,82,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,124,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,33,212,176,64,239,191,189,123,239,191,189,239,191,189,83,72,26,239,191,189,35,239,191,189,58,239,191,189,77,65,80,88,72,239,191,189,239,191,189,32,239,191,189,42,28,7,51,239,191,189,94,239,191,189,62,239,191,189,239,191,189,99,239,191,189,239,191,189,102,239,191,189,204,166,118,119,239,191,189,75,55,239,191,189,107,116,239,191,189,239,191,189,54,99,239,191,189,28,239,191,189,32,239,191,189,81,100,239,191,189,31,96,239,191,189,102,79,77,239,191,189,215,183,126,239,191,189,205,139,239,191,189,66,96,91,239,191,189,239,191,189,53,239,191,189,239,191,189,92,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,21,30,239,191,189,239,191,189,21,239,191,189,93,239,191,189,239,191,189,20,239,191,189,239,191,189,12,239,191,189,105,239,191,189,55,239,191,189,119,239,191,189,3,94,46,49,96,3,20,16,115,80,43,75,239,191,189,76,196,174,239,191,189,27,44,239,191,189,239,191,189,239,191,189,8,33,7,1,79,239,191,189,239,191,189,3,239,191,189,239,191,189,20,239,191,189,46,239,191,189,239,191,189,239,191,189,38,17,239,191,189,77,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,23,239,191,189,74,27,239,191,189,239,191,189,239,191,189,100,85,13,41,94,239,191,189,73,35,111,239,191,189,95,55,239,191,189,29,13,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,22,111,56,239,191,189,57,239,191,189,239,191,189,49,239,191,189,239,191,189,30,66,55,239,191,189,97,239,191,189,239,191,189,94,94,42,24,15,239,191,189,17,210,162,10,239,191,189,239,191,189,38,239,191,189,239,191,189,22,78,239,191,189,239,191,189,106,37,36,239,191,189,239,191,189,239,191,189,64,239,191,189,84,239,191,189,239,191,189,27,45,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,102,239,191,189,52,47,239,191,189,239,191,189,109,33,123,122,15,57,239,191,189,57,239,191,189,57,98,46,71,28,19,78,93,34,110,239,191,189,239,191,189,53,239,191,189,81,239,191,189,35,239,191,189,239,191,189,55,236,188,134,92,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,225,138,130,239,191,189,76,239,191,189,49,104,239,191,189,82,239,191,189,75,18,239,191,189,239,191,189,239,191,189,55,239,191,189,41,239,191,189,239,191,189,125,239,191,189,2,239,191,189,125,239,191,189,209,146,239,191,189,117,117,43,87,239,191,189,110,83,94,68,239,191,189,84,239,191,189,43,107,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers175310d22b4448bf801cb74c8b273047",
                        blob: "Blob1b488c5de8524cfa8e4ba01bb199e69c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07139 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07139_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07139_s.txt", Encoding.UTF8);

    public Test07139() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,27,239,191,189,95,13,79,59,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,194,168,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,33,127,116,239,191,189,6,93,12,15,120,239,191,189,10,65,47,239,191,189,67,113,107,105,239,191,189,239,191,189,43,239,191,189,19,39,239,191,189,239,191,189,23,43,28,44,239,191,189,239,191,189,239,191,189,46,239,191,189,99,25,239,191,189,239,191,189,114,73,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,95,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,47,95,1,239,191,189,239,191,189,88,239,191,189,121,81,23,239,191,189,9,239,191,189,113,0,50,36,239,191,189,239,191,189,239,191,189,31,86,63,56,10,2,239,191,189,97,95,239,191,189,239,191,189,239,191,189,11,109,239,191,189,71,239,191,189,36,239,191,189,52,239,191,189,27,51,239,191,189,19,239,191,189,239,191,189,39,94,95,239,191,189,56,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,239,191,189,73,26,239,191,189,239,191,189,239,191,189,239,191,189,100,235,185,153,0,10,90,36,4,35,239,191,189,36,97,114,88,2,0,239,191,189,86,32,38,239,191,189,239,191,189,39,239,191,189,96,239,191,189,92,101,1,239,191,189,0,30,239,191,189,43,59,239,191,189,239,191,189,239,191,189,45,114,239,191,189,239,191,189,239,191,189,105,239,191,189,98,106,127,70,26,239,191,189,50,239,191,189,215,172,62,239,191,189,202,160,70,239,191,189,239,191,189,3,239,191,189,239,191,189,5,239,191,189,71,29,93,58,23,40,239,191,189,102,5,239,191,189,239,191,189,42,239,191,189,89,239,191,189,30,239,191,189,239,191,189,239,191,189,74,239,191,189,126,239,191,189,19,239,191,189,48,239,191,189,116,0,239,191,189,46,239,191,189,239,191,189,239,191,189,35,97,239,191,189,223,151,9,37,112,239,191,189,71,212,159,239,191,189,239,191,189,32,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,32,73,62,239,191,189,65,57,101,87,239,191,189,9,239,191,189,81,54,123,53,7,83,239,191,189,36,98,216,180,62,92,239,191,189,239,191,189,84,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,79,126,239,191,189,18,80,239,191,189,239,191,189,107,20,72,35,239,191,189,239,191,189,239,191,189,108,10,239,191,189,89,72,239,191,189,5,239,191,189,55,61,239,191,189,239,191,189,239,191,189,58,239,191,189,102,239,191,189,239,191,189,56,87,239,191,189,53,115,73,61,67,239,191,189,239,191,189,125,73,239,191,189,76,69,107,212,149,239,191,189,87,127,6,5,239,191,189,71,239,191,189,105,239,191,189,239,191,189,105,214,173,239,191,189,39,94,42,103,54,239,191,189,239,191,189,28,4,54,16,72,239,191,189,92,68,112,102,239,191,189,239,191,189,74,124,50,81,239,191,189,239,191,189,239,191,189,239,191,189,118,104,69,30,207,162,239,191,189,239,191,189,26,3,239,191,189,239,191,189,36,59,123,239,191,189,239,191,189,65,89,239,191,189,13,239,191,189,106,3,239,191,189,5,91,239,191,189,43,239,191,189,104,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,75,19,109,41,108,239,191,189,0,239,191,189,15,1,99,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,70,239,191,189,71,239,191,189,239,191,189,65,239,191,189,85,78,107,239,191,189,239,191,189,239,191,189,2,239,191,189,14,239,191,189,87,239,191,189,58,214,129,75,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,230,176,157,239,191,189,239,191,189,239,191,189,3,61,239,191,189,239,191,189,239,191,189,114,239,191,189,24,121,34,239,191,189,89,239,191,189,8,51,239,191,189,1,7,112,73,239,191,189,45,239,191,189,239,191,189,240,160,139,133,239,191,189,65,48,86,27,11,239,191,189,239,191,189,111,43,239,191,189,36,104,210,134,67,35,239,191,189,47,239,191,189,239,191,189,19,239,191,189,239,191,189,59,100,8,16,239,191,189,36,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,84,3,239,191,189,121,97,63,45,239,191,189,63,75,239,191,189,40,239,191,189,239,191,189,239,191,189,57,113,239,191,189,239,191,189,209,166,239,191,189,27,239,191,189,3,239,191,189,68,74,74,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,32,223,181,88,115,239,191,189,239,191,189,102,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,96,86,239,191,189,239,191,189,58,239,191,189,239,191,189,32,118,239,191,189,239,191,189,239,191,189,73,78,10,239,191,189,1,199,129,90,239,191,189,120,94,239,191,189,239,191,189,34,43,52,35,45,75,199,163,239,191,189,239,191,189,20,125,107,36,56,239,191,189,62,239,191,189,121,2,58,29,239,191,189,120,239,191,189,104,49,2,77,239,191,189,239,191,189,99,239,191,189,89,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,27,231,179,166,239,191,189,108,239,191,189,239,191,189,72,239,191,189,125,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,46,239,191,189,26,239,191,189,85,239,191,189,201,177,239,191,189,17,124,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,105,239,191,189,239,191,189,239,191,189,210,142,239,191,189,239,191,189,39,239,191,189,126,236,180,162,52,49,36,214,148,86,239,191,189,239,191,189,239,191,189,68,196,132,38,239,191,189,202,145,239,191,189,26,2,82,239,191,189,239,191,189,57,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,51,239,191,189,93,239,191,189,71,239,191,189,239,191,189,26,53,239,191,189,239,191,189,239,191,189,30,61,239,191,189,78,104,239,191,189,239,191,189,239,191,189,99,239,191,189,97,7,239,191,189,239,191,189,239,191,189,239,191,189,8,74,239,191,189,239,191,189,7,17,9,38,76,239,191,189,41,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,111,239,191,189,223,164,35,32,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,210,160,239,191,189,70,54,45,69,210,173,22,44,239,191,189,39,28,101,239,191,189,239,191,189,29,127,119,239,191,189,18,55,239,191,189,239,191,189,63,239,191,189,42,48,239,191,189,45,65,56,42,121,229,128,131,239,191,189,239,191,189,45,239,191,189,71,88,239,191,189,35,124,7,239,191,189,239,191,189,104,239,191,189,80,89,44,239,191,189,105,239,191,189,239,191,189,239,191,189,72,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,61,72,118,239,191,189,73,16,239,191,189,239,191,189,45,124,239,191,189,239,191,189,112,50,92,113,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,221,175,111,19,29,94,111,239,191,189,127,100,58,239,191,189,32,69,239,191,189,16,28,239,191,189,239,191,189,127,41,53,106,239,191,189,111,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,3,105,106,239,191,189,87,54,239,191,189,108,112,72,239,191,189,66,121,53,113,60,43,104,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,121,5,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,55,87,239,191,189,125,49,239,191,189,41,239,191,189,25,54,77,239,191,189,239,191,189,116,239,191,189,80,76,239,191,189,239,191,189,29,39,16,20,239,191,189,78,82,239,191,189,69,239,191,189,120,92,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,54,239,191,189,57,239,191,189,30,102,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,90,35,99,82,39,66,239,191,189,47,239,191,189,12,239,191,189,239,191,189,239,191,189,107,48,239,191,189,118,239,191,189,201,158,90,239,191,189,100,239,191,189,55,239,191,189,80,239,191,189,62,215,149,25,239,191,189,2,239,191,189,94,239,191,189,239,191,189,215,136,126,88,239,191,189,239,191,189,75,55,67,239,191,189,85,33,126,203,184,11,0,64,239,191,189,100,239,191,189,75,239,191,189,103,239,191,189,52,78,239,191,189,239,191,189,216,172,239,191,189,69,239,191,189,12,64,32,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,113,28,88,239,191,189,97,239,191,189,1,126,95,71,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,118,101,107,78,239,191,189,239,191,189,222,191,120,239,191,189,239,191,189,68,111,239,191,189,239,191,189,87,239,191,189,239,191,189,220,132,115,15,239,191,189,46,115,239,191,189,239,191,189,239,191,189,100,9,74,72,8,43,239,191,189,70,7,239,191,189,64,121,10,239,191,189,239,191,189,3,57,239,191,189,239,191,189,239,191,189,32,52,239,191,189,2,3,85,239,191,189,31,16,239,191,189,37,63,19,239,191,189,239,191,189,103,239,191,189,86,82,80,7,66,98,122,239,191,189,56,239,191,189,239,191,189,239,191,189,120,194,141,239,191,189,239,191,189,21,113,6,40,68,239,191,189,239,191,189,239,191,189,99,84,239,191,189,239,191,189,239,191,189,78,60,239,191,189,239,160,160,51,25,239,191,189,116,239,191,189,120,29,239,191,189,42,239,191,189,100,98,239,191,189,49,239,191,189,239,191,189,239,191,189,97,109,18,239,191,189,104,41,239,191,189,14,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,36,239,191,189,126,239,191,189,39,239,191,189,81,239,191,189,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,18,101,239,191,189,239,191,189,239,191,189,61,113,239,191,189,239,191,189,63,196,131,43,122,239,191,189,239,191,189,235,178,171,239,191,189,239,191,189,28,239,191,189,16,74,239,191,189,7,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,78,239,191,189,75,239,191,189,36,239,191,189,84,31,239,191,189,53,35,67,196,162,77,31,23,49,73,65,239,191,189,239,191,189,104,106,239,191,189,210,170,214,160,76,103,239,191,189,61,208,156,0,95,23,239,191,189,106,66,239,191,189,124,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,78,99,58,239,191,189,73,239,191,189,5,81,7,126,127,239,191,189,239,191,189,45,6,239,191,189,6,76,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,17,201,134,41,239,191,189,239,191,189,53,219,132,239,191,189,239,191,189,217,150,219,183,127,18,107,98,239,191,189,113,239,191,189,208,182,239,191,189,79,239,191,189,84,5,239,191,189,107,111,99,120,239,191,189,127,90,239,191,189,239,191,189,78,72,239,191,189,239,191,189,71,239,191,189,44,93,42,239,191,189,64,239,191,189,10,124,59,79,23,239,191,189,207,158,63,239,191,189,239,191,189,214,188,27,56,117,30,44,55,36,54,239,191,189,19,123,239,191,189,239,191,189,239,191,189,49,95,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,40,40,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,103,239,191,189,63,44,76,239,191,189,63,239,191,189,93,27,239,191,189,97,104,239,191,189,239,191,189,25,111,239,191,189,63,77,10,34,17,239,191,189,69,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,19,1,239,191,189,93,228,169,178,239,191,189,96,239,191,189,35,0,239,191,189,104,239,191,189,126,22,239,191,189,239,191,189,53,120,69,239,191,189,93,114,7,104,73,105,239,191,189,239,191,189,239,191,189,59,215,172,239,191,189,91,18,239,191,189,239,191,189,239,191,189,70,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,78,21,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,69,96,239,191,189,239,191,189,64,104,90,239,191,189,41,102,196,178,239,191,189,37,34,4,49,104,239,191,189,50,239,191,189,84,239,191,189,239,191,189,75,239,191,189,239,191,189,83,17,239,191,189,239,191,189,75,239,191,189,239,191,189,59,239,191,189,39,239,191,189,85,49,239,191,189,13,62,88,239,191,189,8,39,41,239,191,189,125,239,191,189,84,239,191,189,74,239,191,189,239,191,189,48,239,191,189,239,191,189,109,7,239,191,189,87,239,191,189,121,239,191,189,239,191,189,239,191,189,38,239,191,189,83,18,105,70,118,21,70,239,191,189,66,92,239,191,189,96,122,83,48,239,191,189,215,146,73,58,239,191,189,75,239,191,189,239,191,189,239,191,189,106,239,191,189,122,20,72,62,204,186,42,127,239,191,189,239,191,189,239,191,189,122,106,79,95,239,191,189,239,191,189,40,3,115,239,191,189,28,76,239,191,189,239,191,189,239,191,189,8,121,239,191,189,98,12,47,239,191,189,75,45,19,239,191,189,239,191,189,239,191,189,41,239,191,189,10,55,239,191,189,109,239,191,189,239,191,189,239,191,189,58,39,61,65,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,6,70,61,199,172,239,191,189,30,33,75,8,17,103,239,191,189,239,191,189,119,239,191,189,51,43,87,12,62,125,37,239,191,189,76,81,83,53,23,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,31,43,239,191,189,8,125,239,191,189,18,111,105,239,191,189,125,21,239,191,189,239,191,189,23,239,191,189,96,239,191,189,239,191,189,239,191,189,52,17,93,123,239,191,189,25,239,191,189,239,191,189,114,82,239,191,189,49,80,94,239,191,189,239,191,189,67,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,66,239,191,189,239,191,189,13,239,191,189,95,54,100,239,191,189,39,239,191,189,239,191,189,98,239,191,189,239,191,189,119,106,29,13,28,239,191,189,239,191,189,200,140,239,191,189,93,12,239,191,189,54,239,191,189,8,239,191,189,16,15,71,66,239,191,189,80,43,239,191,189,12,110,5,239,191,189,206,150,239,191,189,239,191,189,14,106,239,191,189,239,191,189,239,191,189,68,127,239,191,189,37,45,239,191,189,113,82,86,45,21,31,62,239,191,189,82,76,239,191,189,239,191,189,26,239,191,189,124,16,83,239,191,189,205,189,239,191,189,49,239,191,189,239,191,189,38,68,239,191,189,204,143,239,191,189,29,104,198,186,61,239,191,189,64,239,191,189,219,143,239,191,189,75,239,191,189,109,239,191,189,118,239,191,189,112,52,44,239,191,189,88,111,239,191,189,239,191,189,33,239,191,189,97,239,191,189,219,144,26,194,175,239,191,189,121,84,56,62,89,19,3,239,191,189,46,61,116,239,191,189,99,67,239,191,189,114,60,239,191,189,99,239,191,189,239,191,189,239,191,189,41,8,28,49,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,34,239,191,189,50,239,191,189,24,239,191,189,101,65,95,61,126,32,29,64,104,84,239,191,189,94,199,190,239,191,189,43,47,34,40,51,3,239,191,189,47,239,191,189,239,191,189,239,191,189,121,51,239,191,189,239,191,189,10,239,191,189,75,52,95,239,191,189,239,191,189,203,157,16,239,191,189,239,191,189,239,191,189,239,191,189,18,41,23,43,239,191,189,239,191,189,105,15,239,191,189,239,191,189,116,18,239,191,189,81,239,191,189,239,191,189,234,179,144,73,239,191,189,19,239,191,189,95,239,191,189,96,100,239,191,189,23,114,68,90,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,110,239,191,189,10,102,239,191,189,239,191,189,19,122,239,191,189,105,239,191,189,12,7,96,76,22,239,191,189,239,191,189,196,150,5,239,191,189,239,191,189,114,106,25,239,191,189,33,239,191,189,16,88,69,29,33,78,239,191,189,239,191,189,13,116,39,77,234,162,174,239,191,189,55,82,35,73,239,191,189,38,239,191,189,239,191,189,239,191,189,105,111,111,239,191,189,26,239,191,189,21,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,17,239,191,189,104,118,86,239,191,189,72,27,239,191,189,239,191,189,239,191,189,51,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,101,29,239,191,189,239,191,189,76,239,191,189,239,191,189,17,92,239,191,189,207,156,10,72,108,17,239,191,189,67,239,191,189,44,66,239,191,189,77,239,191,189,239,191,189,28,239,191,189,9,239,191,189,25,6,239,191,189,60,43,239,191,189,45,50,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,25,79,239,191,189,239,191,189,90,88,31,239,191,189,57,239,191,189,35,101,106,88,201,157,12,239,191,189,103,67,239,191,189,239,191,189,96,239,191,189,119,63,239,191,189,117,239,191,189,44,122,239,191,189,239,191,189,50,109,51,80,239,191,189,239,191,189,81,239,191,189,101,239,191,189,239,191,189,8,107,239,191,189,239,191,189,121,17,119,24,35,239,191,189,34,50,239,191,189,239,191,189,114,27,121,239,191,189,11,12,45,107,239,191,189,56,239,191,189,77,14,239,191,189,21,73,239,191,189,55,239,191,189,239,191,189,11,123,5,239,191,189,239,191,189,239,191,189,98,239,191,189,34,15,59,68,98,239,191,189,239,191,189,239,191,189,80,90,239,191,189,103,239,191,189,210,139,239,191,189,239,191,189,239,191,189,104,45,14,95,239,191,189,239,191,189,35,22,103,239,191,189,116,239,191,189,239,191,189,87,239,191,189,239,191,189,119,40,239,191,189,80,239,191,189,86,60,239,191,189,57,239,191,189,100,58,57,239,191,189,21,23,239,191,189,77,52,239,191,189,195,128,64,33,76,34,239,191,189,100,239,191,189,239,191,189,75,239,191,189,239,191,189,90,98,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,103,86,102,239,191,189,239,191,189,46,239,191,189,94,239,191,189,239,191,189,10,239,191,189,83,239,191,189,239,191,189,110,47,239,191,189,97,97,239,191,189,85,102,72,239,191,189,119,222,141,213,132,239,191,189,105,93,239,191,189,91,42,239,191,189,98,113,239,191,189,69,6,12,10,65,5,111,239,191,189,239,191,189,239,191,189,100,59,239,191,189,117,239,191,189,17,239,191,189,30,239,191,189,99,79,33,239,191,189,18,239,191,189,56,239,191,189,87,126,239,191,189,239,191,189,44,108,27,239,191,189,72,92,6,239,191,189,7,55,239,191,189,4,31,239,191,189,239,191,189,239,191,189,74,58,239,191,189,107,13,239,191,189,36,125,239,191,189,40,239,191,189,239,191,189,239,191,189,79,60,59,239,191,189,15,22,90,40,201,146,24,53,92,24,78,239,191,189,239,191,189,54,239,191,189,81,239,191,189,13,67,239,191,189,97,30,239,191,189,239,191,189,84,78,52,102,239,191,189,56,239,191,189,200,136,239,191,189,208,141,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,239,191,189,123})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5f95f33153e648bebfde1c9b606122ef",
                        blob: "Blob62dc96b81585493598ac468481890fc8",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=2560-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07205 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07205_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07205_s.txt", Encoding.UTF8);

    public Test07205() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{213,161,239,191,189,115,39,239,191,189,239,191,189,45,17,239,191,189,239,191,189,13,42,11,239,191,189,59,239,191,189,8,69,125,239,191,189,3,25,60,239,191,189,239,191,189,64,50,43,195,178,239,191,189,117,54,94,239,191,189,109,97,239,191,189,239,191,189,46,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,66,25,239,191,189,17,15,102,69,210,135,93,239,191,189,57,79,239,191,189,1,78,239,191,189,195,152,239,191,189,239,191,189,239,191,189,73,239,191,189,102,78,239,191,189,8,47,93,7,7,239,191,189,239,191,189,18,39,239,191,189,239,191,189,14,239,191,189,69,15,239,191,189,73,239,191,189,239,191,189,2,239,191,189,8,27,67,239,191,189,68,75,82,239,191,189,239,191,189,23,239,191,189,239,191,189,88,239,191,189,239,191,189,50,87,239,191,189,239,191,189,39,65,239,191,189,2,32,239,191,189,239,191,189,120,60,216,179,239,191,189,91,38,66,239,191,189,21,92,239,191,189,239,191,189,239,191,189,20,55,239,191,189,108,239,191,189,239,191,189,15,71,22,55,239,191,189,19,239,191,189,239,191,189,55,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,79,239,191,189,100,239,191,189,110,50,239,191,189,239,191,189,28,239,191,189,239,191,189,39,82,44,239,191,189,239,191,189,239,191,189,95,204,175,49,37,239,191,189,239,191,189,239,191,189,239,191,189,94,11,10,37,239,191,189,30,59,239,191,189,239,191,189,103,239,191,189,239,191,189,82,239,191,189,82,239,191,189,239,191,189,61,1,239,191,189,50,239,191,189,239,191,189,39,91,28,239,191,189,221,168,41,47,239,191,189,28,239,191,189,211,178,239,191,189,239,191,189,24,239,191,189,239,191,189,87,102,69,239,191,189,239,191,189,12,18,92,239,191,189,43,99,239,191,189,239,191,189,239,191,189,195,128,239,191,189,239,191,189,239,191,189,94,94,83,239,191,189,55,232,137,186,239,191,189,239,191,189,3,36,40,0,239,191,189,52,69,39,108,15,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,16,50,239,191,189,45,82,121,239,191,189,3,239,191,189,13,23,100,81,44,239,191,189,239,191,189,39,62,239,191,189,239,191,189,200,142,58,239,191,189,93,239,191,189,239,191,189,239,191,189,90,239,191,189,108,239,191,189,43,239,191,189,239,191,189,110,239,191,189,239,191,189,209,175,114,239,191,189,105,56,16,7,239,191,189,239,191,189,239,191,189,16,214,140,96,239,191,189,44,239,191,189,239,191,189,27,207,156,201,176,239,191,189,46,239,191,189,31,57,239,191,189,87,78,239,191,189,81,108,239,191,189,75,239,191,189,37,2,239,191,189,86,239,191,189,47,25,74,239,191,189,223,150,239,191,189,239,191,189,84,118,239,191,189,6,52,239,191,189,239,191,189,46,58,239,191,189,239,191,189,239,191,189,49,42,117,23,239,191,189,32,127,85,59,91,239,191,189,111,121,239,191,189,239,191,189,239,191,189,95,104,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,37,74,55,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,4,239,191,189,50,64,239,191,189,23,53,94,239,191,189,239,191,189,99,239,191,189,239,191,189,75,43,239,191,189,239,191,189,239,191,189,103,32,64,39,239,191,189,239,191,189,58,239,191,189,239,191,189,121,113,239,191,189,239,191,189,239,191,189,222,149,239,191,189,44,40,2,113,120,239,191,189,10,85,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,24,239,191,189,83,103,239,191,189,239,191,189,5,63,5,215,146,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,72,49,125,64,239,191,189,110,239,191,189,88,239,191,189,96,239,191,189,88,239,191,189,239,191,189,239,191,189,34,43,239,191,189,14,239,191,189,239,191,189,94,18})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersd672d77d627248eca0e50821a838ba3c",
                        blob: "Blobc84e6a3c6ba94bd3a59fc53f9427580c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=512-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07059 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07059_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07059_s.txt", Encoding.UTF8);

    public Test07059() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,89,239,191,189,239,191,189,57,42,239,191,189,50,239,191,189,19,239,191,189,1,239,191,189,239,191,189,74,88,112,239,191,189,57,55,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,7,239,191,189,239,191,189,106,49,239,191,189,116,39,64,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,75,72,239,191,189,21,41,239,191,189,92,118,14,239,191,189,239,191,189,215,175,30,85,239,191,189,107,239,191,189,239,191,189,49,239,191,189,239,191,189,85,239,191,189,239,191,189,49,47,27,239,191,189,8,79,70,239,191,189,65,57,196,169,239,191,189,239,191,189,239,191,189,107,239,191,189,102,239,191,189,239,191,189,8,239,191,189,14,63,50,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,56,83,124,44,91,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,78,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,40,68,12,78,213,162,239,191,189,17,239,191,189,239,191,189,48,112,91,39,126,15,111,239,191,189,239,191,189,77,239,191,189,43,239,191,189,72,125,239,191,189,113,106,239,191,189,204,186,239,191,189,57,66,84,239,191,189,78,50,239,191,189,216,147,239,191,189,47,239,191,189,239,191,189,81,239,191,189,20,97,239,191,189,88,25,3,239,191,189,53,239,191,189,116,239,191,189,239,191,189,239,191,189,48,239,191,189,36,239,191,189,205,139,55,25,211,150,239,191,189,60,239,191,189,19,239,191,189,2,239,191,189,61,239,191,189,43,239,191,189,93,9,53,116,239,191,189,239,191,189,239,191,189,12,86,115,239,191,189,97,239,191,189,239,191,189,1,239,191,189,78,239,191,189,10,26,239,191,189,64,239,191,189,239,191,189,27,41,239,191,189,239,191,189,51,1,55,18,239,191,189,239,191,189,211,136,239,191,189,108,45,239,191,189,13,124,34,54,239,191,189,239,191,189,107,239,191,189,77,239,191,189,119,239,191,189,16,24,28,62,63,89,119,239,191,189,239,191,189,239,191,189,85,60,120,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,31,106,239,191,189,196,168,239,191,189,64,54,239,191,189,64,239,191,189,84,239,191,189,105,239,191,189,239,191,189,73,239,191,189,19,239,191,189,56,32,52,39,239,191,189,30,239,191,189,239,191,189,62,239,191,189,239,191,189,223,136,239,191,189,75,88,239,191,189,239,191,189,24,64,44,78,239,191,189,0,124,14,39,22,28,47,20,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,0,33,64,239,191,189,2,92,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,47,239,191,189,117,12,239,191,189,66,39,105,239,191,189,239,191,189,239,191,189,122,14,116,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,62,75,239,191,189,119,239,191,189,44,57,123,239,191,189,124,239,191,189,239,191,189,109,239,191,189,118,85,117,88,81,42,98,114,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,222,176,3,117,205,135,239,191,189,239,191,189,204,131,239,191,189,98,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,94,70,123,46,204,157,239,191,189,87,239,191,189,239,191,189,236,168,147,27,239,191,189,52,239,191,189,239,191,189,12,239,191,189,197,140,239,191,189,109,239,191,189,239,191,189,97,88,101,82,122,239,191,189,239,191,189,92,99,239,191,189,54,239,191,189,1,47,239,191,189,239,191,189,17,239,191,189,20,207,161,239,191,189,91,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,95,239,191,189,21,239,191,189,85,239,191,189,104,113,239,191,189,10,239,191,189,58,239,191,189,239,191,189,30,11,239,191,189,239,191,189,239,191,189,123,54,89,48,21,109,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,33,239,191,189,58,239,191,189,57,239,191,189,66,239,191,189,37,23,239,191,189,226,186,169,239,191,189,122,239,191,189,53,11,239,191,189,115,42,5,109,239,191,189,239,191,189,88,117,239,191,189,239,191,189,72,54,239,191,189,197,144,239,191,189,239,191,189,30,239,191,189,0,239,191,189,239,191,189,17,66,107,51,239,191,189,83,82,63,17,127,239,191,189,89,0,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,115,206,142,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,11,197,161,24,239,191,189,1,239,191,189,239,191,189,5,35,111,239,191,189,239,191,189,110,239,191,189,197,152,239,191,189,22,49,212,175,239,191,189,216,157,115,239,191,189,52,239,191,189,58,89,239,191,189,239,191,189,207,188,239,191,189,95,239,191,189,13,239,191,189,32,239,191,189,75,239,191,189,239,191,189,239,191,189,5,32,117,47,239,191,189,7,127,94,239,191,189,92,239,191,189,239,191,189,123,80,36,239,191,189,24,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,75,16,239,191,189,99,71,78,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,81,42,35,239,191,189,96,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,195,181,12,110,239,191,189,239,191,189,239,191,189,35,52,77,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,104,217,137,18,120,239,191,189,239,191,189,4,81,53,239,191,189,86,39,239,191,189,239,191,189,53,239,191,189,104,239,191,189,20,96,77,61,239,191,189,239,191,189,45,239,191,189,239,191,189,18,103,49,28,239,191,189,239,191,189,62,239,191,189,57,109,102,38,239,191,189,7,29,75,239,191,189,112,239,191,189,239,191,189,197,172,20,37,238,157,130,26,239,191,189,239,191,189,31,75,239,191,189,37,239,191,189,239,191,189,3,239,191,189,239,191,189,77,101,239,191,189,239,191,189,118,1,100,89,88,48,239,191,189,201,129,48,102,15,101,83,11,46,19,86,36,18,116,77,26,239,191,189,239,191,189,22,51,71,72,203,174,42,236,177,158,35,239,191,189,68,41,239,191,189,239,191,189,239,191,189,26,64,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,198,135,40,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,34,239,191,189,239,191,189,239,191,189,239,191,189,44,57,103,119,239,191,189,0,64,126,239,191,189,239,191,189,79,239,191,189,58,239,191,189,239,191,189,37,42,118,60,239,191,189,127,239,191,189,239,191,189,0,123,239,191,189,5,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,7,95,15,120,239,191,189,70,239,191,189,96,90,239,191,189,123,239,191,189,80,239,191,189,239,191,189,62,239,191,189,239,191,189,79,69,75,103,239,191,189,239,191,189,104,59,239,191,189,239,191,189,239,191,189,63,239,191,189,119,239,191,189,239,191,189,239,191,189,26,239,191,189,86,1,56,46,239,191,189,239,191,189,239,191,189,109,206,180,239,191,189,77,239,191,189,100,239,191,189,114,239,191,189,239,191,189,239,191,189,20,239,191,189,126,104,239,191,189,6,239,191,189,27,239,191,189,3,239,191,189,109,54,111,65,84,239,191,189,22,23,239,191,189,239,191,189,60,88,239,191,189,239,191,189,239,191,189,100,23,239,191,189,3,5,105,39,239,191,189,6,74,216,153,125,39,239,191,189,239,191,189,106,239,191,189,70,239,191,189,239,191,189,97,16,239,191,189,91,108,239,191,189,53,239,191,189,90,239,191,189,239,191,189,38,239,191,189,239,191,189,64,239,191,189,239,191,189,114,69,104,105,239,191,189,123,99,239,191,189,239,191,189,239,191,189,56,85,239,191,189,64,213,134,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8329352c5eaf490da983de8961d0d541",
                        blob: "PageBlob51d551ceff0843b5bde6578f2fea0b48",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07159 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07159_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07159_s.txt", Encoding.UTF8);

    public Test07159() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{26,84,239,191,189,70,239,191,189,215,187,239,191,189,239,191,189,77,239,191,189,2,239,191,189,120,118,57,239,191,189,239,191,189,239,191,189,104,27,239,191,189,239,191,189,194,160,239,191,189,239,191,189,195,179,27,243,163,131,187,104,67,116,239,191,189,11,118,87,239,191,189,0,105,74,239,191,189,239,191,189,74,239,191,189,46,227,139,190,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,74,50,239,191,189,95,5,239,191,189,14,239,191,189,16,54,239,191,189,239,191,189,239,191,189,68,239,191,189,88,86,90,27,239,191,189,33,239,191,189,55,103,228,187,158,239,191,189,239,191,189,17,230,182,142,110,205,154,239,191,189,239,191,189,59,239,191,189,30,239,191,189,239,191,189,239,191,189,3,215,187,105,79,74,10,15,239,191,189,239,191,189,239,191,189,103,122,73,30,46,115,65,37,239,191,189,60,53,239,191,189,239,191,189,239,191,189,106,239,191,189,65,117,116,101,239,191,189,239,191,189,25,239,191,189,239,191,189,37,24,126,239,191,189,219,167,239,191,189,239,191,189,51,113,61,239,191,189,13,56,221,135,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,119,201,154,50,95,112,239,191,189,97,239,191,189,87,9,90,239,191,189,94,6,239,191,189,77,44,44,239,191,189,239,191,189,239,191,189,239,191,189,103,60,239,191,189,3,194,137,239,191,189,239,191,189,104,109,239,191,189,79,18,13,239,191,189,73,97,112,16,239,191,189,99,4,239,191,189,25,40,239,191,189,239,191,189,239,191,189,213,143,32,239,191,189,239,191,189,67,50,239,191,189,239,191,189,109,1,215,169,239,191,189,239,191,189,239,191,189,41,14,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,34,99,94,111,239,191,189,239,191,189,104,239,191,189,239,191,189,77,239,191,189,109,239,191,189,218,191,114,239,191,189,111,57,2,239,191,189,99,239,191,189,239,191,189,26,239,191,189,114,239,191,189,239,191,189,239,191,189,5,2,239,191,189,33,207,150,103,239,191,189,27,71,64,239,191,189,198,159,124,239,191,189,37,239,191,189,239,191,189,112,214,171,239,191,189,239,191,189,81,239,191,189,110,127,239,191,189,239,191,189,28,239,191,189,239,191,189,20,71,239,191,189,116,239,191,189,11,41,10,96,84,239,191,189,239,191,189,44,239,191,189,80,115,120,239,191,189,239,191,189,16,239,191,189,239,191,189,90,82,17,239,191,189,239,191,189,40,239,191,189,239,191,189,29,42,239,191,189,239,191,189,239,191,189,88,239,191,189,44,120,239,191,189,239,191,189,101,117,87,239,191,189,37,36,98,29,11,71,59,87,112,122,38,239,191,189,87,99,239,191,189,58,0,34,239,191,189,54,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,75,73,36,96,28,120,2,239,191,189,239,191,189,110,10,220,139,239,191,189,239,191,189,79,45,239,191,189,107,121,201,156,102,239,191,189,67,239,191,189,32,239,191,189,36,239,191,189,119,37,105,239,191,189,239,191,189,50,15,93,239,191,189,239,191,189,239,191,189,120,48,239,191,189,239,191,189,69,1,84,239,191,189,87,94,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,217,144,239,191,189,239,191,189,12,239,191,189,239,191,189,115,239,191,189,239,191,189,64,239,191,189,222,128,239,191,189,81,108,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,114,71,24,239,191,189,64,121,68,117,92,239,191,189,28,8,38,239,191,189,36,239,191,189,17,239,191,189,113,100,82,113,239,191,189,239,191,189,12,114,49,64,35,239,191,189,219,170,21,239,191,189,85,239,191,189,239,191,189,76,50,22,239,191,189,43,239,191,189,75,239,191,189,119,239,191,189,239,191,189,72,195,167,43,116,103,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,72,4,81,98,239,191,189,114,239,191,189,91,95,239,191,189,196,160,91,239,191,189,38,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,95,83,239,191,189,54,239,191,189,239,191,189,84,4,69,239,191,189,99,206,167,217,128,239,191,189,79,239,191,189,1,68,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,12,239,191,189,15,239,191,189,59,68,239,191,189,7,91,239,191,189,2,60,239,191,189,16,77,13,239,191,189,111,16,239,191,189,77,15,239,191,189,111,37,29,239,191,189,90,239,191,189,108,239,191,189,120,23,239,191,189,239,191,189,113,239,191,189,19,63,89,61,239,191,189,24,239,191,189,78,239,191,189,239,191,189,62,101,239,191,189,105,239,191,189,9,105,239,191,189,93,239,191,189,239,191,189,30,70,77,36,239,191,189,70,54,239,191,189,117,116,101,239,191,189,239,191,189,92,209,136,15,239,191,189,123,239,191,189,215,144,95,28,125,239,191,189,2,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,24,239,191,189,209,170,239,191,189,22,42,239,191,189,239,191,189,239,191,189,13,19,239,191,189,90,122,239,191,189,16,239,191,189,239,191,189,239,191,189,49,239,191,189,65,68,79,84,239,191,189,239,191,189,239,191,189,239,191,189,17,103,239,191,189,124,239,191,189,205,169,239,191,189,76,122,52,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,36,239,191,189,239,191,189,239,191,189,103,18,239,191,189,112,114,239,191,189,91,54,78,84,239,191,189,0,239,191,189,60,3,98,239,191,189,56,43,239,191,189,19,239,191,189,239,191,189,239,191,189,80,123,100,117,239,191,189,53,7,48,239,191,189,197,162,239,191,189,91,28,239,191,189,21,43,239,191,189,72,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,119,109,239,191,189,52,84,95,239,191,189,124,239,191,189,61,239,191,189,239,191,189,217,163,239,191,189,239,191,189,239,191,189,239,191,189,118,97,239,191,189,80,28,239,191,189,239,191,189,239,191,189,210,165,65,239,191,189,2,239,191,189,121,239,191,189,57,239,191,189,114,239,191,189,239,191,189,101,239,191,189,10,239,191,189,222,168,67,82,59,239,191,189,239,191,189,239,191,189,32,239,191,189,20,38,81,239,191,189,108,239,191,189,72,58,239,191,189,58,239,191,189,88,84,106,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,209,191,61,239,191,189,83,239,191,189,239,191,189,35,239,191,189,10,91,239,191,189,239,191,189,111,18,118,127,95,62,239,191,189,108,239,191,189,194,164,239,191,189,239,191,189,239,191,189,209,131,52,48,239,191,189,15,239,191,189,67,103,19,239,191,189,72,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,55,103,239,191,189,87,239,191,189,6,97,239,191,189,56,64,1,239,191,189,239,191,189,77,103,239,191,189,197,159,82,217,177,239,191,189,19,44,239,191,189,99,239,191,189,22,101,239,191,189,71,27,239,191,189,239,191,189,117,239,191,189,25,122,239,191,189,45,239,191,189,239,191,189,214,155,65,105,121,239,191,189,239,191,189,65,48,239,191,189,97,239,191,189,45,239,191,189,84,239,191,189,239,191,189,35,127,74,87,86,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,125,74,239,191,189,36,10,239,191,189,239,191,189,120,239,191,189,65,239,191,189,239,191,189,53,35,239,191,189,195,186,17,239,191,189,239,191,189,47,96,239,191,189,216,174,239,191,189,239,191,189,239,191,189,239,191,189,92,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,106,239,191,189,239,191,189,239,191,189,106,57,239,191,189,20,51,239,191,189,53,43,239,191,189,60})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06777 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06777_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06777_s.txt", Encoding.UTF8);

    public Test06777() : base(recordedRequest, recordedResponse, "accounts8d439ff68df60a1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,119,2,239,191,189,239,191,189,239,191,189,47,218,135,239,191,189,33,239,191,189,29,239,191,189,92,0,37,122,32,24,239,191,189,239,191,189,66,239,191,189,126,17,197,177,239,191,189,57,239,191,189,20,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,106,239,191,189,239,191,189,239,191,189,28,221,166,114,239,191,189,13,127,239,191,189,46,12,239,191,189,52,35,119,239,191,189,239,191,189,125,8,78,239,191,189,13,239,191,189,82,37,239,191,189,69,64,239,191,189,239,191,189,58,27,110,239,191,189,98,51,31,62,60,43,57,126,239,191,189,239,191,189,239,191,189,88,239,191,189,108,79,97,22,97,239,191,189,6,239,191,189,72,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,21,112,239,191,189,62,239,191,189,34,239,191,189,239,191,189,62,239,191,189,239,191,189,118,239,191,189,239,191,189,56,239,191,189,110,216,134,104,43,25,239,191,189,239,191,189,239,191,189,239,191,189,95,65,239,191,189,239,191,189,235,180,147,113,87,222,175,215,148,115,113,67,10,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,29,59,239,191,189,76,93,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,83,239,191,189,83,239,191,189,239,191,189,239,191,189,61,124,89,219,150,67,18,239,191,189,239,191,189,15,239,191,189,239,191,189,110,75,103,239,191,189,239,191,189,239,191,189,239,191,189,104,53,120,92,23,239,191,189,52,239,191,189,239,191,189,30,239,191,189,239,191,189,76,239,191,189,73,99,124,102,66,239,191,189,239,191,189,57,102,16,239,191,189,19,87,52,239,191,189,91,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,65,63,97,239,191,189,96,239,191,189,95,88,103,239,191,189,37,239,191,189,239,191,189,26,116,10,59,46,239,191,189,104,111,3,68,0,32,85,76,239,191,189,19,239,191,189,118,239,191,189,239,191,189,92,37,2,67,39,216,142,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,112,239,191,189,239,191,189,239,191,189,125,83,239,191,189,92,239,191,189,61,239,191,189,97,110,11,239,191,189,239,191,189,68,239,191,189,77,239,191,189,73,239,191,189,239,191,189,114,239,191,189,19,85,65,239,191,189,239,191,189,87,239,191,189,239,191,189,115,239,191,189,239,191,189,122,22,35,239,191,189,66,239,191,189,239,191,189,6,239,191,189,239,191,189,1,239,191,189,79,239,191,189,69,239,191,189,99,239,191,189,239,191,189,27,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,111,239,191,189,37,239,191,189,239,191,189,201,189,42,239,191,189,6,239,191,189,13,107,239,191,189,91,239,191,189,63,221,139,126,106,107,16,4,239,191,189,221,170,239,191,189,37,33,239,191,189,239,191,189,1,239,191,189,114,239,191,189,239,191,189,10,239,191,189,239,191,189,27,27,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,13,117,93,239,191,189,73,103,239,191,189,3,239,191,189,32,35,1,31,16,4,239,191,189,106,13,12,239,191,189,115,239,191,189,239,191,189,52,239,191,189,5,99,79,239,191,189,239,191,189,6,30,46,239,191,189,239,191,189,239,191,189,239,191,189,212,140,239,191,189,239,191,189,110,210,135,239,191,189,239,191,189,102,10,22,18,239,191,189,239,191,189,239,191,189,118,111,239,191,189,41,239,191,189,67,4,239,191,189,83,54,26,4,239,191,189,95,113,84,229,149,128,114,239,191,189,5,239,191,189,87,77,239,191,189,88,56,239,191,189,239,191,189,21,119,46,72,47,25,239,191,189,239,191,189,72,239,191,189,74,26,239,191,189,109,239,191,189,38,6,239,191,189,239,191,189,45,92,112,52,42,113,239,191,189,63,239,191,189,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff68df60a1",
                        container: "containers104e0b15df574167925190baf1418074",
                        blob: "Blob593d25f41f544779822752cddf39f4af",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07141 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07141_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07141_s.txt", Encoding.UTF8);

    public Test07141() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{78,98,239,191,189,123,93,239,191,189,64,36,48,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,56,43,110,58,33,91,69,66,239,191,189,121,81,239,191,189,239,191,189,103,83,239,191,189,239,191,189,42,239,191,189,6,74,239,191,189,239,191,189,239,191,189,91,31,60,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,94,40,9,239,191,189,19,65,119,53,27,49,239,191,189,210,138,24,84,22,239,191,189,104,239,191,189,239,191,189,239,191,189,79,71,54,239,191,189,239,191,189,2,31,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,62,73,41,109,239,191,189,68,239,191,189,46,239,191,189,47,239,191,189,239,191,189,6,239,191,189,104,239,191,189,29,239,191,189,46,14,239,191,189,211,160,52,63,88,239,191,189,49,239,191,189,4,17,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,85,239,191,189,32,239,191,189,6,39,13,239,191,189,55,29,239,191,189,239,191,189,239,191,189,239,191,189,49,93,117,239,191,189,56,239,191,189,239,191,189,65,239,191,189,18,42,239,191,189,55,45,210,187,239,191,189,239,191,189,108,239,191,189,120,239,191,189,89,239,191,189,120,39,67,33,113,239,191,189,239,191,189,96,69,215,167,239,191,189,87,60,239,191,189,8,104,116,35,117,239,191,189,127,239,191,189,239,191,189,101,98,239,191,189,90,56,43,74,67,4,239,191,189,16,17,101,239,191,189,239,191,189,78,88,239,191,189,98,96,239,191,189,25,100,102,239,191,189,99,55,3,239,191,189,239,191,189,239,191,189,239,191,189,80,116,239,191,189,14,239,191,189,95,39,25,239,191,189,99,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,18,28,118,73,75,239,191,189,119,239,191,189,239,191,189,239,191,189,70,121,32,239,191,189,23,239,191,189,239,191,189,15,239,191,189,126,239,191,189,239,191,189,73,239,191,189,33,101,239,191,189,58,37,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,112,16,89,239,191,189,83,36,71,239,191,189,239,191,189,21,238,177,142,239,191,189,86,37,111,211,163,40,239,191,189,72,60,95,19,91,239,191,189,90,239,191,189,59,239,191,189,198,159,239,191,189,36,29,78,36,239,191,189,55,210,190,37,54,15,11,125,239,191,189,239,191,189,110,8,54,2,239,191,189,239,191,189,28,122,64,239,191,189,96,103,56,27,239,191,189,7,239,191,189,239,191,189,48,49,7,32,239,191,189,23,239,191,189,19,239,191,189,23,41,3,80,104,239,191,189,108,50,239,191,189,239,191,189,20,239,191,189,8,239,191,189,14,90,42,207,153,239,191,189,75,46,37,27,76,110,239,191,189,77,88,31,17,118,61,5,81,61,121,239,191,189,239,191,189,126,239,191,189,239,191,189,87,38,239,191,189,71,40,100,18,85,239,191,189,33,122,239,191,189,239,191,189,239,191,189,239,191,189,52,28,117,33,31,218,145,239,191,189,239,191,189,239,191,189,3,80,239,191,189,239,191,189,50,76,26,239,191,189,239,191,189,239,191,189,65,5,69,52,58,3,50,239,191,189,239,191,189,86,57,87,95,69,239,191,189,14,93,239,191,189,239,191,189,239,191,189,115,61,239,191,189,37,19,64,116,239,191,189,239,191,189,96,239,191,189,39,35,239,191,189,239,191,189,22,47,239,191,189,239,191,189,239,191,189,94,195,161,85,239,191,189,239,191,189,114,239,191,189,87,61,239,191,189,99,239,191,189,16,239,191,189,4,106,32,32,239,191,189,239,191,189,120,26,239,191,189,99,18,51,127,82,239,191,189,239,191,189,112,239,191,189,239,191,189,103,239,191,189,239,191,189,69,91,26,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,79,18,84,239,191,189,15,239,191,189,239,191,189,71,239,191,189,5,239,191,189,239,191,189,239,191,189,72,239,191,189,95,76,239,191,189,239,191,189,239,191,189,104,36,239,191,189,6,43,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,32,43,99,24,207,163,194,175,239,191,189,8,239,191,189,83,239,191,189,83,219,144,239,191,189,56,86,239,191,189,111,105,121,239,191,189,239,191,189,74,198,190,239,191,189,239,191,189,36,12,31,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,49,40,239,191,189,239,191,189,239,191,189,32,239,191,189,79,37,69,75,239,191,189,239,191,189,83,239,191,189,239,191,189,221,144,239,191,189,239,191,189,3,30,239,191,189,239,191,189,52,239,191,189,239,191,189,20,239,191,189,87,239,191,189,239,191,189,239,191,189,62,64,239,191,189,239,191,189,239,191,189,41,19,110,107,239,191,189,239,191,189,106,38,239,191,189,239,191,189,22,6,239,191,189,9,239,191,189,239,191,189,18,120,239,191,189,73,239,191,189,113,4,59,121,239,191,189,239,191,189,20,21,119,9,41,239,191,189,92,201,149,239,191,189,36,11,31,14,14,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,43,199,185,106,26,239,191,189,15,50,239,191,189,53,117,17,239,191,189,117,12,239,191,189,16,239,191,189,1,91,94,84,239,191,189,41,239,191,189,98,66,62,212,128,4,18,31,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,99,194,134,213,169,239,191,189,239,191,189,75,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,114,239,191,189,64,239,191,189,84,239,191,189,239,191,189,28,29,49,99,239,191,189,196,188,30,81,9,71,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,77,12,34,19,49,239,191,189,28,61,121,126,50,79,239,191,189,111,239,191,189,105,239,191,189,70,10,239,191,189,51,239,191,189,11,232,153,161,47,239,191,189,239,191,189,239,191,189,239,191,189,116,213,166,15,239,191,189,30,49,107,239,191,189,239,191,189,67,239,191,189,31,239,191,189,90,239,191,189,239,191,189,101,104,57,239,191,189,239,191,189,112,26,99,22,42,239,191,189,239,191,189,236,153,176,239,191,189,56,239,191,189,23,201,150,110,239,191,189,21,239,191,189,91,239,191,189,239,191,189,9,239,191,189,46,62,25,57,63,97,239,191,189,113,117,101,239,191,189,239,191,189,239,191,189,243,152,133,152,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,96,239,191,189,239,191,189,36,239,191,189,112,41,89,42,239,191,189,90,204,179,90,78,53,239,191,189,100,239,191,189,61,234,138,147,124,25,239,191,189,18,93,38,6,80,239,191,189,89,239,191,189,72,239,191,189,99,239,191,189,239,191,189,239,191,189,98,82,239,191,189,239,191,189,62,239,191,189,239,191,189,68,239,191,189,30,121,239,191,189,239,191,189,118,108,77,239,191,189,239,191,189,239,191,189,93,239,191,189,50,36,239,191,189,95,114,239,191,189,17,239,191,189,239,191,189,62,239,191,189,239,191,189,219,151,209,156,61,95,239,191,189,127,25,121,239,191,189,239,191,189,104,239,191,189,97,239,191,189,50,239,191,189,239,191,189,239,191,189,32,239,191,189,75,239,191,189,71,8,239,191,189,118,239,191,189,239,191,189,239,191,189,214,166,223,155,239,191,189,106,112,239,191,189,222,178,239,191,189,61,239,191,189,239,191,189,239,191,189,121,53,239,191,189,23,239,191,189,239,191,189,35,68,118,60,81,94,23,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,49,239,191,189,64,239,191,189,81,72,239,191,189,239,191,189,103})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5f95f33153e648bebfde1c9b606122ef",
                        blob: "Blob62dc96b81585493598ac468481890fc8",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07160 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07160_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07160_s.txt", Encoding.UTF8);

    public Test07160() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,45,94,213,142,239,191,189,68,10,56,95,239,191,189,239,191,189,126,47,45,77,83,239,191,189,99,239,191,189,12,111,99,239,191,189,109,49,121,105,239,191,189,72,239,191,189,105,22,239,191,189,91,61,70,6,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,14,239,191,189,96,239,191,189,24,43,105,21,201,130,103,93,95,239,191,189,31,239,191,189,99,202,184,239,191,189,239,191,189,7,77,83,209,169,117,239,191,189,239,191,189,3,25,239,191,189,239,191,189,90,82,239,191,189,28,80,239,191,189,92,69,115,195,158,239,191,189,50,26,120,239,191,189,27,117,239,191,189,239,191,189,239,191,189,30,239,191,189,19,55,70,239,191,189,239,191,189,58,127,78,217,166,127,239,191,189,9,239,191,189,19,239,191,189,91,239,191,189,124,67,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,9,104,103,239,191,189,56,68,79,8,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,93,239,191,189,78,100,198,167,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,67,12,53,239,191,189,10,119,239,191,189,239,191,189,68,239,191,189,95,104,19,239,191,189,81,239,191,189,239,191,189,44,239,191,189,239,191,189,112,239,191,189,113,112,30,97,116,112,239,191,189,113,84,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,87,49,239,191,189,239,191,189,93,79,5,94,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,83,103,239,191,189,239,191,189,196,150,239,191,189,3,239,191,189,239,191,189,211,170,206,168,95,239,191,189,239,191,189,26,40,212,180,81,239,191,189,61,33,107,239,191,189,239,191,189,117,239,191,189,218,156,239,191,189,239,191,189,108,75,239,191,189,4,239,191,189,52,239,191,189,46,33,239,191,189,239,191,189,239,191,189,54,239,191,189,51,98,239,191,189,239,191,189,239,191,189,239,191,189,36,1,239,191,189,106,120,89,239,191,189,218,142,239,191,189,4,54,26,21,60,20,239,191,189,51,239,191,189,37,239,191,189,48,41,239,191,189,124,52,10,239,191,189,18,239,191,189,239,191,189,239,191,189,106,239,191,189,68,239,191,189,239,191,189,93,213,160,103,239,191,189,83,239,191,189,33,121,31,116,69,195,184,201,158,239,191,189,97,239,191,189,239,191,189,37,239,191,189,64,123,239,191,189,32,70,121,239,191,189,239,191,189,82,239,191,189,33,239,191,189,239,191,189,80,239,191,189,239,191,189,121,96,239,191,189,19,239,191,189,122,239,191,189,239,191,189,32,55,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,104,239,191,189,239,191,189,36,239,191,189,239,191,189,13,17,239,191,189,239,191,189,239,191,189,239,191,189,36,30,34,121,239,191,189,8,239,191,189,86,9,18,57,239,191,189,239,191,189,83,0,14,239,191,189,239,191,189,57,239,191,189,28,239,191,189,60,3,239,191,189,239,191,189,69,239,191,189,83,239,191,189,115,239,191,189,239,191,189,107,2,21,94,60,239,191,189,120,54,239,191,189,86,89,239,191,189,71,48,239,191,189,239,191,189,111,19,109,217,173,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,3,40,239,191,189,78,23,8,239,191,189,239,191,189,239,191,189,67,79,239,191,189,122,239,191,189,9,239,191,189,239,191,189,120,21,90,84,113,96,125,239,191,189,39,239,191,189,32,239,191,189,239,191,189,67,239,191,189,121,51,94,239,191,189,10,239,191,189,62,73,239,191,189,6,44,239,191,189,239,191,189,94,198,138,239,191,189,115,210,128,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,66,239,191,189,15,239,191,189,1,239,191,189,12})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1536-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07142 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07142_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07142_s.txt", Encoding.UTF8);

    public Test07142() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5f95f33153e648bebfde1c9b606122ef",
                        blob: "Blob62dc96b81585493598ac468481890fc8",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=3072-3583",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06669 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06669_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06669_s.txt", Encoding.UTF8);

    public Test06669() : base(recordedRequest, recordedResponse, "accounts8d439ff51f9db6f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,43,239,191,189,112,239,191,189,123,239,191,189,109,239,191,189,58,74,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,213,149,239,191,189,239,191,189,239,191,189,239,191,189,31,37,92,61,239,191,189,239,191,189,97,3,73,26,63,239,191,189,85,21,104,88,125,197,135,2,239,191,189,239,191,189,200,162,239,191,189,29,24,100,0,81,110,239,191,189,36,57,239,191,189,74,239,191,189,62,239,191,189,239,191,189,31,55,0,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,125,23,239,191,189,55,239,191,189,88,80,93,239,191,189,239,191,189,216,144,239,191,189,3,239,191,189,239,191,189,119,112,28,63,30,239,191,189,63,29,239,191,189,239,191,189,98,239,191,189,53,0,239,191,189,239,191,189,106,239,191,189,58,124,239,191,189,239,191,189,239,191,189,239,191,189,199,190,239,191,189,51,33,52,8,239,191,189,42,114,27,110,100,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,38,27,127,239,191,189,47,239,191,189,239,191,189,60,239,191,189,49,15,239,191,189,77,239,191,189,239,191,189,45,239,191,189,78,239,191,189,104,239,191,189,239,191,189,125,239,191,189,98,239,191,189,28,239,191,189,239,191,189,4,239,191,189,14,24,239,191,189,13,5,239,191,189,74,239,191,189,67,239,191,189,222,181,51,239,191,189,86,239,191,189,239,191,189,239,191,189,200,186,239,191,189,239,191,189,61,39,42,239,191,189,239,191,189,91,239,191,189,239,191,189,14,82,239,191,189,107,1,105,112,239,191,189,239,191,189,121,124,239,191,189,239,191,189,239,191,189,239,191,189,70,74,70,11,30,55,239,191,189,33,74,239,191,189,44,218,180,239,191,189,103,17,239,191,189,47,121,125,239,191,189,0,199,148,239,191,189,23,99,55,79,62,66,79,98,59,239,191,189,84,92,79,106,239,191,189,44,48,106,126,213,142,239,191,189,239,191,189,83,103,239,191,189,103,25,93,95,69,239,191,189,239,191,189,30,7,211,170,239,191,189,11,239,191,189,239,191,189,120,121,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,81,92,239,191,189,73,239,191,189,94,91,239,191,189,239,191,189,239,191,189,239,191,189,54,4,220,158,209,170,49,98,239,191,189,239,191,189,95,94,239,191,189,239,191,189,22,66,239,191,189,64,239,191,189,239,191,189,50,11,2,239,191,189,57,239,191,189,15,239,191,189,239,191,189,90,206,167,115,239,191,189,95,66,11,110,98,40,239,191,189,239,191,189,54,116,239,191,189,72,24,36,239,191,189,53,239,191,189,57,3,239,191,189,239,191,189,238,152,184,113,239,191,189,239,191,189,239,191,189,116,4,6,80,239,191,189,239,191,189,63,239,191,189,239,191,189,126,63,10,59,5,121,239,191,189,42,118,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,113,239,191,189,83,239,191,189,239,191,189,120,21,239,191,189,49,109,119,239,191,189,114,228,165,142,70,239,191,189,239,191,189,239,191,189,239,191,189,117,211,141,239,191,189,33,197,152,239,191,189,111,112,239,191,189,40,239,191,189,239,191,189,84,83,239,191,189,239,191,189,239,191,189,38,125,71,87,239,191,189,239,191,189,33,5,124,37,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,22,81,59,239,191,189,103,103,239,191,189,85,45,124,239,191,189,41,239,191,189,239,191,189,27,239,191,189,32,239,191,189,3,107,239,191,189,239,191,189,126,239,191,189,126,7,222,169,239,191,189,239,191,189,90,239,191,189,82,239,191,189,239,191,189,43,239,191,189,52,66,37,239,191,189,239,191,189,89,239,191,189,216,138,239,191,189,97,44,239,191,189,39,239,191,189,18,239,191,189,67,210,172,70,95,239,191,189,237,159,169,34,239,191,189,239,191,189,109,239,191,189,239,176,151,239,191,189,239,191,189,69,90,5,37,239,191,189,239,191,189,124,239,191,189,72,239,191,189,239,191,189,50,34,63,239,191,189,239,191,189,89,61,66,213,184,56,239,191,189,36,55,239,191,189,1,29,35,114,124,10,239,191,189,5,239,191,189,65,62,239,191,189,8,239,191,189,226,159,165,22,239,191,189,239,191,189,208,151,118,35,239,191,189,114,85,239,191,189,8,13,96,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,12,216,171,28,114,239,191,189,110,239,191,189,52,239,191,189,239,191,189,24,239,191,189,239,191,189,94,71,40,105,239,191,189,0,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,68,239,191,189,36,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,122,125,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,2,35,239,191,189,31,239,191,189,239,191,189,16,239,191,189,215,167,112,63,239,191,189,239,191,189,113,3,116,68,239,191,189,74,239,191,189,239,191,189,1,239,191,189,12,69,99,239,191,189,25,217,191,239,191,189,19,239,191,189,7,239,191,189,83,239,191,189,113,239,191,189,239,191,189,102,11,104,239,191,189,239,191,189,239,191,189,15,239,191,189,15,239,191,189,239,191,189,123,8,54,34,13,19,109,112,51,239,191,189,239,191,189,239,191,189,44,239,191,189,210,168,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,121,91,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,208,166,69,239,191,189,4,124,112,44,104,35,194,132,239,191,189,239,191,189,102,239,191,189,46,35,239,191,189,239,191,189,21,239,191,189,44,239,191,189,239,191,189,222,177,102,90,52,32,239,191,189,239,191,189,34,1,1,105,96,239,191,189,124,52,239,191,189,239,191,189,210,182,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,30,194,183,239,191,189,122,239,191,189,239,191,189,37,239,191,189,10,239,191,189,52,3,20,239,191,189,239,191,189,100,239,191,189,239,191,189,85,92,239,191,189,77,239,191,189,89,239,191,189,239,191,189,24,239,191,189,0,215,152,123,239,191,189,239,191,189,106,2,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,206,161,239,191,189,31,28,1,239,191,189,239,191,189,78,239,191,189,33,105,42,32,239,191,189,239,191,189,13,6,9,239,191,189,239,191,189,239,191,189,239,191,189,29,59,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,117,87,11,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,45,206,176,1,239,191,189,102,227,177,155,239,191,189,32,239,191,189,44,71,29,239,191,189,239,191,189,78,35,39,239,191,189,239,191,189,22,239,191,189,17,31,239,191,189,239,191,189,239,191,189,20,94,11,28,239,191,189,90,239,191,189,109,58,239,191,189,119,239,191,189,17,239,191,189,84,91,239,191,189,67,30,48,20,89,219,181,47,239,191,189,239,191,189,4,239,191,189,239,191,189,75,195,134,76,21,239,191,189,89,239,191,189,103,92,239,191,189,88,239,191,189,57,22,239,191,189,23,87,239,191,189,64,81,122,239,191,189,239,191,189,5,48,103,239,191,189,239,191,189,239,191,189,104,74,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,124,239,191,189,87,239,191,189,239,191,189,106,0,46,123,24,239,191,189,239,191,189,239,191,189,57,120,127,239,191,189,6,239,191,189,71,239,191,189,119,239,191,189,29,105,239,191,189,95,27,5,239,191,189,86,4,100,23,57,239,191,189,239,191,189,239,191,189,239,191,189,4,1,239,191,189,239,191,189,92,239,191,189,16,239,191,189,39,210,185,4,107,90,5,239,191,189,57,78,239,191,189,11,239,191,189,41,239,191,189,239,191,189,239,191,189,60,239,191,189,0,239,191,189,239,191,189,14,29,239,191,189,66,239,191,189,44,74,12,57,78,87,239,191,189,196,157,0,239,191,189,239,191,189,52,239,191,189,239,191,189,116,9,239,191,189,32,239,191,189,7,239,191,189,239,191,189,31,36,16,6,239,191,189,196,156,17,41,118,122,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,75,32,36,239,191,189,67,239,191,189,239,191,189,239,191,189,195,153,20,104,34,12,239,191,189,99,111,239,191,189,20,62,81,59,0,0,239,191,189,239,191,189,70,239,191,189,74,239,191,189,51,98,204,146,239,191,189,239,191,189,239,191,189,239,191,189,75,67,53,239,191,189,42,239,191,189,239,191,189,7,106,239,191,189,62,127,84,239,191,189,126,60,16,32,36,8,116,239,191,189,18,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,27,92,239,191,189,120,69,239,191,189,239,191,189,239,191,189,12,82,239,191,189,239,191,189,78,86,123,239,191,189,127,239,191,189,103,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,12,119,239,191,189,90,126,239,191,189,66,201,131,32,239,191,189,75,239,191,189,195,171,239,191,189,80,121,239,191,189,239,191,189,239,191,189,78,56,4,239,191,189,64,239,191,189,239,191,189,15,239,191,189,107,111,16,239,191,189,57,80,239,191,189,104,239,191,189,94,239,191,189,6,239,191,189,53,239,191,189,122,239,191,189,24,239,191,189,3,239,191,189,53,78,62,239,191,189,63,239,191,189,61,70,239,191,189,239,191,189,239,191,189,239,191,189,69,59,10,239,191,189,90,239,191,189,239,191,189,239,191,189,64,239,191,189,220,131,3,62,91,110,239,191,189,239,191,189,12,239,191,189,53,32,209,173,123,17,12,239,191,189,79,24,3,76,17,239,191,189,239,191,189,63,200,143,97,63,239,191,189,73,13,84,23,58,59,239,191,189,40,207,176,239,191,189,239,191,189,207,128,36,105,93,14,72,239,191,189,3,239,191,189,40,239,191,189,114,239,191,189,239,191,189,27,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,19,125,239,191,189,65,239,191,189,100,239,191,189,127,103,87,239,191,189,66,0,93,239,191,189,106,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,200,184,239,191,189,13,41,239,191,189,31,239,191,189,223,147,16,239,191,189,239,191,189,239,191,189,114,83,71,29,239,191,189,239,191,189,239,191,189,47,239,191,189,95,69,59,239,191,189,115,69,239,191,189,63,47,16,13,121,29,121,239,191,189,85,239,191,189,56,239,191,189,99,108,76,234,163,179,239,191,189,51,239,191,189,239,191,189,35,221,151,239,191,189,53,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,84,239,191,189,218,186,83,85,217,153,239,191,189,2,87,51,239,191,189,22,19,90,239,191,189,239,191,189,239,191,189,17,76,239,191,189,11,51,118,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,33,126,23,106,16,239,191,189,95,80,90,20,239,191,189,32,239,191,189,99,239,191,189,30,120,110,87,81,223,138,239,191,189,239,191,189,214,167,67,114,110,239,191,189,95,104,239,191,189,18,78,239,191,189,239,191,189,74,239,191,189,114,124,239,191,189,56,239,191,189,239,191,189,18,21,239,191,189,117,119,16,73,239,191,189,239,191,189,239,191,189,116,239,191,189,104,239,191,189,239,191,189,239,191,189,110,96,104,239,191,189,239,191,189,81,125,31,239,191,189,36,239,191,189,239,191,189,99,239,191,189,95,239,191,189,239,191,189,239,191,189,49,93,239,191,189,118,60,79,30,31,122,103,239,191,189,19,239,191,189,8,239,191,189,239,191,189,72,215,128,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,102,106,72,195,134,239,191,189,239,191,189,110,116,239,191,189,60,239,191,189,36,24,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,66,239,191,189,88,201,138,239,191,189,58,239,191,189,7,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,215,183,239,191,189,239,191,189,106,115,239,191,189,239,191,189,93,80,239,191,189,104,239,191,189,88,239,191,189,19,239,191,189,16,239,191,189,17,126,56,239,191,189,125,239,191,189,102,3,239,191,189,63,39,59,47,239,191,189,239,191,189,31,52,239,191,189,81,239,191,189,12,98,108,58,239,191,189,239,191,189,33,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,34,239,191,189,88,126,239,191,189,83,123,12,239,191,189,44,29,40,120,56,239,191,189,239,191,189,239,191,189,77,79,239,191,189,65,239,191,189,239,191,189,17,239,191,189,41,239,191,189,205,183,126,239,191,189,84,63,98,12,66,106,239,191,189,82,111,239,191,189,239,191,189,124,54,78,18,92,239,191,189,110,26,239,191,189,239,191,189,80,239,191,189,105,239,191,189,71,127,239,191,189,239,191,189,239,191,189,85,18,239,191,189,239,191,189,239,191,189,21,43,111,42,42,239,191,189,239,191,189,239,191,189,126,60,121,239,191,189,239,191,189,239,191,189,16,95,239,191,189,195,146,239,191,189,239,191,189,203,163,79,35,33,239,191,189,239,191,189,39,109,106,239,191,189,239,191,189,41,71,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,45,122,239,191,189,239,191,189,239,191,189,78,239,191,189,78,18,14,239,191,189,73,239,191,189,32,7,8,96,25,239,191,189,16,239,191,189,239,191,189,61,194,133,239,191,189,96,239,191,189,50,239,191,189,0,97,239,191,189,117,212,158,239,191,189,239,191,189,46,217,180,27,127,119,49,239,191,189,239,191,189,239,191,189,233,135,153,239,191,189,239,191,189,8,91,239,191,189,71,239,191,189,102,239,191,189,239,191,189,13,27,121,13,239,191,189,239,191,189,18,75,104,123,239,191,189,239,191,189,239,191,189,92,239,191,189,104,197,145,239,191,189,239,191,189,239,191,189,194,171,239,191,189,96,108,239,191,189,26,66,87,239,191,189,71,56,239,191,189,0,5,105,239,191,189,103,210,146,239,191,189,12,239,191,189,51,239,191,189,239,191,189,42,239,191,189,64,239,191,189,57,107,74,112,122,239,191,189,42,239,191,189,239,191,189,9,16,239,191,189,106,239,191,189,213,181,239,191,189,98,92,239,191,189,30,239,191,189,239,191,189,66,239,191,189,24,239,191,189,56,239,191,189,117,24,239,191,189,122,103,239,191,189,127,92,239,191,189,239,191,189,239,191,189,110,124,218,137,111,76,124,2,94,239,191,189,239,191,189,239,191,189,37,73,239,191,189,80,123,8,239,191,189,98,2,239,191,189,239,191,189,239,191,189,58,69,2,239,191,189,85,89,37,214,160,239,191,189,239,191,189,14,102,239,191,189,81,239,191,189,239,191,189,239,191,189,8,239,191,189,80,239,191,189,49,239,191,189,239,191,189,3,84,239,191,189,41,239,191,189,124,239,191,189,88,239,191,189,52,7,121,79,8,239,191,189,239,191,189,239,191,189,239,191,189,30,65,21,53,239,191,189,239,191,189,91,23,239,191,189,239,191,189,239,191,189,239,191,189,19,91,4,82,5,103,239,191,189,239,191,189,12,19,239,191,189,206,157,73,34,88,239,191,189,107,239,191,189,95,44,113,239,191,189,108,239,191,189,30,61,98,93,100,239,191,189,93,239,191,189,239,191,189,239,191,189,29,74,239,191,189,239,191,189,98,67,239,191,189,239,191,189,10,239,191,189,70,239,191,189,54,239,191,189,2,69,120,62,65,93,239,191,189,210,152,100,239,191,189,41,74,239,191,189,239,191,189,103,88,239,191,189,239,191,189,85,4,14,27,239,191,189,90,28,239,191,189,239,191,189,126,224,167,134,7,239,191,189,91,30,51,30,239,191,189,76,82,75,239,191,189,81,239,191,189,56,239,191,189,18,11,239,191,189,52,111,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,37,239,191,189,239,191,189,84,239,191,189,239,191,189,96,34,239,191,189,47,239,191,189,52,57,33,239,191,189,3,239,191,189,92,239,191,189,34,34,35,125,239,191,189,218,171,55,239,191,189,38,31,102,239,191,189,57,239,191,189,127,109,239,191,189,239,191,189,239,191,189,80,21,108,239,191,189,110,239,191,189,77,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,2,80,49,121,12,239,191,189,126,239,191,189,108,200,149,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,98,53,239,191,189,12,239,191,189,239,191,189,48,107,239,191,189,239,191,189,239,191,189,73,56,206,148,11,119,239,191,189,46,60,125,239,191,189,15,239,191,189,26,0,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,36,54,42,239,191,189,239,191,189,75,239,191,189,0,13,91,239,191,189,239,191,189,239,191,189,51,239,191,189,0,239,191,189,239,191,189,4,239,191,189,89,68,117,38,239,191,189,239,191,189,126,67,239,191,189,239,191,189,46,13,2,20,239,191,189,106,90,239,191,189,65,119,59,112,239,191,189,116,56,104,239,191,189,32,239,191,189,47,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,195,150,55,239,191,189,106,239,191,189,108,239,191,189,239,191,189,31,98,239,191,189,63,239,191,189,194,128,29,239,191,189,239,191,189,197,136,239,191,189,94,87,115,67,118,47,19,53,239,191,189,102,239,191,189,239,191,189,239,191,189,64,126,5,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,92,239,191,189,11,239,191,189,80,239,191,189,58,239,191,189,239,191,189,101,239,191,189,97,239,191,189,92,239,191,189,239,191,189,47,239,191,189,239,191,189,22,64,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,60,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,66,41,239,191,189,21,239,191,189,239,191,189,239,191,189,103,24,14,239,191,189,18,79,29,239,191,189,50,39,88,239,191,189,239,191,189,28,49,59,239,191,189,239,191,189,107,112,57,100,114,239,191,189,115,239,191,189,89,239,191,189,239,191,189,25,239,191,189,4,23,217,134,239,191,189,107,239,191,189,201,178,120,109,239,191,189,43,239,191,189,239,191,189,239,191,189,17,239,191,189,18,112,239,191,189,87,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,13,123,239,191,189,239,191,189,66,239,191,189,123,122,13,9,239,191,189,239,191,189,203,138,71,24,239,191,189,239,191,189,72,239,191,189,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,3,239,191,189,118,239,191,189,204,176,239,191,189,239,191,189,116,102,114,239,191,189,98,221,158,239,191,189,98,41,84,239,191,189,239,191,189,239,191,189,124,48,33,100,239,191,189,51,62,239,191,189,239,191,189,86,239,191,189,18,6,202,129,239,191,189,239,191,189,239,191,189,71,239,191,189,93,239,191,189,95,239,191,189,70,24,14,239,191,189,73,239,191,189,239,191,189,3,45,15,114,69,239,191,189,103,42,239,191,189,239,191,189,221,141,28,239,191,189,80,239,191,189,239,191,189,21,100,107,239,191,189,96,214,150,239,191,189,239,191,189,58,30,109,37,76,77,47,239,191,189,239,191,189,239,191,189,239,191,189,88,60,82,86,108,239,191,189,89,127,84,67,31,239,191,189,65,58,239,191,189,239,191,189,60,19,239,191,189,86,120,239,191,189,116,113,73,239,191,189,121,79,239,191,189,93,239,191,189,239,191,189,107,239,191,189,123,239,191,189,17,21,80,239,191,189,125,22,70,239,191,189,27,40,43,239,191,189,111,105,239,191,189,114,42,239,191,189,125,239,191,189,239,191,189,239,191,189,12,239,191,189,47,9,239,191,189,239,191,189,239,191,189,35,239,191,189,98,239,191,189,3,239,191,189,39,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,86,33,239,191,189,239,191,189,239,191,189,39,106,35,239,191,189,239,191,189,97,239,191,189,17,48,9,239,191,189,239,191,189,115,39,79,239,191,189,239,191,189,239,191,189,239,191,189,44,107,239,191,189,203,175,63,239,191,189,27,239,191,189,239,191,189,239,191,189,29,239,191,189,41,200,139,239,191,189,82,239,191,189,0,239,191,189,239,191,189,29,33,98,101,58,65,7,94,239,191,189,239,191,189,97,116,239,191,189,239,191,189,116,239,191,189,41,69,11,49,239,191,189,30,239,191,189,239,191,189,74,95,239,191,189,86,239,191,189,239,191,189,239,191,189,104,121,239,191,189,239,191,189,78,239,191,189,239,191,189,44,102,84,63,239,191,189,54,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,27,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,93,88,120,239,191,189,48,239,191,189,239,191,189,40,239,191,189,65,239,191,189,110,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,51,5,48,39,114,239,191,189,84,69,239,191,189,239,191,189,239,191,189,46,10,239,191,189,85,91,104,239,191,189,71,108,211,133,239,191,189,239,191,189,112,239,191,189,36,239,191,189,74,65,239,191,189,67,239,191,189,84,239,191,189,94,45,49,6,239,191,189,239,191,189,97,218,143,239,191,189,18,239,191,189,198,185,84,80,112,102,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,121,239,191,189,57,239,191,189,239,191,189,239,191,189,46,54,126,100,239,191,189,113,239,191,189,35,239,191,189,93,239,191,189,93,55,239,191,189,239,191,189,56,239,191,189,111,239,191,189,239,191,189,11,239,191,189,122,105,50,119,102,97,239,191,189,37,239,191,189,35,239,191,189,239,191,189,37,26,239,191,189,2,239,191,189,27,2,47,239,191,189,89,239,191,189,83,44,5,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,235,139,188,20,49,25,11,73,239,191,189,239,191,189,239,191,189,215,150,117,239,191,189,239,191,189,71,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,75,96,239,191,189,239,191,189,74,14,53,239,191,189,214,154,94,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,33,239,191,189,201,188,239,191,189,53,239,191,189,111,0,78,66,11,15,239,191,189,239,191,189,76,82,205,171,111,239,191,189,87,118,239,191,189,211,159,53,119,106,10,239,191,189,239,191,189,63,47,239,191,189,76,239,191,189,34,239,191,189,42,38,122,73,239,191,189,239,191,189,239,191,189,239,191,189,195,144,125,13,100,73,19,239,191,189,94,38,239,191,189,23,239,191,189,58,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,77,47,55,239,191,189,72,31,13,239,191,189,239,191,189,28,239,191,189,72,239,191,189,218,140,239,191,189,55,239,191,189,27,239,191,189,239,191,189,239,191,189,57,126,43,239,191,189,117,83,18,75,239,191,189,239,191,189,239,191,189,115,67,77,239,191,189,239,191,189,0,239,191,189,239,191,189,118,239,191,189,63,239,191,189,239,191,189,42,106,26,111,239,191,189,239,191,189,239,191,189,97,116,239,191,189,239,191,189,85,92,239,191,189,239,191,189,239,191,189,100,48,239,191,189,73,64,239,191,189,62,239,191,189,82,239,191,189,39,55,69,98,107,62,115,101,74,239,191,189,239,191,189,239,191,189,21,35,4,18,239,191,189,86,28,239,191,189,239,191,189,74,1,4,17,239,191,189,79,110,70,239,191,189,43,93,29,223,156,239,191,189,28,18,239,191,189,122,239,191,189,239,191,189,95,209,172,239,191,189,26,239,191,189,68,45,239,191,189,239,191,189,239,191,189,82,239,191,189,54,65,80,239,191,189,239,191,189,4,31,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,65,239,191,189,239,191,189,203,161,239,191,189,239,191,189,239,191,189,47,87,239,191,189,239,191,189,239,191,189,42,24,239,191,189,67,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,168,20,17,239,191,189,239,191,189,68,2,55,11,28,0,22,239,191,189,239,191,189,6,239,191,189,239,191,189,76,107,239,191,189,6,239,191,189,122,239,191,189,101,239,191,189,199,181,27,239,191,189,14,21,239,191,189,239,191,189,67,27,70,239,191,189,239,191,189,63,39,239,191,189,239,191,189,38,239,191,189,67,239,191,189,206,133,239,191,189,239,191,189,111,32,2,209,189,239,191,189,50,100,60,124,76,27,16,13,239,191,189,70,210,173,239,191,189,8,239,191,189,43,239,191,189,37,42,83,35,33,239,191,189,239,191,189,47,42,0,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,19,89,96,239,191,189,239,191,189,197,175,25,239,191,189,239,191,189,21,32,239,191,189,77,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,70,15,67,124,239,191,189,29,239,191,189,16,110,239,191,189,120,239,191,189,39,104,239,191,189,239,191,189,79,105,239,191,189,96,123,58,82,36,239,191,189,216,148,239,191,189,14,239,191,189,239,191,189,126,85,239,191,189,59,3,22,239,191,189,62,239,191,189,212,159,239,191,189,219,133,68,239,191,189,50,239,191,189,66,112,239,191,189,118,75,23,11,239,191,189,30,209,171,239,191,189,19,1,239,191,189,239,191,189,239,191,189,123,51,45,239,191,189,239,191,189,107,42,27,239,191,189,219,144,119,239,191,189,102,239,191,189,98,32,239,191,189,109,116,8,9,239,191,189,47,70,239,191,189,18,239,191,189,52,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,5,48,239,191,189,5,97,90,239,191,189,59,123,69,127,106,239,191,189,37,239,191,189,53,34,239,191,189,239,191,189,114,87,239,191,189,70,239,191,189,88,239,191,189,239,191,189,239,191,189,62,117,239,191,189,20,239,191,189,24,93,239,191,189,33,104,19,239,191,189,74,239,191,189,239,191,189,0,120,239,191,189,239,191,189,14,239,191,189,103,239,191,189,99,239,191,189,85,110,7,239,191,189,9,239,191,189,239,191,189,115,239,191,189,239,191,189,6,239,191,189,107,204,179,239,191,189,2,20,239,191,189,110,66,39,239,191,189,74,70,39,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,46,121,72,239,191,189,85,7,23,239,191,189,72,58,86,239,191,189,239,191,189,76,13,239,191,189,19,70,239,191,189,82,62,239,191,189,87,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,8,114,239,191,189,239,191,189,239,191,189,37,8,239,191,189,19,239,191,189,239,191,189,26,214,188,239,191,189,49,239,191,189,63,56,34,26,239,191,189,99,53,239,191,189,77,239,191,189,96,126,36,239,191,189,28,87,10,239,191,189,239,191,189,85,63,239,191,189,78,93,239,191,189,32,239,191,189,239,191,189,37,62,10,195,161,73,76,239,191,189,105,20,218,151,239,191,189,62,239,191,189,105,112,239,191,189,120,49,239,191,189,127,239,191,189,239,191,189,97,46,0,105,211,189,80,120,239,191,189,109,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,122,77,239,191,189,239,191,189,239,191,189,56,239,191,189,0,239,191,189,239,191,189,239,191,189,13,239,191,189,120,201,166,239,191,189,75,98,114,73,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,89,239,191,189,239,191,189,239,191,189,211,184,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,114,239,191,189,239,191,189,66,239,191,189,65,239,191,189,239,191,189,72,58,106,239,191,189,239,191,189,82,65,49,239,191,189,91,52,92,44,15,25,85,10,239,191,189,25,20,209,134,57,239,191,189,73,112,11,220,129,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,77,12,31,93,80,239,191,189,46,239,191,189,108,239,191,189,69,223,182,239,191,189,197,128,239,191,189,239,191,189,239,191,189,0,239,191,189,71,39,71,100,239,191,189,4,239,191,189,126,239,191,189,227,131,128,7,239,191,189,239,191,189,239,191,189,239,191,189,72,88,107,101,239,191,189,42,44,37,239,191,189,239,191,189,27,42,207,154,202,151,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,41,14,239,191,189,239,191,189,98,91,53,239,191,189,239,191,189,239,191,189,239,191,189,27,103,105,239,191,189,52,239,191,189,239,191,189,26,62,27,56,239,191,189,84,239,191,189,73,239,191,189,239,191,189,83,57,239,191,189,239,191,189,239,191,189,110,47,93,119,239,191,189,239,191,189,239,191,189,239,191,189,4,60,90,239,191,189,51,96,3,127,34,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,25,25,239,191,189,76,239,191,189,239,191,189,51,42,67,239,191,189,58,55,239,191,189,239,191,189,53,73,78,108,51,102,239,191,189,42,22,88,239,191,189,239,191,189,22,239,191,189,239,191,189,44,239,191,189,62,239,191,189,222,149,239,191,189,47,239,191,189,29,118,8,47,112,58,38,239,191,189,239,191,189,48,196,179,94,81,239,191,189,5,239,191,189,239,191,189,2,73,102,239,191,189,119,239,191,189,239,191,189,23,72,239,191,189,70,239,191,189,92,239,191,189,25,239,191,189,78,239,191,189,93,202,186,239,191,189,50,26,16,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,61,96,239,191,189,239,191,189,239,191,189,89,239,191,189,42,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,52,38,23,75,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,121,89,239,191,189,239,191,189,239,191,189,52,108,239,191,189,239,191,189,28,97,239,191,189,7,239,191,189,42,18,239,191,189,92,26,91,239,191,189,69,107,113,239,191,189,239,191,189,239,191,189,110,239,191,189,33,16,9,239,191,189,43,72,29,98,100,70,20,65,207,183,239,191,189,61,15,239,191,189,239,191,189,125,239,191,189,47,46,239,191,189,239,191,189,20,49,68,85,101,123,59,79,239,191,189,239,191,189,81,239,191,189,85,106,239,191,189,239,191,189,75,239,191,189,239,191,189,70,65,117,239,191,189,239,191,189,72,239,191,189,59,48,239,191,189,6,239,191,189,239,191,189,123,239,191,189,22,22,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,230,189,130,92,239,191,189,75,239,191,189,239,191,189,239,191,189,56,90,70,239,191,189,239,191,189,125,239,191,189,13,239,191,189,63,11,94,239,191,189,9,111,100,239,191,189,83,239,191,189,28,62,239,191,189,8,109,78,239,191,189,239,191,189,27,239,191,189,5,239,191,189,104,105,239,191,189,239,191,189,52,5,119,239,191,189,51,0,88,239,191,189,205,148,2,239,191,189,19,239,191,189,31,239,191,189,239,191,189,108,94,63,81,239,191,189,102,15,239,191,189,239,191,189,34,239,191,189,78,122,239,191,189,122,79,239,191,189,48,239,191,189,239,191,189,50,239,191,189,62,239,191,189,123,239,191,189,239,191,189,239,191,189,67,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,122,53,91,239,191,189,103,19,239,191,189,221,183,61,82,239,191,189,239,191,189,100,44,199,138,28,239,191,189,239,191,189,32,239,191,189,239,191,189,57,239,191,189,239,191,189,67,239,191,189,47,239,191,189,86,239,191,189,239,191,189,111,213,177,239,191,189,239,191,189,116,31,64,96,239,191,189,62,77,28,3,239,191,189,239,191,189,43,91,239,191,189,27,120,239,191,189,239,191,189,96,33,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,231,148,163,24,239,191,189,122,242,147,168,130,66,239,191,189,239,191,189,239,191,189,239,191,189,127,100,239,191,189,3,95,122,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,4,239,191,189,79,27,239,191,189,239,191,189,87,239,191,189,121,239,191,189,78,96,56,239,191,189,51,239,191,189,53,42,34,239,191,189,53,97,101,107,125,239,191,189,239,191,189,108,239,191,189,32,239,191,189,239,191,189,41,63,239,191,189,24,50,38,13,239,191,189,64,51,23,239,191,189,22,70,202,151,71,9,77,91,216,137,125,239,191,189,42,239,191,189,7,78,239,191,189,239,191,189,88,87,239,191,189,55,239,191,189,56,26,102,14,28,86,239,191,189,2,74,239,191,189,84,54,239,191,189,6,36,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,6,126,85,109,239,191,189,60,92,14,239,191,189,94,44,239,191,189,62,63,239,191,189,1,123,87,89,239,191,189,103,39,71,239,191,189,221,132,31,239,191,189,239,191,189,55,75,44,23,239,191,189,21,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,39,14,239,191,189,239,191,189,70,239,191,189,239,191,189,58,239,191,189,70,239,191,189,239,191,189,239,191,189,32,239,191,189,54,239,191,189,239,191,189,57,28,95,119,239,191,189,19,0,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,197,150,64,25,239,191,189,206,151,239,191,189,39,239,191,189,239,191,189,239,191,189,88,101,54,239,191,189,239,191,189,4,82,119,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,206,144,239,191,189,96,239,191,189,239,191,189,41,239,191,189,197,150,239,191,189,239,191,189,73,239,191,189,239,191,189,126,239,191,189,93,105,50,82,239,191,189,7,44,239,191,189,120,77,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,18,88,49,41,239,191,189,239,191,189,239,191,189,47,239,191,189,112,11,239,191,189,11,8,239,191,189,239,191,189,50,239,191,189,54,239,191,189,239,191,189,239,191,189,219,137,239,191,189,126,80,239,191,189,43,80,33,239,191,189,239,191,189,28,55,239,191,189,107,84,24,113,239,191,189,3,205,130,239,191,189,74,239,191,189,112,239,191,189,1,93,239,191,189,239,191,189,73,82,239,191,189,125,239,191,189,239,191,189,18,239,191,189,69,3,52,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,221,179,239,191,189,235,133,189,88,239,191,189,88,239,191,189,239,191,189,41,239,191,189,73,239,191,189,239,191,189,202,175,30,239,191,189,239,191,189,5,239,191,189,92,239,191,189,239,191,189,51,124,82,239,191,189,239,191,189,113,239,191,189,36,14,93,239,191,189,239,191,189,37,27,45,106,239,191,189,239,191,189,239,191,189,64,5,239,191,189,87,37,34,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,36,36,16,5,239,191,189,66,211,184,115,36,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,37,87,45,239,191,189,239,191,189,239,191,189,124,27,239,191,189,113,118,30,239,191,189,70,239,191,189,0,11,40,239,191,189,120,239,191,189,33,239,191,189,239,191,189,33,21,40,61,239,191,189,37,109,17,213,191,96,239,191,189,239,191,189,93,10,239,191,189,198,184,19,1,239,191,189,239,191,189,115,239,191,189,63,239,191,189,239,191,189,120,239,191,189,22,3,239,191,189,76,239,191,189,239,191,189,62,76,126,4,101,73,14,239,191,189,239,191,189,9,239,191,189,29,239,191,189,239,191,189,0,13,239,191,189,51,239,191,189,239,191,189,113,239,191,189,215,138,239,191,189,30,51,239,191,189,93,66,239,191,189,239,191,189,37,102,239,191,189,108,239,191,189,239,191,189,72,63,100,239,191,189,102,239,191,189,239,191,189,90,74,239,191,189,21,239,191,189,239,191,189,25,239,191,189,66,40,64,117,239,191,189,15,70,21,101,239,191,189,239,191,189,95,239,191,189,239,191,189,66,43,239,191,189,120,239,191,189,239,191,189,89,62,239,191,189,239,191,189,232,157,153,239,191,189,68,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,61,70,239,191,189,239,191,189,239,191,189,2,41,239,191,189,72,207,143,9,97,7,195,128,125,239,191,189,46,239,191,189,4,239,191,189,239,191,189,239,191,189,85,117,114,239,191,189,239,191,189,31,17,239,191,189,15,22,4,239,191,189,239,191,189,239,191,189,239,191,189,47,63,87,239,191,189,88,239,191,189,55,204,129,20,239,191,189,98,52,222,182,239,191,189,106,76,119,239,191,189,88,46,40,239,191,189,239,191,189,239,191,189,75,2,239,191,189,239,191,189,13,70,111,239,191,189,47,239,191,189,51,239,191,189,61,239,191,189,79,239,191,189,52,123,107,239,191,189,55,78,69,51,239,191,189,105,88,239,191,189,17,46,10,239,191,189,239,191,189,239,191,189,201,162,49,68,239,191,189,28,239,191,189,25,239,191,189,239,191,189,54,239,191,189,58,239,191,189,8,113,239,191,189,66,85,31,20,239,191,189,239,191,189,239,191,189,28,239,191,189,237,152,179,0,213,155,39,81,220,173,239,191,189,239,191,189,239,191,189,79,22,29,199,135,239,191,189,239,191,189,47,111,206,159,58,239,191,189,66,122,239,191,189,21,9,239,191,189,39,239,191,189,46,44,102,239,191,189,239,191,189,98,239,191,189,13,90,239,191,189,3,78,5,9,239,191,189,239,191,189,17,239,191,189,29,117,126,239,191,189,20,239,191,189,14,89,239,191,189,121,198,164,8,239,191,189,16,33,239,191,189,66,239,191,189,97,239,191,189,71,97,115,239,191,189,55,121,60,112,239,191,189,41,239,191,189,239,191,189,9,110,239,191,189,97,81,239,191,189,239,191,189,65,239,191,189,110,70,239,191,189,239,191,189,57,61,239,191,189,31,62,239,191,189,115,80,239,191,189,46,28,87,91,239,191,189,239,191,189,29,61,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,113,239,191,189,102,239,191,189,239,191,189,32,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,59,87,80,239,191,189,127,239,191,189,127,239,191,189,64,239,191,189,10,239,191,189,49,70,35,119,214,169,9,239,191,189,121,239,191,189,115,239,191,189,239,191,189,39,239,191,189,48,239,191,189,85,1,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,29,41,239,191,189,55,97,239,191,189,125,112,81,125,239,191,189,112,2,113,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,78,239,191,189,239,191,189,112,115,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,65,58,239,191,189,25,103,239,191,189,50,50,40,82,239,191,189,239,191,189,78,10,239,191,189,239,191,189,51,43,239,191,189,85,105,72,118,76,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,69,68,101,78,239,191,189,98,239,191,189,239,191,189,27,198,152,0})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff51f9db6f",
                        container: "containersd63691dc18f14d0e8229a3e13db4f859",
                        blob: "Blob285382746e394a0db30a1a29e6b6c993_WriteProtectedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07208 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07208_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07208_s.txt", Encoding.UTF8);

    public Test07208() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{110,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,93,46,2,78,18,90,239,191,189,75,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,31,92,75,239,191,189,74,54,239,191,189,50,3,239,191,189,127,239,191,189,49,221,153,239,191,189,33,19,80,84,92,239,191,189,14,239,191,189,239,191,189,216,154,239,191,189,25,69,37,239,191,189,39,239,191,189,239,191,189,43,74,239,191,189,39,69,239,191,189,74,71,239,191,189,6,26,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,68,239,191,189,91,78,239,191,189,239,191,189,114,239,191,189,1,24,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,110,74,64,98,41,15,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,79,239,191,189,43,239,191,189,68,239,191,189,221,153,0,62,239,191,189,67,239,191,189,239,191,189,239,191,189,52,55,239,191,189,239,191,189,127,201,181,36,239,191,189,52,2,239,191,189,239,191,189,239,191,189,239,191,189,7,18,110,5,121,239,191,189,25,89,239,191,189,239,191,189,64,35,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,1,239,191,189,123,60,239,191,189,122,239,191,189,239,191,189,66,239,191,189,86,239,191,189,19,239,191,189,239,191,189,59,239,191,189,30,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,23,117,0,239,191,189,103,45,239,191,189,100,100,47,239,191,189,239,191,189,239,191,189,239,191,189,211,138,239,191,189,60,215,167,58,8,44,239,191,189,239,191,189,47,205,134,239,191,189,113,95,74,239,191,189,37,37,122,239,191,189,71,20,239,191,189,239,191,189,67,239,191,189,215,181,239,191,189,239,191,189,75,18,239,191,189,14,239,191,189,239,191,189,15,72,102,239,191,189,239,191,189,239,191,189,41,222,147,239,191,189,83,239,191,189,0,239,191,189,239,191,189,15,16,239,191,189,239,191,189,239,191,189,72,239,191,189,73,239,191,189,51,239,191,189,97,239,191,189,115,239,191,189,99,239,191,189,98,239,191,189,21,239,191,189,20,239,191,189,112,22,239,191,189,19,239,191,189,37,239,191,189,1,239,191,189,29,239,191,189,2,239,191,189,25,9,239,191,189,108,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,90,239,191,189,81,40,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,90,52,20,35,62,50,49,67,239,191,189,112,16,73,239,191,189,102,107,239,191,189,239,191,189,112,239,191,189,122,122,239,191,189,5,239,191,189,196,175,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,94,239,191,189,55,53,239,191,189,101,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,17,53,239,191,189,239,191,189,239,191,189,79,9,49,111,239,191,189,15,89,122,239,191,189,239,191,189,239,191,189,25,104,239,191,189,239,191,189,44,239,191,189,51,239,191,189,2,11,101,239,191,189,32,40,239,191,189,106,239,191,189,239,191,189,239,191,189,201,179,239,191,189,124,60,239,191,189,45,48,239,191,189,38,239,191,189,239,191,189,19,27,239,191,189,239,191,189,239,191,189,22,93,8,36,239,191,189,57,239,191,189,127,239,191,189,84,16,71,221,164,239,191,189,239,191,189,239,191,189,12,65,239,191,189,72,39,239,191,189,239,191,189,239,191,189,111,239,191,189,32,81,239,191,189,239,191,189,127,28,84,91,239,191,189,239,191,189,62,122,239,191,189,239,191,189,82,55,28,239,191,189,207,129,239,191,189,239,191,189,85,58,239,191,189,104,239,191,189,239,191,189,54,9,239,191,189,3,239,191,189,113,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,67,101,30,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,226,172,183,239,191,189,33,239,191,189,95,239,191,189,23,118,239,191,189,37,124,16,59,239,191,189,117,239,191,189,239,191,189,124,239,191,189,33,14,49,239,191,189,239,191,189,55,239,191,189,239,191,189,13,239,191,189,239,191,189,69,39,239,191,189,76,239,191,189,239,191,189,60,239,191,189,91,239,191,189,239,191,189,73,239,191,189,29,239,191,189,13,102,239,191,189,239,191,189,78,60,115,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,9,239,191,189,239,191,189,239,191,189,85,45,239,191,189,212,161,98,29,32,5,112,239,191,189,104,239,191,189,239,191,189,41,49,23,40,105,239,191,189,239,191,189,239,191,189,88,239,191,189,32,213,181,214,148,239,191,189,239,191,189,239,191,189,25,61,239,191,189,239,191,189,119,14,67,239,191,189,30,83,73,26,239,191,189,83,124,214,155,239,191,189,239,191,189,239,191,189,85,19,14,125,239,191,189,76,239,191,189,203,173,70,239,191,189,121,239,191,189,57,78,68,28,74,239,191,189,8,239,191,189,126,124,126,239,191,189,61,239,191,189,239,191,189,89,239,191,189,59,239,191,189,239,191,189,239,191,189,53,5,47,23,10,43,90,119,61,239,191,189,239,191,189,239,191,189,82,239,191,189,4,55,239,191,189,81,239,191,189,239,191,189,239,191,189,215,151,239,191,189,238,152,142,239,191,189,114,239,191,189,11,239,191,189,239,191,189,2,4,73,21,5,64,239,191,189,239,191,189,110,64,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,34,36,239,191,189,36,239,191,189,239,191,189,93,110,239,191,189,40,113,239,191,189,115,4,110,239,191,189,59,239,191,189,79,239,191,189,239,191,189,34,239,191,189,16,76,52,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,123,30,80,239,191,189,32,103,24,55,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,58,105,239,191,189,239,191,189,123,197,155,107,13,239,191,189,112,239,191,189,216,139,61,239,191,189,124,239,191,189,239,191,189,239,191,189,33,85,239,191,189,196,171,239,191,189,239,191,189,24,0,239,191,189,239,191,189,66,91,239,191,189,36,239,191,189,25,92,106,17,15,16,80,57,70,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,10,239,191,189,239,191,189,13,45,239,191,189,239,191,189,107,44,83,239,191,189,239,191,189,124,239,191,189,24,0,99,105,239,191,189,239,191,189,17,68,100,239,191,189,101,69,83,29,31,239,191,189,239,191,189,239,191,189,55,239,191,189,21,111,239,191,189,235,181,133,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,69,86,88,239,191,189,239,191,189,80,239,191,189,239,191,189,97,239,191,189,101,76,239,191,189,87,239,191,189,95,239,191,189,123,239,191,189,71,119,239,191,189,8,35,110,95,103,239,191,189,50,87,59,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,31,54,35,83,239,191,189,40,87,59,239,191,189,239,191,189,79,35,239,191,189,57,239,191,189,239,191,189,239,191,189,78,52,79,64,239,191,189,18,47,57,42,12,30,239,191,189,10,239,191,189,32,5,239,191,189,17,84,96,20,239,191,189,22,36,239,191,189,239,191,189,102,15,239,191,189,2,239,191,189,8,37,77,239,191,189,127,53,54,239,191,189,17,36,239,191,189,239,191,189,74,29,5,239,191,189,239,191,189,2,123,239,191,189,239,191,189,45,48,57,58,57,28,39,239,191,189,239,191,189,31,98,39,101,21,122,239,191,189,213,160,239,191,189,82,116,66,60,91,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,12,91,82,32,239,191,189,239,191,189,20,112,70,25,15,239,191,189,101,4,87,239,191,189,239,191,189,7,239,191,189,51,239,191,189,97,239,191,189,93,18,239,191,189,239,191,189,239,191,189,62,109,21,106,239,191,189,20,19,7})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersd672d77d627248eca0e50821a838ba3c",
                        blob: "Blobc84e6a3c6ba94bd3a59fc53f9427580c",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07161 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07161_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07161_s.txt", Encoding.UTF8);

    public Test07161() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,51,57,239,191,189,239,191,189,77,68,239,191,189,239,191,189,117,96,77,36,239,191,189,239,191,189,239,191,189,32,214,131,239,191,189,120,57,117,93,58,239,191,189,5,239,191,189,239,191,189,239,191,189,93,19,239,191,189,239,191,189,211,158,71,239,191,189,239,191,189,97,114,239,191,189,23,205,129,239,191,189,239,191,189,125,239,191,189,74,239,191,189,42,47,3,239,191,189,102,239,191,189,220,146,21,71,239,191,189,239,191,189,239,191,189,23,76,110,87,239,191,189,47,123,63,239,191,189,33,52,239,191,189,33,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,108,47,51,239,191,189,239,191,189,23,108,239,191,189,106,78,239,191,189,25,239,191,189,239,191,189,72,239,191,189,53,83,97,205,164,239,191,189,122,46,13,239,191,189,239,191,189,69,21,1,25,26,239,191,189,4,121,239,191,189,239,191,189,104,239,191,189,64,67,78,16,239,191,189,55,7,123,25,239,191,189,239,191,189,37,239,191,189,239,191,189,17,239,191,189,239,191,189,4,239,191,189,13,54,39,239,191,189,105,53,239,191,189,90,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,85,239,191,189,239,191,189,239,191,189,5,83,239,191,189,107,35,90,239,191,189,4,239,191,189,239,191,189,239,191,189,223,145,239,191,189,9,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,33,239,191,189,100,120,48,239,191,189,239,191,189,43,13,208,185,112,239,191,189,239,191,189,14,65,42,85,239,191,189,103,239,191,189,239,191,189,59,59,23,110,239,191,189,22,239,191,189,107,88,239,191,189,239,191,189,57,1,239,191,189,239,191,189,8,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,203,152,95,220,152,123,97,88,4,110,118,49,239,191,189,41,96,239,191,189,239,191,189,239,191,189,94,239,191,189,120,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,106,239,191,189,30,122,111,126,14,239,191,189,126,81,10,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,17,74,51,97,48,72,239,191,189,24,239,191,189,53,10,239,191,189,63,239,191,189,119,4,124,18,35,239,191,189,239,191,189,239,191,189,74,13,239,191,189,120,239,191,189,239,191,189,239,191,189,214,170,76,122,111,66,54,239,191,189,239,191,189,50,239,191,189,102,49,239,191,189,115,239,191,189,239,191,189,41,15,125,71,239,191,189,239,191,189,239,191,189,239,191,189,94,84,239,191,189,84,239,191,189,239,191,189,239,191,189,26,31,95,95,124,239,191,189,103,53,239,191,189,239,191,189,37,239,191,189,239,191,189,123,239,191,189,54,214,133,239,191,189,79,239,191,189,239,191,189,119,25,234,159,179,17,239,191,189,77,68,84,99,239,191,189,75,17,96,19,11,5,239,191,189,218,175,100,239,191,189,239,191,189,239,191,189,75,239,191,189,29,18,239,191,189,203,128,99,239,191,189,239,191,189,70,116,239,191,189,17,85,71,239,191,189,239,191,189,208,140,14,47,112,239,191,189,239,191,189,121,199,141,239,191,189,239,191,189,19,239,191,189,27,239,191,189,104,53,239,191,189,58,117,239,191,189,239,191,189,117,239,191,189,105,26,239,191,189,46,239,191,189,108,239,191,189,47,239,191,189,239,191,189,66,239,191,189,27,107,70,80,85,4,239,191,189,199,148,239,191,189,89,2,239,191,189,32,118,70,40,71,239,191,189,239,191,189,125,6,239,191,189,35,75,239,191,189,32,39,239,191,189,77,239,191,189,239,191,189,36,76,201,138,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,69,44,74,75,29,239,191,189,127,239,191,189,28,239,191,189,101,239,191,189,44,10,49,210,128,37,71,12,239,191,189,239,191,189,93,87,239,191,189,91,8,195,186,203,145,49,103,239,191,189,31,239,191,189,239,191,189,10,239,191,189,239,191,189,57,63,8,239,191,189,100,239,191,189,239,191,189,22,82,29,77,197,141,73,239,191,189,78,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,80,12,51,35,78,239,191,189,239,191,189,117,109,239,191,189,239,191,189,65,213,175,239,191,189,239,191,189,239,191,189,113,239,191,189,126,204,164,29,25,208,154,239,191,189,239,191,189,42,25,124,96,239,191,189,239,191,189,48,239,191,189,111,43,239,191,189,32,239,191,189,87,239,191,189,118,239,191,189,121,62,0,69,239,191,189,75,66,239,191,189,64,239,191,189,5,52,26,15,27,239,191,189,66,127,86,239,191,189,29,14,239,191,189,15,47,239,191,189,239,191,189,124,239,191,189,116,239,191,189,239,191,189,239,191,189,87,91,239,191,189,59,117,49,30,239,191,189,96,239,191,189,239,191,189,58,17,239,191,189,4,58,21,117,32,239,191,189,91,48,61,53,239,191,189,221,130,239,191,189,42,239,191,189,239,191,189,93,239,191,189,195,179,59,8,7,9,36,239,191,189,56,239,191,189,33,57,239,191,189,47,120,108,95,58,239,191,189,239,191,189,239,191,189,43,239,191,189,94,123,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,120,239,191,189,78,239,191,189,239,191,189,49,13,107,239,191,189,239,191,189,35,239,191,189,28,239,191,189,239,191,189,39,83,77,239,191,189,107,239,191,189,214,167,200,136,239,191,189,239,191,189,239,191,189,113,117,106,125,24,95,239,191,189,88,103,74,239,191,189,58,81,206,139,24,215,168,239,191,189,97,239,191,189,112,91,11,239,191,189,41,29,239,191,189,239,191,189,92,47,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,106,239,191,189,59,115,239,191,189,9,239,191,189,239,191,189,26,239,191,189,74,239,191,189,239,191,189,239,191,189,18,73,239,191,189,0,25,94,239,191,189,239,191,189,65,29,100,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,5,239,191,189,48,62,239,191,189,38,60,239,191,189,82,110,120,15,72,88,101,239,191,189,124,29,61,239,191,189,239,191,189,109,20,37,123,123,29,15,239,191,189,27,29,239,191,189,73,1,69,233,191,161,73,35,239,191,189,80,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,76,112,98,117,44,218,151,239,191,189,11,239,191,189,76,8,45,239,191,189,54,80,239,191,189,239,191,189,71,19,123,239,191,189,239,191,189,239,191,189,26,3,239,191,189,239,191,189,36,28,239,191,189,239,191,189,88,16,239,191,189,239,191,189,239,191,189,91,29,38,239,191,189,89,239,191,189,239,191,189,239,191,189,26,115,127,239,191,189,239,191,189,96,26,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,90,40,48,239,191,189,108,239,191,189,39,202,175,29,62,239,191,189,239,191,189,77,239,191,189,32,101,34,32,239,191,189,239,191,189,239,191,189,239,191,189,42,24,239,191,189,239,191,189,239,191,189,209,166,239,191,189,28,22,43,0,239,191,189,239,191,189,239,191,189,239,191,189,197,183,50,107,85,65,4,9,19,113,239,191,189,76,97,86,239,191,189,239,191,189,90,239,191,189,6,239,191,189,239,191,189,49,239,191,189,239,191,189,8,239,191,189,33,116,106,76,239,191,189,42,239,191,189,53,90,69,239,191,189,239,191,189,58,239,191,189,19,122,239,191,189,15,63,90,42,239,191,189,126,114,239,191,189,93,239,191,189,239,191,189,4,239,191,189,17,57,98,239,191,189,31,239,191,189,239,191,189,198,190,102,239,191,189,44,239,191,189,82,21,239,191,189,92,29,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,102})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=2560-3583",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07175 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07175_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07175_s.txt", Encoding.UTF8);

    public Test07175() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{86,239,191,189,42,60,110,81,239,191,189,98,239,191,189,239,191,189,9,90,109,239,191,189,239,191,189,239,191,189,239,191,189,74,37,239,191,189,65,15,239,191,189,200,164,45,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,92,124,47,117,236,174,181,34,110,62,73,75,239,191,189,239,191,189,36,239,191,189,239,191,189,26,45,239,191,189,126,239,191,189,71,12,98,239,191,189,64,12,26,239,191,189,239,191,189,239,191,189,82,91,17,55,84,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,113,125,29,239,191,189,33,239,191,189,239,191,189,109,239,191,189,29,239,191,189,239,191,189,52,34,19,84,109,239,191,189,8,239,191,189,62,239,191,189,239,191,189,42,126,239,191,189,116,46,239,191,189,41,239,191,189,239,191,189,118,239,191,189,239,191,189,122,239,191,189,239,191,189,99,27,239,191,189,239,191,189,52,239,191,189,57,2,49,119,239,191,189,47,198,187,35,239,191,189,239,191,189,239,191,189,31,52,54,47,63,53,239,191,189,239,191,189,36,239,191,189,239,191,189,46,239,191,189,202,190,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,68,239,191,189,79,239,191,189,239,191,189,97,99,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,44,239,191,189,82,239,191,189,64,22,21,68,239,191,189,72,239,191,189,101,7,22,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,73,239,191,189,49,239,191,189,212,144,197,149,239,191,189,239,191,189,239,191,189,84,70,8,120,239,191,189,91,211,130,55,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,0,100,239,191,189,239,191,189,108,68,239,191,189,239,191,189,239,191,189,81,127,107,239,191,189,121,103,30,239,191,189,239,191,189,239,191,189,126,62,109,239,191,189,239,191,189,66,123,239,191,189,239,191,189,52,219,150,239,191,189,109,48,114,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,59,116,239,191,189,92,75,21,119,239,191,189,95,116,239,191,189,239,191,189,1,63,239,191,189,21,123,118,239,191,189,107,73,239,191,189,239,191,189,99,106,239,191,189,216,152,108,239,191,189,239,191,189,106,118,64,87,239,191,189,216,143,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,87,112,198,166,97,239,191,189,126,93,239,191,189,239,191,189,25,239,191,189,77,239,191,189,239,191,189,0,94,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,104,50,239,191,189,119,239,191,189,223,144,57,79,9,239,191,189,20,22,54,239,191,189,21,78,216,155,223,174,103,239,191,189,57,239,191,189,17,239,191,189,117,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,93,116,125,122,239,191,189,125,104,239,191,189,201,149,239,191,189,239,191,189,239,191,189,202,154,117,239,191,189,239,191,189,127,239,191,189,56,0,112,239,191,189,239,191,189,239,191,189,63,27,239,191,189,239,191,189,239,191,189,18,96,239,191,189,239,191,189,79,239,191,189,239,191,189,79,30,119,6,239,191,189,44,239,191,189,239,191,189,59,239,191,189,239,191,189,48,239,191,189,239,191,189,52,239,191,189,81,93,3,239,191,189,239,191,189,62,76,21,40,239,191,189,115,126,73,239,191,189,74,239,191,189,239,191,189,97,97,76,50,98,67,239,191,189,239,191,189,239,191,189,105,64,97,239,191,189,44,239,191,189,111,59,123,75,239,191,189,239,191,189,239,191,189,42,239,191,189,117,89,64,239,191,189,239,191,189,239,191,189,83,32,52,211,164,31,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,14,13,118,239,191,189,24,234,181,129,34,65,239,191,189,239,191,189,24,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07143 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07143_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07143_s.txt", Encoding.UTF8);

    public Test07143() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5f95f33153e648bebfde1c9b606122ef",
                        blob: "Blob62dc96b81585493598ac468481890fc8",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=3584-4095",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07162 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07162_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07162_s.txt", Encoding.UTF8);

    public Test07162() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{59,239,191,189,48,239,191,189,52,105,50,118,201,131,239,191,189,239,191,189,81,217,181,239,191,189,239,191,189,44,92,239,191,189,0,239,191,189,35,239,191,189,12,122,239,191,189,239,191,189,94,195,154,239,191,189,31,103,43,239,191,189,239,191,189,52,29,239,191,189,239,191,189,239,191,189,83,63,239,191,189,239,191,189,68,239,191,189,239,191,189,104,239,191,189,200,155,239,191,189,86,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,126,23,5,239,191,189,51,239,191,189,239,191,189,239,191,189,2,239,191,189,15,239,191,189,75,25,126,239,191,189,5,103,53,239,191,189,239,191,189,239,191,189,50,239,191,189,12,87,17,239,191,189,70,98,122,99,239,191,189,21,239,191,189,77,86,94,239,191,189,91,49,39,101,239,191,189,239,191,189,239,191,189,124,60,234,186,147,83,239,191,189,72,239,191,189,33,239,191,189,23,38,108,239,191,189,236,138,159,27,239,191,189,239,191,189,54,75,48,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,55,24,33,239,191,189,239,191,189,215,140,239,191,189,38,239,191,189,122,82,239,191,189,122,62,55,116,239,191,189,69,239,191,189,239,191,189,239,191,189,12,239,191,189,70,239,191,189,44,239,191,189,205,169,239,191,189,47,239,191,189,239,191,189,239,191,189,5,239,191,189,2,21,239,191,189,239,191,189,239,191,189,239,191,189,115,227,158,181,79,111,17,86,41,239,191,189,239,191,189,88,12,36,239,191,189,239,191,189,28,95,239,191,189,89,53,239,191,189,35,27,239,191,189,63,50,239,191,189,48,239,191,189,239,191,189,239,191,189,63,239,191,189,98,82,4,239,191,189,125,239,191,189,82,239,191,189,56,239,191,189,66,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,235,155,152,239,191,189,239,191,189,239,191,189,239,191,189,16,60,47,239,191,189,239,191,189,88,239,191,189,110,204,155,50,239,191,189,23,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,75,82,239,191,189,99,55,239,191,189,10,78,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,64,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,38,69,201,140,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,46,56,239,191,189,239,191,189,72,114,239,191,189,89,239,191,189,32,38,239,191,189,239,191,189,239,191,189,37,18,100,62,12,96,239,191,189,37,13,28,239,191,189,86,239,191,189,81,239,191,189,239,191,189,205,161,239,191,189,9,87,67,10,239,191,189,42,239,191,189,0,98,57,239,191,189,239,191,189,105,95,239,191,189,81,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,43,239,191,189,107,119,67,239,191,189,53,7,239,191,189,31,239,191,189,239,191,189,239,191,189,90,75,239,191,189,54,23,37,239,191,189,239,191,189,10,95,120,37,102,239,191,189,59,4,212,136,107,122,23,110,239,191,189,14,239,191,189,239,191,189,239,191,189,91,118,239,191,189,4,239,191,189,239,191,189,28,239,191,189,83,66,239,191,189,86,120,49,72,239,191,189,11,239,191,189,30,104,239,191,189,203,190,74,106,63,83,239,191,189,239,191,189,239,191,189,119,79,51,91,79,109,93,90,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,61,49,239,191,189,73,239,191,189,239,191,189,123,16,239,191,189,122,51,239,191,189,239,191,189,98,239,191,189,239,191,189,61,100,10,239,191,189,239,191,189,71,34,29,239,191,189,239,191,189,52,239,191,189,68,239,191,189,30,239,191,189,239,191,189,239,191,189,13,56,76,10,239,191,189,16,71,102,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,57,87,239,191,189,88,239,191,189,239,191,189,15,239,191,189,102,239,191,189,239,191,189,239,191,189,62,92,69,239,191,189,239,191,189,85,97,51,50,123,239,191,189,72,100,239,191,189,106,239,191,189,36,38,57,239,191,189,11,51,56,80,239,191,189,5,22,41,119,239,191,189,239,191,189,104,124,239,191,189,73,92,239,191,189,16,239,191,189,239,191,189,95,6,36,106,239,191,189,15,239,191,189,55,239,191,189,239,191,189,66,239,191,189,109,239,191,189,239,191,189,11,35,239,191,189,34,239,191,189,62,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,13,20,19,45,239,191,189,239,191,189,5,14,205,174,123,116,223,132,239,191,189,97,41,239,191,189,239,191,189,239,191,189,62,56,239,191,189,239,191,189,67,103,39,74,239,191,189,239,191,189,16,68,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,75,239,191,189,239,191,189,85,70,239,191,189,65,94,239,191,189,34,45,92,239,191,189,42,239,191,189,54,239,191,189,39,37,239,191,189,43,104,239,191,189,121,239,191,189,54,239,191,189,29,239,191,189,239,191,189,50,239,191,189,33,85,31,66,239,191,189,70,1,9,116,39,103,239,191,189,121,25,217,139,194,163,9,239,191,189,239,191,189,239,191,189,0,239,191,189,109,239,191,189,112,239,191,189,65,239,191,189,84,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,18,95,37,28,210,145,42,42,40,239,191,189,114,114,31,239,191,189,117,239,191,189,239,191,189,108,199,174,239,191,189,107,239,191,189,3,69,10,239,191,189,239,191,189,34,42,203,139,239,191,189,109,111,13,239,191,189,84,194,175,239,191,189,42,239,191,189,239,191,189,3,98,239,191,189,51,124,239,191,189,9,124,90,69,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,239,191,189,91,7,239,191,189,11,231,130,178,80,103,124,239,191,189,239,191,189,24,19,239,191,189,239,191,189,239,191,189,0,239,191,189,90,100,83,239,191,189,32,78,48,239,191,189,239,191,189,239,191,189,101,96,124,239,191,189,239,191,189,64,34,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,20,4,239,191,189,239,191,189,66,50,24,15,239,191,189,33,239,191,189,110,239,191,189,7,101,220,189,239,191,189,239,191,189,5,239,191,189,2,28,5,239,191,189,99,210,133,239,191,189,239,191,189,239,191,189,2,92,239,191,189,62,239,191,189,239,191,189,122,239,191,189,120,239,191,189,239,191,189,120,62,239,191,189,239,191,189,31,56,239,191,189,239,191,189,51,101,7,239,191,189,90,18,239,191,189,35,239,191,189,95,239,191,189,76,33,61,239,191,189,18,19,239,191,189,239,191,189,68,66,239,191,189,96,114,206,137,239,191,189,126,37,68,239,191,189,239,191,189,201,152,127,239,191,189,99,39,43,239,191,189,21,87,15,24,0,108,87,1,239,191,189,120,11,110,239,191,189,240,156,167,134,239,191,189,239,191,189,10,5,239,191,189,239,191,189,239,191,189,203,131,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,46,239,191,189,71,113,97,50,239,191,189,239,191,189,56,43,239,191,189,20,239,191,189,239,191,189,82,221,155,239,191,189,239,191,189,16,89,116,83,53,239,191,189,239,191,189,67,239,191,189,239,191,189,30,239,191,189,239,191,189,5,239,191,189,95,20,42,86,46,26,80,98,239,191,189,239,191,189,110,239,191,189,218,165,239,191,189,81,239,191,189,106,30,239,191,189,68,239,191,189,60,119,100,239,191,189,78,239,191,189,25,91,239,191,189,239,191,189,239,191,189,239,191,189,113,75,123,239,191,189,9,18,239,191,189,62,123,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,118,102,116,239,191,189,107,216,178,239,191,189,239,191,189,108,72,61,3,239,191,189,64,219,178,8,223,176,239,191,189,41,239,191,189,50,58,239,191,189,239,191,189,121,47,88,239,191,189,76,239,191,189,125,40,44,97,239,191,189,239,191,189,89,239,191,189,41,239,191,189,239,191,189,124,59,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,36,239,191,189,61,239,191,189,107,48,217,182,120,103,115,127,239,191,189,239,191,189,239,191,189,239,191,189,20,121,42,23,33,86,10,0,239,191,189,104,239,191,189,239,191,189,96,206,161,21,239,191,189,94,99,239,191,189,239,191,189,63,239,191,189,86,23,8,239,191,189,125,239,191,189,28,239,191,189,198,182,239,191,189,20,24,239,191,189,239,191,189,239,191,189,124,61,2,3,115,23,85,239,191,189,239,191,189,94,239,191,189,239,191,189,82,239,191,189,239,191,189,212,131,239,191,189,0,24,117,239,191,189,74,205,153,239,191,189,12,124,55,239,191,189,239,191,189,36,239,191,189,239,191,189,122,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,87,239,191,189,48,116,39,23,239,191,189,239,191,189,68,216,179,89,239,191,189,239,191,189,52,105,123,10,239,191,189,115,56,98,94,11,239,191,189,19,31,239,191,189,239,191,189,239,191,189,0,101,62,239,191,189,239,191,189,52,104,239,191,189,239,191,189,100,117,239,191,189,239,191,189,76,239,191,189,60,239,191,189,239,191,189,8,239,191,189,103,239,191,189,239,191,189,239,191,189,127,239,191,189,58,36,239,191,189,20,239,191,189,41,239,191,189,83,239,191,189,78,26,26,239,191,189,0,0,239,191,189,37,117,239,191,189,58,239,191,189,18,46,239,191,189,239,191,189,100,239,191,189,9,239,191,189,10,239,191,189,124,85,239,191,189,239,191,189,67,239,191,189,239,191,189,107,75,239,191,189,100,116,239,191,189,34,112,239,191,189,7,239,191,189,110,239,191,189,100,239,191,189,68,75,40,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,7,239,191,189,44,85,9,239,191,189,60,69,239,191,189,239,191,189,95,24,239,191,189,239,191,189,239,191,189,26,59,39,239,191,189,16,239,191,189,239,191,189,77,239,191,189,69,215,177,9,239,191,189,239,191,189,205,132,239,191,189,239,191,189,0,239,191,189,65,121,91,19,8,5,239,191,189,88,239,191,189,115,239,191,189,18,116,239,191,189,239,191,189,239,191,189,239,191,189,78,54,111,239,191,189,16,49,0,51,239,191,189,239,191,189,239,191,189,239,191,189,107,236,135,182,239,191,189,239,191,189,204,163,8,239,191,189,70,239,191,189,239,191,189,239,191,189,234,158,148,239,191,189,21,51,239,191,189,239,191,189,109,239,191,189,90,239,191,189,105,41,19,239,191,189,88,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,122,239,191,189,62,70,97,239,191,189,239,191,189,239,191,189,62,115,127,239,191,189,92,45,87,239,191,189,239,191,189,51,84,239,191,189,109,239,191,189,239,191,189,239,191,189,19,239,191,189,17,69,102,90,76,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,54,239,191,189,239,191,189,234,188,147,239,191,189,239,191,189,97,239,191,189,120,43,239,191,189,120,75,59,13,15,115,91,78,198,177,239,191,189,54,239,191,189,39,239,191,189,239,191,189,124,87,44,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,8,55,106,69,118,104,239,191,189,59,239,191,189,211,129,239,191,189,239,191,189,198,184,239,191,189,99,111,239,191,189,21,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,82,76,107,239,191,189,123,239,191,189,56,239,191,189,6,60,239,191,189,9,80,73,239,191,189,239,191,189,60,83,49,70,239,191,189,239,191,189,115,56,123,239,191,189,239,191,189,239,191,189,239,191,189,48,203,157,91,239,191,189,21,239,191,189,239,191,189,239,191,189,88,239,191,189,100})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        blob: "Blob854bf798300b4d28b4dc9fefd285070a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=3584-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07000 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07000_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07000_s.txt", Encoding.UTF8);

    public Test07000() : base(recordedRequest, recordedResponse, "accounts8d439ff91164f0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,125,239,191,189,18,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,104,126,239,191,189,239,191,189,3,239,191,189,127,239,191,189,239,191,189,110,11,239,191,189,239,191,189,61,239,191,189,94,115,92,32,239,191,189,227,145,190,239,191,189,48,239,191,189,199,141,239,191,189,239,191,189,239,191,189,84,239,191,189,39,124,46,39,22,239,191,189,118,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,124,100,55,11,1,215,191,239,191,189,118,98,16,239,191,189,23,239,191,189,12,239,191,189,239,191,189,21,114,48,75,70,42,26,68,239,191,189,92,3,239,191,189,239,191,189,239,191,189,61,113,239,191,189,73,239,191,189,79,239,191,189,78,239,191,189,239,191,189,239,191,189,1,239,191,189,202,179,239,191,189,53,239,191,189,239,191,189,5,48,30,13,239,191,189,4,99,239,191,189,199,188,30,89,239,191,189,239,191,189,37,68,93,239,191,189,197,181,226,154,145,69,239,191,189,67,45,239,191,189,80,239,191,189,112,50,21,239,191,189,13,82,239,191,189,88,57,75,89,112,239,191,189,239,191,189,239,191,189,41,28,203,165,110,124,101,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,89,120,239,191,189,209,141,239,191,189,75,239,191,189,68,49,239,191,189,210,138,5,239,191,189,122,92,113,239,191,189,239,191,189,126,109,39,97,239,191,189,239,191,189,88,10,56,72,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,127,112,239,191,189,239,191,189,239,191,189,73,239,191,189,81,117,229,171,153,65,239,191,189,239,191,189,239,191,189,85,13,239,191,189,6,239,191,189,5,212,142,239,191,189,238,163,136,60,98,26,239,191,189,239,191,189,58,239,191,189,239,191,189,223,145,210,168,19,111,239,191,189,239,191,189,55,93,106,40,239,191,189,74,239,191,189,239,191,189,76,112,239,191,189,122,239,191,189,35,44,4,239,191,189,99,21,18,202,173,239,191,189,6,239,191,189,36,239,191,189,239,191,189,58,239,191,189,239,191,189,100,6,50,86,91,239,191,189,122,239,191,189,239,191,189,85,239,191,189,113,62,62,59,239,191,189,100,239,191,189,1,239,191,189,90,239,191,189,215,137,239,191,189,99,45,197,136,239,191,189,92,124,239,191,189,115,105,239,191,189,209,128,43,239,191,189,35,89,117,239,191,189,70,199,188,239,191,189,6,96,107,239,191,189,67,10,25,90,204,181,32,77,239,191,189,105,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,55,239,191,189,98,239,191,189,94,239,191,189,113,220,130,239,191,189,31,110,56,239,191,189,90,14,1,28,95,239,191,189,235,185,132,239,191,189,239,191,189,82,31,239,191,189,22,23,239,191,189,28,23,88,210,134,239,191,189,62,87,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,27,111,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,125,14,239,191,189,239,191,189,12,123,127,239,191,189,106,239,191,189,2,87,223,185,239,191,189,22,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,4,239,191,189,84,42,87,45,31,89,85,119,65,88,74,8,92,54,123,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,42,239,191,189,20,239,191,189,15,239,191,189,218,183,36,117,119,239,191,189,114,64,94,239,191,189,55,239,191,189,100,93,239,191,189,105,121,210,165,239,191,189,87,239,191,189,87,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,42,73,239,191,189,239,191,189,239,191,189,51,213,145,94,239,191,189,59,59,239,191,189,87,85,239,191,189,62,239,191,189,239,191,189,55,66,79,86,82,64,96,239,191,189,239,191,189,23,239,191,189,64,239,191,189,239,191,189,13,60,239,191,189,239,191,189,74,53,239,191,189,64,71,239,191,189,27,94,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,62,111,239,191,189,239,191,189,239,191,189,88,91,41,65,26,239,191,189,70,239,191,189,239,191,189,239,191,189,22,74,25,69,125,239,191,189,239,191,189,239,191,189,1,8,97,54,239,191,189,239,191,189,23,85,47,111,239,191,189,2,72,239,191,189,50,72,96,100,33,239,191,189,1,239,191,189,32,239,191,189,108,239,191,189,75,95,42,65,239,191,189,239,191,189,239,191,189,210,146,33,121,76,41,196,141,239,191,189,239,191,189,239,191,189,59,49,23,239,191,189,239,191,189,24,108,239,191,189,8,125,6,101,21,8,111,239,191,189,9,239,191,189,68,239,191,189,79,107,15,96,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,40,239,191,189,59,121,123,122,18,239,191,189,28,239,191,189,87,239,191,189,45,11,113,221,163,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,34,239,191,189,26,239,191,189,45,239,191,189,239,191,189,66,239,191,189,239,191,189,102,239,191,189,105,52,13,239,191,189,85,50,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,50,121,239,191,189,39,10,57,239,191,189,239,191,189,126,239,191,189,25,239,191,189,96,239,191,189,239,191,189,60,81,239,191,189,239,191,189,239,191,189,239,191,189,29,7,239,191,189,239,191,189,44,103,95,92,119,58,106,35,239,191,189,115,239,191,189,239,191,189,239,191,189,55,77,66,239,191,189,111,239,191,189,27,75,45,239,191,189,77,239,191,189,239,191,189,3,239,191,189,239,191,189,20,114,78,239,191,189,239,191,189,239,191,189,57,95,7,239,191,189,239,191,189,239,191,189,239,191,189,96,49,239,191,189,239,191,189,91,239,191,189,239,191,189,29,239,191,189,107,239,191,189,74,239,191,189,239,191,189,17,239,191,189,239,191,189,55,239,191,189,127,239,191,189,94,64,81,18,88,122,8,74,103,8,108,239,191,189,94,32,27,13,52,239,191,189,98,239,191,189,239,191,189,102,6,239,191,189,70,239,191,189,239,191,189,40,239,191,189,113,92,43,31,239,191,189,1,239,191,189,73,239,191,189,2,9,239,191,189,239,191,189,70,98,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,32,239,191,189,43,239,191,189,57,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,95,30,42,195,153,239,191,189,89,83,239,191,189,31,239,191,189,239,191,189,239,191,189,64,37,50,7,15,239,191,189,10,239,191,189,239,191,189,9,239,191,189,239,191,189,207,137,121,239,191,189,53,80,239,191,189,239,191,189,16,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,89,216,149,239,191,189,34,55,105,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,20,115,10,239,191,189,27,223,143,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,125,103,38,71,239,191,189,67,98,122,48,33,202,173,82,15,22,239,191,189,105,214,170,26,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,231,165,189,9,239,191,189,47,239,191,189,54,239,191,189,69,110,239,191,189,239,191,189,239,191,189,17,239,191,189,81,63,28,239,191,189,239,191,189,121,239,191,189,101,23,22,126,76,239,191,189,16,79,71,23,92,239,191,189,239,191,189,39,122,239,191,189,34,28,35,239,191,189,49})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff91164f0c",
                        container: "containerse9e15e20033f4188863d0457f6c0b446",
                        blob: "PageBlobcbe7d5e1c91748aaacdf804e925a475f",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07144 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07144_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07144_s.txt", Encoding.UTF8);

    public Test07144() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{76,239,191,189,239,191,189,90,73,239,191,189,97,104,95,95,11,88,40,239,191,189,15,25,54,239,191,189,101,103,239,191,189,239,191,189,26,239,191,189,60,239,191,189,105,97,14,239,191,189,239,191,189,117,105,71,239,191,189,239,191,189,219,173,239,191,189,239,191,189,239,191,189,25,239,191,189,33,69,239,191,189,239,191,189,239,191,189,239,191,189,78,33,239,191,189,239,191,189,70,239,191,189,87,239,191,189,239,191,189,29,239,191,189,73,0,90,122,239,191,189,239,191,189,239,191,189,239,191,189,48,71,62,239,191,189,65,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,35,239,191,189,88,9,221,143,7,239,191,189,207,191,103,239,191,189,239,191,189,1,233,167,140,15,239,191,189,76,239,191,189,239,191,189,239,191,189,68,239,191,189,124,208,189,239,191,189,115,239,191,189,239,191,189,54,239,191,189,239,191,189,49,239,191,189,61,96,239,191,189,57,239,191,189,239,191,189,29,239,191,189,92,239,191,189,75,239,191,189,239,191,189,0,239,191,189,43,0,239,191,189,117,239,191,189,20,68,97,239,191,189,74,239,191,189,91,38,239,191,189,102,10,53,239,191,189,239,191,189,79,239,191,189,239,191,189,18,10,229,157,152,105,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,53,239,191,189,86,60,239,191,189,239,191,189,239,191,189,57,239,191,189,21,108,239,191,189,239,191,189,239,191,189,239,191,189,21,62,26,239,191,189,0,239,191,189,239,191,189,239,191,189,86,123,218,183,57,239,191,189,14,239,191,189,61,38,48,91,239,191,189,123,11,85,239,191,189,101,35,239,191,189,120,239,191,189,239,191,189,115,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,72,30,70,0,107,7,239,191,189,239,191,189,239,191,189,239,191,189,108,53,239,191,189,15,91,79,39,239,191,189,239,191,189,23,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,90,40,85,40,239,191,189,25,239,191,189,239,191,189,55,106,101,239,191,189,239,191,189,239,191,189,239,191,189,200,175,117,58,196,164,101,239,191,189,239,191,189,125,205,175,53,105,239,191,189,113,54,110,239,191,189,91,100,239,191,189,239,191,189,239,191,189,28,44,75,36,239,191,189,239,191,189,18,9,34,239,191,189,22,239,191,189,96,239,191,189,56,239,191,189,194,188,81,106,239,191,189,106,96,89,239,191,189,239,191,189,46,73,63,239,191,189,239,191,189,27,211,160,29,239,191,189,88,64,239,191,189,20,107,195,140,115,82,239,191,189,16,239,191,189,53,239,191,189,239,191,189,239,191,189,91,113,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,202,137,56,239,191,189,239,191,189,113,239,191,189,92,239,191,189,9,61,239,191,189,7,239,191,189,239,191,189,7,239,191,189,239,191,189,19,70,0,239,191,189,239,191,189,98,239,191,189,107,239,191,189,103,239,191,189,198,129,239,191,189,239,191,189,3,58,87,26,81,52,239,191,189,239,191,189,22,239,191,189,29,113,2,239,191,189,239,191,189,239,191,189,35,4,10,239,191,189,239,191,189,239,191,189,87,58,239,191,189,40,6,239,191,189,239,191,189,239,191,189,67,239,191,189,93,14,217,178,239,191,189,102,239,191,189,83,126,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,124,120,239,191,189,118,239,191,189,116,122,239,191,189,28,239,191,189,40,46,239,191,189,239,191,189,47,89,97,20,239,191,189,239,191,189,44,58,239,191,189,109,239,191,189,55,216,158,19,239,191,189,239,191,189,239,191,189,112,239,191,189,121,110,239,191,189,70,112,239,191,189,94,207,147,239,191,189,110,37,239,191,189,5,239,191,189,239,191,189,64,220,159,239,191,189,239,191,189,65,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,207,132,7,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,27,239,191,189,90,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,41,87,239,191,189,239,191,189,239,191,189,38,55,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,18,37,56,69,239,191,189,100,239,191,189,239,191,189,84,45,59,239,191,189,239,191,189,239,191,189,44,82,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,92,27,93,239,191,189,41,37,41,239,191,189,239,191,189,239,191,189,23,50,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,127,52,239,191,189,89,239,191,189,116,60,239,191,189,50,239,191,189,239,191,189,104,239,191,189,80,239,191,189,239,191,189,6,2,239,191,189,47,3,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,88,37,239,191,189,58,104,40,239,191,189,4,239,191,189,239,191,189,239,191,189,98,22,1,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,86,239,191,189,100,126,239,191,189,239,191,189,78,115,65,239,191,189,197,151,87,239,191,189,80,2,76,239,191,189,70,91,69,239,191,189,11,239,191,189,89,239,191,189,37,21,54,239,191,189,239,191,189,39,239,191,189,239,191,189,19,58,239,191,189,22,239,191,189,53,33,239,191,189,59,22,73,69,8,239,191,189,239,191,189,77,90,98,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,41,93,10,239,191,189,239,191,189,112,115,86,239,191,189,61,239,191,189,126,213,172,37,35,43,239,191,189,239,191,189,15,100,28,109,125,112,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,81,63,33,113,239,191,189,22,239,191,189,85,239,191,189,239,191,189,239,191,189,12,106,239,191,189,207,133,239,191,189,239,191,189,110,239,191,189,239,191,189,31,126,239,191,189,12,239,191,189,91,98,239,191,189,239,191,189,88,239,191,189,119,63,239,191,189,58,78,13,107,121,35,57,116,16,3,239,191,189,239,191,189,239,191,189,13,18,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,100,239,191,189,100,239,191,189,239,191,189,75,239,191,189,38,239,191,189,120,239,191,189,239,191,189,123,239,191,189,97,21,42,239,191,189,69,27,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,120,239,191,189,78,239,191,189,69,126,34,239,191,189,102,239,191,189,7,239,191,189,41,239,191,189,239,191,189,239,191,189,54,21,16,45,239,191,189,239,191,189,46,239,191,189,239,191,189,54,123,117,105,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,43,51,17,239,191,189,239,191,189,32,239,191,189,14,239,191,189,239,191,189,86,61,17,239,191,189,239,191,189,54,12,239,191,189,239,191,189,239,191,189,14,2,239,191,189,108,107,239,191,189,93,239,191,189,239,191,189,26,16,17,11,239,191,189,239,191,189,126,239,191,189,107,81,115,46,101,37,55,88,69,239,191,189,239,191,189,88,78,239,191,189,50,10,92,36,15,2,57,239,191,189,226,176,171,2,60,45,239,191,189,239,191,189,6,239,191,189,239,191,189,32,239,191,189,73,90,239,191,189,239,191,189,239,191,189,117,19,38,89,93,239,191,189,239,191,189,51,239,191,189,7,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,111,194,131,98,239,191,189,9,89,239,191,189,239,191,189,84,239,191,189,45,102,233,176,187,122,50,239,191,189,37,239,191,189,239,191,189,82,12,239,191,189,8,80,239,191,189,239,191,189,72,239,191,189,59,110,239,191,189,218,151,29,71,239,191,189,107,239,191,189,239,191,189,239,191,189,9,239,191,189,82,239,191,189,239,191,189,86,239,191,189,68,239,191,189,239,191,189,42,239,191,189,111,119,239,191,189,239,191,189,96,239,191,189,82,239,191,189,101,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5f95f33153e648bebfde1c9b606122ef",
                        blob: "Blob62dc96b81585493598ac468481890fc8",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=4096-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07176 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07176_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07176_s.txt", Encoding.UTF8);

    public Test07176() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,28,239,191,189,239,191,189,231,171,178,11,30,60,239,191,189,114,239,191,189,110,239,191,189,59,53,127,81,239,191,189,239,191,189,13,239,191,189,38,46,65,80,90,239,191,189,2,239,191,189,239,191,189,67,239,191,189,239,191,189,115,48,63,3,118,4,4,239,191,189,55,11,239,191,189,239,191,189,22,32,239,191,189,76,120,239,191,189,73,62,115,239,191,189,239,191,189,124,112,239,191,189,195,151,239,191,189,3,32,47,239,191,189,120,29,11,239,191,189,124,239,191,189,125,239,191,189,16,239,191,189,26,239,191,189,110,57,57,211,182,54,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,194,146,239,191,189,64,109,15,51,239,191,189,118,222,157,3,239,191,189,86,239,191,189,239,191,189,239,191,189,101,99,22,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,55,239,191,189,78,53,66,239,191,189,95,239,191,189,51,239,191,189,32,60,107,0,107,47,18,239,191,189,239,191,189,54,12,95,58,239,191,189,46,75,30,239,191,189,239,191,189,206,145,57,239,191,189,239,191,189,239,191,189,103,239,191,189,64,239,191,189,239,191,189,239,191,189,42,34,18,239,191,189,239,191,189,239,191,189,98,239,191,189,119,239,191,189,112,239,191,189,82,239,191,189,215,145,90,6,239,191,189,216,183,239,191,189,100,88,239,191,189,239,191,189,40,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,40,55,239,191,189,81,239,191,189,239,191,189,80,239,191,189,32,85,100,239,191,189,0,239,191,189,65,58,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,9,55,58,239,191,189,239,191,189,14,123,239,191,189,239,191,189,213,154,105,35,102,239,191,189,28,239,191,189,239,191,189,118,56,239,191,189,32,239,191,189,39,47,80,239,191,189,80,38,239,191,189,239,191,189,127,110,96,239,191,189,26,239,191,189,87,106,223,164,101,239,191,189,28,102,107,30,239,191,189,239,191,189,239,191,189,50,239,191,189,71,239,191,189,68,239,191,189,102,18,118,239,191,189,118,43,239,191,189,26,73,26,239,191,189,239,191,189,208,138,239,191,189,98,24,239,191,189,239,191,189,44,124,239,191,189,239,191,189,239,191,189,50,239,191,189,81,116,114,239,191,189,56,239,191,189,28,239,191,189,239,191,189,111,239,191,189,239,191,189,104,121,239,191,189,239,191,189,239,191,189,75,111,91,3,116,23,208,185,239,191,189,239,191,189,24,107,239,191,189,81,239,191,189,98,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,15,239,191,189,33,239,191,189,43,239,191,189,66,47,27,239,191,189,239,191,189,239,191,189,117,84,239,191,189,239,191,189,239,191,189,92,239,191,189,0,239,191,189,239,191,189,3,66,1,29,45,115,239,191,189,239,191,189,71,239,191,189,67,104,96,239,191,189,239,191,189,239,191,189,78,118,239,191,189,210,136,120,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,90,16,239,191,189,239,191,189,239,191,189,13,85,239,191,189,121,123,71,17,239,191,189,12,239,191,189,34,239,191,189,64,112,84,239,191,189,7,44,122,239,191,189,47,65,239,191,189,239,191,189,196,164,79,220,180,14,79,17,2,239,191,189,239,191,189,239,191,189,239,191,189,7,87,64,103,53,239,191,189,107,105,17,239,191,189,239,191,189,239,191,189,5,82,239,191,189,39,20,239,191,189,204,135,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,16,239,191,189,120,239,191,189,91,239,191,189,0,239,191,189,58,99,239,191,189,115,98,126,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,107,239,191,189,239,191,189,34,18,113,239,191,189,82,239,191,189,72,50,77,239,191,189,239,191,189,88,52,66,239,191,189,85,34,82,14,239,191,189,239,191,189,88,36,105,1,239,191,189,48,8,56,66,56,38,239,191,189,85,127,239,191,189,35,239,191,189,84,239,191,189,48,239,191,189,239,191,189,239,191,189,37,126,239,191,189,239,191,189,214,140,105,92,239,191,189,61,120,239,191,189,77,85,80,239,191,189,24,41,20,239,191,189,239,191,189,50,69,239,191,189,117,107,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,70,93,50,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,198,156,239,191,189,92,239,191,189,239,191,189,6,239,191,189,20,13,239,191,189,56,239,191,189,92,106,239,191,189,196,161,239,191,189,239,191,189,123,2,239,191,189,17,239,191,189,78,239,191,189,239,191,189,103,239,191,189,239,191,189,7,239,191,189,16,239,191,189,239,191,189,49,72,239,191,189,35,121,99,239,191,189,123,80,75,239,191,189,1,239,191,189,31,19,57,42,239,191,189,96,239,191,189,216,188,239,191,189,113,30,15,49,94,89,235,163,168,239,191,189,239,191,189,91,124,239,191,189,239,191,189,68,24,96,72,239,191,189,239,191,189,239,191,189,239,191,189,46,72,239,191,189,121,221,160,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,4,105,49,68,33,101,239,191,189,239,191,189,84,44,196,151,239,191,189,78,239,191,189,72,99,239,191,189,239,191,189,13,239,191,189,101,239,191,189,239,191,189,239,191,189,14,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,28,39,90,239,191,189,239,191,189,100,1,239,191,189,10,239,191,189,239,191,189,103,239,191,189,104,121,239,191,189,216,159,239,191,189,72,239,191,189,65,87,239,191,189,236,147,136,239,191,189,239,191,189,116,118,239,191,189,97,70,103,239,191,189,51,239,191,189,1,239,191,189,101,239,191,189,239,191,189,127,18,239,191,189,56,60,108,24,69,56,82,239,191,189,239,191,189,239,191,189,3,53,239,191,189,239,191,189,120,239,191,189,55,113,24,27,6,65,0,239,191,189,118,3,239,191,189,239,191,189,239,191,189,239,191,189,71,215,145,92,90,76,113,239,191,189,47,61,239,191,189,194,179,239,191,189,239,191,189,239,191,189,239,191,189,48,102,239,191,189,121,239,191,189,103,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,117,44,51,124,66,218,153,67,239,191,189,126,58,120,29,108,65,34,94,239,191,189,112,239,191,189,239,191,189,100,16,239,191,189,24,239,191,189,239,191,189,6,239,191,189,239,191,189,112,90,82,239,191,189,58,239,191,189,239,191,189,69,239,191,189,93,70,103,239,191,189,89,41,36,46,104,239,191,189,94,222,187,8,239,191,189,17,27,86,100,85,56,239,191,189,60,239,191,189,239,191,189,239,191,189,29,202,178,7,239,191,189,97,122,239,191,189,61,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,116,111,108,239,191,189,4,239,191,189,82,239,191,189,239,191,189,30,54,239,191,189,239,191,189,84,239,191,189,9,239,191,189,34,239,191,189,11,90,124,97,4,239,191,189,100,239,191,189,239,191,189,52,20,239,191,189,239,191,189,117,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,21,239,191,189,55,8,239,191,189,95,201,137,239,191,189,239,191,189,239,191,189,44,49,239,191,189,239,191,189,109,239,191,189,13,104,239,191,189,239,191,189,220,135,94,239,191,189,85,99,34,98,239,191,189,73,57,208,139,122,63,34,115,120,239,191,189,51,239,191,189,72,41,239,191,189,239,191,189,222,146,31,239,191,189,68,103,99,239,191,189,56,68,239,191,189,116,239,191,189,239,191,189,239,191,189,38,239,191,189,87,72,92,239,191,189,121,239,191,189,75,239,191,189,239,191,189,239,191,189,104,196,148,93,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07002 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07002_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07002_s.txt", Encoding.UTF8);

    public Test07002() : base(recordedRequest, recordedResponse, "accounts8d439ff91164f0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,125,239,191,189,18,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,104,126,239,191,189,239,191,189,3,239,191,189,127,239,191,189,239,191,189,110,11,239,191,189,239,191,189,61,239,191,189,94,115,92,32,239,191,189,227,145,190,239,191,189,48,239,191,189,199,141,239,191,189,239,191,189,239,191,189,84,239,191,189,39,124,46,39,22,239,191,189,118,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,124,100,55,11,1,215,191,239,191,189,118,98,16,239,191,189,23,239,191,189,12,239,191,189,239,191,189,21,114,48,75,70,42,26,68,239,191,189,92,3,239,191,189,239,191,189,239,191,189,61,113,239,191,189,73,239,191,189,79,239,191,189,78,239,191,189,239,191,189,239,191,189,1,239,191,189,202,179,239,191,189,53,239,191,189,239,191,189,5,48,30,13,239,191,189,4,99,239,191,189,199,188,30,89,239,191,189,239,191,189,37,68,93,239,191,189,197,181,226,154,145,69,239,191,189,67,45,239,191,189,80,239,191,189,112,50,21,239,191,189,13,82,239,191,189,88,57,75,89,112,239,191,189,239,191,189,239,191,189,41,28,203,165,110,124,101,239,191,189,239,191,189,34,239,191,189,239,191,189,239,191,189,89,120,239,191,189,209,141,239,191,189,75,239,191,189,68,49,239,191,189,210,138,5,239,191,189,122,92,113,239,191,189,239,191,189,126,109,39,97,239,191,189,239,191,189,88,10,56,72,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,127,112,239,191,189,239,191,189,239,191,189,73,239,191,189,81,117,229,171,153,65,239,191,189,239,191,189,239,191,189,85,13,239,191,189,6,239,191,189,5,212,142,239,191,189,238,163,136,60,98,26,239,191,189,239,191,189,58,239,191,189,239,191,189,223,145,210,168,19,111,239,191,189,239,191,189,55,93,106,40,239,191,189,74,239,191,189,239,191,189,76,112,239,191,189,122,239,191,189,35,44,4,239,191,189,99,21,18,202,173,239,191,189,6,239,191,189,36,239,191,189,239,191,189,58,239,191,189,239,191,189,100,6,50,86,91,239,191,189,122,239,191,189,239,191,189,85,239,191,189,113,62,62,59,239,191,189,100,239,191,189,1,239,191,189,90,239,191,189,215,137,239,191,189,99,45,197,136,239,191,189,92,124,239,191,189,115,105,239,191,189,209,128,43,239,191,189,35,89,117,239,191,189,70,199,188,239,191,189,6,96,107,239,191,189,67,10,25,90,204,181,32,77,239,191,189,105,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,55,239,191,189,98,239,191,189,94,239,191,189,113,220,130,239,191,189,31,110,56,239,191,189,90,14,1,28,95,239,191,189,235,185,132,239,191,189,239,191,189,82,31,239,191,189,22,23,239,191,189,28,23,88,210,134,239,191,189,62,87,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,27,111,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,125,14,239,191,189,239,191,189,12,123,127,239,191,189,106,239,191,189,2,87,223,185,239,191,189,22,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,4,239,191,189,84,42,87,45,31,89,85,119,65,88,74,8,92,54,123,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,42,239,191,189,20,239,191,189,15,239,191,189,218,183,36,117,119,239,191,189,114,64,94,239,191,189,55,239,191,189,100,93,239,191,189,105,121,210,165,239,191,189,87,239,191,189,87,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,42,73,239,191,189,239,191,189,239,191,189,51,213,145,94,239,191,189,59,59,239,191,189,87,85,239,191,189,62,239,191,189,239,191,189,55,66,79,86,82,64,96,239,191,189,239,191,189,23,239,191,189,64,239,191,189,239,191,189,13,60,239,191,189,239,191,189,74,53,239,191,189,64,71,239,191,189,27,94,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,62,111,239,191,189,239,191,189,239,191,189,88,91,41,65,26,239,191,189,70,239,191,189,239,191,189,239,191,189,22,74,25,69,125,239,191,189,239,191,189,239,191,189,1,8,97,54,239,191,189,239,191,189,23,85,47,111,239,191,189,2,72,239,191,189,50,72,96,100,33,239,191,189,1,239,191,189,32,239,191,189,108,239,191,189,75,95,42,65,239,191,189,239,191,189,239,191,189,210,146,33,121,76,41,196,141,239,191,189,239,191,189,239,191,189,59,49,23,239,191,189,239,191,189,24,108,239,191,189,8,125,6,101,21,8,111,239,191,189,9,239,191,189,68,239,191,189,79,107,15,96,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,40,239,191,189,59,121,123,122,18,239,191,189,28,239,191,189,87,239,191,189,45,11,113,221,163,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,34,239,191,189,26,239,191,189,45,239,191,189,239,191,189,66,239,191,189,239,191,189,102,239,191,189,105,52,13,239,191,189,85,50,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,50,121,239,191,189,39,10,57,239,191,189,239,191,189,126,239,191,189,25,239,191,189,96,239,191,189,239,191,189,60,81,239,191,189,239,191,189,239,191,189,239,191,189,29,7,239,191,189,239,191,189,44,103,95,92,119,58,106,35,239,191,189,115,239,191,189,239,191,189,239,191,189,55,77,66,239,191,189,111,239,191,189,27,75,45,239,191,189,77,239,191,189,239,191,189,3,239,191,189,239,191,189,20,114,78,239,191,189,239,191,189,239,191,189,57,95,7,239,191,189,239,191,189,239,191,189,239,191,189,96,49,239,191,189,239,191,189,91,239,191,189,239,191,189,29,239,191,189,107,239,191,189,74,239,191,189,239,191,189,17,239,191,189,239,191,189,55,239,191,189,127,239,191,189,94,64,81,18,88,122,8,74,103,8,108,239,191,189,94,32,27,13,52,239,191,189,98,239,191,189,239,191,189,102,6,239,191,189,70,239,191,189,239,191,189,40,239,191,189,113,92,43,31,239,191,189,1,239,191,189,73,239,191,189,2,9,239,191,189,239,191,189,70,98,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,32,239,191,189,43,239,191,189,57,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,95,30,42,195,153,239,191,189,89,83,239,191,189,31,239,191,189,239,191,189,239,191,189,64,37,50,7,15,239,191,189,10,239,191,189,239,191,189,9,239,191,189,239,191,189,207,137,121,239,191,189,53,80,239,191,189,239,191,189,16,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,89,216,149,239,191,189,34,55,105,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,20,115,10,239,191,189,27,223,143,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,125,103,38,71,239,191,189,67,98,122,48,33,202,173,82,15,22,239,191,189,105,214,170,26,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,231,165,189,9,239,191,189,47,239,191,189,54,239,191,189,69,110,239,191,189,239,191,189,239,191,189,17,239,191,189,81,63,28,239,191,189,239,191,189,121,239,191,189,101,23,22,126,76,239,191,189,16,79,71,23,92,239,191,189,239,191,189,39,122,239,191,189,34,28,35,239,191,189,49})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff91164f0c",
                        container: "containerse9e15e20033f4188863d0457f6c0b446",
                        blob: "PageBlobcbe7d5e1c91748aaacdf804e925a475f",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07065 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07065_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07065_s.txt", Encoding.UTF8);

    public Test07065() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,46,239,191,189,239,191,189,87,239,191,189,89,73,18,107,127,0,86,116,106,239,191,189,127,239,191,189,125,39,239,191,189,239,191,189,108,60,239,191,189,80,26,239,191,189,118,239,191,189,85,117,27,239,191,189,58,7,239,191,189,239,191,189,66,105,124,239,191,189,67,239,191,189,39,64,127,18,75,53,239,191,189,239,191,189,127,3,239,191,189,239,191,189,239,191,189,239,191,189,23,6,107,239,191,189,239,191,189,93,22,9,239,191,189,57,98,13,211,128,19,239,191,189,14,62,239,191,189,20,95,239,191,189,8,239,191,189,64,20,110,239,191,189,24,53,239,191,189,239,191,189,207,148,59,239,191,189,239,191,189,28,239,191,189,107,30,91,239,191,189,239,191,189,239,191,189,40,239,191,189,102,108,88,239,191,189,109,239,191,189,239,191,189,239,191,189,53,99,239,191,189,72,239,191,189,19,239,191,189,80,239,191,189,239,191,189,61,63,69,21,239,191,189,239,191,189,88,239,191,189,239,191,189,4,239,191,189,47,239,191,189,24,72,8,239,191,189,239,191,189,239,191,189,32,239,191,189,45,239,191,189,5,239,191,189,8,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,45,11,239,191,189,33,86,239,191,189,239,191,189,20,23,239,191,189,239,191,189,93,51,77,121,0,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,16,99,63,122,239,191,189,103,239,191,189,239,191,189,239,191,189,117,47,2,239,191,189,45,239,191,189,239,191,189,51,23,14,11,214,129,40,239,191,189,103,239,191,189,17,239,191,189,34,239,191,189,239,191,189,1,239,191,189,27,239,191,189,41,239,191,189,239,191,189,1,51,89,90,239,191,189,62,45,48,239,191,189,75,69,239,191,189,85,239,191,189,239,191,189,127,24,239,191,189,58,239,191,189,18,239,191,189,85,31,239,191,189,106,239,191,189,46,96,126,82,239,191,189,4,86,21,219,178,124,239,191,189,239,191,189,123,55,7,239,191,189,86,105,43,239,191,189,104,34,2,76,239,191,189,75,239,191,189,22,239,191,189,58,239,191,189,85,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,205,156,239,191,189,80,26,239,191,189,239,191,189,239,191,189,48,62,104,239,191,189,62,123,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,108,239,191,189,124,103,239,191,189,205,162,239,191,189,44,239,191,189,239,191,189,84,102,127,239,191,189,48,239,191,189,49,77,113,239,191,189,23,239,191,189,56,239,191,189,239,191,189,239,191,189,18,239,191,189,114,239,191,189,239,191,189,85,239,191,189,96,239,191,189,239,191,189,115,18,239,191,189,38,123,17,239,191,189,27,239,191,189,20,239,191,189,3,239,191,189,239,191,189,205,175,6,46,84,239,191,189,68,239,191,189,23,219,144,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,123,31,239,191,189,75,18,5,35,28,239,191,189,239,191,189,107,14,114,239,191,189,19,16,78,239,191,189,11,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,49,239,191,189,103,20,239,191,189,34,239,191,189,36,239,191,189,27,79,239,191,189,39,46,114,111,239,191,189,71,239,191,189,217,176,239,191,189,18,239,191,189,57,239,191,189,37,239,191,189,239,191,189,81,239,191,189,49,239,191,189,23,3,239,191,189,125,239,191,189,101,235,147,149,239,191,189,84,49,111,239,191,189,119,20,122,115,58,88,57,239,191,189,85,21,239,191,189,68,239,191,189,239,191,189,5,201,160,106,60,113,91,108,239,191,189,239,191,189,48,82,239,191,189,29,64,86,239,191,189,7,110,239,191,189,44,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,111,239,191,189,106,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,44,11,239,191,189,239,191,189,66,239,191,189,106,27,119,239,191,189,107,239,191,189,239,191,189,239,191,189,84,101,239,191,189,102,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,117,239,191,189,239,191,189,116,58,239,191,189,18,112,113,32,19,39,239,191,189,13,40,104,239,191,189,121,12,239,191,189,239,191,189,22,40,217,181,117,74,16,49,78,234,166,129,115,239,191,189,3,196,171,239,191,189,102,121,52,81,239,191,189,110,102,239,191,189,239,191,189,19,14,41,239,191,189,40,239,191,189,108,103,239,191,189,239,191,189,74,239,191,189,96,63,239,191,189,40,239,191,189,118,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,105,50,121,239,191,189,239,191,189,14,71,15,200,138,29,64,239,191,189,239,191,189,88,239,191,189,122,36,104,64,96,239,191,189,5,57,98,41,74,239,191,189,239,191,189,64,239,191,189,47,35,91,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,61,58,239,191,189,239,191,189,34,239,191,189,103,239,191,189,29,239,191,189,198,184,123,239,191,189,109,239,191,189,44,64,127,239,191,189,239,191,189,78,68,239,191,189,239,191,189,239,191,189,28,102,22,98,239,191,189,239,191,189,239,191,189,2,37,239,191,189,47,22,239,191,189,239,191,189,115,239,191,189,33,122,239,191,189,121,239,191,189,5,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,52,117,0,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,71,239,191,189,239,191,189,41,239,191,189,239,191,189,80,116,35,13,239,191,189,57,239,191,189,120,16,239,191,189,30,239,191,189,18,20,47,100,59,239,191,189,90,239,191,189,239,191,189,31,94,239,191,189,239,191,189,20,210,166,83,204,159,93,239,191,189,120,122,239,191,189,106,4,239,191,189,210,136,239,191,189,34,239,191,189,239,191,189,118,239,191,189,239,191,189,23,77,239,191,189,71,83,41,239,191,189,84,239,191,189,107,36,36,239,191,189,210,189,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,55,239,191,189,56,2,239,191,189,239,191,189,239,191,189,85,239,191,189,63,239,191,189,5,11,88,9,239,191,189,239,191,189,38,13,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,87,37,111,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,96,239,191,189,239,191,189,87,11,239,191,189,207,155,239,191,189,67,239,191,189,239,191,189,38,123,239,191,189,239,191,189,115,78,239,191,189,87,15,239,191,189,239,191,189,16,239,191,189,239,191,189,61,239,191,189,239,191,189,70,211,179,239,191,189,239,191,189,62,239,191,189,62,239,191,189,2,64,15,59,112,114,58,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,108,86,50,81,69,109,239,191,189,239,191,189,119,239,191,189,58,5,74,112,4,62,46,61,7,239,191,189,239,191,189,76,239,191,189,72,239,191,189,21,15,239,191,189,14,239,191,189,72,239,191,189,101,239,191,189,102,92,78,239,191,189,239,191,189,113,239,191,189,29,239,191,189,239,191,189,239,191,189,54,37,2,53,88,209,182,210,174,239,191,189,31,239,191,189,239,191,189,125,47,93,239,191,189,239,191,189,239,191,189,55,126,239,191,189,239,191,189,9,239,191,189,239,191,189,68,239,191,189,207,136,239,191,189,239,191,189,115,239,191,189,239,191,189,13,239,191,189,239,191,189,194,145,239,191,189,239,191,189,70,239,191,189,100,41,239,191,189,19,239,191,189,122,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,104,73,114,59,239,191,189,88,93,239,191,189,118,239,191,189,62,80,20,239,191,189,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,121,239,191,189,239,191,189,13,28,114,29,7})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa36719ae2bf6480cb7e0950dc3120f41",
                        blob: "PageBlob3e7304819efd466fbf65bd92269dbfa4",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07177 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07177_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07177_s.txt", Encoding.UTF8);

    public Test07177() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,4,239,191,189,109,239,191,189,65,239,191,189,72,239,191,189,229,168,141,239,191,189,73,239,191,189,106,239,191,189,239,191,189,101,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,46,239,191,189,239,191,189,119,22,239,191,189,57,83,118,239,191,189,17,55,239,191,189,3,239,191,189,239,191,189,26,239,191,189,16,74,239,191,189,65,32,239,191,189,31,239,191,189,111,125,84,46,113,98,239,191,189,20,26,54,15,49,119,239,191,189,15,126,239,191,189,239,191,189,45,71,239,191,189,239,191,189,239,191,189,239,191,189,32,33,89,89,239,191,189,9,88,116,115,239,191,189,239,191,189,71,125,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,99,64,58,14,77,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,84,239,191,189,81,64,68,239,191,189,46,239,191,189,6,239,191,189,2,92,83,127,239,191,189,31,49,239,191,189,239,191,189,239,191,189,115,95,239,191,189,239,191,189,239,191,189,30,75,239,191,189,36,29,102,26,239,191,189,0,239,191,189,239,191,189,43,110,85,216,186,239,191,189,239,191,189,16,96,239,191,189,230,142,160,99,239,191,189,94,239,191,189,239,191,189,71,239,191,189,6,239,191,189,96,37,111,239,191,189,106,239,191,189,114,239,191,189,82,239,191,189,11,239,191,189,239,191,189,62,239,191,189,45,239,191,189,198,143,92,239,191,189,55,239,191,189,239,191,189,239,191,189,99,8,116,30,239,191,189,239,191,189,239,191,189,239,191,189,13,47,104,43,84,239,191,189,239,191,189,120,92,239,191,189,239,191,189,239,191,189,112,239,191,189,31,202,136,239,191,189,46,118,55,99,238,179,145,239,191,189,239,191,189,106,114,104,239,191,189,33,111,91,239,191,189,15,115,2,96,22,239,191,189,227,159,163,3,104,80,108,232,170,149,37,239,191,189,36,96,239,191,189,64,239,191,189,239,191,189,239,191,189,42,50,6,239,191,189,239,191,189,239,191,189,37,20,65,15,86,239,191,189,51,23,239,191,189,83,239,191,189,74,239,191,189,40,90,24,239,191,189,239,191,189,239,191,189,116,239,191,189,75,239,191,189,11,206,190,104,239,191,189,239,191,189,221,172,239,191,189,108,66,60,43,239,191,189,84,14,239,191,189,109,239,191,189,13,239,191,189,239,191,189,5,113,79,17,239,191,189,62,32,239,191,189,239,191,189,239,191,189,25,53,65,239,191,189,30,124,43,239,191,189,117,23,239,191,189,67,239,191,189,29,239,191,189,115,196,130,46,239,191,189,239,191,189,37,216,184,239,191,189,102,239,191,189,13,239,191,189,239,191,189,36,114,104,35,239,191,189,239,191,189,239,191,189,239,191,189,117,66,217,152,239,191,189,85,194,138,49,35,7,239,191,189,91,3,239,191,189,45,43,16,104,239,191,189,39,22,80,239,191,189,213,139,123,239,191,189,125,239,191,189,239,191,189,17,239,191,189,239,191,189,12,239,191,189,239,191,189,85,86,239,191,189,239,191,189,107,52,239,191,189,6,239,191,189,48,33,239,191,189,58,239,191,189,239,191,189,47,239,191,189,239,191,189,94,239,191,189,33,239,191,189,67,239,191,189,239,191,189,13,55,44,239,191,189,18,239,191,189,239,191,189,239,191,189,90,214,186,239,191,189,239,191,189,226,153,178,1,91,90,43,66,3,17,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,4,94,239,191,189,239,191,189,15,239,191,189,239,191,189,42,239,191,189,239,191,189,33,43,73,239,191,189,12,124,88,111,239,191,189,239,191,189,127,239,191,189,239,191,189,51,26,20,54,123,72,239,191,189,67,239,191,189,61,239,191,189,93,239,191,189,14,239,191,189,63,239,191,189,47,101,98,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,67,239,191,189,43,40,62,239,191,189,239,191,189,112,239,191,189,239,191,189,45,239,191,189,239,191,189,56,221,132,11,12,239,191,189,239,191,189,74,204,129,53,80,96,103,81,52,123,76,124,23,67,101,113,123,20,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,42,4,97,239,191,189,239,191,189,80,239,191,189,87,118,80,239,191,189,239,191,189,239,191,189,44,119,60,127,63,239,191,189,202,156,239,191,189,107,8,239,191,189,100,239,191,189,123,239,191,189,37,205,176,3,239,191,189,61,76,239,191,189,239,191,189,109,43,125,239,191,189,239,191,189,33,239,191,189,60,202,156,239,191,189,98,39,116,211,130,239,191,189,87,239,191,189,89,239,191,189,121,106,30,239,191,189,81,239,191,189,68,239,191,189,1,239,191,189,42,105,239,191,189,209,133,76,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,74,239,191,189,73,239,191,189,88,221,128,239,191,189,239,191,189,121,87,239,191,189,239,191,189,95,64,239,191,189,239,191,189,66,103,201,172,121,239,191,189,239,191,189,239,191,189,78,54,55,116,78,239,191,189,239,191,189,239,191,189,32,70,97,84,41,103,85,13,10,118,239,191,189,57,239,191,189,239,191,189,239,191,189,112,70,239,191,189,63,82,209,157,94,81,102,239,191,189,239,191,189,73,239,191,189,113,101,239,191,189,123,20,239,191,189,25,239,191,189,73,117,239,191,189,18,239,191,189,239,191,189,2,7,93,197,137,73,239,191,189,45,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,16,239,191,189,116,239,191,189,11,80,239,191,189,17,78,239,191,189,239,191,189,35,211,146,239,191,189,53,101,63,21,239,191,189,92,73,9,239,191,189,5,239,191,189,239,191,189,67,239,191,189,10,239,191,189,7,30,49,239,191,189,91,1,1,7,106,8,239,191,189,239,191,189,102,118,52,48,109,49,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,90,85,79,67,239,191,189,239,191,189,5,239,191,189,196,161,52,99,56,239,191,189,239,191,189,107,239,191,189,106,239,191,189,239,191,189,19,85,217,167,15,239,191,189,239,191,189,7,119,125,46,239,191,189,16,239,191,189,239,191,189,117,239,191,189,58,96,239,191,189,112,239,191,189,56,239,191,189,17,76,239,191,189,31,54,121,239,191,189,51,239,191,189,239,191,189,66,239,191,189,106,36,239,191,189,109,239,191,189,239,191,189,42,239,191,189,52,60,239,191,189,65,239,191,189,26,239,191,189,239,191,189,62,239,191,189,81,239,191,189,28,10,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,119,111,239,191,189,10,239,191,189,239,191,189,239,191,189,217,179,99,239,191,189,239,191,189,213,178,81,85,28,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,95,239,191,189,239,191,189,105,116,239,191,189,44,239,191,189,58,239,191,189,35,239,191,189,34,15,239,191,189,47,75,219,157,33,239,191,189,113,239,191,189,15,239,191,189,49,239,191,189,27,18,5,239,191,189,47,239,191,189,201,171,30,239,191,189,239,191,189,101,239,191,189,55,239,191,189,95,18,239,191,189,239,191,189,50,13,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,66,57,17,239,191,189,52,22,239,191,189,30,88,100,201,151,239,191,189,117,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,49,239,191,189,239,191,189,33,105,91,239,191,189,239,191,189,23,239,191,189,239,191,189,79,239,191,189,239,191,189,34,239,191,189,38,239,191,189,42,239,191,189,239,191,189,98,218,168,47,17,239,191,189,124,210,177,95,239,191,189,33,95,239,191,189,67,239,191,189,239,191,189,79,239,191,189,91,111,7,210,167,122,239,191,189,239,191,189,83,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,88,115,62,239,191,189,102,38,239,191,189,46,88,76,239,191,189,239,191,189,54,239,191,189,81,239,191,189,43,90,7,1,239,191,189,49,239,191,189,41,239,191,189,239,191,189,121,239,191,189,111,120,239,191,189,30,239,191,189,239,191,189,239,191,189,101,29,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,115,80,239,191,189,55,239,191,189,17,239,191,189,116,29,239,191,189,59,39,124,20,42,121,239,191,189,239,191,189,223,150,239,191,189,100,57,239,191,189,239,191,189,110,239,191,189,91,60,106,239,191,189,83,239,191,189,54,95,65,92,94,239,191,189,65,1,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,39,239,191,189,215,140,239,191,189,13,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,126,40,95,239,191,189,25,107,239,191,189,96,33,84,239,191,189,239,191,189,119,239,191,189,2,121,221,145,93,100,239,191,189,0,70,2,74,11,239,191,189,239,191,189,239,191,189,113,239,191,189,63,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,14,239,191,189,71,43,239,191,189,239,191,189,239,191,189,34,221,152,239,191,189,21,110,40,100,91,239,191,189,126,239,191,189,92,239,191,189,13,239,191,189,223,145,239,191,189,205,128,239,134,150,66,239,191,189,63,239,191,189,239,191,189,29,239,191,189,120,239,191,189,15,39,46,41,9,239,191,189,2,94,239,191,189,127,239,191,189,239,191,189,239,191,189,77,239,191,189,1,239,191,189,104,239,191,189,239,191,189,239,191,189,114,51,86,1,102,69,47,239,191,189,239,191,189,61,66,5,82,76,239,191,189,223,128,239,191,189,215,173,111,239,191,189,112,239,191,189,239,191,189,99,239,191,189,75,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,116,211,184,63,65,239,191,189,206,140,0,113,34,105,239,191,189,239,191,189,42,122,239,191,189,239,191,189,239,191,189,62,3,239,191,189,239,191,189,35,239,191,189,239,191,189,43,99,239,191,189,239,191,189,239,191,189,6,88,49,98,217,182,101,46,239,191,189,239,191,189,214,129,239,191,189,95,119,34,83,119,42,239,191,189,49,11,232,160,177,239,149,133,239,191,189,239,191,189,106,239,191,189,81,239,191,189,27,16,96,96,80,239,191,189,102,239,191,189,239,191,189,74,44,65,9,239,191,189,66,102,239,191,189,239,191,189,239,191,189,92,239,191,189,111,239,191,189,239,191,189,239,191,189,33,239,191,189,118,64,239,191,189,239,191,189,48,239,191,189,68,102,239,191,189,239,191,189,39,102,105,239,191,189,14,239,191,189,116,111,239,191,189,239,191,189,67,82,239,191,189,126,90,114,239,191,189,31,239,191,189,207,175,102,239,191,189,239,191,189,29,239,191,189,239,191,189,51,17,20,127,219,164,239,191,189,239,191,189,29,117,239,191,189,239,191,189,239,191,189,29,66,4,79,239,191,189,35,239,191,189,11,239,191,189,239,191,189,109,36,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,127,82,239,191,189,64,94,239,191,189,81,103,239,191,189,210,185,60,239,191,189,239,191,189,51,207,178,109,97,83,239,191,189,239,191,189,52,239,191,189,239,191,189,83,239,191,189,91,21,239,191,189,239,191,189,4,90,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,53,117,239,191,189,82,98,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,95,112,239,191,189,239,191,189,29,41,239,191,189,11,42,239,191,189,82,239,191,189,47,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,213,137,46,85,239,191,189,239,191,189,125,98,50,239,191,189,2,106,31,113,204,164})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=3072-4607",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07178 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07178_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07178_s.txt", Encoding.UTF8);

    public Test07178() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{49,239,191,189,8,6,239,191,189,121,239,191,189,239,191,189,239,191,189,85,25,87,24,106,75,48,26,68,0,239,191,189,239,191,189,120,121,40,239,191,189,50,239,191,189,99,16,239,191,189,239,191,189,239,191,189,29,20,239,191,189,239,191,189,38,78,239,191,189,11,239,191,189,197,178,60,239,191,189,19,6,7,239,191,189,116,239,191,189,85,239,191,189,239,191,189,1,239,191,189,94,239,191,189,122,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,73,58,4,198,154,10,239,191,189,114,239,191,189,1,239,191,189,60,63,121,44,239,191,189,239,191,189,39,124,22,65,19,239,191,189,82,70,239,191,189,33,28,239,191,189,56,40,239,191,189,239,191,189,239,191,189,2,64,239,191,189,105,3,239,191,189,239,191,189,51,239,191,189,239,191,189,34,239,191,189,0,239,191,189,108,65,239,191,189,98,6,50,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,80,239,191,189,239,191,189,200,157,239,191,189,239,191,189,239,191,189,42,65,239,191,189,49,35,239,191,189,81,13,19,239,191,189,48,239,191,189,211,157,239,191,189,239,191,189,71,197,178,109,239,191,189,17,100,239,191,189,239,191,189,12,239,191,189,239,191,189,94,54,85,239,191,189,0,96,89,42,69,239,191,189,63,109,239,191,189,239,191,189,239,191,189,239,191,189,23,29,35,239,191,189,39,66,239,191,189,239,191,189,239,191,189,50,239,191,189,24,239,191,189,92,239,191,189,22,7,100,239,191,189,220,161,239,191,189,239,191,189,115,67,239,191,189,76,239,191,189,239,191,189,69,239,191,189,239,191,189,52,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,125,239,191,189,206,159,65,76,239,191,189,51,41,102,123,60,0,68,239,191,189,120,239,191,189,110,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,3,45,39,239,191,189,239,191,189,39,36,239,191,189,239,191,189,239,191,189,2,57,99,85,92,239,191,189,17,239,191,189,51,57,1,15,57,112,35,37,239,191,189,41,67,40,239,191,189,92,239,191,189,21,47,239,191,189,63,220,168,239,191,189,32,197,161,239,191,189,107,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,37,239,191,189,239,191,189,239,191,189,124,110,106,239,191,189,125,239,191,189,1,239,191,189,75,77,37,96,239,191,189,53,15,90,25,59,110,93,4,239,191,189,239,191,189,25,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,60,7,239,191,189,95,57,111,38,72,239,191,189,239,191,189,239,191,189,29,69,125,239,191,189,13,95,4,87,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,25,66,239,191,189,239,191,189,10,239,191,189,89,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,63,239,191,189,76,239,191,189,239,191,189,239,191,189,53,239,191,189,84,239,191,189,239,191,189,239,191,189,112,215,157,92,30,95,98,217,150,202,154,58,239,191,189,60,239,191,189,239,191,189,46,107,25,239,191,189,8,18,113,37,239,191,189,239,191,189,42,92,228,136,167,239,191,189,94,48,239,191,189,63,55,121,204,147,239,191,189,239,191,189,239,191,189,117,2,17,7,96,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,94,101,120,239,191,189,106,52,6,239,191,189,13,35,239,191,189,239,191,189,99,83,239,191,189,81,239,191,189,239,191,189,239,191,189,19,102,36,239,191,189,34,127,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,35,86,239,191,189,239,191,189,218,191,239,191,189,97,95,239,191,189,239,191,189,239,191,189,82,46,53,239,191,189,12,239,191,189,90,239,191,189,73,29,239,191,189,73,58,105,85,76,239,191,189,106,61,239,191,189,16,100,239,191,189,239,191,189,239,191,189,239,191,189,220,146,8,61,38,239,191,189,239,191,189,68,239,191,189,239,191,189,73,9,239,191,189,239,191,189,239,191,189,40,117,6,97,56,80,113,106,96,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,67,0,239,191,189,239,191,189,11,239,191,189,107,239,191,189,239,191,189,239,191,189,97,3,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,35,239,191,189,120,107,39,239,191,189,239,191,189,49,60,239,191,189,117,239,191,189,116,239,191,189,72,122,239,191,189,21,90,105,15,239,191,189,239,191,189,91,239,191,189,8,93,239,191,189,73,239,191,189,18,239,191,189,239,191,189,214,141,23,202,149,239,191,189,37,114,239,191,189,47,202,128,3,239,191,189,106,108,49,102,201,141,239,191,189,239,191,189,45,2,29,239,191,189,31,74,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,11,49,239,191,189,85,117,53,239,191,189,73,239,191,189,239,191,189,218,174,27,239,191,189,23,239,191,189,73,90,122,60,96,20,239,191,189,220,129,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,71,78,94,59,239,191,189,16,84,87,239,191,189,79,102,38,66,10,3,87,38,208,172,106,51,65,97,239,191,189,28,1,121,239,191,189,90,46,108,239,191,189,239,191,189,239,191,189,102,205,148,71,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,125,239,191,189,239,191,189,12,65,239,191,189,239,191,189,5,239,191,189,30,239,191,189,239,191,189,96,239,191,189,95,239,191,189,96,90,239,191,189,54,239,191,189,239,191,189,59,40,116,48,84,116,239,191,189,46,239,191,189,239,191,189,118,214,139,96,239,191,189,24,40,96,239,191,189,239,191,189,41,20,239,191,189,5,239,191,189,10,107,239,191,189,16,45,71,239,191,189,239,191,189,239,191,189,25,56,239,191,189,239,191,189,119,2,239,191,189,239,191,189,239,191,189,239,191,189,38,211,130,239,191,189,71,49,67,84,239,191,189,39,59,239,191,189,43,239,191,189,106,69,239,191,189,239,191,189,122,47,22,199,143,125,239,191,189,239,191,189,106,239,191,189,57,42,239,191,189,239,191,189,223,185,239,191,189,116,70,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,88,99,239,191,189,12,239,191,189,78,100,116,239,191,189,16,11,239,191,189,121,102,239,191,189,239,191,189,239,191,189,2,123,239,191,189,62,51,75,13,239,191,189,239,191,189,90,239,191,189,239,191,189,60,54,239,191,189,230,159,135,53,239,191,189,93,34,239,191,189,197,136,239,191,189,207,173,239,191,189,239,191,189,239,191,189,71,85,7,220,147,239,191,189,239,191,189,37,23,239,191,189,40,239,191,189,239,191,189,239,191,189,126,239,191,189,82,12,239,191,189,239,191,189,98,206,141,239,191,189,55,239,191,189,66,124,95,79,239,191,189,123,95,58,52,90,37,59,0,98,30,239,191,189,52,54,239,191,189,7,239,191,189,114,239,191,189,90,239,191,189,33,0,239,191,189,122,239,191,189,2,116,239,191,189,239,191,189,125,239,191,189,22,120,94,239,191,189,73,126,44,239,191,189,239,191,189,124,68,239,191,189,88,239,191,189,239,191,189,47,16,207,134,4,200,180,123,122,239,191,189,239,191,189,94,35,239,191,189,23,239,191,189,239,191,189,107,92,32,125,239,191,189,239,191,189,41,119,45,239,191,189,72,239,191,189,239,191,189,239,191,189,34,81,103,68,239,191,189,18,20,120,16,98,239,191,189,239,191,189,239,191,189,239,191,189,31,9,10,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,28,239,191,189,19,239,191,189,14,239,191,189,17,107,239,191,189,239,191,189,17,239,191,189,12,239,191,189,239,191,189,61,109,109,239,191,189,75,239,191,189,239,191,189,239,191,189,7,239,191,189,88,36,239,191,189,239,191,189,239,191,189,239,191,189,39,38,239,191,189,74,239,191,189,239,191,189,107,6,239,191,189,239,191,189,239,191,189,6,11,239,191,189,239,191,189,18,76,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,203,156,239,191,189,12,13,239,191,189,239,191,189,101,239,191,189,110,239,191,189,239,191,189,112,68,113,239,191,189,120,1,103,81,76,239,191,189,121,239,191,189,35,239,191,189,69,239,191,189,36,2,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,94,79,239,191,189,16,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,53,100,4,34,10,239,191,189,107,113,239,191,189,64,239,191,189,116,110,73,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,23,97,239,191,189,239,191,189,239,191,189,42,25,118,239,191,189,98,239,191,189,109,239,191,189,106,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,88,45,36,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,74,239,191,189,239,191,189,211,177,77,65,100,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,79,55,239,191,189,239,191,189,56,75,90,239,191,189,239,191,189,3,123,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,202,150,96,239,191,189,73,239,191,189,17,239,191,189,239,191,189,57,122,66,30,239,191,189,208,162,54,239,191,189,28,90,58,239,191,189,239,191,189,86,196,133,96,67,239,191,189,10,239,191,189,115,63,239,191,189,4,72,239,191,189,239,191,189,239,191,189,79,239,191,189,14,84,17,239,191,189,70,239,191,189,46,239,191,189,239,191,189,4,77,82,73,46,14,9,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,66,6,2,239,191,189,208,135,26,239,191,189,239,191,189,239,191,189,122,43,71,118,119,125,239,191,189,50,239,191,189,239,191,189,79,239,191,189,38,239,191,189,56,239,191,189,58,127,239,191,189,41,36,17,49,122,239,191,189,239,191,189,67,2,93,35,239,191,189,41,16,239,191,189,239,191,189,29,230,151,146,105,239,191,189,239,191,189,54,3,239,191,189,80,239,191,189,21,98,239,191,189,77,239,191,189,239,191,189,202,168,104,239,191,189,204,167,239,191,189,57,239,191,189,239,191,189,116,8,38,239,191,189,21,26,239,191,189,239,191,189,85,77,44,239,191,189,46,239,191,189,126,239,191,189,46,239,191,189,99,239,191,189,53,86,70,239,191,189,110,35,26,239,191,189,239,191,189,47,239,191,189,35,239,191,189,239,191,189,99,110,58,239,191,189,72,11,239,191,189,239,191,189,125,125,123,239,191,189,239,191,189,239,191,189,41,239,191,189,11,71,113,239,191,189,239,191,189,208,155,205,167,239,191,189,212,178,239,191,189,37,87,9,25,52,239,191,189,16,239,191,189,46,86,87,44,239,191,189,239,191,189,239,191,189,92,239,191,189,88,62,239,191,189,79,35,239,191,189,239,191,189,36,39,239,191,189,239,191,189,109,88,81,54,239,191,189,239,191,189,87,38,114,116,239,191,189,78,24,239,191,189,239,191,189,239,191,189,26,113,75,239,191,189,239,191,189,112,198,158,239,191,189,239,191,189,1,239,191,189,88,239,191,189,12,239,191,189,62,80,239,191,189,5,32,52,208,128,239,191,189,239,191,189,108,239,191,189,239,191,189,104,71,239,191,189,239,191,189,239,191,189,219,154,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,14,85,125,26,127,239,191,189,83,218,151,6,239,191,189,239,191,189,60,123,119,48,239,191,189,89,221,165,61,64,239,191,189,239,191,189,239,191,189,64,49,96,62,83,67,83,127,40,239,191,189,42})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=5120-6655",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07179 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07179_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07179_s.txt", Encoding.UTF8);

    public Test07179() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,64,212,157,119,96,34,239,191,189,118,56,239,191,189,239,191,189,239,191,189,206,155,239,191,189,89,63,89,239,191,189,67,195,151,122,20,239,191,189,77,11,239,191,189,108,239,191,189,9,106,111,122,20,35,239,191,189,239,191,189,62,112,239,191,189,10,126,239,191,189,90,239,191,189,118,239,191,189,220,169,55,239,191,189,124,61,35,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,99,94,32,127,53,117,239,191,189,239,191,189,43,103,239,191,189,25,239,191,189,239,191,189,196,189,123,62,239,191,189,239,191,189,96,50,239,191,189,239,191,189,239,191,189,0,102,41,105,239,191,189,27,62,80,239,191,189,239,191,189,239,191,189,110,17,65,56,83,239,191,189,12,37,239,191,189,36,45,239,191,189,239,191,189,23,71,239,191,189,13,99,239,191,189,49,125,34,239,191,189,53,14,95,75,126,76,122,239,191,189,98,239,191,189,47,79,106,239,191,189,239,191,189,118,107,38,239,191,189,57,239,191,189,210,190,70,82,101,239,191,189,49,239,191,189,1,239,191,189,23,75,104,11,41,239,191,189,239,191,189,239,191,189,74,91,239,191,189,239,191,189,239,191,189,221,132,239,191,189,239,191,189,37,10,239,191,189,239,191,189,239,191,189,99,80,24,239,191,189,24,239,191,189,73,239,191,189,97,239,191,189,23,3,1,239,191,189,93,239,191,189,195,152,239,191,189,239,191,189,87,7,218,148,239,191,189,239,191,189,21,239,191,189,239,191,189,219,186,86,98,115,239,191,189,239,191,189,219,174,117,39,1,126,105,239,191,189,239,191,189,220,145,40,106,98,113,239,191,189,239,191,189,239,191,189,92,118,239,191,189,111,239,191,189,239,191,189,239,191,189,221,134,68,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,21,34,239,191,189,239,191,189,216,158,239,191,189,239,191,189,198,172,239,191,189,239,191,189,239,191,189,121,72,119,104,239,191,189,75,97,86,63,239,191,189,98,239,191,189,239,191,189,239,191,189,34,78,71,239,191,189,239,191,189,76,78,35,11,197,189,239,191,189,239,191,189,239,191,189,239,191,189,25,28,73,13,239,191,189,73,57,239,191,189,239,191,189,35,79,239,191,189,60,49,239,191,189,55,239,191,189,85,32,239,191,189,94,60,239,191,189,239,191,189,44,239,191,189,83,92,16,239,191,189,239,191,189,203,150,2,111,70,88,213,164,239,191,189,239,191,189,72,127,116,118,18,239,191,189,127,239,191,189,2,44,106,4,239,191,189,239,191,189,61,120,239,191,189,1,239,191,189,220,167,112,66,239,191,189,63,57,239,191,189,69,239,191,189,230,176,143,239,191,189,239,191,189,239,191,189,95,92,239,191,189,239,191,189,97,220,130,239,191,189,239,191,189,97,239,191,189,125,239,191,189,8,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,60,239,191,189,54,239,191,189,48,58,239,191,189,27,123,239,191,189,74,239,191,189,239,191,189,239,191,189,28,43,26,239,191,189,239,191,189,37,239,191,189,34,239,191,189,239,191,189,47,60,0,239,191,189,14,239,191,189,239,191,189,239,191,189,27,34,107,126,14,48,239,191,189,239,191,189,112,57,239,191,189,71,239,191,189,239,191,189,42,239,191,189,200,136,6,12,239,191,189,239,191,189,205,136,28,1,239,191,189,239,191,189,40,108,239,191,189,239,191,189,207,187,239,191,189,239,191,189,11,99,93,80,115,84,239,191,189,103,239,191,189,239,191,189,18,61,42,239,191,189,239,191,189,17,39,115,239,191,189,239,191,189,239,191,189,47,239,191,189,38,71,204,160,239,191,189,239,191,189,239,191,189,110,17,27,124,239,191,189,239,191,189,120,127,90,48,32,33,120,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,208,168,72,18,239,191,189,24,52,239,191,189,42,44,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,44,14,9,75,239,191,189,25,109,239,191,189,209,182,239,191,189,239,191,189,73,229,168,177,13,47,38,239,191,189,100,99,110,239,191,189,77,83,239,191,189,51,101,4,239,191,189,71,67,239,191,189,221,171,7,55,0,46,239,191,189,239,191,189,71,126,239,191,189,116,239,191,189,83,9,14,239,191,189,125,45,239,191,189,239,191,189,239,191,189,239,191,189,75,83,71,57,112,239,191,189,239,191,189,113,114,89,8,239,191,189,239,191,189,239,191,189,47,239,191,189,89,239,191,189,28,239,191,189,239,191,189,239,191,189,113,47,239,191,189,91,239,191,189,71,239,191,189,22,69,55,239,191,189,10,239,191,189,239,191,189,106,112,122,239,191,189,239,191,189,1,239,191,189,239,191,189,86,95,56,81,239,191,189,239,191,189,38,239,191,189,239,191,189,5,114,239,191,189,23,89,21,215,166,239,191,189,92,20,239,191,189,47,239,191,189,239,191,189,15,239,191,189,18,239,191,189,95,104,239,191,189,232,149,137,239,191,189,239,191,189,239,191,189,67,66,30,239,191,189,239,191,189,5,121,239,191,189,239,191,189,17,91,239,191,189,239,191,189,239,191,189,116,239,191,189,38,239,191,189,76,239,191,189,118,239,191,189,20,230,142,157,239,191,189,239,191,189,239,191,189,239,191,189,25,26,239,191,189,99,25,239,191,189,34,79,239,191,189,114,239,191,189,63,221,183,239,191,189,116,239,191,189,50,115,239,191,189,99,60,112,40,239,191,189,93,9,239,191,189,82,104,239,191,189,239,191,189,78,65,65,239,191,189,58,239,191,189,239,191,189,126,239,191,189,239,191,189,37,239,191,189,20,55,7,93,239,191,189,25,28,104,239,191,189,239,191,189,108,221,169,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,50,239,191,189,239,191,189,239,191,189,117,119,57,239,191,189,239,191,189,239,191,189,37,239,191,189,22,239,191,189,19,239,191,189,86,239,191,189,239,191,189,56,75,118,71,239,191,189,239,191,189,100,222,179,239,191,189,207,146,76,239,191,189,239,191,189,71,41,69,107,239,191,189,111,239,191,189,32,194,146,239,191,189,239,191,189,239,191,189,18,115,1,101,63,121,239,191,189,239,191,189,28,239,191,189,87,239,191,189,16,239,191,189,239,191,189,15,239,191,189,98,217,177,35,79,239,191,189,79,239,191,189,239,191,189,113,89,43,239,191,189,239,191,189,10,239,191,189,239,191,189,63,239,191,189,105,82,239,191,189,21,12,42,239,191,189,239,191,189,239,191,189,239,191,189,88,17,239,191,189,47,239,191,189,46,239,191,189,195,138,239,191,189,122,123,8,106,239,191,189,103,239,191,189,77,239,191,189,114,239,191,189,70,34,108,16,6,239,191,189,23,36,99,97,71,239,191,189,0,25,200,133,84,239,191,189,239,191,189,8,239,191,189,58,239,191,189,239,191,189,202,170,80,194,151,239,191,189,239,191,189,101,8,18,239,191,189,127,31,239,191,189,239,191,189,239,191,189,239,191,189,38,79,51,239,191,189,108,106,239,191,189,239,191,189,104,239,191,189,14,118,197,145,239,191,189,125,56,60,239,191,189,239,191,189,97,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,43,72,102,239,191,189,50,111,104,239,191,189,239,191,189,73,94,64,239,191,189,35,47,239,191,189,239,191,189,239,191,189,67,239,191,189,6,2,239,191,189,114,239,191,189,239,191,189,61,91,239,191,189,239,191,189,6,239,191,189,124,118,86,2,84,239,191,189,6,92,2,239,191,189,239,191,189,239,191,189,222,177,23,61,239,191,189,26,239,191,189,239,191,189,80,109,36,70,127,50,239,191,189,239,191,189,43,51,92,0,67,239,191,189,239,191,189,55})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=6656-7679",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07180 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07180_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07180_s.txt", Encoding.UTF8);

    public Test07180() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,125,9,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,6,109,239,191,189,14,82,16,239,191,189,33,73,92,49,207,160,239,191,189,239,191,189,89,239,191,189,239,191,189,113,111,239,191,189,206,177,105,239,191,189,26,6,239,191,189,239,191,189,239,191,189,239,191,189,43,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,229,188,170,49,239,191,189,239,191,189,239,191,189,239,191,189,105,127,76,59,1,205,142,79,239,191,189,55,239,191,189,31,31,55,10,239,191,189,239,191,189,239,191,189,95,6,91,239,191,189,239,191,189,239,191,189,92,55,239,191,189,239,191,189,197,150,49,38,239,191,189,65,239,191,189,239,191,189,59,98,239,191,189,47,239,191,189,37,58,239,191,189,26,220,150,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,82,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,218,137,22,5,239,191,189,107,221,134,239,191,189,239,191,189,33,4,47,105,54,126,4,239,191,189,127,239,191,189,77,1,21,239,191,189,57,239,191,189,4,239,191,189,1,239,191,189,196,131,239,191,189,93,239,191,189,239,191,189,35,239,191,189,239,191,189,112,239,191,189,38,47,239,191,189,239,191,189,239,191,189,69,27,49,239,191,189,239,191,189,94,40,239,191,189,239,191,189,116,46,204,155,103,238,133,179,239,191,189,239,191,189,44,210,167,239,191,189,90,72,54,14,239,191,189,38,239,191,189,35,91,70,239,191,189,239,191,189,239,191,189,239,191,189,28,8,36,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,9,201,161,123,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,106,239,191,189,79,63,95,6,81,210,133,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,120,124,239,191,189,239,191,189,116,101,87,76,5,31,239,191,189,86,43,108,239,191,189,239,191,189,33,83,239,191,189,239,191,189,239,191,189,239,191,189,112,120,239,191,189,239,191,189,34,107,76,97,239,191,189,239,191,189,239,191,189,7,118,73,47,239,191,189,11,112,18,57,74,32,218,176,37,102,5,200,135,200,187,239,191,189,109,239,191,189,12,239,191,189,219,159,66,239,191,189,239,191,189,239,191,189,112,239,191,189,113,36,239,191,189,54,239,191,189,66,71,239,191,189,239,191,189,73,239,191,189,79,239,191,189,50,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,61,239,191,189,3,108,46,38,58,239,191,189,239,191,189,67,62,1,112,239,191,189,36,68,239,191,189,50,69,36,25,239,191,189,239,191,189,239,133,134,123,202,138,101,113,239,191,189,34,239,191,189,239,191,189,62,239,191,189,90,120,15,239,191,189,90,239,191,189,76,239,191,189,95,239,191,189,101,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,90,124,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,118,77,239,191,189,47,5,239,191,189,239,191,189,239,191,189,21,53,28,239,191,189,239,191,189,65,57,239,191,189,28,53,37,102,239,191,189,21,105,121,42,239,191,189,94,239,191,189,239,191,189,80,8,122,125,38,55,239,191,189,239,191,189,47,239,191,189,239,191,189,39,239,191,189,95,239,191,189,99,67,239,191,189,58,111,239,191,189,239,191,189,239,191,189,0,119,21,97,239,191,189,92,4,33,70,37,239,191,189,239,191,189,45,239,191,189,10,239,191,189,10,58,46,239,191,189,101,62,202,181,239,191,189,21,239,191,189,63,36,66,39,239,191,189,98,122,5,16,239,191,189,25,100,43,109,121,2,239,191,189,239,191,189,86,239,191,189,56,22,47,52,239,191,189,239,191,189,239,191,189,239,191,189,57,74,239,191,189,239,191,189,70,29,239,191,189,34,239,191,189,239,191,189,22,239,191,189,39,5,126,52,33,239,191,189,239,191,189,56,239,191,189,59,239,191,189,27,239,191,189,84,239,191,189,40,239,191,189,14,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,42,25,29,14,239,191,189,87,31,43,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,18,239,191,189,239,191,189,199,174,239,191,189,120,239,191,189,113,239,191,189,109,239,191,189,45,239,191,189,39,30,104,71,57,239,191,189,10,7,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,2,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,49,239,191,189,77,239,191,189,239,191,189,43,239,191,189,239,191,189,41,75,4,101,35,81,239,191,189,239,191,189,239,191,189,10,13,65,25,25,239,191,189,239,191,189,239,191,189,110,54,239,191,189,39,51,239,191,189,59,26,239,191,189,22,106,108,111,95,127,18,239,191,189,107,208,162,49,239,191,189,105,239,191,189,239,191,189,9,239,191,189,239,191,189,194,129,24,239,191,189,123,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,74,86,59,239,191,189,113,239,191,189,239,191,189,239,191,189,46,62,239,191,189,16,47,199,143,239,191,189,110,116,41,239,191,189,92,88,75,239,191,189,125,239,191,189,239,191,189,38,239,191,189,99,49,116,93,239,191,189,239,191,189,45,239,191,189,65,239,191,189,69,80,239,191,189,66,106,239,191,189,76,217,169,39,64,53,204,139,109,239,191,189,10,62,17,239,191,189,239,191,189,239,191,189,2,239,191,189,13,57,239,191,189,86,239,191,189,7,239,191,189,122,50,239,191,189,239,191,189,11,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,125,99,34,239,191,189,239,191,189,239,191,189,107,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,53,48,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,43,239,191,189,97,45,1,239,191,189,111,220,188,7,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,236,136,176,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,98,121,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,125,239,191,189,10,239,191,189,125,69,114,239,191,189,26,239,191,189,239,191,189,32,35,239,191,189,70,11,11,25,239,191,189,46,239,191,189,96,9,239,191,189,49,45,71,239,191,189,47,239,191,189,44,239,191,189,75,24,20,239,191,189,239,191,189,38,11,107,37,239,191,189,239,191,189,39,15,219,175,239,191,189,50,239,191,189,239,191,189,239,191,189,3,46,103,28,239,191,189,102,239,191,189,79,239,191,189,124,239,191,189,90,239,191,189,239,191,189,239,191,189,10,239,191,189,75,43,239,191,189,13,107,9,2,239,191,189,239,191,189,85,125,239,191,189,195,141,239,191,189,106,239,191,189,29,239,191,189,239,191,189,29,121,239,191,189,239,191,189,109,239,191,189,239,191,189,85,239,191,189,37,6,239,191,189,55,239,191,189,118,12,239,191,189,239,191,189,36,101,108,239,191,189,239,191,189,63,239,191,189,121,239,191,189,39,239,191,189,34,41,239,191,189,89,239,191,189,46,239,191,189,84,81,239,191,189,96,41,89,72,111,79,239,191,189,77,239,191,189,23,239,191,189,239,191,189,40,239,191,189,75,239,191,189,34,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,78,75,239,191,189,239,191,189,196,184,98,239,191,189,239,191,189,59,19,239,191,189,97,239,191,189,239,191,189,44,239,191,189,15,239,191,189,108,0,239,191,189,13,9,11,8,3,102,9,111,118,239,191,189,239,191,189,115,0,239,191,189,239,191,189,35,83,7,83,239,191,189,51,16,119,111,71,96,239,191,189,239,191,189,21,239,191,189,239,191,189,11,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,197,129,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,24,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,64,89,211,150,239,191,189,119,113,80,16,118,239,191,189,83,86,239,191,189,239,191,189,74,239,191,189,239,191,189,89,111,239,191,189,70,93,239,191,189,53,239,191,189,2,63,7,16,239,191,189,16,239,191,189,80,239,191,189,239,191,189,239,191,189,28,118,126,26,113,65,36,114,239,191,189,116,239,191,189,239,191,189,239,191,189,16,104,51,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,111,17,9,101,239,191,189,66,205,173,239,191,189,89,11,112,239,191,189,239,191,189,109,239,191,189,27,239,191,189,239,191,189,47,21,83,239,191,189,107,0,239,191,189,221,156,86,239,191,189,4,239,191,189,72,239,191,189,14,8,103,219,135,47,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,65,127,36,239,191,189,43,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,101,12,101,49,86,239,191,189,84,239,191,189,39,90,239,191,189,100,109,63,58,239,191,189,59,78,239,191,189,49,239,191,189,96,11,239,191,189,29,50,29,239,191,189,234,164,176,239,191,189,239,191,189,117,122,239,191,189,239,191,189,112,239,191,189,5,12,120,43,94,26,239,191,189,239,191,189,239,191,189,10,104,239,191,189,239,191,189,83,239,191,189,5,1,239,191,189,20,36,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,201,191,239,191,189,119,221,158,44,239,191,189,239,191,189,239,191,189,60,2,122,123,239,191,189,239,191,189,59,39,94,47,6,112,121,1,239,191,189,76,35,239,191,189,115,239,191,189,239,191,189,110,57,20,239,191,189,49,65,239,191,189,239,191,189,39,239,191,189,30,32,239,191,189,17,239,191,189,73,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,89,70,239,191,189,200,145,123,239,191,189,90,239,191,189,95,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,74,124,104,7,17,81,88,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,221,135,118,126,239,191,189,121,40,26,122,239,191,189,239,191,189,44,239,191,189,239,191,189,72,67,239,191,189,239,191,189,26,239,191,189,5,40,239,191,189,239,191,189,7,239,191,189,83,43,239,191,189,239,191,189,239,191,189,66,95,239,191,189,66,239,191,189,36,239,191,189,36,34,98,239,191,189,118,37,239,191,189,239,191,189,85,95,51,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,38,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,5,84,239,191,189,21,239,191,189,217,162,58,38,21,239,191,189,86,239,191,189,213,141,110,239,191,189,239,191,189,239,191,189,101,60,101,4,239,191,189,239,191,189,239,191,189,37,54,21,239,191,189,124,59,53,239,191,189,79,11,239,191,189,239,191,189,239,191,189,239,191,189,87,121,239,191,189,213,149,239,191,189,239,191,189,39,239,191,189,106,54,239,191,189,91,239,191,189,239,191,189,239,191,189,79,239,191,189,72,239,191,189,239,191,189,108,37,117,239,191,189,239,191,189,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,14,195,174,46,23,39,118,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,56,87,239,191,189,239,191,189,221,180,239,191,189,38,239,191,189,84,65,60,239,191,189,210,162,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,32,239,191,189,239,191,189,239,191,189,121,239,191,189,24,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,235,161,141,35,110,109,239,191,189,40,239,191,189,239,191,189,91,123,239,191,189,239,191,189,239,191,189,57,73,239,191,189,239,191,189,239,191,189,33,239,191,189,49,112,21,239,191,189,69,36,40,239,191,189,115,239,191,189,86})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=7680-9215",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07182 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07182_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07182_s.txt", Encoding.UTF8);

    public Test07182() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{94,239,191,189,46,239,191,189,124,239,191,189,90,90,123,25,63,239,191,189,239,191,189,239,191,189,24,42,239,191,189,86,111,29,14,239,191,189,40,239,191,189,0,9,48,239,191,189,36,47,54,239,191,189,32,126,43,57,109,239,191,189,23,84,21,239,191,189,94,43,239,191,189,239,191,189,239,191,189,239,191,189,44,17,85,239,191,189,239,191,189,239,191,189,239,191,189,91,96,239,191,189,114,239,191,189,239,191,189,53,76,239,191,189,107,107,33,239,191,189,222,188,46,63,26,7,83,53,239,191,189,239,191,189,99,15,239,191,189,239,191,189,239,191,189,29,239,191,189,61,37,239,191,189,97,239,191,189,12,239,191,189,239,191,189,239,191,189,74,239,191,189,17,73,120,48,239,191,189,239,191,189,239,191,189,111,239,191,189,21,123,239,191,189,105,239,191,189,95,118,47,98,27,239,191,189,62,47,0,46,70,95,71,0,239,191,189,51,239,191,189,114,239,191,189,239,191,189,35,239,191,189,112,51,55,239,191,189,7,239,191,189,58,239,191,189,239,191,189,48,88,239,191,189,126,239,191,189,239,191,189,66,239,191,189,91,70,239,191,189,72,74,239,191,189,120,239,191,189,212,191,239,191,189,123,9,55,239,191,189,112,239,191,189,6,239,191,189,43,127,239,191,189,239,191,189,52,108,21,7,123,239,191,189,26,103,87,239,191,189,97,239,191,189,65,106,38,73,239,191,189,239,191,189,50,200,138,80,239,191,189,239,191,189,239,191,189,92,210,143,239,191,189,23,13,114,239,191,189,239,191,189,19,239,191,189,239,191,189,113,50,82,239,191,189,72,35,36,239,191,189,19,47,65,239,191,189,108,239,191,189,239,191,189,239,191,189,106,239,191,189,28,73,31,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,84,87,72,118,77,239,191,189,239,191,189,35,65,44,239,191,189,36,239,191,189,45,239,191,189,239,191,189,30,239,191,189,124,239,191,189,239,191,189,239,191,189,46,41,239,191,189,39,19,239,191,189,25,239,191,189,239,191,189,77,239,191,189,28,239,191,189,239,191,189,59,30,239,191,189,239,191,189,239,191,189,40,239,191,189,33,239,191,189,239,191,189,239,191,189,29,239,191,189,121,239,191,189,90,50,85,239,191,189,40,31,239,191,189,37,239,191,189,60,10,239,191,189,73,69,62,239,191,189,82,239,191,189,23,226,140,166,239,191,189,239,191,189,89,119,7,239,191,189,239,191,189,33,239,191,189,60,55,77,239,191,189,239,191,189,8,239,191,189,120,125,239,191,189,45,239,191,189,239,191,189,239,191,189,110,219,185,19,239,191,189,117,196,151,8,239,191,189,74,126,120,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,82,239,191,189,239,191,189,73,239,191,189,100,239,191,189,120,77,21,239,191,189,8,44,7,115,239,191,189,17,120,239,191,189,68,62,104,73,239,191,189,16,96,127,90,239,191,189,239,191,189,239,191,189,61,114,239,191,189,46,78,85,239,191,189,37,50,117,59,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,42,5,239,191,189,85,239,191,189,239,191,189,20,33,123,239,191,189,239,191,189,62,239,191,189,57,239,191,189,105,34,239,191,189,239,191,189,239,191,189,239,191,189,36,43,239,191,189,82,109,239,191,189,3,108,239,191,189,239,191,189,103,117,239,191,189,48,239,191,189,64,239,191,189,239,191,189,239,191,189,116,12,211,156,239,191,189,239,191,189,77,60,106,239,191,189,70,50,17,70,30,5,239,191,189,32,2,75,239,191,189,16,239,191,189,239,191,189,239,191,189,110,239,191,189,92,8,47,41,239,191,189,0,239,191,189,47,239,191,189,81,239,191,189,239,191,189,108,32,239,191,189,239,191,189,217,154,239,191,189,85,46,106,42,239,191,189,31,239,191,189,56,239,191,189,99,86,56,239,191,189,73,29,239,191,189,51,58,105,239,191,189,50,54,22,81,239,191,189,74,86,239,191,189,43,85,120,239,191,189,0,56,25,239,191,189,239,191,189,239,191,189,102,10,239,191,189,239,191,189,9,239,191,189,117,24,209,129,79,47,95,93,112,239,191,189,116,31,24,24,118,126,239,191,189,5,12,125,239,191,189,122,56,239,191,189,47,239,191,189,239,191,189,84,239,191,189,94,239,191,189,106,44,74,220,155,120,239,191,189,71,239,191,189,239,191,189,26,108,41,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,65,225,187,139,239,191,189,239,191,189,239,191,189,77,81,239,191,189,48,11,239,191,189,17,239,191,189,10,239,191,189,239,191,189,60,239,191,189,5,239,191,189,17,239,191,189,239,191,189,13,14,239,191,189,53,0,38,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,105,239,191,189,43,239,191,189,122,239,191,189,239,191,189,90,46,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,76,34,239,191,189,3,15,239,191,189,210,139,27,239,191,189,9,30,239,191,189,239,191,189,0,91,82,99,91,33,239,191,189,114,67,70,239,191,189,65,239,191,189,239,191,189,8,46,75,239,191,189,96,9,239,191,189,239,191,189,4,239,191,189,90,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,102,45,92,239,191,189,80,64,106,7,239,191,189,239,191,189,99,101,239,191,189,58,239,191,189,239,191,189,126,239,191,189,239,191,189,34,40,86,239,191,189,9,103,57,59,10,239,191,189,239,191,189,239,191,189,79,76,239,191,189,239,191,189,122,239,191,189,74,239,191,189,1,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,28,122,46,67,14,93,68,4,5,239,191,189,71,239,191,189,49,239,191,189,239,191,189,74,223,146,127,239,191,189,64,239,191,189,114,239,191,189,51,200,147,43,48,239,191,189,125,125,239,191,189,68,30,239,191,189,102,64,239,191,189,239,191,189,7,239,191,189,239,191,189,122,239,191,189,113,239,191,189,52,39,239,191,189,239,191,189,239,191,189,12,203,180,69,7,239,191,189,16,69,239,191,189,25,239,191,189,79,239,191,189,239,191,189,43,239,191,189,62,239,191,189,206,141,239,191,189,48,239,191,189,239,191,189,239,191,189,3,95,3,239,191,189,239,191,189,239,191,189,113,239,191,189,216,137,239,191,189,48,126,40,239,191,189,239,191,189,86,239,191,189,239,191,189,70,215,134,239,191,189,239,191,189,33,239,191,189,127,239,191,189,33,20,15,239,191,189,77,65,106,21,81,90,239,191,189,87,73,92,213,181,39,110,79,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,44,239,191,189,25,239,191,189,239,191,189,3,239,191,189,239,191,189,110,239,191,189,121,239,191,189,239,191,189,60,239,191,189,216,135,239,191,189,80,239,191,189,239,191,189,123,239,191,189,52,239,191,189,239,191,189,239,191,189,26,239,191,189,103,57,16,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,75,239,191,189,17,59,63,239,191,189,19,239,191,189,31,50,223,173,86,126,239,191,189,40,239,191,189,23,31,124,239,191,189,16,6,239,191,189,105,239,191,189,16,38,45,239,191,189,239,191,189,115,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,98,39,114,117,239,191,189,53,90,98,239,191,189,83,101,104,22,127,104,40,239,191,189,59,239,191,189,239,191,189,68,123,239,191,189,120,66,65,107,2,42,239,191,189,35,239,191,189,239,191,189,239,191,189,9,98,67,239,191,189,47,6,100,239,191,189,239,191,189,239,191,189,239,191,189,113,11,239,191,189,239,191,189,117,239,191,189,24,39,30,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,107,239,191,189,65,239,191,189,41})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07227 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07227_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07227_s.txt", Encoding.UTF8);

    public Test07227() : base(recordedRequest, recordedResponse, "accounts8d439ffe3264620")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,60,239,191,189,100,239,191,189,127,239,191,189,207,190,95,239,191,189,239,191,189,239,191,189,41,32,239,191,189,51,28,98,239,191,189,75,114,239,191,189,47,81,120,106,58,239,191,189,21,0,239,191,189,69,104,239,191,189,239,191,189,119,40,239,191,189,239,191,189,98,117,239,191,189,239,191,189,239,191,189,47,239,191,189,110,239,191,189,238,146,180,239,191,189,118,239,191,189,60,239,191,189,239,191,189,18,45,20,239,191,189,239,191,189,239,191,189,95,65,239,191,189,117,100,49,67,11,84,239,191,189,118,239,191,189,122,239,191,189,73,34,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,206,166,239,191,189,82,239,191,189,21,239,191,189,239,191,189,239,191,189,121,79,239,191,189,239,191,189,120,25,10,79,239,191,189,239,191,189,96,13,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,67,24,7,23,36,19,75,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,92,43,23,239,191,189,239,191,189,239,191,189,239,191,189,105,56,239,191,189,239,191,189,239,191,189,207,186,239,191,189,98,96,37,87,239,191,189,239,191,189,98,42,239,191,189,89,239,191,189,74,46,112,47,239,191,189,239,191,189,61,43,239,191,189,239,191,189,239,191,189,239,191,189,70,114,37,239,191,189,239,191,189,39,40,98,24,20,19,124,27,239,191,189,98,42,58,239,191,189,1,239,191,189,75,25,239,191,189,239,191,189,239,191,189,9,110,69,239,191,189,239,191,189,42,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,88,239,191,189,119,54,26,239,191,189,20,239,191,189,68,19,239,191,189,65,118,44,239,191,189,97,239,191,189,213,185,239,191,189,116,239,191,189,239,191,189,239,191,189,124,239,191,189,125,239,191,189,61,118,239,191,189,62,84,239,191,189,79,239,191,189,4,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,72,40,239,191,189,239,191,189,30,87,239,191,189,74,117,64,2,76,56,2,239,191,189,239,191,189,239,191,189,106,239,191,189,31,239,191,189,3,34,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,31,239,191,189,85,69,239,191,189,84,64,239,191,189,239,191,189,239,191,189,200,180,239,191,189,20,239,191,189,3,112,1,93,239,191,189,57,45,239,191,189,117,6,69,6,39,92,101,239,191,189,239,191,189,65,239,191,189,32,64,239,191,189,239,191,189,88,67,239,191,189,66,239,191,189,239,191,189,86,239,191,189,58,13,239,191,189,72,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,63,100,77,25,40,37,48,239,191,189,114,52,239,191,189,93,12,125,239,191,189,25,90,239,191,189,78,51,30,35,10,239,191,189,59,239,191,189,28,22,73,29,239,191,189,45,126,23,239,191,189,239,191,189,239,191,189,113,26,239,191,189,239,191,189,90,111,6,25,239,191,189,239,191,189,239,191,189,239,191,189,106,201,176,239,191,189,239,191,189,239,191,189,28,90,85,239,191,189,100,8,25,239,191,189,85,72,239,191,189,239,191,189,239,191,189,203,182,35,239,191,189,220,148,239,191,189,195,180,4,222,172,55,82,33,239,191,189,84,59,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,83,239,191,189,239,191,189,239,191,189,62,70,239,191,189,239,191,189,15,239,191,189,239,191,189,104,86,118,49,45,239,191,189,239,191,189,239,191,189,0,13,61,239,191,189,52,29,239,191,189,84,38,239,191,189,21,27,239,191,189,71,239,191,189,239,191,189,239,191,189,83,239,191,189,115,102,121,239,191,189,88,46,66,41,98,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,21,239,191,189,239,191,189,239,191,189,33,195,139,239,191,189,43,239,191,189,239,191,189,239,191,189,14})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3264620",
                        container: "containersfd62785af7904aa3aec503a175aea68d",
                        blob: "Blobd82db4da8bce409fbeeddc740b258b2a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07183 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07183_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07183_s.txt", Encoding.UTF8);

    public Test07183() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{87,239,191,189,239,191,189,42,239,191,189,123,239,191,189,96,127,239,191,189,87,124,112,197,150,76,239,191,189,101,239,191,189,239,191,189,64,239,191,189,239,191,189,55,127,228,156,166,239,191,189,100,112,125,239,191,189,239,191,189,91,62,239,191,189,91,73,15,36,239,191,189,239,191,189,239,191,189,46,239,191,189,111,100,51,34,239,191,189,239,191,189,63,56,23,38,231,135,171,239,191,189,239,191,189,41,239,191,189,26,27,239,191,189,239,191,189,105,88,95,39,27,239,191,189,239,191,189,239,191,189,239,191,189,25,9,239,191,189,117,56,115,120,202,169,62,87,239,191,189,53,86,101,239,191,189,123,48,239,191,189,239,191,189,239,191,189,239,191,189,84,216,191,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,127,101,97,239,191,189,126,239,191,189,89,239,191,189,239,191,189,75,80,114,239,191,189,239,191,189,6,52,2,239,191,189,119,239,191,189,120,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,61,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,67,211,135,239,191,189,34,239,191,189,68,125,119,80,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,29,239,191,189,125,100,120,239,191,189,14,239,191,189,104,30,239,191,189,239,191,189,117,239,191,189,239,191,189,96,123,18,239,191,189,126,239,191,189,121,106,239,191,189,5,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,92,239,191,189,22,239,191,189,111,14,29,239,191,189,126,33,38,239,191,189,126,239,191,189,196,136,239,191,189,101,93,239,191,189,67,239,191,189,46,72,19,239,191,189,114,239,191,189,114,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,108,239,191,189,7,239,191,189,239,191,189,82,239,191,189,8,42,55,20,5,18,97,55,24,98,92,206,178,239,191,189,239,191,189,80,62,239,191,189,48,239,191,189,63,239,191,189,86,92,239,191,189,239,191,189,115,239,191,189,239,191,189,60,239,191,189,97,239,191,189,239,191,189,239,191,189,72,239,191,189,93,239,191,189,239,191,189,239,191,189,112,239,191,189,33,12,239,191,189,73,96,208,164,239,191,189,40,239,191,189,239,191,189,66,38,239,191,189,239,191,189,48,11,239,191,189,112,119,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,83,239,191,189,239,191,189,54,80,239,191,189,239,191,189,93,52,79,12,239,191,189,19,32,28,116,102,239,191,189,106,79,239,191,189,115,239,191,189,45,239,191,189,64,239,191,189,239,191,189,239,191,189,77,17,239,191,189,40,239,191,189,124,239,191,189,239,191,189,239,191,189,76,239,191,189,115,201,159,239,191,189,36,90,239,191,189,79,90,104,109,55,110,239,191,189,11,239,191,189,0,239,191,189,239,191,189,15,62,214,181,239,191,189,62,15,239,191,189,110,239,191,189,50,239,191,189,116,119,239,191,189,239,191,189,239,191,189,239,191,189,46,8,59,239,191,189,61,239,191,189,63,239,191,189,218,142,86,239,191,189,239,191,189,239,191,189,51,81,60,239,191,189,239,191,189,19,239,191,189,77,20,239,191,189,28,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,11,210,170,101,89,1,55,117,8,100,239,191,189,49,239,191,189,6,74,88,34,58,42,63,239,191,189,28,239,191,189,239,191,189,104,239,191,189,239,191,189,118,100,239,191,189,26,239,191,189,96,115,239,191,189,22,239,191,189,239,191,189,239,191,189,127,100,239,191,189,239,191,189,233,148,160,72,239,191,189,221,130,214,133,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,17,34,73,239,191,189,239,191,189,96,116,52,239,191,189,54,87,239,191,189,239,191,189,52,109,239,191,189,95,239,191,189,80,239,191,189,239,191,189,15,239,191,189,49,239,191,189,33,239,191,189,36})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1536-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07228 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07228_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07228_s.txt", Encoding.UTF8);

    public Test07228() : base(recordedRequest, recordedResponse, "accounts8d439ffe3264620")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,70,6,239,191,189,89,239,191,189,239,191,189,69,127,239,191,189,118,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,22,118,95,51,62,46,239,191,189,239,191,189,117,239,191,189,239,191,189,9,81,201,178,239,191,189,70,105,239,191,189,15,66,87,239,191,189,78,119,116,239,191,189,239,191,189,239,191,189,83,101,239,191,189,239,191,189,119,239,191,189,207,166,239,191,189,26,195,163,82,20,239,191,189,239,191,189,37,115,239,191,189,239,191,189,123,107,78,239,191,189,10,239,191,189,239,191,189,16,239,191,189,239,191,189,56,20,239,191,189,34,53,239,191,189,27,239,191,189,239,191,189,239,191,189,29,239,191,189,79,239,191,189,107,239,191,189,66,239,191,189,91,239,191,189,79,239,191,189,239,191,189,22,239,191,189,239,191,189,87,67,108,32,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,118,11,114,75,239,191,189,18,239,191,189,239,191,189,28,119,62,27,124,239,191,189,239,191,189,122,239,191,189,36,239,191,189,75,59,239,191,189,239,191,189,109,239,191,189,237,135,179,239,191,189,75,239,191,189,89,80,122,80,119,4,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,4,81,239,191,189,11,239,191,189,24,239,191,189,239,191,189,106,239,191,189,58,123,239,191,189,221,191,36,30,41,29,44,97,239,191,189,44,110,101,91,118,239,191,189,71,52,81,93,239,191,189,239,191,189,28,37,226,167,155,40,118,114,104,239,191,189,64,239,191,189,239,191,189,38,57,239,191,189,81,208,191,239,191,189,239,191,189,239,191,189,119,239,191,189,123,239,191,189,95,23,34,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,119,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,46,239,191,189,125,80,239,191,189,239,191,189,226,128,158,239,191,189,48,239,191,189,239,191,189,69,43,239,191,189,239,191,189,94,80,239,191,189,83,98,10,23,101,239,191,189,118,239,191,189,66,239,191,189,239,191,189,239,191,189,55,239,191,189,110,239,191,189,64,15,239,191,189,239,191,189,239,191,189,239,191,189,62,203,149,52,239,191,189,239,191,189,75,239,191,189,43,88,239,191,189,239,191,189,47,203,133,101,239,191,189,239,191,189,24,8,61,239,191,189,2,124,85,239,191,189,239,191,189,64,239,191,189,239,191,189,201,187,239,191,189,125,36,63,239,191,189,49,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,197,163,101,239,191,189,36,239,191,189,124,208,152,107,239,191,189,25,239,191,189,51,37,11,19,113,239,191,189,239,191,189,215,177,239,191,189,70,239,191,189,48,239,191,189,121,239,191,189,53,95,102,239,191,189,239,191,189,51,239,191,189,194,149,25,63,2,239,191,189,118,104,82,239,191,189,84,239,191,189,126,44,21,50,239,191,189,19,239,191,189,30,239,191,189,107,239,191,189,239,191,189,87,239,191,189,53,105,239,191,189,21,64,239,191,189,48,81,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,103,239,191,189,74,239,191,189,45,8,74,51,21,239,191,189,56,239,191,189,239,191,189,42,239,191,189,97,239,191,189,239,191,189,239,191,189,13,239,191,189,60,64,98,83,44,81,239,191,189,239,191,189,239,191,189,71,13,79,124,3,207,147,98,239,191,189,45,30,127,0,96,239,191,189,116,239,191,189,239,191,189,239,191,189,65,41,239,191,189,107,239,191,189,239,191,189,42,112,239,191,189,0,239,191,189,239,191,189,239,191,189,53,239,191,189,43,108,79,38,239,191,189,239,191,189,72,58,86,239,191,189,54,60,223,169,222,167,239,191,189,239,191,189,78,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,117,117,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3264620",
                        container: "containersfd62785af7904aa3aec503a175aea68d",
                        blob: "Blobd82db4da8bce409fbeeddc740b258b2a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=512-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07184 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07184_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07184_s.txt", Encoding.UTF8);

    public Test07184() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,29,239,191,189,239,191,189,87,51,112,239,191,189,41,48,19,239,191,189,239,191,189,39,63,239,191,189,15,239,191,189,69,53,239,191,189,54,239,191,189,239,191,189,87,239,191,189,239,191,189,105,239,191,189,239,191,189,46,110,103,65,239,191,189,3,34,42,122,239,191,189,239,191,189,239,191,189,122,91,121,239,191,189,89,239,191,189,239,191,189,94,239,191,189,239,191,189,90,239,191,189,86,239,191,189,117,239,191,189,239,191,189,239,191,189,58,7,239,191,189,57,1,239,191,189,76,66,91,60,239,191,189,229,131,137,239,191,189,9,239,191,189,77,101,108,39,81,239,191,189,96,86,122,19,110,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,90,213,158,23,75,107,239,191,189,239,191,189,48,239,191,189,117,76,239,191,189,39,59,54,239,191,189,239,191,189,69,98,227,134,145,239,191,189,86,53,239,191,189,45,93,239,191,189,7,239,191,189,59,124,239,191,189,239,191,189,16,6,86,239,191,189,239,191,189,73,65,239,191,189,239,191,189,60,102,69,81,239,191,189,239,191,189,100,107,93,239,191,189,67,239,191,189,239,191,189,22,239,191,189,239,191,189,86,82,202,156,16,109,52,239,191,189,104,239,191,189,239,191,189,239,191,189,64,61,79,239,191,189,239,191,189,72,239,191,189,11,239,191,189,110,116,239,191,189,30,31,77,13,80,239,191,189,46,76,239,191,189,119,93,239,191,189,239,191,189,49,239,191,189,239,191,189,91,239,191,189,117,239,191,189,28,239,191,189,239,191,189,239,191,189,9,30,116,239,191,189,74,108,91,40,63,78,20,93,90,76,239,191,189,85,239,191,189,239,191,189,70,216,134,40,40,22,77,33,239,191,189,239,191,189,239,191,189,22,2,239,191,189,89,49,71,239,191,189,37,239,191,189,1,239,191,189,27,53,78,239,191,189,29,60,239,191,189,14,239,191,189,31,54,39,80,27,85,239,191,189,239,191,189,94,75,41,239,191,189,41,41,76,239,191,189,4,40,4,33,48,239,191,189,239,191,189,80,217,167,239,191,189,16,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,57,62,239,191,189,102,239,191,189,239,191,189,72,215,168,119,12,37,53,239,191,189,56,102,9,239,191,189,239,191,189,71,52,239,191,189,93,4,7,78,101,58,239,191,189,101,239,191,189,74,72,113,81,239,191,189,76,239,191,189,68,106,239,191,189,27,19,69,68,239,191,189,114,103,239,191,189,44,113,83,239,152,166,239,191,189,239,191,189,239,191,189,95,239,191,189,97,13,65,66,239,191,189,239,191,189,239,191,189,239,191,189,63,114,25,107,93,239,191,189,239,191,189,24,239,191,189,23,239,191,189,83,239,191,189,239,191,189,98,106,239,191,189,91,91,239,191,189,203,172,239,191,189,116,63,239,191,189,8,239,191,189,239,191,189,239,191,189,124,239,191,189,214,174,39,101,18,6,239,191,189,106,239,191,189,239,191,189,35,239,191,189,24,11,239,191,189,99,239,191,189,239,191,189,79,109,101,44,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,124,9,62,239,191,189,239,191,189,59,125,45,239,191,189,239,191,189,87,239,191,189,101,239,191,189,62,239,191,189,29,92,51,5,239,191,189,239,191,189,3,239,191,189,14,30,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,80,239,191,189,239,191,189,78,114,45,220,142,239,191,189,239,191,189,239,191,189,126,97,8,116,114,239,191,189,9,111,72,239,191,189,239,191,189,239,191,189,28,59,48,239,191,189,29,239,191,189,118,65,35,239,191,189,19,21,3,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,22,62,239,191,189,31,5,239,191,189,55,239,191,189,239,191,189,105,37,239,191,189,22,239,191,189,19,65,239,191,189,239,191,189,239,191,189,14,76,239,191,189,239,191,189,78,239,191,189,113,239,191,189,239,191,189,239,191,189,127,239,191,189,84,32,239,191,189,222,182,17,239,191,189,115,239,191,189,120,239,191,189,239,191,189,239,191,189,50,102,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,114,202,179,239,191,189,239,191,189,17,56,239,191,189,52,239,191,189,239,191,189,93,239,191,189,239,191,189,85,239,191,189,93,48,25,75,31,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,30,48,6,106,239,191,189,239,191,189,42,239,191,189,64,116,59,10,68,31,239,191,189,103,239,191,189,215,151,11,126,239,191,189,53,118,239,191,189,239,191,189,53,239,191,189,31,239,191,189,239,191,189,239,191,189,239,191,189,70,121,239,191,189,87,34,239,191,189,95,199,150,239,191,189,15,21,81,118,1,105,117,239,191,189,239,191,189,111,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,21,15,239,191,189,239,191,189,56,68,232,179,144,102,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,198,129,14,239,191,189,126,239,191,189,102,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,89,239,191,189,89,239,191,189,239,191,189,106,41,239,191,189,70,1,103,239,191,189,73,34,239,191,189,239,191,189,38,239,191,189,86,72,2,239,191,189,239,191,189,239,191,189,77,239,191,189,223,191,54,239,191,189,239,191,189,93,79,14,17,239,191,189,79,56,85,239,191,189,239,191,189,200,156,23,239,191,189,28,239,191,189,239,191,189,30,45,40,239,191,189,16,239,191,189,239,191,189,27,239,191,189,239,191,189,121,239,191,189,73,44,15,18,113,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,111,0,239,191,189,108,31,239,191,189,239,191,189,239,191,189,48,75,26,239,191,189,9,239,191,189,96,77,96,56,239,191,189,93,239,191,189,239,191,189,239,191,189,84,105,239,191,189,239,191,189,239,191,189,107,35,125,21,58,85,239,191,189,239,191,189,101,239,191,189,239,191,189,30,239,191,189,72,66,47,239,191,189,5,75,16,69,239,191,189,219,184,239,191,189,22,239,191,189,57,86,3,103,114,7,239,191,189,13,239,191,189,4,102,239,191,189,13,239,191,189,239,191,189,222,129,239,191,189,118,44,117,239,191,189,37,222,178,62,239,191,189,37,239,191,189,239,191,189,92,239,191,189,63,9,91,14,127,79,239,191,189,239,191,189,6,59,116,42,37,82,62,68,93,239,191,189,90,239,191,189,16,239,191,189,58,239,191,189,49,36,239,191,189,51,113,104,239,191,189,44,239,191,189,239,191,189,116,4,113,239,191,189,95,49,44,239,191,189,38,58,16,239,191,189,239,191,189,96,0,81,239,191,189,239,191,189,70,124,239,191,189,85,206,167,239,191,189,90,239,191,189,120,110,239,191,189,239,191,189,72,239,191,189,115,239,191,189,58,210,131,90,40,239,191,189,121,239,191,189,239,191,189,239,191,189,54,107,83,50,31,239,191,189,239,191,189,239,191,189,43,13,30,53,239,191,189,239,191,189,5,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,119,69,239,191,189,239,191,189,126,68,117,30,239,191,189,43,239,191,189,239,191,189,4,239,191,189,239,191,189,72,69,78,239,191,189,6,98,87,101,239,191,189,5,9,239,191,189,85,239,191,189,0,80,58,126,218,191,37,239,191,189,109,239,191,189,91,60,239,191,189,98,239,191,189,102,239,191,189,87,22,78,109,218,139,123,101,31,239,191,189,239,191,189,239,191,189,117,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=2560-3583",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07229 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07229_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07229_s.txt", Encoding.UTF8);

    public Test07229() : base(recordedRequest, recordedResponse, "accounts8d439ffe3264620")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{114,239,191,189,20,211,142,239,191,189,62,239,191,189,89,23,239,191,189,85,127,34,239,191,189,223,151,76,106,34,239,191,189,124,239,191,189,121,90,113,21,27,239,191,189,113,22,239,191,189,239,191,189,239,191,189,220,141,239,191,189,41,239,191,189,239,191,189,109,239,191,189,100,94,239,191,189,239,191,189,74,239,191,189,5,40,239,191,189,61,239,191,189,80,89,27,52,89,51,124,123,35,239,191,189,239,191,189,1,51,121,239,191,189,69,239,191,189,37,110,96,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,38,111,22,239,191,189,239,191,189,239,191,189,10,239,191,189,121,239,191,189,88,96,239,191,189,112,82,74,15,125,93,92,12,239,191,189,96,9,2,47,239,191,189,11,239,191,189,239,191,189,3,239,191,189,111,94,85,11,13,63,19,40,40,239,191,189,50,239,191,189,239,191,189,239,191,189,121,239,191,189,73,105,123,239,191,189,36,239,191,189,199,135,14,13,239,191,189,239,191,189,239,191,189,239,191,189,238,170,189,239,191,189,239,191,189,26,70,61,239,191,189,105,52,51,30,108,239,191,189,101,60,239,191,189,239,191,189,239,191,189,50,83,105,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,111,43,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,44,239,191,189,49,239,191,189,91,239,191,189,27,50,239,191,189,110,239,191,189,16,61,239,191,189,87,83,24,16,0,76,73,61,59,239,191,189,9,9,30,239,191,189,19,104,104,239,191,189,22,239,191,189,6,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,88,37,239,191,189,27,239,191,189,68,47,115,239,191,189,239,191,189,225,137,185,239,191,189,112,55,239,191,189,81,239,191,189,54,30,63,6,26,239,191,189,126,239,191,189,239,191,189,27,122,239,191,189,18,239,191,189,126,239,191,189,21,120,239,191,189,29,218,181,239,191,189,239,191,189,239,191,189,239,191,189,5,23,54,1,239,191,189,51,99,124,239,191,189,25,31,103,33,109,239,191,189,126,88,105,57,239,191,189,239,191,189,58,10,90,239,191,189,239,191,189,52,239,191,189,239,191,189,127,239,191,189,98,39,109,121,239,191,189,122,26,239,191,189,86,239,191,189,29,239,191,189,239,191,189,239,191,189,17,204,175,75,54,71,26,106,35,239,191,189,239,191,189,12,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,44,94,239,191,189,63,239,191,189,239,191,189,239,191,189,4,61,239,191,189,239,191,189,31,239,191,189,103,64,100,239,191,189,44,239,191,189,99,74,55,239,191,189,239,191,189,4,207,174,239,191,189,239,191,189,239,191,189,5,88,239,191,189,33,239,191,189,108,57,239,191,189,23,239,191,189,90,50,10,116,239,191,189,3,239,191,189,99,239,191,189,119,239,191,189,239,191,189,121,79,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,70,96,101,101,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,42,239,191,189,21,239,191,189,9,23,45,44,113,1,2,74,239,191,189,38,66,116,222,171,111,239,191,189,239,191,189,116,239,191,189,50,117,239,191,189,204,164,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,76,239,191,189,124,239,191,189,70,239,191,189,199,145,83,57,239,191,189,239,191,189,239,191,189,62,34,43,239,191,189,120,64,15,37,239,191,189,68,239,191,189,84,15,75,239,191,189,87,116,34,239,191,189,239,191,189,218,136,239,191,189,46,101,239,191,189,239,191,189,28,32,93,80,121,95,239,191,189,239,191,189,239,191,189,79,102,219,148,210,149,118,239,191,189,90,54,78,63,58,239,191,189,23,239,191,189,84,239,191,189,100,239,191,189,50,125,18,106,37,9,239,191,189,239,191,189,219,175,239,191,189,6,239,191,189,37,239,191,189,11,19,239,191,189,68,18,94,239,191,189,46,239,191,189,239,191,189,239,191,189,65,69,84,37,239,191,189,40,239,191,189,119,239,191,189,84,112,110,239,191,189,239,191,189,239,191,189,7,127,239,191,189,239,191,189,57,239,191,189,239,191,189,92,239,191,189,64,239,191,189,32,239,191,189,211,169,239,191,189,239,191,189,123,39,85,239,191,189,61,239,191,189,31,239,191,189,30,53,83,103,239,191,189,239,191,189,50,68,239,191,189,87,84,239,191,189,239,191,189,112,85,239,191,189,239,191,189,101,239,191,189,7,96,239,191,189,40,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,26,87,102,239,191,189,84,239,191,189,239,191,189,239,191,189,4,123,85,60,239,191,189,10,239,191,189,205,184,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,43,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,86,239,191,189,33,239,191,189,16,72,28,44,91,40,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,6,108,92,239,191,189,58,239,191,189,71,239,191,189,16,65,110,239,191,189,239,191,189,239,191,189,239,191,189,211,171,239,191,189,199,137,69,97,98,105,88,239,191,189,105,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,57,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,93,11,239,191,189,239,191,189,59,7,56,239,191,189,52,239,191,189,48,111,41,110,239,191,189,10,239,191,189,91,239,191,189,59,239,191,189,33,79,239,191,189,13,79,57,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,44,57,118,118,46,81,239,191,189,239,191,189,239,191,189,197,141,239,191,189,115,34,120,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,59,239,191,189,103,239,191,189,239,191,189,239,191,189,117,90,121,96,107,239,191,189,43,66,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,28,239,191,189,22,74,213,187,239,191,189,239,191,189,21,19,239,191,189,125,14,239,191,189,66,239,191,189,21,88,27,100,33,80,72,239,191,189,239,191,189,239,191,189,124,239,191,189,117,8,239,191,189,239,191,189,49,114,239,191,189,15,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,82,10,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,113,37,239,191,189,204,147,54,90,239,191,189,63,15,74,13,83,65,76,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,93,239,191,189,118,239,191,189,48,239,191,189,239,191,189,108,239,191,189,239,191,189,105,108,239,191,189,60,11,239,191,189,239,191,189,123,127,207,162,126,239,191,189,97,125,239,191,189,16,239,191,189,239,191,189,21,239,191,189,61,239,191,189,239,191,189,20,98,93,5,99,239,191,189,116,118,239,191,189,76,239,191,189,101,5,65,239,191,189,239,191,189,77,27,48,239,191,189,48,20,72,107,124,40,239,191,189,123,11,43,239,191,189,239,191,189,39,239,191,189,64,239,191,189,23,239,191,189,91,44,239,191,189,70,127,239,191,189,94,11,124,239,191,189,52,0,239,191,189,239,191,189,53,50,72,239,191,189,239,191,189,44,75,239,191,189,52,64,239,191,189,239,191,189,120,221,153,239,191,189,239,191,189,119,239,191,189,3,15,239,191,189,106,12,113,239,191,189,239,191,189,70,10,59,38,29,239,191,189,118,239,191,189,50,31,239,191,189,15,56,239,191,189,5,239,191,189,239,191,189,239,191,189,45,239,191,189,45,67,97,120,239,191,189,239,191,189,38,71,239,191,189,82,235,187,158,92,239,191,189,54,122,239,191,189,90,239,191,189,34,198,190,127,205,175,239,191,189,115})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3264620",
                        container: "containersfd62785af7904aa3aec503a175aea68d",
                        blob: "Blobd82db4da8bce409fbeeddc740b258b2a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07185 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07185_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07185_s.txt", Encoding.UTF8);

    public Test07185() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{80,41,239,191,189,239,191,189,119,216,173,239,191,189,201,155,239,191,189,239,191,189,49,239,191,189,67,45,62,68,239,191,189,117,239,191,189,2,117,239,191,189,69,12,239,191,189,43,239,191,189,28,60,239,191,189,7,54,21,239,191,189,113,78,214,149,44,239,191,189,239,191,189,42,94,239,191,189,33,50,239,191,189,239,191,189,70,54,101,239,191,189,78,239,191,189,71,239,191,189,107,43,239,191,189,6,239,191,189,95,91,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,73,239,191,189,79,239,191,189,116,239,191,189,121,239,191,189,239,191,189,10,57,239,191,189,100,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,106,105,239,191,189,239,191,189,5,106,239,191,189,227,150,152,239,191,189,239,191,189,239,191,189,239,191,189,56,27,239,191,189,239,191,189,9,210,156,239,191,189,239,191,189,115,105,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,37,4,239,191,189,239,191,189,239,191,189,74,64,239,191,189,2,239,191,189,239,191,189,109,53,71,29,43,239,191,189,239,191,189,239,191,189,239,191,189,88,45,120,239,191,189,31,239,191,189,0,239,191,189,12,42,239,191,189,239,191,189,67,239,191,189,211,165,124,239,191,189,239,191,189,239,191,189,44,239,191,189,15,239,191,189,28,239,191,189,43,75,239,191,189,81,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,122,74,239,191,189,10,239,191,189,20,21,43,239,191,189,104,26,3,33,102,239,191,189,11,239,191,189,108,239,191,189,239,191,189,9,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,87,239,191,189,122,210,176,1,70,70,9,239,191,189,239,191,189,13,99,35,239,191,189,124,239,191,189,81,239,191,189,239,191,189,59,75,61,239,191,189,239,191,189,3,239,191,189,13,239,191,189,24,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,116,99,239,191,189,30,239,191,189,114,36,41,127,32,239,191,189,239,191,189,239,191,189,102,11,84,239,191,189,239,191,189,11,239,191,189,239,191,189,57,83,239,191,189,62,64,113,17,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,50,223,131,239,191,189,239,191,189,109,239,191,189,48,239,191,189,5,51,239,191,189,100,239,191,189,239,191,189,43,59,15,46,223,187,0,18,0,239,191,189,239,191,189,15,37,239,191,189,239,191,189,35,16,39,239,191,189,239,191,189,30,22,239,191,189,239,191,189,93,239,191,189,16,239,191,189,11,239,191,189,43,42,239,191,189,33,208,140,239,191,189,21,239,191,189,50,50,204,130,1,4,94,105,239,191,189,239,191,189,239,191,189,34,239,191,189,104,210,150,20,239,191,189,81,239,191,189,48,239,191,189,25,6,10,96,103,31,3,239,191,189,18,74,239,191,189,108,202,166,81,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,41,210,139,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,25,239,191,189,120,239,191,189,239,191,189,62,101,239,191,189,216,151,39,51,239,191,189,44,68,239,191,189,239,191,189,239,191,189,239,191,189,42,28,239,191,189,55,212,165,1,120,19,21,194,181,239,191,189,66,239,191,189,239,191,189,27,9,29,239,191,189,223,191,35,239,191,189,239,191,189,88,36,239,191,189,70,58,23,239,191,189,116,239,191,189,93,239,191,189,239,191,189,64,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,114,80,91,239,191,189,239,191,189,101,239,191,189,122,16,12,107,239,191,189,75,239,191,189,123,239,191,189,15,50,239,191,189,239,191,189,239,191,189,65,68,229,144,162,239,191,189,60,37,239,191,189,239,191,189,17,96,239,191,189,56,8,239,191,189,82,239,191,189,239,191,189,58,118,99,239,191,189,239,191,189,3,239,191,189,239,191,189,80,118,46,239,191,189,239,191,189,239,191,189,3,49,11,118,14,22,239,191,189,239,191,189,84,239,191,189,25,89,239,191,189,239,191,189,84,115,239,191,189,239,191,189,239,191,189,2,239,191,189,91,221,178,239,191,189,4,39,239,191,189,84,55,60,239,191,189,239,191,189,7,239,191,189,82,67,118,75,239,191,189,34,239,191,189,120,239,191,189,106,13,95,220,191,113,21,239,191,189,1,239,191,189,83,89,239,191,189,239,191,189,18,99,239,191,189,239,191,189,57,239,191,189,28,239,191,189,239,191,189,76,118,101,120,46,239,191,189,40,57,7,57,90,34,239,191,189,239,191,189,15,239,191,189,239,191,189,33,106,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,123,239,191,189,239,191,189,123,110,54,19,101,89,239,191,189,239,191,189,27,239,191,189,111,76,31,40,94,27,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,97,199,152,211,149,239,191,189,239,191,189,239,191,189,63,239,191,189,106,239,191,189,222,180,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,79,239,191,189,239,191,189,103,239,191,189,239,191,189,99,73,76,69,239,191,189,69,239,191,189,239,191,189,12,111,122,239,191,189,239,191,189,66,29,75,239,191,189,239,191,189,239,191,189,124,74,239,191,189,90,239,191,189,239,191,189,33,109,239,191,189,99,239,191,189,38,48,79,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,21,239,191,189,81,57,23,209,166,28,3,39,239,191,189,6,92,239,191,189,239,191,189,100,76,239,191,189,239,191,189,80,101,107,72,73,66,239,191,189,239,191,189,200,158,239,191,189,239,191,189,239,191,189,53,2,9,239,191,189,239,191,189,79,239,191,189,105,96,120,55,239,191,189,73,239,191,189,239,191,189,239,191,189,31,239,191,189,84,76,124,239,191,189,60,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,53,239,191,189,86,38,239,191,189,239,191,189,106,83,17,239,191,189,5,239,191,189,16,239,191,189,239,191,189,66,88,10,239,191,189,239,191,189,100,112,52,239,191,189,239,191,189,0,239,191,189,11,83,17,239,191,189,37,239,191,189,2,239,191,189,239,191,189,107,239,191,189,105,67,0,58,239,191,189,239,191,189,73,239,191,189,80,220,186,93,117,239,191,189,239,191,189,239,191,189,89,33,239,191,189,239,191,189,239,191,189,239,191,189,95,0,0,239,191,189,239,191,189,2,14,239,191,189,5,239,191,189,118,93,64,239,191,189,100,54,239,191,189,239,191,189,124,8,109,47,239,191,189,239,191,189,114,239,191,189,87,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,0,58,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,24,80,239,191,189,108,35,239,191,189,239,191,189,117,220,137,47,103,76,239,191,189,74,239,191,189,239,191,189,54,51,11,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,8,15,53,31,239,191,189,88,239,191,189,239,191,189,90,68,108,239,191,189,100,79,3,122,239,191,189,232,180,152,239,191,189,11,239,191,189,239,191,189,12,91,239,191,189,239,191,189,95,239,191,189,239,191,189,34,8,39,121,239,191,189,64,239,191,189,239,191,189,215,178,127,48,5,62,23,239,191,189,239,191,189,8,13,239,191,189,239,191,189,20,239,191,189,14,239,191,189,239,191,189,239,191,189,19,127,239,191,189,239,191,189,110,239,191,189,239,191,189,74,239,191,189,61,239,191,189,76,57,47,58,239,191,189,239,191,189,110,239,191,189,123,92,239,191,189,239,191,189,239,191,189,239,191,189,82,216,156,13,60,25,124,41,239,191,189,239,191,189,46,33,239,191,189,16,88,66,239,191,189,90,239,191,189,14,239,191,189,239,191,189,122,239,191,189,55,239,191,189,34,18,60,30,239,191,189,239,191,189,11,27,239,191,189,37,60,127,36,89,35,239,191,189,239,191,189,11,239,191,189,14,93,239,191,189,56,104,239,191,189,239,191,189,239,191,189,20,127,94,239,191,189,239,191,189,87,121,90,22,105,239,191,189,57,43,239,191,189,239,191,189,89,29,239,191,189,239,191,189,112,239,191,189,239,191,189,63,239,191,189,124,239,191,189,65,239,191,189,239,191,189,212,131,0,70,239,191,189,239,191,189,239,191,189,52,101,40,239,191,189,239,191,189,12,41,239,191,189,210,144,67,104,40,27,239,191,189,239,191,189,239,191,189,239,191,189,124,63,107,82,90,127,56,239,191,189,60,239,191,189,7,57,239,191,189,239,191,189,87,239,191,189,239,191,189,82,239,191,189,197,182,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,36,239,191,189,123,75,123,93,53,239,191,189,11,239,191,189,114,67,208,148,239,191,189,239,191,189,112,16,110,50,93,14,239,191,189,68,239,191,189,40,114,239,191,189,110,239,191,189,95,67,125,112,68,239,191,189,239,191,189,88,239,191,189,239,191,189,6,70,8,83,114,239,191,189,239,191,189,4,51,64,34,239,191,189,9,239,191,189,198,180,239,191,189,7,239,191,189,53,239,191,189,91,239,191,189,239,191,189,18,0,83,36,239,191,189,239,191,189,18,23,22,239,191,189,43,23,6,107,239,191,189,53,239,191,189,110,82,45,201,151,57,239,191,189,1,239,191,189,239,191,189,239,191,189,194,171,239,191,189,75,65,113,103,93,84,87,45,11,239,191,189,31,96,239,191,189,239,191,189,80,53,85,239,191,189,83,9,111,239,191,189,123,239,191,189,97,122,31,217,128,74,82,39,239,191,189,109,239,191,189,42,96,239,191,189,72,26,239,191,189,0,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,92,120,53,110,239,191,189,58,88,197,170,5,239,191,189,52,125,239,191,189,239,191,189,94,239,191,189,239,191,189,66,239,191,189,38,212,134,70,57,13,110,52,239,191,189,239,191,189,208,128,61,40,35,239,191,189,28,239,191,189,239,191,189,50,97,100,239,191,189,239,191,189,101,239,191,189,125,83,239,191,189,239,191,189,33,239,191,189,239,191,189,238,138,135,239,191,189,239,191,189,53,239,191,189,239,191,189,36,49,239,191,189,53,98,239,191,189,85,239,191,189,239,191,189,66,64,0,15,239,191,189,239,191,189,31,239,191,189,239,191,189,83,239,191,189,27,55,12,239,191,189,29,239,191,189,79,239,191,189,239,191,189,239,191,189,44,239,191,189,75,102,61,50,239,191,189,239,191,189,2,239,191,189,40,239,191,189,14,69,225,177,167,93,239,191,189,104,51,14,239,191,189,3,239,191,189,239,191,189,37,113,23,239,191,189,239,191,189,239,191,189,239,191,189,15,22,239,191,189,239,191,189,239,191,189,83,239,191,189,103,43,239,191,189,101,103,81,41,199,170,107,33,239,191,189,239,191,189,51,239,191,189,29,239,191,189,71,239,191,189,80,13,70,123,105,71,113,239,191,189,239,191,189,47,35,239,191,189,239,191,189,9,57,1,8,47,124,239,191,189,95,239,191,189,94,199,171,119,239,191,189,239,191,189,99,239,191,189,27,109,239,191,189,2,239,191,189,33,239,191,189,117,29,239,191,189,116,42,239,191,189,239,191,189,111,35,239,191,189,49,239,191,189,239,191,189,37,239,191,189,87,239,191,189,239,191,189,127,239,191,189,239,191,189,34,239,191,189,54,7,239,191,189,11,6,239,191,189,239,191,189,88,239,191,189,94,239,191,189,239,191,189,239,191,189,64,60,83,239,191,189,70,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,118,210,162,225,132,139,103,81})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=3584-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07186 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07186_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07186_s.txt", Encoding.UTF8);

    public Test07186() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,81,75,51,239,191,189,7,108,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,44,16,239,191,189,111,239,191,189,239,191,189,61,118,53,239,191,189,60,239,191,189,8,101,239,191,189,92,59,239,191,189,99,54,115,239,191,189,48,239,191,189,47,239,191,189,239,191,189,99,78,239,191,189,239,191,189,31,239,191,189,239,191,189,52,110,18,239,191,189,81,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,126,53,97,239,191,189,239,191,189,100,103,85,239,191,189,19,64,13,239,191,189,239,191,189,40,79,14,29,239,191,189,83,48,81,74,239,191,189,239,191,189,101,33,239,191,189,239,191,189,62,239,191,189,91,239,191,189,101,239,191,189,24,239,191,189,239,191,189,58,81,78,222,142,239,191,189,103,67,1,57,239,191,189,239,191,189,239,191,189,239,191,189,82,44,239,191,189,239,191,189,66,127,67,239,191,189,125,239,191,189,35,239,191,189,118,239,191,189,239,191,189,15,239,191,189,36,239,191,189,5,82,239,191,189,74,43,84,99,239,191,189,239,191,189,42,90,66,106,0,18,239,191,189,45,239,191,189,239,191,189,239,191,189,14,239,191,189,97,239,191,189,219,130,239,191,189,106,67,239,191,189,239,191,189,239,191,189,96,239,191,189,0,105,239,191,189,239,191,189,239,191,189,28,90,239,191,189,82,71,239,191,189,122,117,239,191,189,61,239,191,189,20,125,39,239,191,189,127,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,85,70,239,191,189,119,10,110,17,78,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,8,87,239,191,189,5,239,191,189,239,191,189,66,239,191,189,239,191,189,18,16,239,191,189,49,239,191,189,102,35,239,191,189,239,191,189,12,239,191,189,105,112,7,114,239,191,189,85,1,195,136,239,191,189,239,191,189,239,191,189,49,115,239,191,189,47,18,239,191,189,239,191,189,119,88,239,191,189,44,91,1,239,191,189,91,24,83,123,239,191,189,48,2,239,191,189,239,191,189,239,191,189,80,116,22,101,239,191,189,126,26,15,68,46,97,239,191,189,89,54,16,22,239,191,189,83,239,191,189,68,239,191,189,112,50,239,191,189,239,191,189,111,13,207,158,239,191,189,56,239,191,189,8,223,158,239,191,189,51,239,191,189,217,185,28,23,239,191,189,91,239,191,189,239,191,189,29,106,239,191,189,73,109,239,191,189,239,191,189,83,239,191,189,4,239,191,189,108,239,191,189,15,13,63,239,191,189,78,40,239,191,189,81,86,114,239,191,189,239,191,189,239,191,189,122,239,191,189,39,239,191,189,239,191,189,239,191,189,91,41,82,239,191,189,239,191,189,85,113,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,202,171,239,191,189,113,239,191,189,51,239,191,189,109,239,191,189,239,191,189,91,239,191,189,239,191,189,42,33,44,15,103,12,16,239,191,189,239,191,189,107,88,80,221,148,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,38,239,191,189,47,74,34,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,194,136,43,50,239,191,189,239,191,189,8,14,64,239,191,189,33,239,191,189,239,191,189,239,191,189,209,170,31,115,239,191,189,92,122,239,191,189,239,191,189,239,191,189,79,104,118,0,47,239,191,189,203,146,239,191,189,43,52,19,239,191,189,80,51,30,239,191,189,239,191,189,239,191,189,1,111,5,239,191,189,239,191,189,239,191,189,25,18,239,191,189,239,191,189,208,166,61,239,191,189,47,64,7,239,191,189,126,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,122,35,120,62,239,191,189,2,28,239,191,189,239,191,189,99,239,191,189,23,77,55,239,191,189,127,92,60,99,108,239,191,189,239,191,189,32})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=5120-5631",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07187 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07187_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07187_s.txt", Encoding.UTF8);

    public Test07187() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,55,42,39,15,239,191,189,239,191,189,83,21,206,138,81,2,204,151,239,191,189,70,6,15,92,54,51,81,8,239,191,189,2,239,191,189,39,21,239,191,189,15,122,42,239,191,189,113,239,191,189,38,39,239,191,189,239,191,189,9,39,239,191,189,239,191,189,96,239,191,189,84,91,39,50,42,6,98,89,91,4,239,191,189,30,88,239,191,189,20,44,239,191,189,61,122,239,191,189,239,191,189,239,191,189,38,3,105,30,73,41,83,15,239,191,189,111,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,102,9,23,239,191,189,117,108,19,7,239,191,189,239,191,189,239,191,189,239,191,189,40,87,104,239,191,189,239,191,189,89,53,36,239,191,189,11,239,191,189,56,5,76,102,105,119,98,69,239,191,189,45,27,239,191,189,113,239,191,189,7,239,191,189,239,191,189,239,191,189,98,79,127,88,119,239,191,189,69,7,30,13,84,239,191,189,239,191,189,26,91,75,239,191,189,239,191,189,40,6,239,191,189,239,191,189,108,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,53,102,239,191,189,61,239,191,189,101,32,98,88,85,239,191,189,239,191,189,82,1,122,37,239,191,189,59,92,239,191,189,69,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,16,84,43,239,191,189,121,239,191,189,239,191,189,239,191,189,14,239,191,189,60,239,191,189,239,191,189,71,55,23,239,191,189,239,191,189,93,10,6,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,65,109,199,138,92,81,4,41,111,125,239,191,189,77,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,106,208,190,62,107,239,191,189,10,239,191,189,239,191,189,30,239,191,189,204,145,117,57,239,191,189,239,191,189,51,239,191,189,35,113,239,191,189,239,191,189,43,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,92,239,191,189,239,191,189,18,239,191,189,239,191,189,100,239,191,189,239,191,189,46,20,74,80,239,191,189,96,68,7,102,239,191,189,68,18,239,191,189,18,239,191,189,239,191,189,100,239,191,189,45,239,191,189,239,191,189,35,239,191,189,239,191,189,24,126,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,22,111,239,191,189,29,124,239,191,189,239,191,189,49,239,191,189,215,163,239,191,189,11,239,191,189,52,239,191,189,55,21,49,10,91,88,239,191,189,112,239,191,189,89,35,203,145,239,191,189,109,239,191,189,239,191,189,123,20,239,191,189,239,191,189,239,191,189,1,217,142,239,191,189,93,239,191,189,116,239,191,189,239,191,189,85,102,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,14,239,191,189,239,191,189,91,239,191,189,202,159,15,105,239,191,189,36,239,191,189,121,239,191,189,3,239,191,189,19,88,124,239,191,189,239,191,189,239,191,189,239,191,189,10,121,239,191,189,100,11,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,21,21,239,191,189,19,239,191,189,239,191,189,78,103,207,178,80,239,191,189,239,191,189,0,123,49,7,239,191,189,29,55,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,16,239,191,189,48,38,239,191,189,124,239,191,189,239,191,189,113,109,68,239,191,189,239,191,189,111,45,87,41,239,191,189,239,191,189,97,67,239,191,189,239,191,189,239,191,189,104,101,239,191,189,239,191,189,27,93,85,62,218,158,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,14,239,191,189,79,239,191,189,113,200,131,57,239,191,189,4,239,191,189,10,19,42,239,191,189,47,239,191,189,239,191,189,126,239,191,189,239,191,189,41,91,239,191,189,109,239,191,189,239,191,189,203,169,239,191,189,239,191,189,239,191,189,110,83,87,239,191,189,239,191,189,110,239,191,189,239,191,189,74,12,23,123,74,42,239,191,189,239,191,189,92,239,191,189,239,191,189,124,12,239,191,189,101,239,191,189,239,191,189,103,4,51,239,191,189,110,14,111,90,23,239,191,189,215,150,239,191,189,27,46,222,166,239,191,189,239,191,189,18,239,191,189,75,66,239,191,189,239,191,189,110,30,239,191,189,12,239,191,189,239,191,189,238,148,179,115,105,108,239,191,189,239,191,189,239,191,189,239,191,189,32,51,239,191,189,239,191,189,26,239,191,189,110,239,191,189,239,191,189,101,239,191,189,200,176,20,28,239,191,189,78,21,239,191,189,239,191,189,78,47,239,191,189,239,191,189,2,213,167,239,191,189,113,239,191,189,199,158,106,239,191,189,23,239,191,189,11,196,154,239,191,189,62,109,239,191,189,239,191,189,37,239,191,189,87,239,191,189,29,239,191,189,239,191,189,14,10,239,191,189,3,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,44,239,191,189,53,42,70,85,4,5,66,81,100,63,94,239,191,189,8,239,191,189,31,53,79,29,83,239,191,189,239,191,189,95,239,191,189,20,14,27,239,191,189,239,191,189,239,191,189,112,65,213,153,239,191,189,239,191,189,74,83,239,191,189,219,134,119,206,172,239,191,189,85,239,191,189,45,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,104,239,191,189,239,191,189,39,239,191,189,239,191,189,87,239,191,189,239,191,189,111,199,130,239,191,189,239,191,189,123,120,90,115,194,179,239,191,189,239,191,189,105,239,191,189,239,191,189,113,239,191,189,103,10,78,98,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,119,239,191,189,83,125,53,101,118,239,191,189,123,54,96,112,239,191,189,239,191,189,50,111,49,239,191,189,56,239,191,189,239,191,189,239,191,189,47,55,239,191,189,32,100,239,191,189,10,239,191,189,239,191,189,239,191,189,121,239,191,189,74,239,191,189,239,191,189,64,51,239,191,189,61,239,191,189,239,191,189,239,191,189,7,239,191,189,120,239,191,189,239,191,189,114,49,28,123,239,185,145,239,191,189,27,239,191,189,21,0,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,18,239,191,189,61,239,191,189,239,191,189,90,239,191,189,239,191,189,0,239,191,189,48,51,239,191,189,239,191,189,72,239,191,189,104,239,191,189,72,239,191,189,11,239,191,189,102,239,191,189,239,191,189,29,239,191,189,239,191,189,33,20,34,107,239,191,189,101,239,191,189,69,239,191,189,64,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,124,109,38,97,59,120,239,191,189,83,108,7,239,191,189,239,191,189,61,96,60,39,33,239,191,189,219,132,196,144,66,239,191,189,3,239,191,189,40,239,191,189,124,80,82,24,126,239,191,189,19,239,191,189,97,49,239,191,189,111,24,54,94,42,109,108,239,191,189,239,191,189,24,239,191,189,239,191,189,99,39,239,191,189,42,73,94,77,80,239,191,189,239,191,189,28,239,191,189,239,191,189,89,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,63,20,239,191,189,89,227,178,149,239,191,189,72,107,239,191,189,55,121,82,26,120,39,239,191,189,23,211,152,75,239,191,189,65,25,239,191,189,111,20,207,148,239,191,189,239,191,189,40,239,191,189,78,122,239,191,189,70,239,191,189,239,191,189,239,191,189,8,85,0,239,191,189,59,103,63,36,36,5,239,191,189,28,96,239,191,189,102,106,63,57,66,239,191,189,239,191,189,239,191,189,113,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,11,239,191,189,66,88,64,52,111,7,213,170,111,239,191,189,49,12,127,239,191,189,239,191,189,16,83,13,84})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=6144-7167",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07188 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07188_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07188_s.txt", Encoding.UTF8);

    public Test07188() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-1535",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06343 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06343_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06343_s.txt", Encoding.UTF8);

    public Test06343() : base(recordedRequest, recordedResponse, "accounts8d439ff3ebb1da6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,57,239,191,189,74,239,191,189,113,104,239,191,189,239,191,189,26,49,24,62,28,9,47,10,239,191,189,48,14,27,38,88,239,191,189,239,191,189,239,191,189,74,239,191,189,53,239,191,189,239,191,189,239,191,189,111,72,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,58,239,191,189,75,239,191,189,105,239,191,189,25,239,191,189,41,239,191,189,239,191,189,90,97,239,191,189,33,82,239,191,189,239,191,189,29,8,97,111,90,38,239,191,189,239,191,189,100,63,27,103,74,239,191,189,119,80,30,220,172,21,60,109,120,239,191,189,239,191,189,39,0,21,239,191,189,239,191,189,206,156,239,191,189,26,58,239,191,189,117,239,191,189,116,36,0,239,191,189,120,217,134,239,191,189,100,59,239,191,189,17,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,38,239,191,189,239,191,189,113,127,239,191,189,48,124,239,191,189,239,191,189,83,103,239,191,189,20,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,50,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,65,239,191,189,71,239,191,189,239,191,189,104,7,16,51,239,191,189,7,54,110,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,47,112,97,239,191,189,23,239,191,189,232,137,180,239,191,189,239,191,189,239,191,189,52,120,38,239,191,189,239,191,189,239,191,189,29,54,4,239,191,189,239,191,189,6,42,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,25,239,191,189,208,156,239,191,189,239,191,189,56,127,126,91,239,191,189,239,191,189,54,2,239,191,189,239,191,189,239,191,189,239,191,189,232,157,187,239,191,189,239,191,189,239,191,189,91,91,120,11,59,239,191,189,93,0,36,239,191,189,79,239,191,189,85,239,191,189,12,109,229,182,134,83,0,58,239,191,189,239,191,189,68,127,239,191,189,48,93,39,42,239,191,189,65,100,25,45,67,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,41,96,239,191,189,239,191,189,122,239,191,189,5,54,45,239,191,189,32,104,239,191,189,110,70,108,239,191,189,68,239,191,189,89,39,239,191,189,102,239,191,189,239,191,189,84,239,191,189,114,239,191,189,85,113,239,191,189,116,239,191,189,115,239,191,189,239,191,189,239,191,189,65,119,87,239,191,189,239,191,189,14,32,239,191,189,61,239,191,189,239,191,189,97,30,74,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,34,38,0,239,191,189,125,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,2,123,2,54,239,191,189,87,239,191,189,239,191,189,22,239,191,189,116,87,54,39,239,191,189,78,94,236,153,163,239,191,189,27,119,239,191,189,115,36,239,191,189,239,191,189,8,75,239,191,189,75,239,191,189,239,191,189,72,56,35,84,239,191,189,111,118,16,7,31,37,239,191,189,72,239,191,189,239,191,189,239,191,189,13,23,42,239,191,189,239,191,189,4,62,194,128,239,191,189,239,191,189,239,191,189,239,191,189,52,40,239,191,189,66,223,166,42,9,10,239,191,189,51,26,11,111,239,191,189,78,239,191,189,87,239,191,189,98,239,191,189,239,191,189,51,104,90,96,51,239,191,189,97,239,191,189,118,239,191,189,69,239,191,189,239,191,189,96,95,104,9,122,239,191,189,3,33,239,191,189,126,220,148,239,191,189,116,239,191,189,96,23,64,18,125,239,191,189,92,239,191,189,126,114,70,119,239,191,189,10,239,191,189,72,197,156,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,45,239,191,189,18,112,220,132,239,191,189,74,28,100,239,191,189,95,239,191,189,50,85,1,4,119,239,191,189,52,18,91,22,58,54,22,239,191,189,239,191,189,239,191,189,113,63,89,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,90,68,127,93,239,191,189,239,191,189,71,239,191,189,239,191,189,4,64,239,191,189,26,87,239,191,189,53,239,191,189,109,239,191,189,95,239,191,189,239,191,189,25,32,56,77,239,191,189,30,24,108,239,191,189,239,191,189,57,239,191,189,22,239,191,189,239,191,189,127,239,191,189,239,191,189,62,239,191,189,45,109,239,191,189,239,191,189,239,191,189,115,239,191,189,101,239,191,189,44,239,191,189,197,186,101,60,125,69,239,191,189,239,191,189,239,191,189,64,19,124,121,99,64,100,87,38,239,191,189,239,191,189,33,239,191,189,93,239,191,189,33,239,191,189,239,191,189,23,54,98,7,100,239,191,189,239,191,189,239,191,189,92,49,239,191,189,1,63,239,191,189,239,191,189,239,191,189,90,239,191,189,44,103,50,239,191,189,93,62,239,191,189,53,123,239,191,189,92,239,191,189,26,239,191,189,194,166,88,108,57,239,191,189,239,191,189,239,191,189,113,239,191,189,50,239,191,189,36,239,191,189,3,114,39,112,82,239,191,189,101,27,239,191,189,4,239,191,189,239,191,189,97,34,34,239,191,189,120,239,191,189,22,124,77,86,98,239,191,189,239,191,189,239,191,189,80,239,191,189,78,81,239,191,189,26,239,191,189,50,9,239,191,189,239,191,189,103,123,239,191,189,239,191,189,239,191,189,239,191,189,104,112,237,131,186,78,239,191,189,48,14,45,239,191,189,27,196,188,239,191,189,2,20,36,239,191,189,97,93,239,191,189,239,191,189,47,25,122,19,17,10,239,191,189,214,139,239,191,189,239,191,189,67,239,191,189,25,239,191,189,239,191,189,107,239,191,189,118,12,239,191,189,124,239,191,189,239,191,189,48,239,191,189,120,113,239,191,189,44,67,10,239,191,189,36,84,239,191,189,239,191,189,208,167,37,125,87,42,105,239,191,189,121,239,191,189,239,191,189,126,125,42,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,81,239,191,189,30,84,95,110,239,128,153,239,191,189,239,191,189,211,154,239,191,189,81,239,191,189,116,81,239,191,189,25,239,191,189,215,143,239,191,189,4,1,120,35,32,39,239,191,189,117,62,239,191,189,86,239,191,189,94,2,239,191,189,239,191,189,239,191,189,239,191,189,79,35,239,191,189,239,191,189,239,191,189,218,149,20,239,191,189,97,239,191,189,125,42,121,2,43,79,93,239,191,189,239,191,189,96,113,35,127,239,191,189,239,191,189,239,191,189,239,191,189,47,113,239,191,189,239,191,189,61,239,191,189,239,191,189,108,106,90,113,239,191,189,239,191,189,12,239,191,189,64,239,191,189,239,191,189,239,191,189,220,145,51,239,191,189,109,5,14,239,191,189,239,191,189,239,191,189,8,21,239,191,189,64,239,191,189,239,191,189,22,239,191,189,29,63,107,239,191,189,239,191,189,239,191,189,239,191,189,87,62,84,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,24,239,191,189,46,39,239,191,189,108,98,69,239,191,189,93,239,191,189,39,239,191,189,101,239,191,189,239,191,189,88,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,67,12,28,87,65,239,191,189,239,191,189,239,191,189,239,191,189,88,194,153,16,67,72,41,95,239,191,189,94,239,191,189,239,191,189,45,73,126,0,82,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,80,10,4,239,191,189,239,191,189,9,61,48,239,191,189,22,113,20,239,191,189,239,191,189,19,15,34,239,191,189,71,21,194,157,87,239,191,189,107,239,191,189,122,95,88,44,196,177,95,239,191,189,239,191,189,84,239,191,189,239,191,189,31,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,123,48,95,118,239,191,189,115,32,23,239,191,189,219,178,239,191,189,21,37,39,239,191,189,239,191,189,239,191,189,118,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,85,239,191,189,239,191,189,38,239,191,189,239,191,189,110,13,239,191,189,27,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,65,101,239,191,189,33,239,191,189,57,102,239,191,189,239,191,189,30,239,191,189,80,239,191,189,50,239,191,189,68,7,53,239,191,189,114,239,191,189,112,239,191,189,239,191,189,37,36,38,239,191,189,28,207,173,239,191,189,239,191,189,21,103,92,239,191,189,239,191,189,42,72,239,191,189,48,220,153,23,73,239,191,189,54,93,239,191,189,114,83,127,26,209,167,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,113,239,191,189,123,239,191,189,202,148,108,27,11,93,239,191,189,197,148,35,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,66,59,72,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,32,239,191,189,32,40,39,239,191,189,85,211,161,239,191,189,113,103,239,191,189,239,191,189,85,61,239,191,189,79,32,101,239,191,189,239,191,189,239,191,189,120,54,239,191,189,37,239,191,189,52,239,191,189,124,43,239,191,189,40,239,191,189,48,115,239,191,189,112,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,88,48,239,191,189,239,191,189,34,239,191,189,38,239,191,189,239,191,189,242,128,168,189,239,191,189,239,191,189,116,70,239,191,189,239,191,189,36,37,201,136,239,191,189,19,127,239,191,189,239,191,189,13,239,191,189,98,84,239,191,189,239,191,189,219,176,239,191,189,92,96,126,118,119,239,191,189,8,239,191,189,101,40,23,56,90,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,194,187,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,43,21,239,191,189,239,191,189,16,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,198,178,29,114,239,191,189,35,114,76,8,24,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,119,239,191,189,79,93,85,40,239,191,189,239,191,189,107,53,239,191,189,210,146,39,239,191,189,12,76,23,97,239,191,189,239,191,189,29,92,239,191,189,88,118,8,239,191,189,73,199,166,95,239,191,189,47,8,41,95,239,191,189,104,239,191,189,239,191,189,125,7,239,191,189,97,239,191,189,239,191,189,239,191,189,68,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,89,104,92,4,239,191,189,31,64,86,239,191,189,239,191,189,97,239,191,189,99,30,239,191,189,239,191,189,83,239,191,189,239,191,189,8,100,22,239,191,189,239,191,189,239,191,189,239,191,189,38,60,239,191,189,86,20,114,16,68,239,191,189,239,191,189,2,239,191,189,126,239,191,189,38,98,12,0,239,191,189,86,195,153,239,191,189,29,239,191,189,40,201,135,66,239,191,189,239,191,189,75,34,239,191,189,3,239,191,189,77,122,239,191,189,239,191,189,30,111,239,191,189,94,36,69,87,61,239,191,189,239,191,189,239,191,189,8,102,98,239,191,189,239,191,189,57,48,74,71,239,191,189,107,27,55,239,191,189,103,239,191,189,239,191,189,239,191,189,21,239,191,189,17,239,191,189,55,83,239,191,189,60,239,191,189,239,191,189,239,191,189,114,73,239,191,189,239,191,189,59,67,239,191,189,239,191,189,96,239,191,189,20,73,239,191,189,239,191,189,97,3,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,35,126,54,46,15,239,191,189,122,113,102,239,191,189,115,239,191,189,42,239,191,189,101,239,191,189,239,191,189,76,239,191,189,1,72,108,58,239,191,189,80,239,191,189,239,191,189,9,2,33,200,145,239,191,189,204,188,12,239,191,189,239,191,189,110,65,239,191,189,239,191,189,61,239,191,189,239,191,189,38,239,191,189,118,79,18,239,191,189,93,6,239,191,189,239,191,189,17,239,191,189,88,239,191,189,16,239,191,189,113,110,69,12,239,191,189,239,191,189,93,63,88,29,102,239,191,189,112,103,111,47,119,239,191,189,41,62,82,239,191,189,239,191,189,78,106,239,191,189,82,239,191,189,16,53,239,191,189,94,121,40,105,239,191,189,239,191,189,11,57,70,55,239,191,189,239,191,189,109,127,239,191,189,53,107,239,191,189,112,239,191,189,239,191,189,118,239,191,189,126,239,191,189,239,191,189,88,239,191,189,107,239,191,189,71,239,191,189,127,239,191,189,63,5,54,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,199,140,239,191,189,51,239,191,189,3,112,239,191,189,2,21,239,191,189,239,191,189,218,161,239,191,189,12,239,191,189,0,239,191,189,239,191,189,101,239,191,189,195,147,239,191,189,239,191,189,90,239,191,189,239,191,189,21,239,191,189,100,127,239,191,189,205,187,35,106,239,191,189,239,191,189,239,191,189,26,52,239,191,189,41,82,29,121,19,239,191,189,17,239,191,189,83,37,31,27,239,191,189,48,239,191,189,239,191,189,239,191,189,123,104,239,191,189,94,78,30,239,191,189,239,191,189,239,191,189,239,191,189,100,13,239,191,189,39,75,120,24,106,81,239,191,189,239,191,189,239,191,189,3,239,191,189,17,89,198,178,239,191,189,239,191,189,239,191,189,62,75,83,239,191,189,71,77,239,191,189,52,41,239,191,189,31,6,239,191,189,220,167,239,191,189,212,163,239,191,189,239,191,189,60,239,191,189,199,152,239,191,189,239,191,189,61,239,191,189,45,33,239,191,189,239,191,189,239,191,189,239,191,189,96,211,152,48,203,143,29,239,191,189,58,194,141,86,239,191,189,105,91,239,191,189,14,67,44,239,191,189,69,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,112,239,191,189,239,191,189,32,16,36,13,70,42,59,115,239,191,189,54,31,103,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,105,59,18,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,16,242,173,149,182,239,191,189,124,49,239,191,189,35,48,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,6,239,191,189,113,100,71,61,239,191,189,105,18,239,191,189,239,191,189,239,191,189,67,113,239,191,189,239,191,189,52,239,191,189,96,239,191,189,239,191,189,57,239,191,189,119,92,239,191,189,102,239,191,189,239,191,189,52,34,4,239,191,189,40,239,191,189,239,191,189,69,62,52,239,191,189,94,239,191,189,30,54,239,191,189,239,191,189,239,191,189,15,13,32,239,191,189,239,191,189,108,89,25,239,191,189,60,239,191,189,7,117,239,191,189,218,131,239,191,189,94,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,107,97,239,191,189,26,78,124,239,191,189,32,87,239,191,189,197,132,83,239,191,189,239,191,189,15,216,151,75,54,239,191,189,30,239,191,189,54,64,239,191,189,93,239,191,189,239,191,189,67,15,239,191,189,239,191,189,57,1,239,191,189,34,239,191,189,239,191,189,124,52,85,126,60,239,191,189,89,11,5,64,11,239,191,189,101,68,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,118,31,38,239,191,189,20,239,191,189,52,239,191,189,25,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,2,106,239,191,189,71,119,239,191,189,239,191,189,87,107,239,191,189,81,239,191,189,76,239,191,189,100,239,191,189,26,97,239,191,189,119,92,14,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,30,204,188,117,239,191,189,106,239,191,189,239,191,189,72,239,191,189,200,186,239,191,189,239,191,189,239,191,189,239,191,189,206,181,225,138,139,78,48,113,239,191,189,52,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,62,239,191,189,6,239,191,189,24,239,191,189,204,148,83,207,167,204,161,239,191,189,59,239,191,189,17,239,191,189,125,239,191,189,3,239,191,189,239,191,189,120,239,191,189,90,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,16,239,191,189,239,191,189,239,191,189,5,114,107,99,221,159,206,141,239,191,189,76,239,191,189,239,191,189,90,239,191,189,239,191,189,7,97,239,191,189,116,44,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,104,65,105,215,144,48,127,239,191,189,11,31,18,40,37,41,239,191,189,239,191,189,51,14,9,49,239,191,189,45,239,191,189,54,239,191,189,60,27,239,191,189,76,239,191,189,239,191,189,38,103,41,55,239,191,189,35,239,191,189,100,30,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,75,46,239,191,189,81,239,191,189,60,239,191,189,45,59,239,191,189,51,67,84,20,239,191,189,103,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,64,82,239,191,189,18,239,191,189,122,239,191,189,65,90,239,191,189,239,191,189,96,239,191,189,46,5,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,103,79,46,63,38,80,8,120,239,191,189,89,239,191,189,239,191,189,17,92,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,92,101,2,36,1,239,191,189,113,215,143,239,191,189,84,239,191,189,83,239,191,189,56,239,191,189,239,191,189,119,239,191,189,239,191,189,28,239,191,189,82,239,191,189,59,105,239,191,189,200,162,11,239,191,189,239,191,189,239,191,189,239,191,189,6,84,239,191,189,99,75,3,239,191,189,113,66,211,174,108,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,63,84,239,191,189,8,239,191,189,239,191,189,73,73,69,29,239,191,189,239,191,189,49,239,191,189,46,20,88,202,154,55,15,16,239,191,189,239,191,189,123,68,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,46,86,20,90,239,191,189,67,41,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,121,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,47,86,236,140,149,5,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,108,21,239,191,189,239,191,189,14,22,239,191,189,109,239,191,189,74,239,191,189,72,2,239,191,189,30,107,228,169,182,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,226,164,172,0,239,191,189,76,126,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,0,66,216,189,239,191,189,239,191,189,117,32,27,239,191,189,36,239,191,189,208,176,94,12,42,116,39,239,191,189,104,9,239,191,189,16,72,29,56,239,191,189,239,191,189,30,50,44,57,26,239,191,189,116,239,191,189,239,191,189,14,104,239,191,189,239,191,189,199,191,239,191,189,109,20,239,191,189,31,120,239,191,189,2,98,35,239,191,189,239,191,189,239,191,189,239,191,189,117,110,76,239,191,189,58,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,80,49,102,239,191,189,4,239,191,189,65,239,191,189,239,191,189,8,239,191,189,127,109,239,191,189,48,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,14,239,191,189,19,94,239,191,189,53,39,105,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,62,239,191,189,102,239,191,189,86,239,191,189,120,239,191,189,45,68,28,49,18,91,239,191,189,199,162,85,239,191,189,117,239,191,189,239,191,189,198,170,239,191,189,73,70,25,239,191,189,39,239,191,189,239,191,189,13,33,239,191,189,239,191,189,57,107,88,239,191,189,82,239,191,189,99,239,191,189,65,117,35,203,187,239,191,189,0,239,191,189,32,64,239,191,189,69,211,187,239,191,189,12,239,191,189,95,239,191,189,5,78,127,35,239,191,189,197,142,55,239,191,189,239,191,189,35,75,239,191,189,239,191,189,105,127,38,122,94,239,191,189,38,43,125,239,191,189,67,113,21,125,239,191,189,75,86,239,191,189,93,239,191,189,239,191,189,81,51,38,239,191,189,69,239,191,189,239,191,189,34,29,239,191,189,239,191,189,239,191,189,82,60,239,191,189,12,0,43,239,191,189,35,2,86,239,191,189,51,239,191,189,16,239,191,189,239,191,189,239,191,189,47,239,191,189,56,119,239,191,189,45,239,191,189,83,104,123,93,95,90,239,191,189,239,191,189,239,191,189,57,43,115,101,74,239,191,189,116,125,92,239,191,189,239,191,189,239,191,189,239,191,189,69,53,65,27,123,239,191,189,239,191,189,118,99,239,191,189,14,243,184,152,176,239,191,189,195,167,239,191,189,239,191,189,113,118,239,191,189,20,75,92,60,54,239,191,189,27,239,191,189,49,109,96,34,70,28,68,239,191,189,239,191,189,239,191,189,76,239,191,189,127,100,114,239,191,189,90,239,191,189,239,191,189,239,191,189,24,85,239,191,189,239,191,189,239,191,189,79,44,239,191,189,30,239,191,189,239,191,189,239,191,189,72,239,191,189,221,133,87,117,105,100,127,239,191,189,239,191,189,53,37,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,117,239,191,189,16,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,90,239,191,189,25,80,113,82,92,46,239,191,189,125,239,191,189,84,239,191,189,62,239,191,189,239,191,189,239,191,189,0,239,191,189,120,33,115,117,10,6,239,191,189,31,239,191,189,19,239,191,189,39,239,191,189,239,191,189,24,39,104,125,107,239,191,189,239,191,189,37,12,114,127,108,64,215,148,239,191,189,197,135,77,239,191,189,239,191,189,239,191,189,33,14,74,239,191,189,50,239,191,189,27,64,85,9,239,191,189,239,191,189,38,239,191,189,93,120,239,191,189,12,239,191,189,239,191,189,103,3,239,191,189,239,191,189,239,191,189,71,239,191,189,76,228,160,159,239,191,189,57,49,5,89,51,239,191,189,96,239,191,189,10,239,191,189,28,117,239,191,189,110,239,191,189,239,191,189,105,77,239,191,189,64,239,191,189,239,191,189,127,30,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,91,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,3,69,199,171,58,239,191,189,239,191,189,21,239,191,189,36,239,191,189,62,227,151,174,94,1,115,239,191,189,239,191,189,214,130,239,191,189,116,239,191,189,59,112,102,11,239,191,189,213,187,239,191,189,101,7,42,239,191,189,239,191,189,239,191,189,239,191,189,56,109,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,6,12,239,191,189,37,67,239,191,189,45,239,191,189,5,54,72,239,191,189,42,127,10,67,79,239,191,189,77,126,239,191,189,239,191,189,239,191,189,112,239,191,189,204,174,104,239,191,189,239,191,189,31,104,80,239,191,189,95,239,191,189,239,191,189,239,191,189,119,10,55,68,37,94,72,29,239,191,189,239,191,189,99,122,239,191,189,122,60,109,52,239,191,189,67,239,191,189,239,191,189,119,57,239,191,189,239,191,189,41,23,239,191,189,102,125,32,12,239,191,189,239,191,189,98,66,70,75,95,107,39,239,191,189,18,239,191,189,5,73,68,239,191,189,44,239,191,189,120,221,187,50,41,0,239,191,189,115,70,239,191,189,70,105,239,191,189,60,239,191,189,87,239,191,189,239,191,189,24,239,191,189,38,239,191,189,35,239,191,189,95,4,101,66,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,5,66,80,87,117,97,113,239,191,189,4,99,36,239,191,189,239,191,189,239,191,189,94,239,191,189,89,76,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,22,212,182,50,54,85,6,239,191,189,239,191,189,239,191,189,239,191,189,83,228,191,179,239,191,189,56,239,191,189,239,191,189,17,91,239,191,189,239,191,189,127,239,191,189,118,239,191,189,109,239,191,189,80,239,191,189,239,191,189,31,115,76,79,6,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,213,171,104,239,191,189,239,191,189,47,50,239,191,189,11,239,191,189,239,191,189,54,126,239,191,189,54,106,239,191,189,204,153,20,50,239,191,189,52,113,115,100,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,16,239,191,189,95,204,143,61,81,99,239,191,189,58,124,60,239,191,189,97,239,191,189,46,239,191,189,60,14,239,191,189,239,191,189,239,191,189,6,51,57,239,191,189,203,151,77,26,239,191,189,57,239,191,189,239,191,189,239,191,189,98,11,239,191,189,60,91,239,191,189,239,191,189,54,106,239,191,189,52,239,191,189,3,239,191,189,113,19,239,191,189,90,239,191,189,54,43,239,191,189,43,239,191,189,9,114,239,191,189,22,239,191,189,108,67,239,191,189,29,239,191,189,109,34,239,191,189,239,191,189,239,191,189,239,191,189,200,174,239,191,189,124,4,239,191,189,239,191,189,239,191,189,239,191,189,6,46,222,173,121,239,191,189,239,191,189,239,191,189,96,51,239,191,189,9,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,92,79,41,239,191,189,239,191,189,5,109,124,49,239,191,189,239,191,189,40,239,191,189,239,191,189,58,239,191,189,62,101,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,16,24,239,191,189,8,111,88,71,112,239,191,189,221,142,54,239,191,189,11,54,99,48,239,191,189,11,61,27,126,239,191,189,239,191,189,14,239,191,189,227,176,130,12,239,191,189,239,191,189,239,191,189,37,93,99,239,191,189,239,191,189,30,239,191,189,99,125,239,191,189,239,191,189,239,191,189,46,74,239,191,189,239,191,189,118,17,239,191,189,239,191,189,239,191,189,195,146,28,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,127,62,239,191,189,89,239,191,189,239,191,189,239,191,189,209,137,239,191,189,59,218,158,239,191,189,64,15,239,191,189,87,74,23,12,239,191,189,239,191,189,18,80,97,239,191,189,71,239,191,189,239,191,189,80,90,205,143,45,125,239,191,189,239,191,189,239,191,189,239,191,189,198,165,239,191,189,4,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,24,118,42,127,239,191,189,86,239,191,189,9,32,239,191,189,30,239,191,189,98,239,191,189,13,14,239,191,189,239,191,189,26,11,239,191,189,96,81,102,115,227,141,157,60,9,107,239,191,189,239,191,189,47,78,239,191,189,239,191,189,39,76,203,167,7,58,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,31,24,239,191,189,13,239,191,189,239,191,189,45,121,17,114,26,107,239,191,189,239,191,189,32,60,70,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,63,239,191,189,88,22,239,191,189,239,191,189,65,239,191,189,239,191,189,38,239,191,189,82,45,239,191,189,239,191,189,100,32,53,239,191,189,239,191,189,50,96,239,191,189,45,26,74,102,26,239,191,189,239,191,189,37,125,239,191,189,239,191,189,239,191,189,113,23,239,191,189,74,49,49,114,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,77,239,191,189,42,98,239,191,189,239,191,189,35,43,239,191,189,239,191,189,96,39,239,191,189,18,112,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,8,239,191,189,77,239,191,189,1,239,191,189,7,62,77,60,239,191,189,239,191,189,239,191,189,70,239,191,189,195,151,75,239,191,189,239,191,189,70,27,3,239,191,189,10,56,95,76,42,239,191,189,239,191,189,3,239,191,189,91,239,191,189,239,191,189,21,97,239,191,189,239,191,189,28,239,191,189,89,239,191,189,239,191,189,84,239,191,189,239,191,189,1,61,239,191,189,239,191,189,22,239,191,189,239,191,189,99,122,200,142,239,191,189,19,84,116,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,89,109,239,191,189,49,103,239,191,189,104,40,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,97,239,191,189,89,239,191,189,19,239,191,189,12,27,239,191,189,84,7,74,239,191,189,86,81,127,239,191,189,50,18,239,191,189,239,191,189,81,235,153,168,108,86,239,191,189,6,5,239,191,189,77,222,158,94,239,191,189,19,239,191,189,29,239,191,189,239,191,189,120,239,191,189,212,179,239,191,189,108,53,93,42,9,127,239,191,189,239,191,189,102,16,239,191,189,239,191,189,60,239,191,189,104,115,21,239,191,189,88,239,191,189,108,45,239,191,189,239,191,189,107,40,21,106,11,239,191,189,239,191,189,23,239,191,189,39,239,191,189,32,58,239,191,189,239,191,189,125,120,239,191,189,56,77,239,191,189,83,239,191,189,118,63,100,99,239,191,189,124,239,191,189,20,63,62,239,191,189,239,191,189,239,191,189,106,107,239,191,189,239,191,189,64,239,191,189,239,191,189,20,239,191,189,71,56,57,239,191,189,239,191,189,65,125,239,191,189,61,24,239,191,189,239,191,189,42,239,191,189,30,48,239,191,189,239,191,189,19,239,191,189,239,191,189,28,27,18,13,12,84,13,239,191,189,121,116,239,191,189,239,191,189,43,42,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,79,239,191,189,66,239,191,189,64,59,239,191,189,16,59,239,191,189,0,239,191,189,101,239,191,189,29,239,191,189,239,191,189,52,112,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,51,123,239,191,189,117,239,191,189,51,124,116,78,94,117,239,191,189,71,239,191,189,209,143,239,191,189,239,191,189,239,191,189,115,231,146,160,12,239,191,189,217,132,39,239,191,189,239,191,189,239,191,189,7,23,239,191,189,12,239,191,189,208,154,65,239,191,189,239,191,189,114,22,45,239,191,189,239,191,189,103,239,191,189,16,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,85,239,191,189,86,239,191,189,109,239,191,189,76,239,191,189,17,239,191,189,98,63,239,191,189,239,191,189,116,123,115,101,0,88,28,239,191,189,239,191,189,89,239,191,189,239,191,189,97,18,107,239,191,189,239,191,189,22,33,10,47,239,191,189,239,191,189,239,191,189,57,47,52,239,191,189,239,191,189,81,59,239,191,189,64,239,191,189,116,38,103,239,191,189,239,191,189,199,146,239,191,189,47,239,191,189,239,191,189,121,96,57,84,45,239,191,189,76,30,239,191,189,239,191,189,203,186,239,191,189,43,239,191,189,36,116,239,191,189,73,30,15,239,191,189,239,191,189,239,191,189,68,125,101,239,191,189,89,119,98,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,95,122,239,191,189,120,6,239,191,189,107,239,191,189,87,239,191,189,239,191,189,29,239,191,189,239,191,189,222,175,239,191,189,197,155,15,239,191,189,112,239,191,189,239,191,189,80,93,82,239,191,189,239,191,189,107,2,42,33,239,191,189,239,191,189,46,110,60,239,191,189,239,191,189,239,191,189,239,191,189,14,223,182,89,239,191,189,239,191,189,239,191,189,48,239,191,189,8,94,68,239,191,189,10,53,239,191,189,39,239,191,189,86,117,239,191,189,239,191,189,120,239,191,189,51,23,239,191,189,65,239,191,189,50,239,191,189,53,239,191,189,97,239,191,189,14,239,191,189,202,190,16,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,100,79,34,46,61,93,95,124,54,239,191,189,113,214,184,14,239,191,189,89,239,191,189,48,222,152,100,239,191,189,124,239,191,189,239,191,189,31,70,83,239,191,189,239,191,189,116,71,7,239,191,189,116,63,239,191,189,208,153,107,66,239,191,189,239,191,189,239,191,189,34,19,239,191,189,2,27,239,191,189,239,191,189,239,191,189,12,6,0,122,239,191,189,118,239,191,189,62,25,40,239,191,189,62,239,191,189,239,191,189,239,191,189,60,118,105,239,191,189,239,191,189,239,191,189,114,86,239,191,189,239,191,189,125,239,191,189,239,191,189,80,67,56,22,239,191,189,58,0,239,191,189,239,191,189,239,191,189,54,64,91,82,25,90,239,191,189,1,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,118,123,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,79,108,85,239,191,189,107,123,239,191,189,118,239,191,189,60,32,60,47,101,124,2,55,239,191,189,239,191,189,239,191,189,35,43,66,239,191,189,80,91,126,112,86,73,110,124,41,239,191,189,72,239,191,189,61,239,191,189,38,16,239,191,189,124,4,17,121,115,70,21,239,191,189,221,191,45,29,105,70,35,42,239,191,189,95,15,239,191,189,96,32,116,206,163,18,63,29,239,191,189,197,133,239,191,189,239,191,189,239,191,189,239,191,189,38,49,38,239,191,189,21,105,239,191,189,120,239,191,189,64,94,239,191,189,239,191,189,37,106,239,191,189,81,22,19,239,191,189,92,239,191,189,67,239,191,189,96,6,239,191,189,239,191,189,24,58,239,191,189,118,197,159,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,83,239,191,189,239,191,189,125,60,51,239,191,189,239,191,189,34,74,239,191,189,239,191,189,80,123,14,112,239,191,189,95,78,239,191,189,239,191,189,239,191,189,10,40,114,239,191,189,239,191,189,27,239,191,189,228,180,164,239,191,189,239,191,189,13,112,0,72,239,191,189,7,17,239,191,189,84,101,9,62,7,239,191,189,34,239,191,189,72,239,191,189,239,191,189,91,88,239,191,189,239,191,189,11,67,100,103,19,62,239,191,189,239,191,189,57,239,191,189,109,239,191,189,112,239,191,189,239,191,189,71,239,191,189,6,87,239,191,189,239,191,189,104,239,191,189,239,191,189,47,93,69,108,7,239,191,189,53,239,191,189,239,191,189,48,61,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,114,239,191,189,126,239,191,189,77,239,191,189,239,191,189,239,191,189,85,72,85,0,239,191,189,13,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,41,239,191,189,101,239,191,189,239,191,189,239,191,189,63,120,239,191,189,239,191,189,56,239,191,189,239,191,189,79,239,191,189,60,45,239,191,189,92,239,191,189,239,191,189,239,191,189,223,179,17,35,239,191,189,17,5,115,23,106,239,191,189,239,191,189,106,239,191,189,239,191,189,114,112,216,176,88,28,12,220,189,9,74,112,85,11,239,191,189,239,191,189,57,218,170,4,239,191,189,28,239,191,189,218,159,124,32,239,191,189,99,239,191,189,46,72,76,76,55,239,191,189,239,191,189,0,50,195,167,52,101,239,191,189,198,148,30,11,239,191,189,18,77,239,191,189,74,239,191,189,239,191,189,86,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,2,36,8,212,177,239,191,189,56,239,191,189,239,191,189,93,114,239,191,189,77,19,11,94,21,239,191,189,80,122,239,191,189,239,191,189,112,94,239,191,189,89,239,191,189,239,191,189,85,239,191,189,35,239,191,189,111,239,191,189,239,191,189,112,22,55,28,96,20,239,191,189,99,126,124,239,191,189,68,239,191,189,5,126,239,191,189,239,191,189,40,122,61,4,239,191,189,239,191,189,239,191,189,88,239,191,189,73,82,31,58,239,191,189,71,239,191,189,79,239,191,189,72,221,159,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,66,20,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,119,239,191,189,239,191,189,108,69,239,191,189,126,203,148,68,67,239,191,189,87,239,191,189,239,191,189,106,54,8,40,56,20,239,191,189,107,239,191,189,199,175,68,239,191,189,94,123,62,239,191,189,36,82,32,239,191,189,239,191,189,219,152,239,191,189,114,239,191,189,34,85,239,191,189,28,239,191,189,103,75,127,239,191,189,239,191,189,50,89,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,127,239,191,189,108,25,5,100,239,191,189,5,239,191,189,10,239,191,189,90,112,77,239,191,189,122,100,21,18,239,191,189,239,191,189,220,176,239,191,189,239,191,189,102,239,191,189,239,191,189,113,47,60,239,191,189,54,3,91,239,191,189,45,8,80,73,123,239,191,189,239,191,189,65,239,191,189,70,104,239,191,189,102,239,191,189,62,239,191,189,239,191,189,209,163,209,141,63,239,191,189,239,191,189,214,147,92,205,168,35,108,239,191,189,239,191,189,76,92,239,191,189,239,191,189,47,239,191,189,0,111,239,191,189,239,191,189,239,191,189,55,11,239,191,189,239,191,189,239,191,189,61,49,239,191,189,30,239,191,189,200,177,239,191,189,239,191,189,81,127,115,75,34,239,191,189,239,191,189,25,48,121,31,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,242,158,136,185,207,172,239,191,189,59,56,239,191,189,239,191,189,239,191,189,19,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,3,239,191,189,123,239,191,189,114,239,191,189,239,191,189,114,63,21,239,191,189,239,191,189,28,18,239,191,189,6,239,191,189,198,164,239,191,189,59,239,191,189,239,191,189,3,109,239,191,189,101,239,191,189,64,101,33,102,1,57,239,191,189,31,35,239,191,189,70,73,239,191,189,116,239,191,189,35,239,191,189,239,191,189,119,1,239,191,189,239,191,189,195,186,87,1,54,67,22,119,239,191,189,239,191,189,31,239,191,189,50,239,191,189,239,191,189,86,239,191,189,239,191,189,117,127,239,191,189,51,239,191,189,90,239,191,189,239,191,189,196,152,7,239,191,189,37,100,79,239,191,189,239,191,189,103,14,239,191,189,3,88,9,239,191,189,18,113,42,239,191,189,66,33,47,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,58,239,191,189,52,111,126,126,112,196,175,239,191,189,239,191,189,116,56,239,191,189,71,239,191,189,239,191,189,29,117,56,32,14,47,239,191,189,104,96,14,239,191,189,239,191,189,54,29,17,45,16,203,147,217,138,58,77,239,191,189,111,56,239,191,189,239,191,189,94,239,191,189,239,191,189,109,239,191,189,103,111,43,239,191,189,66,239,191,189,239,191,189,21,16,239,191,189,30,239,191,189,109,87,38,94,54,49,75,67,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,91,239,191,189,107,239,191,189,239,191,189,239,191,189,2,67,239,191,189,239,191,189,239,191,189,116,42,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,68,40,239,191,189,105,42,239,191,189,106,239,191,189,239,191,189,12,239,191,189,52,32,80,14,90,65,118,217,161,239,191,189,92,239,191,189,69,118,239,191,189,58,239,191,189,50,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,115,65,239,191,189,75,4,36,54,239,191,189,116,239,191,189,36,28})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff3ebb1da6",
                        container: "containersfd0675af3b5e4436aa88f734c458eb2b",
                        blob: "Blobe9c1f4bca5194f3aa97000f48ad1fbca_WriteProtectedBlob",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06528 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06528_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06528_s.txt", Encoding.UTF8);

    public Test06528() : base(recordedRequest, recordedResponse, "accounts8d439ff4a8d0465")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff4a8d0465",
                        container: "containersb04a805bee054344bac50afdec8dc861",
                        blob: "Blobfe0fbb003425486ca4125e0ade20ad82_WriteProtectedBlob",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07189 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07189_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07189_s.txt", Encoding.UTF8);

    public Test07189() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=5632-6143",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06529 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06529_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06529_s.txt", Encoding.UTF8);

    public Test06529() : base(recordedRequest, recordedResponse, "accounts8d439ff4a8d0465")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff4a8d0465",
                        container: "containersb04a805bee054344bac50afdec8dc861",
                        blob: "Blobfe0fbb003425486ca4125e0ade20ad82_WriteProtectedBlob",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-1535",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07234 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07234_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07234_s.txt", Encoding.UTF8);

    public Test07234() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,105,2,239,191,189,239,191,189,81,81,239,191,189,47,67,239,191,189,52,239,191,189,113,220,173,239,191,189,79,60,239,191,189,66,239,191,189,103,239,191,189,239,191,189,37,0,239,191,189,97,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,235,140,183,108,8,32,239,191,189,239,191,189,74,239,191,189,62,239,191,189,239,191,189,22,123,53,239,191,189,1,10,2,125,239,191,189,23,43,81,24,239,191,189,91,239,191,189,112,119,239,191,189,239,191,189,239,191,189,66,239,191,189,207,130,34,239,191,189,229,165,150,239,191,189,239,191,189,16,239,191,189,75,109,239,191,189,41,118,239,191,189,239,191,189,109,195,160,64,239,191,189,7,38,39,239,191,189,239,191,189,103,239,191,189,5,3,239,191,189,239,191,189,101,24,239,191,189,62,28,239,191,189,50,74,68,64,43,239,191,189,239,191,189,81,71,1,239,191,189,239,191,189,84,126,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,195,188,101,67,11,239,191,189,119,239,191,189,70,17,239,191,189,239,191,189,212,149,239,191,189,85,239,191,189,118,220,163,57,239,191,189,239,191,189,101,239,191,189,12,239,191,189,84,239,191,189,239,191,189,76,196,152,93,20,118,239,191,189,0,53,65,10,98,10,54,106,68,37,239,191,189,239,191,189,239,191,189,85,61,1,239,191,189,51,41,0,114,239,191,189,59,34,239,191,189,112,239,191,189,239,191,189,239,191,189,118,239,191,189,27,112,239,191,189,64,239,191,189,239,191,189,214,133,92,239,191,189,239,191,189,239,191,189,239,191,189,103,71,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,54,6,239,191,189,194,153,113,239,191,189,80,239,191,189,61,239,191,189,49,239,191,189,21,239,191,189,104,239,191,189,239,191,189,239,191,189,4,239,191,189,23,75,239,191,189,88,44,239,191,189,76,93,239,191,189,239,191,189,206,139,109,9,239,191,189,239,191,189,20,239,191,189,239,191,189,100,60,55,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,46,42,50,239,191,189,239,191,189,31,239,191,189,44,105,109,239,191,189,74,239,191,189,17,239,191,189,2,239,191,189,41,11,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,66,127,239,191,189,104,47,114,109,77,239,191,189,239,191,189,239,191,189,219,132,239,191,189,126,71,26,73,38,20,239,191,189,112,239,191,189,239,191,189,239,191,189,119,239,191,189,112,239,191,189,64,239,191,189,62,32,7,39,239,191,189,239,191,189,195,158,47,239,191,189,239,191,189,99,33,49,50,239,191,189,67,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,199,171,239,191,189,125,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,117,31,239,191,189,239,191,189,68,239,191,189,45,6,239,191,189,239,191,189,239,191,189,239,191,189,117,85,239,191,189,80,11,239,191,189,51,6,239,191,189,239,191,189,117,118,239,191,189,107,239,191,189,9,77,239,191,189,50,239,191,189,239,191,189,92,239,191,189,96,239,191,189,115,63,207,167,239,191,189,41,38,33,7,45,239,191,189,239,191,189,239,191,189,123,202,177,239,191,189,239,191,189,63,46,239,191,189,55,122,239,191,189,109,239,191,189,81,239,191,189,239,191,189,239,191,189,20,65,100,239,191,189,125,99,95,239,191,189,114,79,85,239,191,189,61,18,27,102,94,104,239,191,189,239,191,189,118,89,33,239,191,189,239,191,189,7,85,239,191,189,65,101,239,191,189,40,67,52,239,191,189,239,191,189,239,191,189,239,191,189,76,77,121,6,16,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,7,101,239,191,189,7,234,130,186,31,239,191,189,239,191,189,118,14,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06530 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06530_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06530_s.txt", Encoding.UTF8);

    public Test06530() : base(recordedRequest, recordedResponse, "accounts8d439ff4a8d0465")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff4a8d0465",
                        container: "containersb04a805bee054344bac50afdec8dc861",
                        blob: "Blobfe0fbb003425486ca4125e0ade20ad82_WriteProtectedBlob",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=2048-3071",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07190 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07190_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07190_s.txt", Encoding.UTF8);

    public Test07190() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        blob: "Blob0fbb3dc6176944b29a239fd808baf6d3",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=7168-8191",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07235 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07235_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07235_s.txt", Encoding.UTF8);

    public Test07235() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{8,239,191,189,111,239,191,189,123,28,239,191,189,96,112,72,50,239,191,189,0,14,239,191,189,239,191,189,57,0,239,191,189,33,89,239,191,189,209,140,239,191,189,47,239,191,189,63,239,191,189,103,3,116,239,191,189,121,239,191,189,239,191,189,113,35,239,191,189,239,191,189,100,239,191,189,18,113,239,191,189,194,179,103,32,239,191,189,100,12,239,191,189,11,15,87,239,191,189,239,191,189,8,75,70,100,239,191,189,8,69,239,191,189,57,239,191,189,29,13,88,22,22,30,239,191,189,208,158,95,239,191,189,24,123,110,30,239,191,189,2,239,191,189,239,191,189,106,239,191,189,43,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,10,44,48,239,191,189,44,74,19,239,191,189,78,239,191,189,112,79,63,239,191,189,85,67,239,191,189,239,191,189,239,191,189,69,239,191,189,5,77,215,154,28,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,51,111,239,191,189,78,35,11,70,239,191,189,1,116,80,42,239,191,189,239,191,189,75,42,206,173,239,191,189,43,4,239,191,189,88,239,191,189,16,239,191,189,49,239,191,189,83,124,215,146,93,35,33,239,191,189,95,239,191,189,239,191,189,58,124,81,76,98,73,239,191,189,11,125,208,170,239,191,189,2,239,191,189,239,191,189,85,22,239,191,189,62,93,239,191,189,124,97,239,191,189,239,191,189,239,191,189,205,189,239,191,189,119,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,35,37,76,239,191,189,239,191,189,236,143,166,239,191,189,204,189,239,191,189,66,86,96,0,239,191,189,239,191,189,197,139,37,239,191,189,86,6,5,93,239,191,189,7,239,191,189,239,191,189,32,239,191,189,33,58,239,191,189,47,222,178,239,191,189,46,38,42,239,191,189,13,11,239,191,189,32,239,191,189,239,191,189,239,191,189,48,24,239,191,189,62,239,191,189,70,124,117,239,191,189,13,239,191,189,239,191,189,9,239,191,189,239,191,189,32,28,239,191,189,239,191,189,17,20,20,93,239,191,189,239,191,189,110,76,239,191,189,82,79,98,88,28,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,98,61,239,191,189,33,239,191,189,118,239,191,189,28,78,239,191,189,115,222,176,239,191,189,27,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,35,239,191,189,239,191,189,71,239,191,189,18,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,94,59,119,67,239,191,189,48,239,191,189,103,239,191,189,239,191,189,121,108,65,239,191,189,42,45,119,239,191,189,239,191,189,239,191,189,26,12,118,63,239,191,189,239,191,189,110,117,239,191,189,100,239,191,189,239,191,189,0,222,188,127,239,191,189,64,239,191,189,239,191,189,220,187,239,191,189,239,191,189,43,239,191,189,216,175,202,169,66,239,191,189,210,189,82,239,191,189,55,101,239,191,189,239,191,189,51,118,101,65,239,191,189,107,98,23,239,191,189,239,191,189,55,239,191,189,38,0,95,43,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,106,0,45,33,106,239,191,189,74,239,191,189,10,7,239,191,189,68,122,122,75,239,191,189,110,239,191,189,4,31,113,239,191,189,239,191,189,239,191,189,93,38,10,197,177,239,191,189,43,109,79,239,191,189,215,129,62,64,239,191,189,239,191,189,96,92,239,191,189,31,87,26,239,191,189,63,38,239,191,189,239,191,189,239,191,189,6,74,239,191,189,48,92,239,191,189,67,239,191,189,239,191,189,41,63,239,191,189,59,239,191,189,208,163,202,129,46,19,20,239,191,189,20,239,191,189,121,67,117,203,158,239,191,189,62,84,239,191,189,73,95,239,191,189,81,239,191,189,124,105,65,239,191,189,51,107,67,28,37,239,191,189,92,114,93,195,173,71,53,239,191,189,127,239,191,189,239,191,189,239,191,189,239,191,189,107,0,239,191,189,239,191,189,239,191,189,112,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,109,93,29,239,191,189,46,65,75,239,191,189,239,191,189,2,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,106,239,191,189,239,191,189,122,111,239,191,189,239,191,189,211,172,25,239,191,189,98,84,239,191,189,17,239,191,189,98,57,239,191,189,239,191,189,32,32,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,14,118,239,191,189,25,11,239,191,189,209,163,37,58,94,120,52,120,34,239,191,189,239,191,189,121,239,191,189,123,239,191,189,96,239,191,189,78,239,191,189,74,239,191,189,239,191,189,239,191,189,40,73,60,51,239,191,189,10,100,113,59,121,95,239,191,189,239,191,189,20,122,71,239,191,189,239,191,189,124,112,9,113,49,239,191,189,36,26,239,191,189,206,162,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,68,60,110,239,191,189,46,239,191,189,239,191,189,96,239,191,189,239,191,189,75,44,7,239,191,189,94,73,239,191,189,199,183,24,85,15,239,191,189,92,239,191,189,239,191,189,201,183,115,239,191,189,239,191,189,24,239,191,189,37,99,239,191,189,14,239,191,189,239,191,189,239,191,189,49,239,191,189,91,61,98,239,191,189,239,191,189,113,98,239,191,189,81,11,69,239,191,189,239,191,189,52,94,17,39,95,239,191,189,71,239,191,189,239,191,189,239,191,189,51,239,191,189,225,156,175,58,239,191,189,239,191,189,239,191,189,239,191,189,206,179,239,191,189,239,191,189,239,191,189,51,87,85,209,135,239,191,189,211,175,89,46,80,239,191,189,239,191,189,123,6,239,191,189,108,77,47,239,191,189,239,191,189,213,178,103,125,31,101,239,191,189,239,191,189,239,191,189,239,191,189,23,52,44,121,239,191,189,26,103,17,95,239,191,189,109,94,62,73,112,239,191,189,239,191,189,51,71,83,239,191,189,239,191,189,121,239,191,189,239,191,189,106,9,239,191,189,110,239,191,189,90,239,191,189,239,191,189,239,191,189,87,78,239,191,189,239,191,189,239,191,189,4,59,239,191,189,12,48,103,84,41,52,239,191,189,239,191,189,239,191,189,239,191,189,58,107,76,64,239,191,189,239,191,189,79,239,191,189,94,81,239,191,189,54,45,239,191,189,239,191,189,89,239,191,189,33,76,5,239,191,189,66,23,239,191,189,239,191,189,73,27,78,65,239,191,189,16,239,191,189,199,144,114,39,239,191,189,22,239,191,189,239,191,189,239,191,189,207,166,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,66,239,191,189,62,239,191,189,23,239,191,189,83,81,88,105,239,191,189,1,110,239,191,189,65,14,110,239,191,189,77,239,191,189,239,191,189,219,133,239,191,189,94,239,191,189,45,30,17,70,116,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,120,122,239,191,189,70,239,191,189,51,239,191,189,239,191,189,96,30,239,191,189,239,191,189,103,101,89,239,191,189,14,102,7,239,191,189,239,191,189,51,92,38,50,70,35,102,59,239,191,189,239,191,189,106,239,191,189,36,239,191,189,239,191,189,122,28,82,239,191,189,239,191,189,239,191,189,125,239,191,189,80,239,191,189,239,191,189,26,239,191,189,98,44,123,28,70,69,30,239,191,189,20,120,16,84,105,99,41,239,191,189,100,239,191,189,64,239,191,189,18,239,191,189,74,239,191,189,239,191,189,215,176,222,161,239,191,189,66,76,89,239,191,189,239,191,189,66,77,80,223,179,35,101,239,191,189,66,239,191,189,79,31,83,239,191,189,239,191,189,218,160,239,191,189,239,191,189,239,191,189,239,191,189,197,143,111,239,191,189,63,11,50,239,191,189,239,191,189,8,15,239,191,189,97,239,191,189,22,127,96,239,191,189,239,191,189,46,239,191,189,115,230,135,145,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,75,116,23,51,239,191,189,116,239,191,189,64,88,239,191,189,239,191,189,239,191,189,90,64,239,191,189,223,158,60,82,239,191,189,239,191,189,3,239,191,189,4,60,26,44,80,239,191,189,239,191,189,123,43,88,239,191,189,21,94,239,191,189,239,191,189,239,191,189,239,191,189,72,71,56,239,191,189,20,32,103,97,239,191,189,239,191,189,47,239,191,189,42,20,239,191,189,72,239,191,189,18,239,191,189,239,191,189,71,78,239,191,189,95,118,239,191,189,124,239,191,189,42,98,7,239,191,189,95,83,97,239,191,189,239,191,189,28,239,191,189,27,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,0,68,239,191,189,204,158,239,191,189,3,47,239,191,189,239,191,189,239,191,189,239,191,189,33,77,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,72,215,178,89,126,239,191,189,34,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,55,22,93,239,191,189,66,239,191,189,48,239,191,189,103,19,239,191,189,239,191,189,239,191,189,120,6,239,191,189,239,191,189,55,60,239,191,189,41,239,191,189,75,78,239,191,189,239,191,189,39,52,59,5,239,191,189,67,126,239,191,189,107,239,191,189,239,191,189,239,191,189,96,239,191,189,24,59,75,69,239,191,189,239,191,189,127,99,239,191,189,239,191,189,47,239,191,189,89,24,239,191,189,239,191,189,239,191,189,14,201,159,120,239,191,189,95,97,103,239,191,189,123,27,12,113,239,191,189,239,191,189,239,191,189,80,113,239,191,189,70,6,239,191,189,81,35,239,191,189,63,85,239,191,189,2,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,115,28,239,191,189,239,191,189,239,191,189,239,191,189,45,99,87,239,191,189,41,57,239,191,189,9,239,191,189,239,191,189,94,239,191,189,77,119,123,239,191,189,239,191,189,10,239,191,189,101,239,191,189,22,49,70,239,191,189,239,191,189,239,191,189,20,239,191,189,84,17,93,40,239,191,189,36,239,191,189,108,239,191,189,43,239,191,189,47,239,191,189,58,103,5,123,239,191,189,70,239,191,189,96,239,191,189,93,120,29,22,49,17,239,191,189,53,74,239,191,189,44,82,239,191,189,1,239,191,189,108,83,239,191,189,73,239,191,189,239,191,189,239,191,189,53,239,191,189,88,239,191,189,223,161,120,95,239,191,189,30,239,191,189,64,239,191,189,239,191,189,239,191,189,13,239,191,189,90,239,191,189,239,191,189,82,113,239,191,189,107,239,191,189,101,106,15,59,239,191,189,117,97,239,191,189,110,67,59,239,191,189,59,50,57,239,191,189,239,191,189,239,191,189,14,93,92,1,239,191,189,69,44,239,191,189,29,239,191,189,239,191,189,45,239,191,189,89,121,55,105,35,66,239,191,189,239,191,189,78,239,191,189,109,239,191,189,79,83,40,239,191,189,56,103,239,191,189,239,191,189,13,64,99,127,101,239,191,189,94,239,191,189,68,9,239,191,189,127,13,239,191,189,239,191,189,1,84,199,172,101,239,191,189,13,112,125,32,239,191,189,239,191,189,239,191,189,116,239,191,189,53,66,239,191,189,239,191,189,24,21,239,191,189,3,45,239,191,189,33,79,69,239,191,189,239,191,189,122,125,113,112,239,191,189,239,191,189,239,191,189,65,67,51,239,191,189,1,69,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,61,239,191,189,239,191,189,201,162,73,80,239,191,189,239,191,189,67,122,200,177,239,191,189,239,191,189,120,103,85,239,191,189,203,149,109,69,239,191,189,239,191,189,35,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2559",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06531 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06531_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06531_s.txt", Encoding.UTF8);

    public Test06531() : base(recordedRequest, recordedResponse, "accounts8d439ff4a8d0465")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff4a8d0465",
                        container: "containersb04a805bee054344bac50afdec8dc861",
                        blob: "Blobfe0fbb003425486ca4125e0ade20ad82_WriteProtectedBlob",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=3584-4095",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06792 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06792_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06792_s.txt", Encoding.UTF8);

    public Test06792() : base(recordedRequest, recordedResponse, "accounts8d439ff692ff27d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{119,13,96,239,191,189,239,191,189,239,191,189,54,239,191,189,199,135,93,78,239,191,189,239,191,189,239,191,189,239,191,189,54,118,27,96,239,191,189,23,239,191,189,239,191,189,239,191,189,6,77,21,19,239,191,189,107,125,239,191,189,121,93,77,239,191,189,102,239,191,189,46,239,191,189,239,191,189,42,239,191,189,221,162,239,191,189,43,79,40,196,129,108,9,52,96,101,239,191,189,61,239,191,189,120,33,239,191,189,30,28,223,183,55,82,239,191,189,53,208,183,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,27,28,33,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,69,239,191,189,239,191,189,239,191,189,41,0,239,191,189,98,32,12,239,191,189,239,191,189,239,191,189,216,170,239,191,189,239,191,189,239,191,189,127,44,48,115,239,191,189,239,191,189,33,239,191,189,86,91,239,191,189,56,50,239,191,189,42,239,191,189,84,239,191,189,91,239,191,189,239,191,189,55,121,239,191,189,239,191,189,18,239,191,189,48,105,73,27,239,191,189,239,191,189,31,239,191,189,96,20,239,191,189,81,239,191,189,8,93,95,7,119,211,138,47,239,191,189,239,191,189,239,191,189,239,191,189,77,19,72,239,191,189,76,239,191,189,239,191,189,39,239,191,189,57,13,64,239,191,189,71,18,61,239,191,189,239,191,189,239,191,189,106,114,239,191,189,89,239,191,189,114,108,12,239,191,189,239,191,189,113,239,191,189,239,191,189,44,97,239,191,189,12,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,35,81,239,191,189,198,139,119,239,191,189,239,191,189,227,185,132,36,239,191,189,239,191,189,112,64,223,134,239,191,189,239,191,189,127,239,191,189,72,20,79,239,191,189,6,239,191,189,29,20,211,156,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,124,239,191,189,11,239,191,189,60,239,191,189,82,239,191,189,108,239,191,189,112,239,191,189,51,239,191,189,239,191,189,9,239,191,189,118,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,40,239,191,189,239,191,189,56,5,239,191,189,239,191,189,3,239,191,189,61,109,19,239,191,189,239,191,189,26,239,191,189,42,98,239,191,189,127,239,191,189,124,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,176,107,239,191,189,77,239,191,189,239,191,189,239,191,189,68,98,55,239,191,189,239,191,189,38,239,191,189,239,191,189,31,239,191,189,56,239,191,189,109,239,191,189,8,107,74,59,95,239,191,189,24,239,191,189,73,239,191,189,239,191,189,43,239,191,189,122,239,191,189,239,191,189,49,92,220,176,239,191,189,239,191,189,97,239,191,189,239,191,189,126,80,239,191,189,239,191,189,215,147,239,191,189,61,239,191,189,239,191,189,239,191,189,18,52,238,180,150,25,83,213,183,77,42,239,191,189,62,239,191,189,239,191,189,5,239,191,189,239,191,189,59,9,102,116,239,191,189,118,15,113,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,30,40,239,191,189,239,191,189,30,239,191,189,14,14,14,49,38,20,96,22,239,191,189,239,191,189,239,191,189,87,109,239,191,189,56,239,191,189,83,104,61,239,191,189,239,191,189,2,239,191,189,13,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,199,135,239,191,189,87,102,239,191,189,96,98,239,191,189,91,239,191,189,20,239,191,189,67,100,1,10,239,191,189,213,133,239,191,189,239,191,189,11,12,52,1,127,239,191,189,126,100,115,6,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,7,239,191,189,239,191,189,76,106,239,191,189,39,110,239,191,189,239,191,189,33,221,145,2,48,124,239,191,189,35,100,48,239,191,189,239,191,189,74,239,191,189,69,239,191,189,126,6,41,73,49,126,227,189,190,239,191,189,110,239,191,189,16,239,191,189,239,191,189,113,81,41,61,1,95,105,11,239,191,189,239,191,189,115,116,239,191,189,239,191,189,100,216,128,70,239,191,189,117,239,191,189,239,191,189,216,171,19,30,115,239,191,189,76,239,191,189,239,191,189,31,239,191,189,239,191,189,216,150,104,7,239,191,189,82,20,239,191,189,107,118,239,191,189,9,239,191,189,46,89,239,191,189,239,191,189,84,100,92,239,191,189,121,125,42,239,191,189,236,172,191,8,71,83,239,191,189,239,191,189,239,191,189,239,191,189,111,121,102,104,96,239,191,189,93,98,239,191,189,9,49,68,99,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,47,29,239,191,189,239,191,189,239,191,189,102,104,59,98,46,105,77,239,191,189,120,239,191,189,90,115,45,239,191,189,4,239,191,189,75,22,239,191,189,32,239,191,189,239,191,189,72,61,65,80,239,191,189,103,94,239,191,189,239,191,189,239,191,189,239,191,189,105,2,239,191,189,87,239,191,189,51,239,191,189,239,191,189,64,239,191,189,239,191,189,39,84,239,191,189,239,191,189,79,239,191,189,239,191,189,6,91,239,191,189,75,239,191,189,31,239,191,189,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,113,80,239,191,189,11,99,113,239,191,189,112,22,236,133,170,24,239,191,189,239,191,189,239,191,189,40,239,191,189,29,69,239,191,189,90,239,191,189,85,239,191,189,215,174,239,191,189,239,191,189,80,125,6,239,191,189,67,99,239,191,189,35,80,88,239,191,189,239,191,189,239,191,189,53,88,53,239,191,189,9,80,48,239,191,189,239,191,189,239,191,189,239,191,189,52,23,119,239,191,189,103,239,191,189,239,191,189,2,116,239,191,189,111,126,239,191,189,239,191,189,37,13,239,191,189,215,136,68,99,40,115,239,191,189,239,191,189,110,10,239,191,189,239,191,189,204,161,239,191,189,96,80,14,76,28,239,191,189,239,191,189,239,191,189,22,239,191,189,58,32,239,191,189,217,128,239,191,189,239,191,189,66,239,191,189,239,191,189,108,98,64,11,239,191,189,212,144,239,191,189,239,191,189,30,119,239,191,189,37,239,191,189,30,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,82,239,191,189,35,239,191,189,17,239,191,189,71,36,239,191,189,28,239,191,189,16,2,239,191,189,72,5,239,191,189,73,239,191,189,103,239,191,189,239,191,189,223,187,27,50,10,81,239,191,189,239,191,189,52,239,191,189,30,81,239,191,189,109,11,112,93,48,239,191,189,91,239,191,189,32,84,239,191,189,48,239,191,189,239,191,189,239,191,189,115,53,29,90,86,239,191,189,103,239,191,189,222,182,239,191,189,109,239,191,189,109,239,191,189,84,239,191,189,86,81,239,191,189,239,191,189,217,154,54,16,239,191,189,21,239,191,189,239,191,189,111,218,168,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,57,239,191,189,239,191,189,58,21,123,93,86,0,239,191,189,239,191,189,87,83,24,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,10,111,239,191,189,77,239,191,189,239,191,189,48,203,181,32,91,88,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,36,239,191,189,67,199,144,1,80,119,210,162,98,239,191,189,122,68,15,56,47,34,239,191,189,239,191,189,116,239,191,189,44,239,191,189,74,239,191,189,125,239,191,189,239,191,189,110,82,239,191,189,239,191,189,78,239,191,189,48,239,191,189,66,239,191,189,239,191,189,239,191,189,42,33,239,191,189,104,239,191,189,239,191,189,23,73,90,123,37,40,16,239,191,189,239,191,189,239,191,189,239,191,189,125,210,132,81,239,191,189,100,80,239,191,189,239,191,189,44,239,191,189,222,174,239,191,189,67,239,191,189,239,191,189,74,101,239,191,189,34,76,24,102,239,191,189,102,239,191,189,44,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,85,239,191,189,115,239,191,189,62,239,191,189,47,121,99,106,239,191,189,239,191,189,239,191,189,54,33,60,56,239,191,189,48,239,191,189,30,239,191,189,80,114,35,60,239,191,189,100,239,191,189,57,239,191,189,38,54,239,191,189,67,214,169,95,116,29,239,191,189,2,74,239,191,189,99,74,72,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,83,54,15,34,74,26,112,58,20,239,191,189,49,239,191,189,104,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,34,18,25,27,81,239,191,189,14,239,191,189,239,191,189,60,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,101,51,239,191,189,94,69,3,239,191,189,94,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,44,40,23,239,191,189,57,26,239,191,189,239,191,189,59,65,124,239,191,189,59,239,191,189,239,191,189,40,239,191,189,239,191,189,52,239,191,189,239,191,189,48,73,30,47,239,191,189,239,191,189,55,239,191,189,19,57,70,97,239,191,189,239,191,189,89,239,191,189,14,239,191,189,74,116,40,35,3,239,191,189,239,191,189,80,239,191,189,106,239,191,189,35,239,191,189,121,48,116,239,191,189,239,191,189,239,191,189,83,239,191,189,93,239,191,189,239,191,189,40,8,54,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,29,239,191,189,53,239,191,189,13,69,239,191,189,74,61,0,239,191,189,239,191,189,239,191,189,97,239,191,189,49,62,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,81,73,239,191,189,239,191,189,20,41,90,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,98,9,109,92,239,191,189,239,191,189,56,239,191,189,105,106,73,239,191,189,239,191,189,5,14,32,239,191,189,70,66,18,74,69,0,118,11,239,191,189,239,191,189,239,191,189,239,191,189,61,53,82,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,53,75,239,191,189,84,239,191,189,239,191,189,126,8,57,35,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,28,8,239,191,189,81,239,191,189,62,239,191,189,239,191,189,43,52,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,106,17,239,191,189,80,239,191,189,93,34,239,191,189,2,127,239,191,189,72,13,239,191,189,239,191,189,239,191,189,17,239,191,189,22,239,191,189,239,191,189,63,53,13,30,85,239,191,189,239,191,189,239,191,189,9,63,81,239,191,189,9,40,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,0,79,239,191,189,239,191,189,91,239,191,189,77,239,191,189,104,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,50,239,191,189,239,191,189,120,112,239,191,189,63,71,89,4,239,191,189,239,191,189,239,191,189,239,191,189,57,87,195,152,239,191,189,103,239,191,189,100,58,239,191,189,57,27,215,149,59,17,239,191,189,239,191,189,239,191,189,88,239,191,189,29,108,239,191,189,85,64,93,2,239,191,189,0,239,191,189,86,103,46,99,239,191,189,95,59,37,239,191,189,111,60,102,239,191,189,54,239,191,189,104,239,191,189,29,239,191,189,23,46,45,239,191,189,58,86,8,239,191,189,117,10,239,191,189,119,57,33,227,180,168,49,75,239,191,189,239,191,189,239,191,189,70,239,191,189,123,239,191,189,239,191,189,89,119,216,171,239,191,189,239,191,189,124,239,191,189,40,57,239,191,189,41,239,191,189,87,239,191,189,239,191,189,120,239,191,189,239,191,189,44,97,82,41,239,191,189,239,191,189,239,191,189,64,239,191,189,117,239,191,189,67,6,239,191,189,108,239,191,189,34,239,191,189,94,239,191,189,125,239,191,189,100,239,191,189,122,239,191,189,7,239,191,189,90,31,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,6,78,24,42,19,239,191,189,239,191,189,71,64,239,191,189,239,191,189,239,191,189,45,239,191,189,127,20,25,239,191,189,71,111,239,191,189,239,191,189,239,191,189,239,191,189,120,32,229,163,133,25,8,79,239,191,189,239,191,189,212,131,51,239,191,189,239,191,189,2,28,123,239,191,189,84,97,239,191,189,239,191,189,239,191,189,220,181,104,111,27,239,191,189,110,239,191,189,84,239,191,189,239,191,189,239,191,189,22,239,191,189,38,239,191,189,87,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,108,239,191,189,27,41,111,23,239,191,189,51,2,239,191,189,100,239,191,189,239,191,189,239,191,189,87,58,53,47,239,191,189,239,191,189,239,191,189,239,191,189,89,84,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,75,239,191,189,94,234,175,171,82,118,239,191,189,86,239,191,189,20,25,239,191,189,76,119,239,191,189,239,191,189,239,191,189,117,97,100,52,239,191,189,239,191,189,239,191,189,199,144,114,100,99,239,191,189,12,92,239,191,189,65,239,191,189,44,239,191,189,239,191,189,73,239,191,189,127,77,239,191,189,63,239,191,189,76,239,191,189,239,191,189,70,239,191,189,239,191,189,107,42,84,47,36,239,191,189,239,191,189,114,53,239,191,189,32,7,239,191,189,45,10,239,191,189,239,191,189,70,221,182,23,125,239,191,189,72,239,191,189,71,52,68,239,191,189,28,239,191,189,239,191,189,114,41,23,239,191,189,239,191,189,239,191,189,91,239,191,189,215,177,239,191,189,45,208,130,101,65,4,57,0,16,239,191,189,239,191,189,239,191,189,117,12,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,214,142,122,75,3,239,191,189,224,168,190,239,191,189,239,191,189,64,239,191,189,40,26,239,191,189,239,191,189,239,191,189,2,239,191,189,75,28,239,191,189,194,158,59,239,191,189,239,191,189,119,239,191,189,4,56,81,0,239,191,189,239,191,189,86,55,97,78,36,239,191,189,65,239,191,189,239,191,189,34,76,239,191,189,25,239,191,189,239,191,189,239,191,189,101,239,191,189,11,239,191,189,239,191,189,239,191,189,81,74,49,20,125,239,191,189,239,191,189,239,191,189,115,123,239,191,189,239,191,189,110,239,191,189,196,185,239,191,189,239,191,189,239,191,189,11,25,85,239,191,189,200,145,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,44,15,72,239,191,189,86,239,191,189,117,44,239,191,189,25,239,191,189,217,171,239,191,189,23,227,161,175,239,191,189,239,191,189,104,239,191,189,0,11,59,48,120,239,191,189,239,191,189,1,212,183,239,191,189,89,239,191,189,239,191,189,102,239,191,189,123,46,239,191,189,4,99,239,191,189,239,191,189,239,191,189,27,123,239,191,189,239,191,189,239,191,189,1,50,239,191,189,239,191,189,15,61,104,38,97,239,191,189,73,239,191,189,68,50,239,191,189,82,48,50,86,58,239,191,189,127,120,239,191,189,126,239,191,189,91,97,65,92,108,41,23,234,181,184,97,5,239,191,189,79,239,191,189,239,191,189,26,239,191,189,82,122,31,125,239,191,189,239,191,189,73,99,239,191,189,239,191,189,239,191,189,239,191,189,43,43,114,239,191,189,7,239,191,189,5,33,31,115,89,124,53,239,191,189,43,93,7,60,81,101,239,191,189,122,3,125,239,191,189,118,239,191,189,112,35,239,191,189,104,239,191,189,52,239,191,189,53,239,191,189,99,109,239,191,189,239,191,189,21,127,50,7,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,92,115,239,191,189,28,239,191,189,39,239,191,189,4,239,191,189,64,239,191,189,239,191,189,89,10,108,72,54,239,191,189,80,239,191,189,239,191,189,69,239,191,189,80,89,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,105,239,191,189,65,23,30,239,191,189,239,191,189,111,104,101,118,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,126,239,191,189,111,239,191,189,239,191,189,45,17,204,135,105,42,60,40,239,191,189,69,239,191,189,239,191,189,239,191,189,21,42,48,24,55,239,191,189,239,191,189,49,239,191,189,36,239,191,189,239,191,189,110,0,94,35,65,12,64,69,239,191,189,239,191,189,48,75,239,191,189,26,239,191,189,50,64,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,102,239,191,189,239,191,189,102,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,41,239,191,189,4,239,191,189,57,239,191,189,239,191,189,73,77,239,191,189,239,191,189,28,21,88,239,191,189,76,239,191,189,51,30,239,191,189,26,47,239,191,189,239,191,189,85,111,239,191,189,22,123,67,79,239,191,189,31,94,84,59,5,239,191,189,239,191,189,56,239,191,189,239,191,189,52,239,191,189,227,154,188,14,239,191,189,0,239,191,189,201,144,117,15,239,191,189,105,239,191,189,239,191,189,52,239,191,189,51,210,183,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,70,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,122,74,239,191,189,86,239,191,189,79,239,191,189,239,191,189,82,18,196,150,107,239,191,189,125,13,72,239,191,189,5,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,41,239,191,189,209,189,87,108,15,68,84,103,93,239,191,189,239,191,189,239,191,189,117,79,123,239,191,189,125,239,191,189,29,239,191,189,197,137,239,191,189,77,239,191,189,239,191,189,26,239,191,189,239,191,189,97,239,191,189,239,191,189,67,196,173,109,16,239,191,189,4,72,239,191,189,239,191,189,10,239,191,189,18,24,89,19,239,191,189,52,239,191,189,12,12,239,191,189,12,52,239,191,189,31,24,239,191,189,57,239,191,189,105,239,191,189,93,1,50,239,191,189,239,191,189,78,109,239,191,189,239,191,189,15,22,127,239,191,189,59,239,191,189,82,7,239,191,189,218,138,239,191,189,111,239,191,189,121,239,191,189,239,191,189,239,191,189,108,15,239,191,189,68,239,191,189,105,17,239,191,189,239,191,189,69,239,191,189,199,153,97,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,68,50,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,84,119,123,7,62,239,191,189,23,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,106,239,191,189,64,41,239,191,189,239,191,189,239,191,189,239,191,189,57,13,239,191,189,39,239,191,189,64,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,12,75,239,191,189,34,113,239,191,189,35,239,191,189,12,239,191,189,66,239,191,189,112,76,239,191,189,101,239,191,189,127,24,18,239,191,189,62,110,91,23,239,191,189,239,191,189,56,18,239,191,189,61,212,137,239,191,189,94,239,191,189,239,191,189,7,51,239,191,189,239,191,189,3,45,83,105,103,108,239,191,189,239,191,189,125,239,191,189,108,10,239,191,189,97,239,191,189,239,191,189,54,11,239,191,189,239,191,189,239,191,189,17,124,109,54,239,191,189,239,191,189,8,239,191,189,239,191,189,75,27,116,239,191,189,17,26,239,191,189,124,239,191,189,81,239,191,189,12,239,191,189,201,161,110,239,191,189,239,191,189,119,239,191,189,239,191,189,38,239,191,189,86,27,239,191,189,239,191,189,48,239,191,189,7,239,191,189,239,191,189,75,32,239,191,189,115,212,188,239,191,189,68,91,12,239,191,189,239,191,189,23,5,239,191,189,239,191,189,239,191,189,50,93,58,64,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,67,239,191,189,127,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,11,51,239,191,189,239,191,189,48,25,62,21,43,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,239,191,189,127,77,239,191,189,91,27,37,71,69,239,191,189,239,191,189,103,239,191,189,239,191,189,47,13,5,3,196,168,239,191,189,239,191,189,23,239,191,189,239,191,189,25,48,239,191,189,75,26,48,239,191,189,123,239,191,189,12,239,191,189,239,191,189,239,191,189,67,20,239,191,189,239,191,189,239,191,189,48,239,191,189,51,239,191,189,31,116,119,239,191,189,124,53,9,239,191,189,239,191,189,103,239,191,189,239,191,189,65,239,191,189,85,239,191,189,42,239,191,189,239,191,189,239,191,189,125,239,191,189,39,64,239,191,189,239,191,189,239,191,189,0,15,239,191,189,14,239,191,189,26,16,91,239,191,189,122,239,191,189,239,191,189,113,82,37,35,53,239,191,189,1,41,239,191,189,239,191,189,239,191,189,101,239,191,189,71,96,239,191,189,239,191,189,79,96,239,191,189,239,191,189,84,239,191,189,215,128,239,191,189,70,38,239,191,189,239,191,189,40,239,191,189,22,64,122,75,87,239,191,189,239,191,189,114,239,191,189,239,191,189,22,5,105,239,191,189,104,105,239,191,189,109,239,191,189,239,191,189,25,239,191,189,36,29,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,79,100,239,191,189,20,75,80,93,239,191,189,239,191,189,239,191,189,61,239,191,189,109,239,191,189,57,239,191,189,108,109,109,239,191,189,239,191,189,30,28,92,239,191,189,9,239,191,189,95,239,191,189,239,191,189,56,113,51,115,50,3,239,191,189,239,191,189,34,58,39,43,239,191,189,37,239,191,189,9,239,191,189,90,239,191,189,110,239,191,189,55,46,94,48,72,111,115,66,115,239,191,189,4,26,239,191,189,239,191,189,109,239,191,189,239,191,189,53,64,239,191,189,74,50,124,107,36,239,191,189,124,239,191,189,40,56,4,63,116,87,58,5,20,1,239,191,189,45,51,239,191,189,239,191,189,41,39,239,191,189,96,20,239,191,189,239,191,189,239,191,189,36,106,239,191,189,239,191,189,4,239,191,189,239,191,189,11,82,239,191,189,239,191,189,25,58,239,191,189,196,165,110,239,191,189,104,239,191,189,239,191,189,122,19,239,191,189,105,107,82,68,69,239,191,189,104,239,191,189,66,96,239,191,189,239,191,189,239,191,189,239,191,189,53,83,33,239,191,189,105,58,86,198,140,48,98,57,239,191,189,51,0,13,239,191,189,87,22,44,239,191,189,95,239,191,189,198,187,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,217,173,91,20,239,191,189,239,191,189,17,239,191,189,59,239,191,189,239,191,189,34,239,191,189,12,239,191,189,239,191,189,239,191,189,65,83,54,125,239,191,189,239,191,189,239,191,189,239,191,189,114,47,239,191,189,239,191,189,118,239,191,189,23,115,95,68,38,31,60,55,239,191,189,126,218,137,239,191,189,61,205,185,23,239,191,189,24,239,191,189,239,191,189,239,191,189,113,36,25,239,191,189,32,80,239,191,189,100,40,197,179,43,10,109,239,191,189,95,239,191,189,239,191,189,4,27,239,191,189,239,191,189,239,191,189,10,226,182,165,118,239,191,189,13,93,89,44,53,2,59,43,104,239,191,189,239,191,189,52,85,21,214,142,51,95,12,239,191,189,239,191,189,112,239,191,189,106,68,113,73,15,239,191,189,105,239,191,189,47,239,191,189,27,104,89,239,191,189,239,191,189,107,114,52,87,239,191,189,24,239,191,189,105,239,191,189,239,191,189,52,84,239,191,189,70,106,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,64,99,102,58,239,191,189,124,239,191,189,94,243,153,131,139,239,191,189,121,239,191,189,239,191,189,200,131,219,135,239,191,189,100,239,191,189,239,191,189,239,191,189,123,239,191,189,60,239,191,189,218,128,24,239,191,189,21,239,191,189,38,3,110,24,239,191,189,239,191,189,37,82,239,191,189,89,239,191,189,38,79,239,191,189,22,239,191,189,110,64,5,239,191,189,219,158,116,73,50,239,191,189,83,123,24,25,107,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,107,35,239,191,189,239,191,189,18,239,191,189,239,191,189,82,84,66,90,239,191,189,18,18,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,114,239,191,189,57,239,191,189,239,191,189,239,191,189,117,239,191,189,39,61,110,2,28,67,239,191,189,201,169,239,191,189,239,191,189,221,168,239,191,189,239,191,189,6,7,239,191,189,239,191,189,75,239,191,189,50,74,51,239,191,189,86,79,23,239,191,189,62,239,191,189,115,223,148,50,239,191,189,239,191,189,15,239,191,189,239,191,189,120,50,223,176,47,8,36,121,239,191,189,51,239,191,189,89,239,191,189,41,7,239,191,189,239,191,189,59,125,239,191,189,239,191,189,239,191,189,239,191,189,106,51,239,191,189,239,191,189,19,239,191,189,30,98,239,191,189,239,191,189,119,239,191,189,115,83,239,191,189,3,125,50,239,191,189,27,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,60,239,191,189,104,239,191,189,239,191,189,65,116,125,239,191,189,10,17,239,191,189,239,191,189,209,183,239,191,189,110,86,239,191,189,239,191,189,90,55,239,191,189,239,191,189,30,239,191,189,76,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,49,50,239,191,189,27,86,115,32,35,63,239,191,189,239,191,189,239,191,189,32,95,239,191,189,239,191,189,65,48,239,191,189,96,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,89,239,191,189,83,239,191,189,239,191,189,36,98,239,191,189,62,239,191,189,115,239,191,189,124,121,3,18,239,191,189,239,191,189,239,191,189,65,239,191,189,209,132,120,75,61,69,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,58,239,191,189,239,191,189,3,79,6,239,191,189,117,105,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,56,24,13,239,191,189,22,13,239,191,189,36,126,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,56,239,191,189,239,191,189,25,61,122,203,151,2,239,191,189,194,175,239,191,189,239,191,189,217,151,239,191,189,239,191,189,239,191,189,1,30,239,191,189,97,114,87,68,12,42,14,117,239,191,189,239,191,189,21,239,191,189,239,191,189,41,6,30,218,147,239,191,189,127,10,239,191,189,97,239,191,189,200,139,2,70,61,201,141,126,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,15,195,154,73,10,239,191,189,239,191,189,239,191,189,239,191,189,91,75,239,191,189,239,191,189,106,16,239,191,189,124,239,191,189,40,239,191,189,56,8,113,239,191,189,239,191,189,1,219,129,91,239,191,189,37,22,239,191,189,125,239,191,189,52,126,239,191,189,82,239,191,189,239,191,189,239,191,189,49,50,30,40,239,191,189,116,58,125,239,191,189,119,239,191,189,84,6,81,3,91,9,239,191,189,15,71,17,54,53,239,191,189,5,239,191,189,113,83,239,191,189,239,191,189,239,191,189,17,239,191,189,49,64,100,239,191,189,239,191,189,239,191,189,12,33,99,56,239,191,189,52,40,239,191,189,76,48,35,120,125,239,191,189,83,239,191,189,239,191,189,239,191,189,117,34,97,3,239,191,189,127,239,191,189,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,47,239,191,189,3,38,239,191,189,239,191,189,239,191,189,116,221,160,37,34,218,135,89,107,74,107,69,102,90,239,191,189,239,191,189,9,57,239,191,189,75,239,191,189,239,191,189,112,13,58,239,191,189,239,191,189,72,239,191,189,239,191,189,45,24,239,191,189,103,0,68,239,191,189,239,191,189,196,165,101,71,68,109,105,239,191,189,57,48,120,69,239,191,189,239,191,189,202,178,239,191,189,239,191,189,108,239,191,189,239,191,189,66,62,239,191,189,239,191,189,29,82,71,239,191,189,90,114,239,191,189,43,117,62,239,191,189,64,3,239,191,189,109,87,103,239,191,189,91,239,191,189,64,78,75,239,191,189,17,239,191,189,44,239,191,189,50,98,39,239,191,189,124,79,22,239,191,189,58,239,191,189,6,111,239,191,189,118,239,191,189,239,191,189,239,191,189,105,239,191,189,124,57,239,191,189,111,91,30,239,191,189,4,239,191,189,48,72,239,191,189,239,191,189,56,67,220,190,38,195,179,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,99,110,60,118,239,191,189,239,191,189,239,191,189,52,94,115,18,239,191,189,10,239,191,189,108,198,150,51,239,191,189,14,239,191,189,239,191,189,99,239,191,189,27,74,239,191,189,111,68,17,65,126,66,239,191,189,43,108,239,191,189,74,85,6,239,191,189,101,63,122,96,19,4,93,38,67,239,191,189,19,111,49,120,239,191,189,239,191,189,239,191,189,239,191,189,60,18,239,191,189,25,97,239,191,189,9,199,167,64,89,239,191,189,239,191,189,89,8,200,132,117,239,191,189,51,8,70,72,72,0,123,46,15,16,109,113,239,191,189,239,191,189,109,25,239,191,189,45,75,222,170,87,76,92,28,239,191,189,111,239,191,189,239,191,189,102,105,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,123,25,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,124,63,19,239,191,189,57,239,191,189,62,220,187,239,191,189,43,124,239,191,189,239,191,189,115,239,191,189,239,191,189,121,45,239,191,189,49,239,191,189,35,42,239,191,189,50,239,191,189,8,93,239,191,189,34,78,6,123,49,123,82,205,186,239,191,189,239,191,189,239,191,189,25,12,239,191,189,239,191,189,239,191,189,24,46,81,14,239,191,189,239,191,189,36,239,191,189,239,191,189,27,239,191,189,239,191,189,6,239,191,189,53,127,36,239,191,189,239,191,189,117,20,239,191,189,239,191,189,85,218,191,239,191,189,239,191,189,94,127,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,98,239,191,189,239,191,189,77,95,105,239,191,189,13,125,83,239,191,189,70,239,191,189,239,191,189,115,124,54,239,191,189,52,0,31,53,100,100,4,94,55,92,239,191,189,92,115,239,191,189,99,47,239,191,189,91,78,239,191,189,239,191,189,239,191,189,11,115,114,11,239,191,189,239,191,189,239,191,189,39,53,98,239,191,189,16,83,97,239,191,189,239,191,189,84,239,191,189,90,11,239,191,189,86,75,32,239,191,189,87,239,191,189,239,191,189,24,45,239,191,189,14,62,239,191,189,239,191,189,239,191,189,88,239,191,189,51,239,191,189,16,39,94,239,191,189,98,72,2,239,191,189,239,191,189,6,100,61,239,191,189,73,239,191,189,39,81,43,51,239,191,189,55,49,29,52,3,1,21,108,239,191,189,239,191,189,239,191,189,16,38,119,239,191,189,47,239,191,189,102,124,14,239,191,189,239,191,189,13,17,239,191,189,97,45,239,191,189,64,239,191,189,113,44,239,191,189,69,92,239,191,189,9,42,239,191,189,97,50,239,191,189,239,191,189,239,191,189,10,84,22,106,239,191,189,239,191,189,58,239,191,189,36,14,71,36,12,107,239,191,189,239,191,189,33,43,93,118,239,191,189,106,239,191,189,26,239,191,189,38,194,175,27,239,191,189,74,48,13,6,116,74,239,191,189,70,239,191,189,73,239,191,189,126,239,191,189,54,21,239,191,189,239,191,189,239,191,189,20,239,191,189,17,105,98,239,191,189,58,239,191,189,53,79,239,191,189,94,120,59,239,191,189,72,239,191,189,22,22,5,239,191,189,88,16,239,191,189,111,20,239,191,189,81,239,191,189,5,4,41,3,239,191,189,239,191,189,239,191,189,239,191,189,206,132,203,138,21,115,87,93,239,191,189,74,239,191,189,57,114,239,191,189,239,191,189,239,191,189,200,187,124,54,239,191,189,77,239,191,189,239,191,189,1,239,191,189,74,239,191,189,53,116,239,191,189,5,125,239,191,189,71,239,191,189,58,108,66,239,191,189,239,191,189,18,68,239,191,189,102,239,191,189,56,6,97,50,59,239,191,189,16,239,191,189,239,191,189,239,191,189,226,136,139,41,108,40,91,239,191,189,229,187,143,239,191,189,15,239,191,189,91,121,223,178,239,191,189,9,239,191,189,82,81,68,239,191,189,3,57,239,191,189,239,191,189,239,191,189,239,191,189,198,167,87,239,191,189,115,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,81,117,239,191,189,102,49,239,191,189,239,191,189,119,239,191,189,95,53,58,239,191,189,239,191,189,36,33,239,191,189,239,191,189,210,146,239,191,189,104,101,119,239,191,189,107,239,191,189,239,191,189,32,239,191,189,0,95,239,191,189,239,191,189,55,239,191,189,90,90,239,191,189,6,239,191,189,79,239,191,189,239,191,189,239,191,189,125,239,191,189,52,239,191,189,239,191,189,18,239,191,189,32,23,94,239,191,189,15,103,239,191,189,239,191,189,71,2,87,239,191,189,95,214,146,239,171,150,199,142,44,203,149,239,191,189,239,191,189,109,239,191,189,69,239,191,189,102,55,90,239,191,189,111,63,239,191,189,239,191,189,77,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,234,159,136,46,239,191,189,239,191,189,100,84,239,191,189,239,191,189,49,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,1,88,94,24,239,191,189,239,191,189,46,12,239,191,189,239,191,189,8,239,191,189,239,191,189,90,61,239,191,189,8,90,96,10,239,191,189,15,239,191,189,28,239,191,189,84,87,21,239,191,189,46,239,191,189,239,191,189,239,191,189,65,239,191,189,70,42,22,42,239,191,189,53,72,239,191,189,20,40,206,172,4,239,191,189,1,195,162,239,191,189,239,191,189,239,191,189,127,65,61,239,191,189,127,25,45,108,239,191,189,114,44,239,191,189,113,239,191,189,239,191,189,239,191,189,48,239,191,189,212,162,41,239,191,189,239,191,189,13,239,191,189,83,106,239,191,189,107,88,239,191,189,195,149,239,191,189,239,191,189,239,191,189,217,170,45,28,27,121,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,113,5,16,8,200,186,77,47,239,191,189,44,239,191,189,79,1,85,239,191,189,104,26,122,47,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,61,107,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,178,239,191,189,46,12,239,191,189,239,191,189,239,191,189,1,109,239,191,189,119,16,31,57,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,126,87,239,191,189,24,91,16,239,191,189,41,108,239,191,189,239,191,189,103,110,239,191,189,239,191,189,239,191,189,75,35,49,110,239,191,189,239,191,189,74,239,191,189,56,79,29,50,204,166,47,14,239,191,189,239,191,189,88,90,11,22,239,191,189,239,191,189,229,168,149,115,11,16,239,191,189,96,239,191,189,82,239,191,189,97,80,74,54,239,191,189,13,239,191,189,239,191,189,12,239,191,189,93,239,191,189,201,177,239,191,189,112,103,90,239,191,189,53,114,239,191,189,239,191,189,11,239,191,189,215,176,39,239,191,189,239,191,189,239,191,189,121,239,191,189,205,189,239,191,189,239,191,189,95,77,71,54,239,191,189,239,191,189,83,75,207,170,89,239,191,189,49,239,191,189,40,208,151,239,191,189,239,191,189,43,8,53,19,239,191,189,95,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,12,59,239,191,189,239,191,189,15,52,239,191,189,32,45,87,239,191,189,123,196,134,239,191,189,66,239,191,189,20,212,155,86,24,51,127,69,97,112,104,239,191,189,102,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,33,239,191,189,239,191,189,107,239,191,189,8,239,191,189,26,239,191,189,112,93,57,239,191,189,29,239,191,189,27,14,239,191,189,239,191,189,7,127,239,191,189,239,191,189,239,191,189,87,60,126,239,191,189,2,239,191,189,239,191,189,106,20,239,191,189,239,191,189,122,71,48,111,15,119,100,97,239,191,189,19,46,58,239,191,189,239,191,189,127,120,62,38,239,191,189,25,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,37,0,96,100,239,191,189,239,191,189,66,239,191,189,26,39,239,191,189,239,191,189,41,1,239,191,189,105,239,191,189,124,239,191,189,67,239,191,189,239,191,189,36,239,191,189,126,28,196,133,239,191,189,77,114,85,32,9,58,48,35,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,112,48,24,234,169,155,98,239,191,189,114,4,239,191,189,239,191,189,112,59,239,191,189,85,239,191,189,125,96,239,191,189,205,180,102,239,191,189,31,199,189,70,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,94,101,50,27,239,191,189,72,239,191,189,0,81,113,106,239,191,189,239,191,189,77,86,239,191,189,126,239,191,189,25,48,239,191,189,202,137,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,105,239,191,189,21,221,134,119,239,191,189,98,118,239,191,189,21,239,191,189,20,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,7,28,32,111,97,239,191,189,239,191,189,239,191,189,103,57,10,44,239,191,189,110,239,191,189,239,191,189,85,239,191,189,110,239,191,189,101,74,28,106,125,26,7,239,191,189,107,21,239,191,189,23,35,59,239,191,189,77,239,191,189,239,191,189,124,239,191,189,239,191,189,20,39,40,107,110,26,69,45,89,95,15,88,34,27,239,191,189,0,239,191,189,239,191,189,71,239,191,189,239,191,189,111,81,83,239,191,189,8,239,191,189,239,191,189,55,239,191,189,112,239,191,189,239,191,189,81,35,239,191,189,239,191,189,14,0,194,136,18,239,191,189,213,190,1,32,239,191,189,76,214,180,52,239,191,189,4,239,191,189,239,191,189,239,191,189,119,102,90,96,239,191,189,33,239,191,189,239,191,189,121,47,202,153,13,239,191,189,239,191,189,70,45,86,93,239,191,189,126,53,7,239,191,189,24,77,97,239,191,189,59,64,239,191,189,78,29,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,4,54,68,239,191,189,86,52,63,31,239,191,189,239,191,189,112,239,191,189,71,57,87,66,94,239,191,189,72,69,239,191,189,239,191,189,99,56,65,29,74,239,191,189,47,58,239,191,189,239,191,189,96,107,239,191,189,71,239,191,189,54,72,239,191,189,13,65,39,76,239,191,189,64,101,20,239,191,189,69,74,239,191,189,26,239,191,189,48,77,239,191,189,12,239,191,189,57,239,191,189,80,239,191,189,78,239,191,189,77,219,163,15,81,39,115,100,55,126,239,191,189,23,104,1,239,191,189,54,40,239,191,189,239,182,177,239,191,189,59,73,117,239,191,189,15,239,191,189,239,191,189,81,239,191,189,239,191,189,42,239,191,189,113,239,191,189,239,191,189,34,118,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,5,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,109,239,191,189,100,105,122,45,239,191,189,24,61,14,46,239,191,189,113,239,191,189,239,191,189,63,239,191,189,54,239,191,189,239,191,189,239,191,189,63,24,239,191,189,72,239,191,189,75,239,191,189,102,54,85,239,191,189,23,29,239,191,189,239,191,189,18,76,239,191,189,239,191,189,239,191,189,239,191,189,102,127,82,239,191,189,14,239,191,189,88,239,191,189,102,23,239,191,189,239,191,189,46,105,239,191,189,32,239,191,189,239,191,189,23,239,191,189,7,239,191,189,69,239,191,189,84,112,44,45,239,191,189,55,5,239,191,189,24,216,152,59,92,239,191,189,61,14,13,61,239,191,189,239,191,189,74,61,87,55,60,44,26,239,191,189,239,191,189,239,191,189,95,239,191,189,12,62,96,239,191,189,239,191,189,43,74,46,18,239,191,189,239,191,189,85,208,154,239,191,189,3,239,191,189,9,239,191,189,239,191,189,239,191,189,116,99,23,24,239,191,189,239,191,189,29,98,39,39,121,239,191,189,47,29,127,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,75,118,2,102,239,191,189,103,22,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,58,239,191,189,17,239,191,189,215,159,239,191,189,239,191,189,106,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,10,239,191,189,23,239,191,189,22,239,191,189,79,26,6,100,239,191,189,239,191,189,239,191,189,214,151,66,54,26,239,191,189,239,191,189,44,239,191,189,15,116,239,191,189,38,104,54,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,195,168,110,42,239,191,189,11,75,77,239,191,189,239,191,189,40,239,191,189,100,77,239,191,189,1,27,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,37,24,90,115,107,239,191,189,83,33,239,191,189,127,239,191,189,239,191,189,124,239,191,189,127,239,191,189,239,191,189,39,19,45,63,99,91,69,15,239,191,189,109,23,239,191,189,62,31,239,191,189,127,4,239,191,189,82,239,191,189,223,183,111,239,191,189,68,31,239,191,189,239,191,189,61,239,191,189,94,41,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,46,92,239,191,189,239,191,189,10,78,117,95,239,191,189,44,119,239,191,189,45,12,239,191,189,112,239,191,189,86,239,191,189,67,118,239,191,189,239,191,189,109,15,239,191,189,239,191,189,93,239,191,189,41,239,191,189,30,29,83,105,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,17,17,13,116,239,191,189,239,191,189,239,191,189,12,17,106,239,191,189,113,239,191,189,239,191,189,239,191,189,53,239,191,189,28,111,24,239,191,189,239,191,189,110,89,239,191,189,217,162,96,92,26,239,191,189,5,239,191,189,239,191,189,115,239,191,189,96,239,191,189,239,191,189,51,97,239,191,189,23,83,51,239,191,189,239,191,189,239,191,189,239,191,189,222,178,239,191,189,239,191,189,239,191,189,202,140,239,191,189,239,191,189,239,191,189,35,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,152,54,239,191,189,239,191,189,60,42,59,239,191,189,36,110,27,38,33,13,239,191,189,104,126,103,239,191,189,127,8,37,239,191,189,29,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,31,114,77,239,191,189,51,239,191,189,45,9,118,239,191,189,74,218,165,30,239,191,189,239,191,189,239,191,189,22,38,51,49,239,191,189,7,102,239,191,189,114,79,239,191,189,39,73,92,17,239,191,189,61,78,239,191,189,239,191,189,78,239,191,189,88,58,117,239,191,189,82,52,45,127,200,149,31,108,239,191,189,4,239,191,189,239,191,189,239,191,189,106,239,191,189,2,239,191,189,58,239,191,189,239,191,189,45,42,56,239,191,189,104,239,191,189,223,180,55,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,23,8,220,164,13,92,239,191,189,239,191,189,61,239,191,189,75,24,30,239,191,189,239,191,189,239,191,189,40,239,191,189,67,23,239,191,189,239,191,189,107,53,123,54,239,191,189,239,191,189,239,191,189,95,205,179,104,239,191,189,81,239,191,189,43,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,35,239,191,189,63,40,220,141,53,95,219,142,97,239,191,189,239,191,189,40,239,191,189,194,143,206,136,60,239,191,189,75,106,80,239,191,189,113,239,191,189,207,181,55,239,191,189,20,239,191,189,73,87,239,191,189,91,239,191,189,19,39,127,239,191,189,239,191,189,37,7,59,239,191,189,92,85,239,191,189,80,66,26,239,191,189,239,191,189,239,191,189,68,239,191,189,109,107,239,191,189,101,239,191,189,239,191,189,239,191,189,76,239,191,189,93,239,191,189,78,103,239,191,189,239,191,189,96,239,191,189,239,191,189,89,68,73,127,239,191,189,69,122,239,191,189,239,191,189,239,191,189,33,74,127,66,108,99,239,191,189,61,25,85,76,126,239,191,189,71,76,239,191,189,6,99,239,191,189,239,191,189,239,191,189,239,191,189,18,127,0,239,191,189,238,163,165,235,191,190,2,82,239,191,189,19,81,12,239,191,189,91,18,35,239,191,189,239,191,189,12,198,142,55,122,239,191,189,115,239,191,189,84,29,64,87,55,0,66,239,191,189,117,4,239,191,189,46,239,191,189,239,191,189,124,104,117,56,58,239,191,189,105,54,117,239,191,189,39,122,114,57,23,239,191,189,40,239,191,189,119,56,106,239,191,189,18,122,239,191,189,81,239,191,189,51,239,191,189,13,239,191,189,116,1,125,73,38,239,191,189,66,126,121,30,29,239,191,189,239,191,189,48,239,191,189,239,191,189,8,239,191,189,239,191,189,220,172,239,191,189,94,36,239,191,189,85,239,191,189,92,239,191,189,48,53,80,103,11,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,25,76,60,104,74,31,239,191,189,239,191,189,239,191,189,39,49,223,189,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,64,239,191,189,124,67,239,191,189,24,239,191,189,239,191,189,239,191,189,62,239,191,189,68,239,191,189,91,239,191,189,61,37,111,239,191,189,41,54,44,239,191,189,214,156,62,32,43,0,215,181,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,92,59,239,191,189,4,95,239,191,189,86,239,191,189,24,239,191,189,111,239,191,189,54,239,191,189,10,114,239,191,189,108,239,191,189,217,158,239,191,189,239,191,189,103,3,18,87,94,35,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,27,239,191,189,61,19,88,103,239,191,189,239,191,189,239,191,189,239,191,189,87,70,110,47,239,191,189,37,239,191,189,70,56,1,76,41,239,191,189,239,191,189,54,70,118,18,72,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,39,23,123,109,203,154,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,82,239,191,189,42,239,191,189,239,191,189,126,239,191,189,18,239,191,189,201,178,5,239,191,189,113,239,191,189,121,78,239,191,189,239,191,189,50,239,191,189,57,239,191,189,52,239,191,189,239,191,189,239,191,189,83,239,191,189,28,127,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,227,174,136,14,94,100,118,239,191,189,90,239,191,189,121,124,22,5,239,191,189,8,25,20,239,191,189,68,103,239,191,189,64,239,191,189,70,239,191,189,51,59,239,191,189,239,191,189,9,239,191,189,95,239,191,189,239,191,189,33,43,124,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,47,6,121,239,191,189,83,121,239,191,189,212,170,239,191,189,88,110,239,191,189,199,177,48,58,5,124,239,191,189,239,191,189,28,54,36,86,239,191,189,239,191,189,37,12,103,239,191,189,239,191,189,22,239,191,189,239,191,189,77,49,100,118,217,180,72,239,191,189,22,88,99,202,159,239,191,189,239,191,189,28,239,191,189,14,18,239,191,189,85,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,48,102,239,191,189,239,191,189,11,119,239,191,189,239,191,189,24,106,239,191,189,103,239,191,189,64,239,191,189,239,191,189,206,134,15,110,212,190,239,191,189,4,239,191,189,100,239,191,189,239,191,189,239,191,189,124,42,22,24,33,55,118,239,191,189,239,191,189,40,16,37,4,102,29,239,191,189,239,191,189,86,239,191,189,239,191,189,43,40,239,191,189,239,191,189,239,191,189,32,10,239,191,189,53,18,55,14,63,239,191,189,239,191,189,81,239,191,189,122,9,23,239,191,189,15,93,239,191,189,72,239,191,189,87,239,191,189,89,239,191,189,94,239,191,189,239,191,189,80,1,239,191,189,86,239,191,189,22,107,5,239,191,189,21,239,191,189,23,239,191,189,121,86,89,12,62,77,239,191,189,38,28,203,144,121,239,191,189,239,191,189,79,83,64,103,239,191,189,41,102,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,212,133,71,38,49,10,239,191,189,100,0,239,191,189,108,16,29,239,191,189,52,54,239,191,189,239,191,189,239,191,189,78,28,239,191,189,72,239,191,189,239,191,189,239,191,189,94,221,145,239,191,189,239,191,189,84,90,28,82,239,191,189,239,191,189,105,72,239,191,189,239,191,189,239,191,189,83,88,239,191,189,239,191,189,11,239,191,189,103,239,191,189,211,163,29,239,191,189,239,191,189,34,60,239,191,189,40,67,239,191,189,1,239,191,189,113,91,24,239,191,189,1,95,239,191,189,239,191,189,239,191,189,239,191,189,21,99,49,93,239,191,189,54,239,191,189,117,3,239,191,189,239,191,189,54,239,191,189,239,191,189,47,89,239,191,189,65,5,10,239,191,189,24,239,191,189,239,191,189,239,191,189,18,10,85,239,191,189,239,191,189,70,14,7,64,93,239,191,189,76,239,191,189,239,191,189,97,3,239,191,189,206,182,114,239,191,189,0,116,47,68,239,191,189,75,239,191,189,10,123,25,123,239,191,189,239,191,189,35,239,191,189,84,239,191,189,41,116,239,191,189,46,117,47,106,13,3,79,239,191,189,7,92,73,43,239,191,189,1,17,239,191,189,37,239,191,189,17,239,191,189,127,239,191,189,239,191,189,67,73,87,22,205,137,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,68,239,191,189,54,239,191,189,239,191,189,239,191,189,3,30,239,191,189,80,106,239,191,189,18,66,47,37,23,121,91,49,239,191,189,239,191,189,33,239,191,189,239,191,189,26,89,124,239,191,189,239,191,189,239,191,189,78,239,191,189,80,95,78,75,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,72,239,191,189,70,127,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,122,208,169,239,191,189,44,104,119,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,55,8,121,40,200,165,239,191,189,239,191,189,239,191,189,239,191,189,21,32,239,191,189,205,170,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,79,5,70,239,191,189,117,239,191,189,47,85,239,191,189,239,191,189,239,191,189,77,116,73,239,191,189,239,191,189,123,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,22,72,239,191,189,239,191,189,239,191,189,239,191,189,20,8,88,239,191,189,4,239,191,189,2,50,239,191,189,83,220,150,126,42,239,191,189,83,239,191,189,65,239,191,189,239,191,189,24,63,21,64,239,191,189,197,128,36,47,72,239,191,189,21,77,91,239,191,189,239,191,189,105,85,112,98,209,172,239,191,189,101,86,30,127,239,191,189,2,239,191,189,117,239,191,189,47,11,239,191,189,239,191,189,239,191,189,23,40,62,103,239,191,189,3,79,239,191,189,239,191,189,72,34,239,191,189,2,239,191,189,124,239,191,189,32,5,108,91,239,191,189,239,191,189,70,239,191,189,33,108,239,191,189,51,239,191,189,66,122,239,191,189,239,191,189,82,45,49,239,191,189,239,191,189,197,143,239,191,189,92,20,0,239,191,189,239,191,189,239,191,189,14,5,116,121,66,45,119,239,191,189,239,191,189,239,191,189,239,191,189,124,108,239,191,189,5,239,191,189,239,191,189,26,239,191,189,78,239,191,189,38,18,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,33,239,191,189,218,131,239,191,189,60,6,76,239,191,189,36,239,191,189,56,110,55,17,23,89,239,191,189,207,181,73,239,191,189,65,239,191,189,15,239,191,189,239,191,189,88,210,156,14,197,154,4,239,191,189,239,191,189,8,201,161,126,117,115,239,191,189,102,239,191,189,219,177,239,191,189,239,191,189,239,191,189,11,52,125,59,81,48,116,239,191,189,73,84,239,191,189,77,82,26,41,239,191,189,239,191,189,12,117,112,239,191,189,6,19,239,191,189,112,239,191,189,17,239,191,189,48,24,239,191,189,0,239,191,189,37,239,191,189,239,191,189,72,94,239,191,189,113,116,25,127,76,239,191,189,40,32,126,60,15,62,239,191,189,58,32,7,4,32,239,191,189,203,130,31,203,191,49,85,239,191,189,239,191,189,44,239,191,189,79,96,62,89,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,107,32,239,191,189,90,198,165,30,239,191,189,239,191,189,239,191,189,239,191,189,48,82,239,191,189,89,78,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,0,75,55,36,122,125,89,200,131,213,140,95,239,191,189,87,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,200,170,41,239,191,189,83,50,57,207,161,239,191,189,239,191,189,239,191,189,126,113,239,191,189,14,239,191,189,239,191,189,239,191,189,14,96,239,191,189,15,91,239,191,189,73,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,88,239,191,189,85,33,239,191,189,239,191,189,72,68,239,191,189,38,239,191,189,27,239,191,189,239,191,189,45,126,239,191,189,69,95,107,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,9,119,66,239,191,189,45,239,191,189,212,165,37,239,191,189,239,191,189,239,191,189,8,239,191,189,90,239,191,189,215,168,49,63,239,191,189,104,239,191,189,119,15,45,98,122,8,36,239,191,189,83,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,239,191,189,70,73,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,16,37,93,81,105,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,1,239,191,189,201,153,110,239,191,189,239,191,189,33,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,124,16,239,191,189,106,239,191,189,199,155,80,196,134,38,239,191,189,54,239,191,189,239,191,189,118,235,172,186,4,49,101,239,191,189,197,134,94,59,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,14,239,191,189,239,191,189,58,3,120,239,191,189,239,191,189,195,162,239,191,189,48,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,75,239,191,189,34,239,191,189,227,132,140,239,191,189,32,47,239,191,189,49,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,10,239,191,189,109,239,191,189,239,191,189,2,24,3,8,239,191,189,239,191,189,12,54,239,191,189,10,88,239,191,189,231,145,187,239,191,189,239,191,189,239,191,189,27,18,239,191,189,113,239,191,189,25,59,239,191,189,0,239,191,189,239,191,189,13,239,191,189,239,191,189,90,46,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,112,40,35,24,31,82,116,239,191,189,239,191,189,50,113,239,191,189,239,191,189,12,127,44,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,197,188,239,191,189,84,36,53,239,191,189,239,191,189,49,45,60,122,216,148,104,239,191,189,95,51,239,191,189,239,191,189,239,191,189,114,70,76,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,114,13,59,93,91,81,239,191,189,79,127,239,191,189,67,64,239,191,189,117,123,51,239,191,189,239,191,189,15,69,239,191,189,239,191,189,239,191,189,79,82,118,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,117,61,239,191,189,108,239,191,189,54,12,239,191,189,97,239,191,189,37,239,191,189,88,50,239,191,189,239,191,189,84,239,191,189,80,239,191,189,239,191,189,117,38,239,191,189,72,239,191,189,11,239,191,189,239,191,189,121,12,239,191,189,239,191,189,78,202,132,239,191,189,15,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,25,239,191,189,31,239,191,189,47,239,191,189,239,191,189,24,10,0,22,63,36,239,191,189,43,39,239,191,189,239,191,189,215,159,239,191,189,10,104,239,191,189,44,69,22,239,191,189,40,118,239,191,189,66,239,191,189,46,239,191,189,239,191,189,239,191,189,37,74,119,239,191,189,239,191,189,67,239,191,189,109,107,239,191,189,230,136,144,239,191,189,239,191,189,13,34,101,239,191,189,239,191,189,126,239,191,189,126,12,239,191,189,111,239,191,189,119,239,191,189,239,191,189,64,52,239,191,189,239,191,189,95,239,191,189,239,191,189,199,158,239,191,189,239,191,189,91,48,20,239,191,189,206,148,53,239,191,189,239,191,189,9,52,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,43,72,92,1,95,239,191,189,96,239,191,189,36,24,96,239,191,189,239,191,189,77,239,191,189,88,239,191,189,219,159,239,191,189,45,239,191,189,12,52,239,191,189,60,102,239,191,189,239,191,189,24,67,239,191,189,239,191,189,102,4,239,191,189,59,239,191,189,52,239,191,189,68,54,239,191,189,27,239,191,189,239,191,189,210,171,217,151,239,191,189,127,239,191,189,32,239,191,189,122,59,39,2,35,71,110,239,191,189,12,239,191,189,102,239,191,189,40,73,43,28,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,21,106,239,191,189,23,77,46,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,16,64,213,137,239,191,189,70,57,239,191,189,239,191,189,98,239,191,189,122,239,191,189,239,191,189,239,191,189,209,173,74,239,191,189,236,185,140,86,96,239,191,189,16,101,68,239,191,189,239,191,189,239,191,189,8,45,239,191,189,215,184,108,239,191,189,239,191,189,91,28,239,191,189,87,105,239,191,189,61,239,191,189,31,26,239,191,189,239,191,189,69,239,191,189,239,191,189,87,239,191,189,126,41,239,191,189,53,211,180,32,239,191,189,19,114,239,191,189,66,10,239,191,189,100,239,191,189,239,191,189,55,239,191,189,239,191,189,52,237,141,160,37,70,41,239,191,189,239,191,189,84,239,191,189,79,63,35,58,66,239,191,189,116,239,191,189,103,239,191,189,239,191,189,86,95,121,239,191,189,21,64,104,37,239,191,189,73,13,93,127,239,191,189,239,191,189,89,16,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,116,2,239,191,189,33,239,191,189,43,239,191,189,105,89,127,239,191,189,45,38,124,49,239,191,189,83,239,191,189,239,191,189,61,65,225,164,168,239,191,189,239,191,189,100,239,191,189,239,191,189,59,239,191,189,239,191,189,116,5,239,191,189,46,239,191,189,70,105,121,239,191,189,239,191,189,4,239,191,189,239,191,189,109,51,239,191,189,91,239,191,189,17,1,15,239,191,189,51,33,66,239,191,189,122,25,199,181,239,191,189,30,239,191,189,0,239,191,189,33,239,191,189,2,71,12,84,53,239,191,189,239,191,189,221,164,239,191,189,57,111,207,158,58,42,239,191,189,239,191,189,209,132,239,191,189,239,191,189,79,239,191,189,239,191,189,24,239,191,189,117,239,191,189,239,191,189,18,239,191,189,89,90,4,239,191,189,239,191,189,9,239,191,189,68,239,191,189,71,65,239,191,189,239,191,189,22,81,239,191,189,120,239,191,189,79,81,22,239,191,189,64,4,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,92,17,69,239,191,189,37,70,239,191,189,239,191,189,58,64,79,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,222,129,239,191,189,239,191,189,108,66,239,191,189,196,168,86,75,18,77,109,239,191,189,239,191,189,77,239,191,189,239,191,189,113,239,191,189,80,239,191,189,51,20,16,239,191,189,56,239,191,189,95,239,191,189,239,191,189,4,81,50,239,191,189,239,191,189,239,191,189,2,33,97,239,191,189,87,114,40,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,84,36,239,191,189,239,191,189,239,191,189,239,191,189,92,123,239,191,189,13,73,239,191,189,91,84,73,28,96,239,191,189,239,191,189,64,239,191,189,80,108,239,191,189,115,239,191,189,239,191,189,29,239,191,189,104,239,191,189,7,239,191,189,239,191,189,105,239,191,189,239,191,189,124,49,239,191,189,73,239,191,189,239,191,189,83,84,239,191,189,22,211,170,239,191,189,111,208,165,239,191,189,48,4,239,191,189,239,191,189,66,239,191,189,239,191,189,62,239,191,189,30,36,66,239,191,189,106,239,191,189,105,89,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,24,94,239,191,189,239,191,189,24,114,32,239,191,189,25,97,96,239,191,189,101,38,239,191,189,57,99,43,10,239,191,189,123,47,18,50,239,191,189,239,191,189,64,107,239,191,189,5,222,156,239,191,189,77,239,191,189,125,239,191,189,35,239,191,189,239,191,189,117,38,10,239,191,189,55,239,191,189,239,191,189,67,114,239,191,189,103,239,191,189,239,191,189,85,59,239,191,189,76,119,239,191,189,48,50,239,191,189,109,20,239,191,189,239,191,189,239,191,189,23,239,191,189,105,239,191,189,64,239,191,189,62,123,85,36,49,239,191,189,3,98,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,18,239,191,189,49,34,37,119,239,191,189,239,191,189,239,191,189,239,191,189,92,114,239,191,189,110,239,191,189,8,10,38,23,239,191,189,239,191,189,239,191,189,239,191,189,26,124,239,191,189,239,191,189,53,239,191,189,239,191,189,117,63,21,64,5,239,191,189,56,125,27,11,239,191,189,239,191,189,239,191,189,45,212,136,47,239,191,189,63,239,191,189,239,191,189,119,44,0,239,191,189,44,239,191,189,22,239,191,189,42,239,191,189,100,3,42,239,191,189,29,92,239,191,189,105,239,191,189,207,140,11,11,9,29,73,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,204,184,239,191,189,19,21,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,97,65,239,191,189,114,239,191,189,239,191,189,43,239,191,189,239,191,189,79,32,72,108,32,239,191,189,239,191,189,239,191,189,94,209,177,96,239,191,189,110,55,114,239,191,189,9,71,15,239,191,189,23,239,191,189,239,191,189,26,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,45,78,239,191,189,239,191,189,111,239,191,189,239,191,189,30,239,191,189,239,191,189,122,80,39,239,191,189,239,191,189,210,128,239,191,189,42,239,191,189,239,191,189,239,191,189,56,114,239,191,189,81,117,47,57,12,118,67,239,191,189,50,239,191,189,201,139,2,239,191,189,22,41,41,239,191,189,239,191,189,93,239,191,189,239,191,189,26,239,191,189,239,191,189,215,189,239,191,189,239,191,189,84,108,57,239,191,189,64,125,239,191,189,239,191,189,3,13,63,93,13,8,239,191,189,239,191,189,58,239,191,189,239,191,189,99,93,239,191,189,21,6,239,191,189,90,57,84,53,239,191,189,99,3,239,191,189,46,92,82,38,239,191,189,239,191,189,58,125,239,191,189,239,191,189,79,78,45,13,239,191,189,239,191,189,217,131,71,42,60,239,191,189,239,191,189,35,239,191,189,122,35,239,191,189,87,239,191,189,75,239,191,189,59,239,191,189,223,172,239,191,189,214,138,239,191,189,239,191,189,239,191,189,2,197,184,239,191,189,76,76,100,91,52,27,239,191,189,85,55,239,191,189,46,81,53,116,239,191,189,37,239,191,189,77,239,191,189,18,97,46,64,77,3,239,191,189,72,239,191,189,86,75,239,191,189,94,28,239,191,189,239,191,189,103,239,191,189,88,23,239,191,189,98,118,239,191,189,32,115,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,55,30,12,22,88,58,239,191,189,47,239,191,189,239,191,189,239,191,189,52,84,239,191,189,30,50,239,191,189,53,23,239,191,189,239,191,189,31,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,62,118,239,191,189,239,191,189,91,239,191,189,239,191,189,220,187,51,118,239,191,189,99,239,191,189,80,0,239,191,189,219,142,3,127,8,239,191,189,76,239,191,189,239,191,189,61,218,149,21,127,105,75,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,88,92,125,116,203,188,54,45,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,54,239,191,189,93,33,110,239,191,189,37,71,239,191,189,239,191,189,13,112,239,191,189,18,239,191,189,85,7,24,55,91,38,239,191,189,120,239,191,189,239,191,189,48,7,239,191,189,239,191,189,69,239,191,189,98,239,191,189,12,90,61,76,239,191,189,84,239,191,189,239,191,189,17,239,191,189,239,191,189,103,91,239,191,189,36,239,191,189,78,200,187,239,191,189,65,113,239,191,189,8,239,191,189,86,61,239,191,189,119,87,96,8,239,191,189,194,177,239,191,189,84,9,68,196,128,239,191,189,21,239,191,189,239,191,189,112,111,50,239,191,189,17,239,191,189,124,239,191,189,107,239,191,189,239,191,189,53,239,191,189,108,23,31,10,239,191,189,86,239,191,189,239,191,189,239,191,189,76,108,70,69,239,191,189,239,191,189,78,105,91,239,191,189,88,21,239,191,189,10,239,191,189,102,239,191,189,239,191,189,25,24,86,21,239,191,189,31,66,215,172,97,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,91,239,191,189,239,191,189,67,2,63,58,220,177,239,191,189,13,106,239,191,189,3,114,239,191,189,239,191,189,66,54,239,191,189,39,3,239,191,189,74,239,191,189,239,191,189,239,191,189,105,97,16,36,62,239,191,189,90,239,191,189,32,239,191,189,83,214,172,67,239,191,189,82,239,191,189,239,191,189,41,88,44,72,16,239,191,189,239,191,189,239,191,189,88,75,239,191,189,86,102,64,67,115,80,117,239,191,189,43,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,114,89,239,191,189,239,191,189,114,239,191,189,239,191,189,32,80,123,116,77,239,191,189,2,239,191,189,114,125,239,191,189,104,239,191,189,65,221,181,239,191,189,32,239,191,189,239,191,189,239,191,189,66,239,191,189,78,22,239,191,189,239,191,189,239,191,189,1,97,239,191,189,121,82,239,191,189,239,191,189,116,239,191,189,16,239,191,189,239,191,189,19,80,1,239,191,189,113,20,48,124,239,191,189,42,82,239,191,189,37,94,13,239,191,189,38,54,57,28,239,191,189,113,28,239,191,189,239,191,189,239,191,189,125,65,239,191,189,64,239,191,189,15,9,239,191,189,239,191,189,241,164,131,165,239,191,189,239,191,189,118,11,55,239,191,189,239,191,189,83,239,191,189,239,191,189,35,78,239,191,189,214,137,57,239,191,189,52,8,206,130,239,191,189,239,151,181,60,66,239,191,189,103,239,191,189,28,49,239,191,189,239,191,189,239,191,189,103,55,102,239,191,189,87,89,239,191,189,239,191,189,79,239,191,189,239,191,189,70,56,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,35,19,239,191,189,239,191,189,85,239,191,189,95,239,191,189,239,191,189,68,239,191,189,239,191,189,21,71,33,2,59,79,239,191,189,116,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,9,108,239,191,189,95,239,191,189,239,191,189,110,123,239,191,189,88,16,239,191,189,239,191,189,239,191,189,239,191,189,69,121,239,191,189,69,48,239,191,189,95,239,191,189,239,191,189,109,239,191,189,64,59,7,36,8,239,191,189,3,85,74,9,239,191,189,118,92,239,191,189,239,191,189,239,191,189,126,239,191,189,43,100,239,191,189,239,191,189,56,239,191,189,38,6,126,239,191,189,24,12,97,239,191,189,239,191,189,50,115,125,79,127,239,191,189,89,239,191,189,239,191,189,3,115,239,191,189,239,191,189,36,239,191,189,215,166,8,49,111,2,64,239,191,189,2,18,60,60,61,239,191,189,207,132,239,191,189,20,116,89,0,90,239,191,189,125,22,120,239,191,189,34,35,239,191,189,239,191,189,62,239,191,189,43,239,191,189,43,239,191,189,121,60,47,51,127,77,109,239,191,189,101,27,239,191,189,239,191,189,126,239,191,189,112,19,239,191,189,239,191,189,125,239,191,189,239,191,189,26,239,191,189,111,29,239,191,189,111,24,239,191,189,72,17,29,239,191,189,239,191,189,56,239,191,189,69,37,239,191,189,13,61,211,177,92,239,191,189,77,239,191,189,208,137,42,41,75,12,48,93,94,68,239,191,189,21,239,191,189,239,191,189,84,239,191,189,29,9,239,191,189,48,225,137,151,206,165,95,111,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,31,239,191,189,17,115,62,217,147,239,191,189,16,239,191,189,48,239,191,189,40,239,191,189,82,239,191,189,29,239,191,189,70,239,191,189,91,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,69,112,61,239,191,189,239,191,189,239,191,189,67,206,189,239,191,189,239,191,189,4,73,239,191,189,239,191,189,63,211,143,239,191,189,72,36,239,191,189,112,88,239,191,189,120,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,34,80,239,191,189,14,239,191,189,96,32,239,191,189,239,191,189,18,239,191,189,105,92,239,191,189,22,31,97,239,191,189,239,191,189,239,191,189,239,191,189,40,95,97,106,90,239,191,189,10,239,191,189,27,239,191,189,239,191,189,24,77,239,191,189,62,63,57,61,82,80,194,176,102,239,191,189,112,23,94,239,191,189,197,135,239,191,189,56,107,13,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,103,38,80,15,239,191,189,239,191,189,239,191,189,39,239,191,189,64,239,191,189,34,120,239,191,189,239,191,189,239,191,189,66,96,239,191,189,6,239,191,189,205,144,239,191,189,64,239,191,189,76,10,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,31,8,110,239,191,189,239,191,189,96,88,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,74,65,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,214,146,211,143,117,43,239,191,189,239,191,189,47,239,191,189,58,239,191,189,239,191,189,33,51,116,239,191,189,239,191,189,85,53,83,239,191,189,239,191,189,102,110,239,191,189,50,239,191,189,100,239,191,189,124,56,53,29,14,205,132,104,69,239,191,189,239,191,189,239,191,189,79,239,191,189,15,80,239,191,189,239,191,189,11,37,239,191,189,239,191,189,121,3,56,75,239,191,189,109,32,239,191,189,239,191,189,239,191,189,239,191,189,64,93,1,239,191,189,239,191,189,19,101,239,191,189,47,239,191,189,239,191,189,79,84,58,25,86,30,239,191,189,239,191,189,239,191,189,63,239,191,189,202,191,50,239,191,189,239,191,189,37,23,71,124,239,191,189,239,191,189,105,15,116,13,239,191,189,234,143,165,53,239,191,189,6,239,191,189,239,191,189,16,239,191,189,23,2,239,191,189,104,102,85,79,239,191,189,66,239,191,189,239,191,189,80,63,239,191,189,239,191,189,46,239,191,189,99,239,191,189,43,239,191,189,72,239,191,189,20,1,239,191,189,10,32,239,191,189,239,191,189,126,0,239,191,189,239,191,189,239,191,189,69,239,191,189,93,239,191,189,20,239,191,189,239,191,189,239,191,189,11,12,63,102,92,239,191,189,239,191,189,16,79,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,102,120,75,47,239,191,189,101,9,221,157,239,191,189,217,162,124,115,239,191,189,239,191,189,107,239,191,189,125,125,7,194,136,239,191,189,56,239,191,189,239,191,189,46,7,204,173,48,239,191,189,239,191,189,239,191,189,11,201,144,17,101,2,46,239,191,189,239,191,189,239,191,189,69,91,239,191,189,112,34,122,37,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,125,239,191,189,13,218,177,24,123,239,191,189,33,239,191,189,41,239,191,189,48,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,78,82,27,43,239,191,189,46,239,191,189,39,87,239,191,189,239,191,189,239,191,189,111,239,191,189,31,239,191,189,21,239,191,189,115,57,126,213,131,37,116,3,83,104,28,239,191,189,116,239,191,189,4,49,42,239,191,189,239,191,189,65,239,191,189,75,84,239,191,189,82,9,78,239,191,189,239,191,189,16,33,206,178,19,239,191,189,83,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,10,101,79,77,18,107,239,191,189,239,191,189,239,191,189,52,94,239,191,189,239,191,189,42,84,48,28,37,127,239,191,189,88,239,191,189,35,239,191,189,96,34,239,191,189,239,191,189,91,239,191,189,41,239,191,189,239,191,189,239,191,189,74,27,2,239,191,189,59,24,8,27,61,239,191,189,83,34,239,191,189,41,35,239,191,189,217,145,22,60,12,15,66,239,191,189,239,191,189,239,191,189,239,191,189,33,10,239,191,189,72,7,239,191,189,57,45,96,239,191,189,103,239,191,189,60,239,191,189,239,191,189,122,62,106,239,191,189,239,191,189,239,191,189,233,152,147,107,239,191,189,58,216,129,239,191,189,76,93,22,239,191,189,27,239,191,189,239,191,189,218,177,73,239,191,189,112,120,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,6,239,191,189,239,191,189,50,92,239,191,189,55,114,32,239,191,189,44,239,191,189,96,239,191,189,239,191,189,239,191,189,9,127,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,62,239,191,189,76,112,239,191,189,239,191,189,239,191,189,10,239,191,189,31,123,33,239,191,189,43,239,191,189,239,191,189,239,191,189,29,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,37,21,239,191,189,239,191,189,43,74,239,191,189,239,191,189,199,130,60,22,33,239,191,189,65,48,111,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,92,102,51,239,191,189,34,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,54,94,80,239,191,189,239,191,189,55,8,19,28,239,191,189,66,239,191,189,99,239,191,189,71,239,191,189,120,51,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,9,62,239,191,189,239,191,189,118,44,239,191,189,239,191,189,223,152,221,165,239,191,189,2,239,191,189,64,25,239,191,189,208,180,239,191,189,239,191,189,15,239,191,189,117,63,239,191,189,66,122,239,191,189,239,191,189,95,239,191,189,121,9,239,191,189,239,191,189,68,111,55,94,100,239,191,189,239,191,189,85,34,239,191,189,239,191,189,83,239,191,189,239,191,189,99,201,163,239,191,189,22,47,239,191,189,54,53,68,104,94,239,191,189,126,239,191,189,67,239,191,189,239,191,189,65,239,191,189,17,239,191,189,85,117,63,47,93,82,239,191,189,239,191,189,239,191,189,239,191,189,204,144,239,191,189,59,239,191,189,239,191,189,21,239,191,189,56,1,26,239,191,189,85,59,239,191,189,91,96,2,239,191,189,98,239,191,189,81,48,77,63,239,191,189,0,239,191,189,54,239,191,189,58,85,239,191,189,239,191,189,20,239,191,189,127,5,20,44,26,216,151,59,121,239,191,189,239,191,189,239,191,189,59,239,191,189,94,115,239,191,189,62,102,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,124,53,239,191,189,121,239,191,189,18,239,191,189,239,191,189,11,5,63,96,67,239,191,189,31,239,191,189,214,129,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,59,239,191,189,119,16,37,205,151,38,89,239,191,189,239,191,189,62,40,239,191,189,239,191,189,219,191,47,239,191,189,239,191,189,69,61,239,191,189,239,191,189,73,31,79,109,51,239,191,189,19,22,239,191,189,46,62,199,154,239,191,189,239,191,189,61,110,25,6,72,20,239,191,189,124,17,239,191,189,239,191,189,58,239,191,189,239,191,189,32,80,239,191,189,77,239,191,189,239,191,189,5,126,41,239,191,189,113,239,191,189,204,172,239,191,189,239,191,189,6,64,11,103,100,20,43,54,58,239,191,189,104,239,191,189,61,239,191,189,113,239,191,189,89,82,113,239,191,189,63,122,239,191,189,239,191,189,194,191,68,38,239,191,189,98,72,52,239,191,189,239,191,189,239,191,189,239,191,189,46,83,94,11,36,239,191,189,18,239,191,189,94,98,64,111,239,191,189,196,140,121,59,26,70,239,191,189,79,29,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,112,51,31,239,191,189,12,239,191,189,126,6,239,191,189,101,239,191,189,120,104,0,239,191,189,95,127,212,164,239,191,189,239,191,189,239,191,189,239,191,189,104,67,33,49,17,239,191,189,239,191,189,59,31,37,57,239,191,189,42,66,239,191,189,99,239,191,189,69,239,191,189,239,191,189,239,191,189,97,239,191,189,35,78,239,191,189,68,38,239,191,189,96,239,191,189,3,239,191,189,57,239,191,189,111,239,191,189,109,88,59,42,239,191,189,82,46,239,191,189,100,28,239,191,189,112,18,239,191,189,79,74,36,7,117,239,191,189,239,191,189,105,239,191,189,63,239,191,189,84,54,239,191,189,239,191,189,29,121,239,191,189,239,191,189,45,73,239,191,189,239,191,189,124,239,191,189,239,191,189,41,40,52,239,191,189,77,70,239,191,189,86,21,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,62,239,191,189,34,1,121,64,239,191,189,9,20,89,65,94,239,191,189,112,14,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,126,239,191,189,45,239,191,189,239,191,189,96,239,191,189,15,239,191,189,239,191,189,84,239,191,189,111,1,239,191,189,197,145,239,191,189,72,53,107,239,191,189,117,23,239,191,189,239,191,189,239,191,189,105,69,239,191,189,239,191,189,95,239,191,189,84,122,13,231,163,169,239,191,189,34,97,123,239,191,189,52,63,107,34,239,191,189,51,90,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,21,29,239,191,189,41,239,191,189,204,171,239,191,189,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,4,74,18,9,116,239,191,189,239,191,189,88,73,239,191,189,239,191,189,17,107,85,6,46,239,191,189,239,191,189,209,133,239,191,189,78,239,191,189,239,191,189,239,191,189,71,62,93,80,239,191,189,239,191,189,85,108,239,191,189,14,119,118,26,4,50,196,152,34,108,239,191,189,96,86,239,191,189,70,239,191,189,79,13,105,61,239,191,189,26,113,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,209,129,239,191,189,239,191,189,46,43,239,191,189,239,191,189,79,239,191,189,80,239,191,189,9,0,239,191,189,72,2,77,18,93,5,85,201,142,201,159,49,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,14,207,141,239,191,189,117,74,84,81,239,191,189,239,191,189,95,116,239,191,189,124,239,191,189,89,88,123,239,191,189,16,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,100,89,239,191,189,32,55,239,191,189,239,191,189,89,63,67,239,191,189,115,239,191,189,127,58,119,239,191,189,64,38,239,191,189,99,16,17,239,191,189,239,191,189,77,22,94,239,191,189,127,212,134,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,207,185,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,55,239,191,189,127,222,186,239,191,189,92,239,191,189,84,71,10,239,191,189,239,191,189,123,239,191,189,239,191,189,110,74,239,191,189,88,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,26,239,191,189,239,191,189,222,136,49,239,191,189,26,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,3,31,239,191,189,124,51,62,31,68,239,191,189,239,191,189,239,191,189,239,191,189,51,96,110,203,129,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,119,30,83,239,191,189,114,92,9,239,191,189,59,239,191,189,239,191,189,125,239,191,189,239,191,189,86,59,219,140,109,65,239,191,189,239,191,189,68,239,191,189,48,14,218,168,94,239,191,189,62,44,239,191,189,94,239,191,189,239,191,189,239,191,189,10,111,93,123,239,191,189,5,42,239,191,189,20,85,203,131,0,239,191,189,122,108,96,239,191,189,44,239,191,189,239,191,189,239,191,189,65,32,62,239,191,189,66,239,191,189,91,65,223,133,239,191,189,239,191,189,22,70,107,96,66,42,239,191,189,62,239,191,189,8,203,187,44,239,191,189,239,191,189,115,57,30,239,191,189,239,191,189,88,239,191,189,27,91,239,191,189,239,191,189,239,191,189,50,65,239,191,189,118,69,239,191,189,24,239,191,189,51,1,239,191,189,76,1,23,115,239,191,189,56,84,239,191,189,116,239,191,189,20,239,191,189,8,239,191,189,239,191,189,20,239,191,189,57,43,15,239,191,189,67,103,239,191,189,239,191,189,194,146,239,191,189,239,191,189,20,239,191,189,239,191,189,113,57,209,186,239,191,189,239,191,189,239,191,189,239,191,189,7,34,239,191,189,17,30,89,201,181,123,239,191,189,239,191,189,239,191,189,8,239,191,189,68,8,239,191,189,101,118,60,239,191,189,206,156,96,239,191,189,100,118,239,191,189,239,191,189,15,239,191,189,239,191,189,90,72,7,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,10,37,239,191,189,20,239,191,189,127,239,191,189,239,191,189,32,27,111,239,191,189,60,57,239,191,189,41,22,239,191,189,239,191,189,239,191,189,239,191,189,107,45,239,191,189,71,239,191,189,239,191,189,79,67,239,191,189,239,191,189,67,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,119,57,239,191,189,11,239,191,189,17,239,191,189,63,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,121,239,191,189,72,239,191,189,94,116,117,15,84,48,239,191,189,239,191,189,32,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,4,239,191,189,16,70,239,191,189,36,127,41,26,239,191,189,98,239,191,189,239,191,189,19,47,239,191,189,88,239,191,189,88,1,58,14,239,191,189,239,191,189,239,191,189,120,34,64,5,60,49,119,239,191,189,239,191,189,239,191,189,77,239,191,189,24,239,191,189,81,239,191,189,43,21,38,239,191,189,239,191,189,239,191,189,104,239,191,189,10,54,30,196,152,239,191,189,239,191,189,32,58,104,55,2,62,36,221,164,239,191,189,239,191,189,239,191,189,59,239,191,189,14,64,239,191,189,7,113,15,239,191,189,239,191,189,77,77,239,191,189,239,191,189,239,191,189,239,191,189,5,18,239,191,189,21,50,239,191,189,45,82,239,191,189,239,191,189,78,81,7,56,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,76,239,191,189,39,119,239,191,189,108,239,191,189,27,239,191,189,72,239,191,189,41,215,146,56,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,68,239,191,189,31,7,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,5,239,191,189,239,191,189,96,239,191,189,100,239,191,189,58,239,191,189,239,191,189,64,102,7,5,8,111,59,58,59,122,38,239,191,189,111,42,239,191,189,239,191,189,67,239,191,189,7,116,239,191,189,85,239,191,189,103,239,191,189,82,41,96,66,76,239,191,189,78,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,42,25,239,191,189,73,93,239,191,189,239,191,189,35,32,1,50,95,239,191,189,239,191,189,106,239,191,189,82,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,3,74,107,32,14,84,239,191,189,239,191,189,239,191,189,109,43,239,191,189,105,239,191,189,117,239,191,189,30,44,239,191,189,27,89,41,239,191,189,61,29,239,191,189,47,6,207,142,59,95,239,191,189,69,19,72,118,21,239,191,189,8,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,202,182,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,45,83,9,97,239,191,189,239,191,189,197,155,19,239,191,189,46,239,191,189,109,54,239,191,189,239,191,189,120,99,34,239,191,189,239,191,189,37,19,62,239,191,189,239,191,189,239,191,189,239,191,189,6,28,239,191,189,224,162,189,239,191,189,97,69,22,229,133,133,46,239,191,189,5,93,127,61,41,119,30,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,77,120,239,191,189,44,239,191,189,67,239,191,189,17,236,140,148,0,239,191,189,23,30,12,239,191,189,108,42,101,99,14,239,191,189,64,91,239,191,189,88,239,191,189,109,61,239,191,189,36,239,191,189,239,191,189,19,239,191,189,49,239,191,189,239,191,189,66,239,191,189,239,191,189,24,239,191,189,239,191,189,60,69,95,239,191,189,239,191,189,210,130,83,90,239,191,189,63,239,191,189,239,191,189,239,191,189,103,239,191,189,197,164,239,191,189,239,191,189,112,3,239,191,189,3,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,84,30,63,239,191,189,239,191,189,239,191,189,107,111,208,163,108,239,191,189,54,239,191,189,239,191,189,49,88,239,191,189,12,105,54,123,57,76,92,239,191,189,239,191,189,213,174,107,116,239,191,189,73,239,191,189,79,239,191,189,39,239,191,189,239,191,189,239,191,189,67,42,239,191,189,95,239,191,189,46,26,77,21,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,1,239,191,189,239,191,189,100,46,239,191,189,239,191,189,239,191,189,61,53,9,102,239,191,189,49,37,12,239,191,189,239,191,189,239,191,189,45,239,191,189,123,239,191,189,12,239,191,189,74,37,239,191,189,239,191,189,117,239,191,189,52,84,239,191,189,217,173,104,59,48,239,191,189,106,16,223,152,40,76,117,102,239,191,189,239,191,189,11,50,111,239,191,189,239,191,189,214,181,239,191,189,239,191,189,121,239,191,189,3,239,191,189,104,239,191,189,18,59,88,120,239,191,189,239,191,189,239,191,189,212,137,41,107,239,191,189,115,239,191,189,239,191,189,239,191,189,87,239,191,189,119,239,191,189,2,239,191,189,239,191,189,83,215,178,239,191,189,75,115,239,191,189,103,72,119,239,191,189,22,16,28,239,191,189,41,94,97,93,239,191,189,124,26,239,191,189,65,239,191,189,239,191,189,239,191,189,118,35,80,239,191,189,239,191,189,44,63,5,239,191,189,239,191,189,239,191,189,93,96,239,191,189,239,191,189,34,105,239,191,189,239,191,189,239,191,189,105,239,191,189,24,96,239,191,189,0,127,56,239,191,189,113,239,191,189,100,239,191,189,96,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,77,56,113,4,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,53,13,109,56,69,45,44,239,191,189,204,190,127,15,239,191,189,239,191,189,81,126,42,239,191,189,239,191,189,239,191,189,27,124,27,125,239,191,189,91,239,191,189,239,191,189,239,191,189,64,85,239,191,189,106,116,83,239,191,189,239,191,189,239,191,189,194,189,17,74,239,191,189,239,191,189,98,11,70,239,191,189,60,239,191,189,239,191,189,208,133,222,184,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,104,239,191,189,106,239,191,189,65,239,191,189,239,191,189,106,13,239,191,189,239,191,189,10,50,239,191,189,239,191,189,67,80,97,239,191,189,114,98,15,31,239,191,189,239,191,189,98,239,191,189,46,239,191,189,60,93,22,239,191,189,37,26,239,191,189,125,4,239,191,189,99,239,191,189,211,144,212,134,100,43,78,239,191,189,36,116,114,25,6,239,191,189,74,1,239,191,189,239,191,189,239,191,189,60,108,239,191,189,239,191,189,239,191,189,115,103,239,191,189,74,239,191,189,93,7,239,191,189,14,124,60,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,7,24,233,163,165,31,239,191,189,239,191,189,124,126,71,239,191,189,39,121,18,239,191,189,239,191,189,18,239,191,189,239,191,189,3,239,191,189,239,191,189,108,125,10,239,191,189,82,239,191,189,73,79,239,191,189,9,92,101,239,191,189,239,191,189,80,239,191,189,72,31,239,191,189,85,239,191,189,239,191,189,36,239,191,189,3,42,239,191,189,239,191,189,35,0,55,239,191,189,63,80,124,38,239,191,189,239,191,189,56,239,191,189,50,47,239,191,189,239,191,189,239,191,189,19,106,75,239,191,189,68,239,191,189,98,102,113,239,191,189,88,35,239,191,189,40,38,113,44,239,191,189,209,128,38,87,49,41,51,239,191,189,239,191,189,35,239,191,189,23,93,27,239,191,189,73,72,239,191,189,76,239,191,189,116,239,191,189,103,239,191,189,239,191,189,118,14,16,239,191,189,239,191,189,3,11,239,191,189,74,239,191,189,18,25,101,16,2,123,239,191,189,78,58,239,191,189,239,191,189,8,239,191,189,104,239,191,189,40,77,81,239,191,189,11,88,239,191,189,97,91,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,11,104,239,191,189,3,239,191,189,47,239,191,189,239,191,189,73,89,239,191,189,127,45,59,239,191,189,110,120,239,191,189,238,151,181,239,191,189,239,191,189,63,239,191,189,34,239,191,189,10,83,94,239,191,189,239,191,189,234,142,137,239,191,189,55,239,191,189,239,191,189,239,191,189,69,127,7,239,191,189,83,239,191,189,239,191,189,38,239,191,189,78,43,46,239,191,189,239,191,189,239,191,189,81,111,239,191,189,111,239,191,189,119,239,191,189,122,239,191,189,219,148,239,191,189,239,191,189,65,55,239,191,189,239,191,189,64,82,54,239,191,189,86,239,191,189,96,239,191,189,239,191,189,5,51,119,239,191,189,31,239,191,189,56,34,239,191,189,36,48,53,108,4,28,239,191,189,119,68,35,116,70,22,70,65,239,191,189,121,239,191,189,239,191,189,24,239,191,189,239,191,189,41,239,191,189,86,117,239,191,189,61,239,191,189,117,7,122,30,239,191,189,239,191,189,239,191,189,10,239,191,189,50,239,191,189,105,116,117,61,29,60,239,191,189,239,191,189,53,59,239,191,189,215,154,10,0,111,7,80,22,239,191,189,100,239,191,189,239,191,189,239,191,189,27,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,48,62,239,191,189,239,191,189,25,239,191,189,239,191,189,7,239,191,189,239,191,189,47,239,191,189,20,239,191,189,80,239,191,189,239,191,189,207,164,50,239,191,189,239,191,189,34,35,21,105,103,239,191,189,239,191,189,18,74,239,191,189,90,239,191,189,49,27,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,0,239,191,189,26,18,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,201,164,4,29,99,86,29,239,191,189,239,191,189,75,239,191,189,239,191,189,31,239,191,189,49,210,157,239,191,189,16,24,239,191,189,54,8,2,118,50,239,191,189,78,96,239,191,189,100,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,53,81,239,191,189,68,6,239,191,189,88,48,21,55,239,191,189,239,191,189,76,58,239,191,189,43,239,191,189,1,239,191,189,49,118,113,109,239,191,189,239,191,189,84,54,239,191,189,71,76,217,179,99,239,191,189,97,98,47,58,239,191,189,69,29,239,191,189,239,191,189,92,20,239,191,189,127,96,239,191,189,239,191,189,73,239,191,189,66,4,239,191,189,68,214,130,67,4,239,191,189,239,191,189,239,191,189,109,24,239,191,189,239,191,189,37,201,143,100,96,87,97,20,205,128,16,111,5,239,191,189,239,191,189,223,138,2,239,191,189,113,94,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,68,123,239,191,189,89,239,191,189,23,88,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,18,61,46,35,239,191,189,100,106,54,39,120,65,239,191,189,4,239,191,189,106,239,191,189,21,239,191,189,18,239,191,189,239,191,189,239,191,189,86,123,64,239,191,189,49,25,65,239,191,189,109,239,191,189,88,198,153,239,191,189,118,40,239,191,189,85,26,14,84,54,24,239,191,189,18,239,191,189,126,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,51,80,239,191,189,10,107,84,61,30,239,191,189,59,239,191,189,239,191,189,224,190,159,32,99,86,239,191,189,239,191,189,239,191,189,83,239,191,189,2,219,142,239,191,189,122,239,191,189,239,191,189,68,239,191,189,34,239,191,189,25,239,191,189,43,239,191,189,239,191,189,212,129,205,179,239,191,189,239,191,189,61,239,191,189,58,127,239,191,189,80,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,112,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,205,160,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,11,115,239,191,189,200,128,20,120,239,191,189,36,29,239,191,189,100,239,191,189,239,191,189,59,53,23,239,191,189,210,149,239,191,189,209,154,239,191,189,80,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,32,222,169,239,191,189,4,239,191,189,239,191,189,27,2,44,239,191,189,208,152,239,191,189,124,49,239,191,189,100,239,191,189,38,239,191,189,239,191,189,239,191,189,93,58,239,191,189,239,191,189,120,239,191,189,43,120,239,191,189,90,43,239,191,189,239,191,189,52,28,55,67,50,239,191,189,239,191,189,105,239,191,189,1,2,239,191,189,239,191,189,97,10,239,191,189,59,239,191,189,239,191,189,77,239,191,189,75,239,191,189,43,6,108,46,214,179,239,191,189,117,109,67,239,191,189,239,191,189,239,191,189,45,109,239,191,189,116,2,239,191,189,239,191,189,56,239,191,189,16,239,191,189,239,191,189,33,239,191,189,194,183,52,96,239,191,189,239,191,189,12,60,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,72,110,206,175,239,191,189,75,77,239,191,189,95,84,239,191,189,199,162,239,191,189,239,191,189,53,239,191,189,56,239,191,189,81,19,62,33,48,45,27,9,239,191,189,8,239,191,189,65,120,239,191,189,38,239,191,189,110,239,191,189,7,239,191,189,21,87,83,35,239,191,189,69,239,191,189,239,191,189,68,239,191,189,120,239,191,189,92,239,191,189,239,191,189,81,10,77,239,191,189,239,191,189,102,65,110,239,191,189,239,191,189,19,125,239,191,189,123,239,191,189,104,65,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,105,239,191,189,46,101,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,33,87,239,191,189,74,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,58,103,118,55,23,239,191,189,231,145,145,239,191,189,239,191,189,83,1,124,110,239,191,189,239,191,189,45,239,191,189,194,165,13,70,239,191,189,48,60,239,191,189,16,239,191,189,239,191,189,239,191,189,35,47,42,93,239,191,189,89,239,191,189,16,220,171,68,239,191,189,62,239,191,189,50,73,86,122,202,158,118,13,60,239,191,189,90,47,77,239,191,189,238,129,152,71,29,239,191,189,36,239,191,189,31,239,191,189,10,29,239,191,189,22,97,47,8,67,239,191,189,239,191,189,46,10,79,21,239,191,189,3,90,11,239,191,189,120,239,191,189,42,239,191,189,239,191,189,32,22,14,114,55,239,191,189,39,239,191,189,88,47,37,51,43,39,9,239,191,189,75,239,191,189,106,60,239,191,189,121,48,64,27,239,191,189,239,191,189,39,239,191,189,239,191,189,236,181,151,239,191,189,45,239,191,189,107,239,191,189,6,117,239,191,189,239,191,189,239,191,189,98,239,191,189,51,1,239,191,189,211,162,62,66,90,82,239,191,189,239,191,189,49,28,12,239,191,189,108,239,191,189,63,56,126,239,191,189,64,239,191,189,239,191,189,36,239,191,189,239,191,189,99,239,191,189,215,148,99,239,191,189,67,86,239,191,189,45,239,191,189,77,239,191,189,114,61,239,191,189,239,191,189,19,78,78,239,191,189,118,9,66,239,191,189,239,191,189,239,191,189,69,239,191,189,36,2,239,191,189,239,191,189,82,222,147,123,9,121,83,217,182,239,191,189,62,239,191,189,239,191,189,11,86,239,191,189,77,239,191,189,213,145,239,191,189,236,189,149,239,191,189,239,191,189,239,191,189,239,191,189,98,113,42,33,239,191,189,91,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,117,59,124,239,191,189,96,239,191,189,9,239,191,189,239,191,189,71,239,191,189,31,239,191,189,50,87,239,191,189,239,191,189,239,191,189,26,239,191,189,87,239,191,189,83,239,191,189,20,239,191,189,104,47,119,239,191,189,239,191,189,239,191,189,74,239,191,189,27,239,191,189,112,239,191,189,52,59,239,191,189,35,15,26,239,191,189,11,71,87,3,239,191,189,239,191,189,50,107,239,163,154,239,191,189,239,191,189,74,239,191,189,95,66,239,191,189,17,239,191,189,0,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,56,239,191,189,8,121,16,43,239,191,189,239,191,189,95,90,90,53,239,191,189,239,191,189,124,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,54,70,65,106,31,239,191,189,10,111,206,175,4,239,191,189,38,57,239,191,189,239,191,189,106,85,239,191,189,122,202,149,239,191,189,5,239,191,189,27,239,191,189,239,191,189,112,239,191,189,239,191,189,102,239,191,189,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,198,178,39,119,239,191,189,110,239,191,189,62,57,98,15,210,188,123,239,191,189,239,191,189,26,76,101,239,191,189,17,239,191,189,239,191,189,219,157,239,191,189,239,191,189,106,239,191,189,211,132,119,239,191,189,41,4,227,155,142,22,239,191,189,55,239,191,189,54,239,191,189,195,148,22,239,191,189,35,26,239,191,189,239,191,189,120,49,63,239,191,189,239,191,189,75,217,180,122,76,82,101,222,152,239,191,189,119,239,191,189,11,239,191,189,54,239,191,189,101,86,239,191,189,50,24,9,239,191,189,61,70,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,79,239,191,189,97,50,239,191,189,104,208,190,42,239,191,189,239,191,189,62,91,14,15,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,60,5,239,191,189,45,239,191,189,51,239,191,189,59,200,188,239,191,189,212,134,122,239,191,189,239,191,189,115,239,191,189,94,66,239,191,189,239,191,189,239,191,189,40,239,191,189,63,239,191,189,0,60,77,28,239,191,189,114,239,191,189,239,191,189,239,191,189,202,145,119,239,191,189,3,239,191,189,81,55,239,191,189,57,81,239,191,189,8,62,69,113,239,191,189,61,26,239,191,189,5,109,89,72,239,191,189,239,191,189,122,239,191,189,239,191,189,97,239,191,189,239,191,189,5,84,239,191,189,91,239,191,189,104,239,191,189,88,113,239,191,189,239,191,189,6,239,191,189,4,52,15,239,191,189,114,197,184,239,191,189,43,239,191,189,92,55,46,49,4,23,239,191,189,67,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,64,239,191,189,75,20,119,83,239,191,189,239,191,189,239,191,189,107,202,129,239,191,189,239,191,189,239,191,189,217,182,75,35,239,191,189,55,239,191,189,65,239,191,189,239,191,189,239,191,189,93,239,191,189,14,239,191,189,121,239,191,189,239,191,189,119,9,239,191,189,239,191,189,239,191,189,127,239,191,189,57,239,191,189,239,191,189,194,146,239,191,189,239,191,189,28,239,191,189,74,239,191,189,239,191,189,13,72,239,191,189,239,191,189,103,239,191,189,239,191,189,210,149,73,239,191,189,221,152,27,96,239,191,189,239,191,189,45,102,63,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,46,37,24,114,47,239,191,189,84,33,53,239,191,189,239,191,189,239,191,189,9,41,119,111,50,35,239,191,189,228,134,151,99,239,191,189,239,191,189,124,122,104,239,191,189,239,191,189,195,184,239,191,189,239,191,189,49,55,239,191,189,11,48,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,205,180,73,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,42,239,191,189,81,239,191,189,239,191,189,62,239,191,189,127,195,180,53,11,239,191,189,239,191,189,16,229,188,187,73,49,239,191,189,16,121,24,239,191,189,239,191,189,239,191,189,239,191,189,3,102,116,239,191,189,239,191,189,97,239,191,189,239,191,189,124,23,239,191,189,223,188,78,239,191,189,105,117,94,233,141,187,239,191,189,239,191,189,60,239,191,189,123,25,125,57,239,191,189,52,239,191,189,96,123,93,63,107,68,79,23,44,105,239,191,189,239,191,189,106,116,239,191,189,31,228,175,138,58,239,191,189,12,71,125,116,239,191,189,51,239,191,189,102,67,110,239,191,189,45,91,210,147,85,239,191,189,49,15,239,191,189,96,82,68,52,239,191,189,31,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,16,84,51,239,191,189,239,191,189,239,191,189,16,105,239,191,189,239,191,189,37,53,16,61,24,239,191,189,239,191,189,239,191,189,239,191,189,88,42,207,172,239,191,189,56,64,239,191,189,20,239,191,189,205,185,79,239,191,189,28,7,239,191,189,239,191,189,239,191,189,31,33,239,191,189,70,239,191,189,44,15,36,239,191,189,6,61,109,10,239,191,189,239,191,189,239,191,189,65,239,191,189,62,239,191,189,239,191,189,35,239,191,189,118,239,191,189,239,191,189,108,239,191,189,78,32,17,22,239,191,189,4,239,191,189,55,239,191,189,239,191,189,17,239,191,189,41,27,37,13,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,95,97,13,239,191,189,239,191,189,36,47,74,239,191,189,239,191,189,40,239,191,189,117,239,191,189,38,239,191,189,6,71,239,191,189,74,239,191,189,239,191,189,117,125,111,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,93,92,69,239,191,189,239,191,189,239,191,189,4,239,191,189,18,85,62,110,8,0,70,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,235,144,144,239,191,189,54,110,114,110,51,239,191,189,120,48,67,113,239,191,189,1,239,191,189,124,239,191,189,122,40,109,124,40,78,239,191,189,49,74,118,239,191,189,99,239,191,189,34,239,191,189,239,191,189,58,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,205,128,239,191,189,29,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,125,19,103,239,191,189,97,61,39,239,191,189,64,104,239,191,189,13,90,239,191,189,239,191,189,239,191,189,23,239,191,189,15,239,191,189,40,239,191,189,71,91,239,191,189,0,20,239,191,189,239,191,189,10,239,191,189,3,121,72,76,38,12,239,191,189,122,239,191,189,239,191,189,8,239,191,189,239,191,189,10,114,122,117,47,46,239,191,189,220,162,239,191,189,119,239,191,189,239,191,189,12,239,191,189,96,40,239,191,189,60,54,239,191,189,239,191,189,239,191,189,18,91,106,239,191,189,43,38,102,11,32,5,123,81,92,239,191,189,239,191,189,89,239,191,189,57,10,97,239,191,189,239,191,189,103,90,0,11,25,239,191,189,4,239,191,189,93,73,74,239,191,189,104,26,196,173,239,191,189,239,191,189,59,239,191,189,87,239,191,189,80,239,191,189,239,191,189,219,137,68,239,191,189,239,191,189,120,94,19,65,239,191,189,16,239,191,189,32,12,239,191,189,6,84,239,191,189,49,6,125,29,239,191,189,239,191,189,222,148,84,37,239,191,189,122,239,191,189,10,69,239,191,189,62,239,191,189,239,191,189,27,96,239,191,189,239,191,189,239,191,189,39,38,239,191,189,45,239,191,189,239,191,189,85,239,191,189,2,54,30,239,191,189,5,239,191,189,4,239,191,189,239,191,189,104,35,57,239,191,189,239,191,189,106,5,58,239,191,189,239,191,189,239,191,189,70,57,71,95,26,239,191,189,239,191,189,94,239,191,189,14,239,191,189,207,170,119,82,235,145,131,239,191,189,239,191,189,16,73,239,191,189,239,191,189,239,191,189,72,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,238,191,153,81,198,166,239,191,189,33,89,120,105,239,191,189,79,23,26,239,191,189,20,76,239,191,189,53,239,191,189,79,239,191,189,103,106,239,191,189,239,191,189,49,239,191,189,33,239,191,189,105,8,239,191,189,100,44,239,191,189,49,239,191,189,75,64,39,239,191,189,53,73,113,16,239,191,189,239,191,189,73,216,142,104,107,217,158,13,50,239,191,189,48,3,239,191,189,100,56,239,191,189,239,191,189,206,161,239,191,189,239,191,189,227,146,177,239,191,189,200,177,124,29,239,191,189,239,191,189,239,191,189,239,191,189,115,72,65,1,239,191,189,239,191,189,239,191,189,30,239,191,189,73,239,191,189,72,239,191,189,239,191,189,101,239,191,189,74,239,191,189,111,239,166,152,239,191,189,239,191,189,239,191,189,118,16,239,191,189,20,239,191,189,4,1,239,191,189,239,191,189,103,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,8,105,82,5,75,239,191,189,239,191,189,86,21,15,239,191,189,239,191,189,84,69,74,39,239,191,189,216,141,239,191,189,91,239,191,189,68,239,191,189,239,191,189,118,36,76,113,239,191,189,1,215,173,90,239,191,189,77,35,10,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,11,21,239,191,189,34,239,191,189,10,6,21,65,58,62,40,36,239,191,189,50,239,191,189,203,133,239,191,189,114,13,30,45,239,191,189,81,239,191,189,3,239,191,189,54,239,191,189,110,239,191,189,74,79,239,191,189,239,191,189,239,191,189,2,239,191,189,103,239,191,189,239,191,189,115,28,239,191,189,41,114,239,191,189,239,191,189,212,188,239,191,189,34,239,191,189,239,191,189,239,191,189,209,182,6,76,239,191,189,84,239,191,189,122,239,191,189,239,191,189,26,117,239,191,189,239,191,189,239,191,189,125,239,191,189,33,239,191,189,239,191,189,221,133,211,144,239,191,189,106,23,239,191,189,17,39,103,239,191,189,239,191,189,57,48,239,191,189,96,80,12,65,239,191,189,239,191,189,239,191,189,83,88,98,239,191,189,11,239,191,189,53,77,239,191,189,100,45,239,191,189,75,239,191,189,118,105,116,60,25,105,239,191,189,110,113,239,191,189,239,191,189,239,191,189,9,28,239,191,189,20,71,18,59,239,191,189,239,191,189,56,239,191,189,239,191,189,12,239,191,189,239,191,189,217,161,68,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,56,54,239,191,189,239,191,189,239,191,189,19,114,239,191,189,24,201,177,29,26,239,191,189,239,191,189,98,62,239,191,189,239,191,189,48,55,239,191,189,239,191,189,239,191,189,45,239,191,189,74,239,191,189,9,51,239,191,189,123,66,239,191,189,3,97,239,191,189,81,239,191,189,239,191,189,239,191,189,27,239,191,189,16,239,191,189,38,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,90,24,239,191,189,239,191,189,200,189,239,191,189,239,191,189,44,53,219,150,239,191,189,81,239,191,189,239,191,189,43,88,239,191,189,27,239,191,189,239,191,189,239,191,189,6,107,94,239,191,189,109,239,191,189,239,191,189,239,191,189,110,45,88,7,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,75,239,191,189,102,239,191,189,213,189,239,191,189,99,62,59,239,191,189,59,239,191,189,93,105,59,79,92,239,191,189,117,108,104,45,73,68,84,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,92,48,239,191,189,117,121,71,239,191,189,82,239,191,189,15,239,191,189,86,69,223,142,57,239,191,189,239,191,189,105,239,191,189,198,133,126,239,191,189,239,191,189,25,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,24,60,117,239,191,189,239,191,189,239,191,189,110,239,191,189,74,22,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,12,7,96,52,239,191,189,239,191,189,115,125,239,191,189,46,239,191,189,239,191,189,9,87,239,191,189,44,239,191,189,24,239,191,189,198,146,239,191,189,239,191,189,124,110,208,144,18,59,26,1,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,1,57,239,191,189,239,191,189,127,239,191,189,106,13,86,120,239,191,189,239,191,189,57,239,191,189,60,70,117,101,59,26,59,239,191,189,239,191,189,239,191,189,239,191,189,212,171,44,125,239,191,189,239,191,189,13,239,191,189,17,22,71,239,191,189,239,191,189,123,4,17,97,122,24,25,239,191,189,239,191,189,51,118,69,58,239,191,189,79,104,85,95,76,57,221,170,72,61,239,191,189,239,191,189,239,191,189,239,191,189,6,40,239,191,189,239,191,189,123,239,191,189,239,191,189,55,8,239,191,189,40,212,168,102,239,191,189,120,239,191,189,56,108,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,209,188,239,191,189,239,191,189,239,191,189,92,45,239,191,189,239,191,189,124,239,191,189,201,136,239,191,189,24,95,123,54,119,239,191,189,118,239,191,189,208,135,87,67,239,191,189,45,239,191,189,108,0,239,191,189,239,191,189,239,191,189,24,123,52,9,92,119,123,239,191,189,58,239,191,189,53,110,239,191,189,14,239,191,189,239,191,189,64,239,191,189,239,191,189,0,111,26,239,191,189,76,122,239,191,189,239,191,189,239,191,189,239,191,189,76,124,239,191,189,223,188,202,156,43,114,239,191,189,0,21,239,191,189,124,239,191,189,81,239,191,189,95,239,191,189,239,191,189,239,191,189,44,127,119,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,32,239,191,189,127,239,191,189,239,191,189,38,68,9,239,191,189,206,166,239,191,189,239,191,189,219,158,23,239,191,189,239,191,189,40,239,191,189,120,239,191,189,31,239,191,189,15,239,191,189,95,239,191,189,13,67,239,191,189,5,26,239,191,189,116,239,191,189,84,239,191,189,88,56,119,125,42,93,239,191,189,239,191,189,239,191,189,239,191,189,95,120,239,191,189,239,191,189,239,191,189,14,3,64,206,131,239,191,189,239,191,189,239,191,189,119,239,191,189,114,239,191,189,104,83,102,16,239,191,189,87,57,239,191,189,95,239,191,189,239,191,189,239,191,189,36,27,239,191,189,239,191,189,109,239,191,189,87,239,191,189,88,12,239,191,189,51,239,191,189,239,191,189,5,239,191,189,113,0,239,191,189,239,191,189,114,54,239,191,189,239,191,189,26,79,239,191,189,239,191,189,195,189,239,191,189,9,239,191,189,12,95,239,191,189,239,191,189,239,191,189,10,102,27,4,73,91,239,191,189,50,80,239,191,189,81,122,125,95,120,239,191,189,79,239,191,189,78,239,191,189,29,239,191,189,239,191,189,35,239,191,189,93,239,191,189,239,191,189,239,191,189,114,239,191,189,29,239,191,189,239,191,189,27,239,191,189,110,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,67,72,63,79,239,191,189,239,191,189,239,191,189,114,239,191,189,83,37,239,191,189,89,239,191,189,239,191,189,50,239,191,189,239,191,189,127,239,191,189,92,239,191,189,105,93,95,239,191,189,239,191,189,94,97,239,191,189,30,27,126,239,191,189,91,13,239,191,189,24,239,191,189,0,239,191,189,239,191,189,99,9,239,191,189,67,239,191,189,63,50,239,191,189,92,98,69,115,239,191,189,75,239,191,189,50,47,239,191,189,114,239,191,189,239,191,189,73,239,191,189,107,239,191,189,5,82,239,191,189,55,114,239,191,189,127,64,239,191,189,239,191,189,96,239,191,189,28,83,239,191,189,44,239,191,189,126,239,191,189,239,191,189,10,239,191,189,15,39,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,26,59,40,105,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,50,90,239,191,189,239,191,189,104,19,239,191,189,239,191,189,104,72,239,191,189,16,239,191,189,239,191,189,23,66,239,191,189,111,239,191,189,239,191,189,239,191,189,71,239,191,189,118,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,0,16,215,148,84,239,191,189,95,214,146,219,145,239,191,189,78,43,239,191,189,239,191,189,112,239,191,189,119,17,98,49,239,191,189,239,191,189,69,98,239,191,189,96,239,191,189,239,191,189,125,33,55,16,239,191,189,239,191,189,239,191,189,239,191,189,41,16,239,191,189,239,191,189,22,239,191,189,38,39,239,191,189,14,25,90,41,114,21,49,239,191,189,59,239,191,189,239,191,189,15,62,239,191,189,118,239,191,189,239,191,189,19,111,23,26,13,239,191,189,239,191,189,78,1,239,191,189,56,239,191,189,54,123,29,105,239,191,189,70,99,239,191,189,10,12,6,66,73,11,239,191,189,239,191,189,239,191,189,120,60,36,26,239,191,189,239,191,189,16,239,191,189,1,119,107,109,36,19,239,191,189,239,191,189,126,239,191,189,118,239,191,189,239,191,189,239,191,189,47,112,70,8,98,16,239,191,189,195,150,93,239,191,189,100,239,191,189,116,20,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,26,239,191,189,21,239,191,189,12,239,191,189,212,154,85,239,191,189,6,62,239,191,189,14,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,34,239,191,189,239,191,189,74,41,95,121,239,191,189,33,105,239,191,189,43,239,191,189,64,67,239,191,189,78,239,191,189,103,97,239,191,189,239,191,189,110,14,239,191,189,120,239,191,189,239,191,189,38,110,121,43,239,191,189,51,103,10,239,191,189,111,239,191,189,58,239,191,189,120,239,191,189,116,239,191,189,70,239,191,189,202,162,113,239,191,189,239,191,189,31,12,40,68,239,191,189,197,176,113,239,191,189,71,239,191,189,239,191,189,17,239,191,189,8,13,239,191,189,239,191,189,127,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,77,30,20,239,191,189,239,191,189,239,191,189,12,239,191,189,10,34,53,5,239,191,189,59,239,191,189,239,191,189,125,239,191,189,99,239,191,189,62,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,19,239,191,189,239,191,189,59,28,127,35,113,51,69,40,61,239,191,189,36,2,239,191,189,239,191,189,126,239,191,189,127,125,106,4,239,191,189,54,239,191,189,239,191,189,47,86,199,183,239,191,189,19,239,191,189,99,96,239,191,189,239,191,189,63,23,56,91,55,239,191,189,38,239,191,189,25,239,191,189,53,13,110,90,106,123,239,191,189,239,191,189,48,4,77,239,191,189,104,65,239,191,189,126,113,82,239,191,189,83,239,191,189,88,239,191,189,239,191,189,239,191,189,104,68,15,239,191,189,239,191,189,16,239,191,189,239,191,189,42,239,191,189,73,88,92,127,239,191,189,39,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,86,239,191,189,8,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,1,54,239,191,189,239,191,189,103,239,191,189,103,239,191,189,62,71,239,191,189,37,20,239,191,189,71,44,239,191,189,40,239,191,189,239,191,189,204,185,78,239,191,189,19,114,61,239,191,189,19,57,29,239,191,189,127,239,191,189,126,97,239,191,189,239,191,189,239,191,189,1,52,3,112,239,191,189,239,191,189,66,0,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,13,72,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,4,42,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,127,48,60,28,122,40,104,89,239,191,189,117,53,120,239,191,189,38,239,191,189,74,239,191,189,101,108,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,27,84,239,191,189,25,68,239,191,189,73,99,67,239,191,189,122,109,35,239,191,189,239,191,189,73,6,28,30,108,26,208,139,115,26,99,239,191,189,26,92,239,191,189,239,191,189,239,191,189,64,127,12,19,127,239,191,189,48,54,47,32,239,191,189,15,239,191,189,62,65,239,191,189,239,191,189,0,231,146,141,111,239,191,189,75,239,191,189,102,239,191,189,239,191,189,34,46,7,239,191,189,67,239,191,189,44,239,191,189,207,174,239,191,189,127,239,191,189,239,191,189,60,239,191,189,239,191,189,124,239,191,189,239,191,189,33,77,89,91,239,191,189,239,191,189,3,209,160,239,191,189,74,25,239,191,189,80,20,1,25,49,239,191,189,239,191,189,17,239,191,189,239,191,189,19,54,103,239,191,189,239,191,189,50,239,191,189,94,76,239,191,189,35,239,191,189,239,191,189,213,171,7,86,239,191,189,91,3,14,100,239,191,189,239,191,189,239,191,189,239,191,189,59,224,188,176,239,191,189,202,131,239,191,189,70,37,66,70,94,239,191,189,239,191,189,99,239,191,189,85,98,239,191,189,63,44,109,41,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,10,239,191,189,239,191,189,6,239,191,189,239,191,189,7,89,59,70,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,73,239,191,189,102,90,239,191,189,10,239,191,189,15,114,239,191,189,59,239,191,189,20,239,191,189,220,151,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,98,78,9,86,239,191,189,239,191,189,239,191,189,100,102,118,239,191,189,80,5,72,43,239,191,189,239,191,189,61,239,191,189,15,96,74,68,82,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,3,12,239,191,189,239,191,189,239,191,189,114,239,191,189,45,239,191,189,70,26,239,191,189,239,191,189,79,115,239,191,189,60,79,239,191,189,32,239,191,189,1,4,239,191,189,4,239,191,189,239,191,189,239,191,189,115,239,191,189,122,239,191,189,28,68,31,74,75,239,191,189,116,8,239,191,189,4,41,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,83,117,56,1,7,200,176,10,205,139,239,191,189,65,239,191,189,53,222,186,10,83,239,191,189,239,191,189,77,23,239,191,189,118,0,239,191,189,74,239,191,189,239,191,189,239,191,189,127,239,191,189,206,145,68,239,191,189,66,23,239,191,189,239,191,189,239,191,189,239,191,189,124,39,74,56,239,191,189,239,191,189,215,158,32,66,239,191,189,239,191,189,5,93,103,239,191,189,7,45,102,13,239,191,189,0,59,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,60,47,86,20,239,191,189,239,191,189,239,191,189,43,199,166,111,37,94,106,60,85,207,139,239,191,189,124,239,191,189,15,84,52,239,191,189,239,191,189,123,239,191,189,4,60,79,65,0,239,191,189,239,191,189,18,80,239,191,189,95,194,190,95,64,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,45,24,239,191,189,90,17,44,239,191,189,34,239,191,189,239,191,189,31,239,191,189,39,239,191,189,86,45,36,239,191,189,239,191,189,42,5,239,191,189,44,36,239,191,189,86,239,191,189,239,191,189,61,239,191,189,98,239,191,189,239,191,189,19,14,55,239,191,189,239,191,189,196,183,55,45,97,239,191,189,239,191,189,1,56,239,191,189,47,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,73,235,142,157,239,191,189,93,12,239,191,189,239,191,189,111,57,239,191,189,19,124,31,239,191,189,126,239,191,189,239,191,189,239,191,189,215,130,239,191,189,239,191,189,239,191,189,30,26,239,191,189,115,239,191,189,120,239,191,189,26,40,239,191,189,76,0,8,9,90,42,72,121,30,105,50,36,56,16,43,70,38,64,239,191,189,19,239,191,189,75,13,239,191,189,67,110,113,10,239,191,189,98,239,191,189,239,191,189,210,158,117,239,191,189,116,201,142,8,239,191,189,23,239,191,189,239,191,189,239,191,189,72,239,191,189,81,239,191,189,57,21,239,191,189,0,239,191,189,38,109,23,239,191,189,239,191,189,111,39,7,125,57,239,191,189,62,239,191,189,239,191,189,107,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,97,239,191,189,41,114,239,191,189,239,191,189,123,213,184,209,171,78,77,93,13,239,191,189,239,191,189,89,16,10,239,191,189,96,80,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,64,53,239,191,189,239,191,189,202,181,219,173,239,191,189,239,191,189,60,2,99,239,191,189,108,239,191,189,30,109,9,239,191,189,36,113,239,191,189,78,239,191,189,0,239,191,189,110,239,191,189,239,191,189,239,191,189,88,69,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,9,239,191,189,239,191,189,239,191,189,8,93,239,191,189,239,191,189,239,191,189,68,239,191,189,94,25,239,191,189,28,239,191,189,22,127,239,191,189,75,63,80,239,191,189,61,239,191,189,29,80,239,191,189,51,1,239,191,189,239,191,189,239,191,189,195,135,239,191,189,18,70,239,191,189,104,239,191,189,239,191,189,103,239,191,189,239,191,189,62,239,191,189,91,215,152,1,239,191,189,239,191,189,239,191,189,239,191,189,76,20,239,191,189,93,63,71,18,239,191,189,67,42,239,191,189,65,239,191,189,239,191,189,42,4,57,101,76,239,191,189,239,191,189,239,191,189,203,156,107,239,191,189,239,191,189,239,191,189,239,191,189,0,3,239,191,189,239,191,189,239,191,189,58,239,191,189,123,239,191,189,68,33,239,191,189,239,191,189,36,239,191,189,6,239,191,189,239,191,189,199,172,239,191,189,239,191,189,51,239,191,189,71,33,100,73,239,191,189,239,191,189,82,24,10,66,39,239,191,189,80,6,89,239,191,189,239,191,189,80,32,43,4,239,191,189,239,191,189,239,191,189,239,191,189,111,23,45,77,7,56,239,191,189,45,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,206,129,239,191,189,239,191,189,64,239,191,189,125,109,7,10,118,19,122,66,104,239,191,189,75,100,239,191,189,239,191,189,37,239,191,189,2,10,87,239,191,189,239,191,189,46,239,191,189,104,7,90,239,191,189,92,239,191,189,239,191,189,239,191,189,87,85,194,154,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,103,110,54,239,191,189,29,116,19,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,6,78,239,191,189,2,28,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,101,239,191,189,5,73,239,191,189,239,191,189,62,239,191,189,77,119,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,10,8,239,191,189,239,191,189,76,213,165,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,119,239,191,189,14,239,191,189,34,68,48,222,141,239,191,189,239,191,189,200,143,239,191,189,40,23,54,37,107,239,191,189,239,191,189,96,3,239,191,189,239,191,189,239,191,189,9,239,191,189,112,82,239,191,189,239,191,189,239,191,189,122,239,191,189,50,74,109,239,191,189,16,124,84,239,191,189,239,191,189,56,125,239,191,189,110,4,40,239,191,189,49,239,191,189,17,239,191,189,239,191,189,124,239,191,189,79,239,191,189,239,191,189,68,108,50,239,191,189,199,173,59,4,239,191,189,239,191,189,86,239,191,189,54,239,191,189,113,15,239,191,189,86,98,38,54,107,42,239,191,189,17,104,46,239,191,189,205,184,76,59,239,191,189,16,239,191,189,239,191,189,21,113,207,167,106,41,41,94,239,191,189,239,191,189,122,60,239,191,189,239,191,189,94,236,173,179,239,191,189,65,81,239,191,189,69,12,239,191,189,12,69,9,91,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,126,239,191,189,66,0,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,56,90,95,239,191,189,239,191,189,56,64,112,34,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,84,62,239,191,189,239,191,189,77,81,239,191,189,120,90,47,239,191,189,65,239,191,189,239,191,189,48,87,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,222,175,41,8,239,191,189,239,191,189,37,28,46,220,155,239,191,189,239,191,189,239,191,189,117,239,191,189,5,94,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,50,127,71,72,239,191,189,239,191,189,113,38,239,191,189,239,191,189,115,19,78,81,75,3,112,36,239,191,189,239,191,189,239,191,189,94,118,17,94,9,239,191,189,110,202,172,239,191,189,59,99,239,191,189,239,191,189,100,239,191,189,239,191,189,35,239,191,189,107,117,83,5,27,98,239,191,189,239,191,189,19,239,191,189,50,239,191,189,2,81,239,191,189,239,191,189,9,53,239,191,189,239,191,189,6,2,92,239,191,189,239,191,189,55,239,191,189,239,191,189,123,239,191,189,103,239,191,189,1,28,239,191,189,31,10,112,239,191,189,239,191,189,118,239,191,189,90,239,191,189,121,239,191,189,57,17,239,191,189,2,90,102,239,191,189,52,124,104,24,90,23,239,191,189,239,191,189,56,44,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,201,152,63,239,191,189,121,22,239,191,189,239,191,189,127,25,239,191,189,239,191,189,8,121,239,191,189,1,239,191,189,204,160,38,6,239,191,189,89,18,72,239,191,189,239,191,189,46,71,239,191,189,239,191,189,84,78,239,191,189,56,239,191,189,38,3,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,219,190,239,191,189,239,191,189,239,191,189,12,69,239,191,189,239,191,189,24,63,45,239,191,189,239,191,189,95,121,63,239,191,189,29,239,191,189,78,55,64,239,191,189,218,156,18,58,102,117,239,191,189,92,44,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,0,32,239,191,189,239,191,189,93,239,191,189,6,71,81,54,239,191,189,59,198,163,125,214,177,99,239,191,189,10,54,90,67,239,191,189,0,115,46,101,239,191,189,239,191,189,46,239,191,189,239,191,189,54,32,71,239,191,189,62,62,51,31,36,239,191,189,124,239,191,189,108,20,123,239,191,189,9,120,239,191,189,4,124,239,191,189,220,159,239,191,189,233,165,160,91,239,191,189,108,239,191,189,239,191,189,42,108,93,239,191,189,239,191,189,36,239,191,189,239,191,189,23,53,239,191,189,102,15,7,26,239,191,189,51,122,81,57,239,191,189,31,239,191,189,67,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,87,50,239,191,189,81,66,239,191,189,30,41,57,83,57,44,101,112,55,56,239,191,189,226,138,182,40,82,27,119,9,10,239,191,189,25,239,191,189,239,191,189,239,191,189,34,68,83,239,191,189,114,239,191,189,239,191,189,239,191,189,115,239,191,189,10,65,239,191,189,0,105,239,191,189,31,12,110,0,115,15,220,155,5,22,83,71,55,239,191,189,5,66,82,239,191,189,22,239,191,189,18,239,191,189,197,157,43,29,22,239,191,189,30,17,30,119,239,191,189,81,239,191,189,12,120,239,191,189,91,19,103,239,191,189,239,191,189,92,72,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,233,129,167,239,191,189,71,239,191,189,239,191,189,85,239,191,189,239,191,189,125,239,191,189,239,191,189,219,168,239,191,189,13,239,191,189,239,191,189,107,41,3,239,191,189,89,239,191,189,104,84,239,191,189,239,191,189,109,34,86,34,239,191,189,239,191,189,30,239,191,189,48,197,167,17,6,27,116,59,239,191,189,99,109,205,166,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,77,239,191,189,239,191,189,125,31,197,138,239,191,189,38,239,191,189,82,77,239,191,189,60,239,191,189,50,33,90,34,239,191,189,13,30,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,84,87,239,191,189,86,239,191,189,30,91,92,239,191,189,42,239,191,189,65,239,191,189,239,191,189,20,18,17,31,67,105,239,191,189,239,191,189,239,191,189,40,44,239,191,189,239,191,189,47,239,191,189,217,150,55,219,185,123,239,191,189,49,239,191,189,239,191,189,107,239,191,189,74,239,191,189,103,239,191,189,87,105,9,239,191,189,239,191,189,198,164,239,191,189,19,239,191,189,122,119,41,239,191,189,44,44,95,14,239,191,189,239,191,189,101,239,191,189,40,68,239,191,189,20,122,215,136,62,81,239,191,189,239,191,189,74,239,191,189,239,191,189,37,57,239,191,189,207,146,90,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,63,239,191,189,32,60,99,239,191,189,124,239,191,189,64,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,1,239,191,189,6,37,40,239,191,189,39,10,48,100,239,191,189,38,65,124,239,191,189,239,191,189,29,20,239,191,189,19,239,191,189,38,72,96,86,5,239,191,189,239,191,189,99,239,191,189,93,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,113,79,239,191,189,213,188,239,191,189,239,191,189,53,35,239,191,189,81,16,239,191,189,15,239,191,189,90,239,191,189,239,191,189,35,66,98,239,191,189,95,7,45,35,76,239,191,189,239,191,189,38,34,1,239,191,189,93,239,191,189,108,239,191,189,239,191,189,103,239,191,189,239,191,189,63,25,11,239,191,189,94,239,191,189,32,66,7,44,239,191,189,91,35,239,191,189,239,191,189,212,167,239,191,189,81,78,58,239,191,189,239,191,189,80,44,22,239,191,189,4,239,191,189,26,53,239,191,189,239,191,189,239,191,189,104,69,239,191,189,125,239,191,189,103,96,239,191,189,30,239,191,189,16,239,191,189,106,239,191,189,239,191,189,239,191,189,0,21,99,85,65,239,191,189,239,191,189,239,191,189,72,50,28,85,239,191,189,239,191,189,52,239,191,189,81,97,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,222,159,63,239,191,189,239,191,189,30,30,85,54,52,239,191,189,44,124,39,239,191,189,66,239,191,189,124,52,68,99,50,239,191,189,220,189,25,50,58,239,191,189,239,191,189,43,43,117,239,191,189,98,239,191,189,122,239,191,189,20,239,191,189,239,191,189,239,191,189,194,142,239,191,189,239,191,189,57,239,191,189,48,88,239,191,189,239,191,189,30,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,124,9,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,32,70,99,123,61,77,30,68,239,191,189,80,42,239,191,189,239,191,189,118,203,180,239,191,189,68,23,239,191,189,8,41,26,106,57,239,191,189,20,239,191,189,42,117,13,239,191,189,25,119,239,191,189,99,239,191,189,49,99,21,239,191,189,78,239,191,189,106,239,191,189,54,4,239,191,189,239,191,189,14,239,191,189,239,191,189,26,239,191,189,239,191,189,44,239,191,189,65,239,191,189,57,55,26,239,191,189,67,92,111,91,239,191,189,103,239,191,189,239,191,189,239,191,189,1,54,239,191,189,54,239,191,189,0,70,239,191,189,15,239,191,189,53,102,118,30,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,220,142,51,111,79,14,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,1,41,59,239,191,189,29,239,191,189,61,112,239,191,189,66,48,54,239,191,189,2,36,239,191,189,239,191,189,239,191,189,56,239,191,189,195,167,239,191,189,119,57,239,191,189,239,191,189,111,27,239,191,189,221,146,239,191,189,239,191,189,220,178,82,78,82,239,191,189,239,191,189,18,31,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,108,7,55,90,61,196,172,65,12,239,191,189,84,56,100,239,191,189,108,239,191,189,37,114,85,56,116,239,191,189,32,239,191,189,239,191,189,10,35,115,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,38,194,188,239,191,189,116,239,191,189,239,191,189,17,117,2,239,191,189,239,191,189,124,239,191,189,88,83,239,191,189,24,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,56,90,239,191,189,239,191,189,116,76,239,191,189,118,239,191,189,239,191,189,239,191,189,199,149,99,64,30,239,191,189,108,26,239,191,189,127,239,191,189,239,191,189,239,191,189,95,112,239,191,189,52,239,191,189,65,239,191,189,105,239,191,189,117,24,73,239,191,189,239,191,189,63,239,191,189,111,239,191,189,26,29,239,191,189,33,117,199,149,51,239,191,189,52,30,199,128,29,121,239,191,189,33,6,206,175,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,6,239,191,189,4,239,191,189,44,107,35,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,20,239,191,189,123,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,94,66,239,191,189,116,239,191,189,239,191,189,239,191,189,46,17,8,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,10,239,191,189,16,121,30,35,239,191,189,239,191,189,11,239,191,189,39,239,191,189,239,191,189,100,239,191,189,84,239,191,189,42,239,191,189,81,83,239,191,189,76,239,191,189,239,191,189,239,191,189,75,10,239,191,189,51,239,191,189,239,191,189,46,37,239,191,189,122,63,30,239,191,189,239,191,189,211,181,20,7,89,20,38,63,73,22,2,239,191,189,25,239,191,189,103,93,45,239,191,189,116,72,113,239,191,189,123,239,191,189,66,239,191,189,239,191,189,101,239,191,189,38,20,123,111,18,126,239,191,189,239,191,189,69,49,239,191,189,113,12,239,191,189,121,48,23,239,191,189,116,239,191,189,82,77,239,191,189,239,191,189,113,68,7,57,110,196,152,79,239,191,189,239,191,189,34,1,239,191,189,94,6,59,201,190,239,191,189,97,239,191,189,239,191,189,101,10,1,116,43,239,191,189,80,239,191,189,98,239,191,189,104,239,191,189,239,191,189,239,191,189,118,99,47,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,102,74,209,155,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,239,191,189,25,40,74,239,191,189,239,191,189,96,56,239,191,189,102,239,191,189,102,200,141,37,239,191,189,107,239,191,189,239,191,189,114,13,22,239,191,189,239,191,189,114,30,239,191,189,98,239,191,189,120,43,53,239,191,189,239,191,189,76,239,191,189,88,84,239,191,189,239,191,189,88,239,191,189,117,239,191,189,5,239,191,189,239,191,189,67,117,239,191,189,239,191,189,239,191,189,48,39,239,191,189,239,191,189,103,89,239,191,189,122,239,191,189,239,191,189,73,75,58,89,127,239,191,189,64,239,191,189,239,191,189,22,239,191,189,239,191,189,25,112,239,191,189,34,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,4,239,191,189,61,100,47,239,191,189,124,101,62,89,83,41,84,239,191,189,127,239,191,189,3,239,191,189,109,123,4,90,13,54,71,68,239,191,189,101,239,191,189,239,191,189,17,84,101,239,191,189,84,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,68,239,191,189,239,191,189,28,120,239,191,189,29,239,191,189,239,191,189,239,191,189,5,239,191,189,106,120,239,191,189,239,191,189,7,28,239,191,189,111,23,239,191,189,68,72,239,191,189,195,151,87,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,26,239,191,189,118,113,113,239,191,189,65,11,239,191,189,239,191,189,69,239,191,189,14,239,191,189,239,191,189,116,29,239,191,189,239,191,189,83,119,28,239,191,189,55,239,191,189,52,6,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,77,115,239,191,189,239,191,189,239,191,189,2,60,51,239,191,189,81,239,191,189,239,191,189,89,103,19,239,191,189,94,4,111,239,191,189,239,191,189,26,63,239,191,189,61,217,175,239,191,189,38,114,239,191,189,239,191,189,239,191,189,239,191,189,113,0,32,239,191,189,19,80,59,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,41,106,239,191,189,43,239,191,189,120,239,191,189,239,191,189,50,52,82,103,239,191,189,83,239,191,189,12,85,239,191,189,239,191,189,5,239,191,189,239,191,189,18,239,191,189,127,239,191,189,31,239,191,189,20,46,90,239,191,189,239,191,189,44,239,191,189,35,68,71,239,191,189,73,27,239,191,189,62,239,191,189,239,191,189,118,68,239,191,189,239,191,189,220,150,33,45,126,5,51,87,63,239,191,189,239,191,189,89,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,204,138,239,191,189,14,239,191,189,239,191,189,239,191,189,69,239,191,189,9,239,191,189,33,12,55,239,191,189,57,100,58,38,83,239,191,189,4,239,191,189,23,239,191,189,38,239,191,189,58,239,191,189,13,199,160,48,2,20,239,191,189,55,239,191,189,239,191,189,31,123,18,105,239,191,189,21,55,239,191,189,108,239,191,189,92,115,124,121,239,191,189,239,191,189,114,209,177,239,191,189,239,191,189,125,82,239,191,189,65,11,239,191,189,9,34,16,1,216,166,7,215,185,239,191,189,239,191,189,1,239,191,189,62,65,239,191,189,82,239,191,189,83,36,239,191,189,67,80,20,101,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,96,10,70,222,129,91,239,191,189,239,191,189,239,191,189,117,239,191,189,5,40,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,21,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,96,239,191,189,114,239,191,189,46,239,191,189,239,191,189,20,62,40,239,191,189,239,191,189,239,191,189,76,97,78,239,191,189,239,191,189,114,34,11,24,239,191,189,95,2,239,191,189,239,191,189,239,191,189,239,191,189,11,46,239,191,189,216,135,36,239,191,189,60,76,239,191,189,103,56,38,239,191,189,239,191,189,96,6,30,239,191,189,239,191,189,239,191,189,59,109,39,239,191,189,102,72,15,19,239,191,189,239,191,189,239,191,189,33,75,51,239,191,189,239,191,189,239,191,189,89,40,98,17,114,239,191,189,11,239,191,189,239,191,189,6,239,191,189,239,191,189,102,112,7,61,239,191,189,239,191,189,239,191,189,3,33,239,191,189,239,191,189,41,239,191,189,62,239,191,189,23,239,191,189,84,239,191,189,239,191,189,73,239,191,189,95,36,121,239,191,189,239,191,189,28,235,128,183,9,19,239,191,189,66,28,26,14,99,55,5,239,191,189,55,76,115,239,191,189,239,191,189,102,49,239,191,189,11,59,86,92,239,191,189,239,191,189,17,239,191,189,239,191,189,6,239,191,189,239,191,189,24,239,191,189,36,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,98,239,191,189,25,117,124,239,191,189,239,191,189,1,239,191,189,11,55,73,92,63,106,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,106,116,239,191,189,62,74,222,191,35,19,239,191,189,50,50,19,239,191,189,239,191,189,239,191,189,42,239,191,189,50,94,239,191,189,89,239,191,189,198,130,239,191,189,56,50,239,191,189,239,191,189,239,191,189,34,239,191,189,5,239,191,189,118,68,54,49,239,191,189,239,191,189,221,141,12,4,23,73,239,191,189,239,191,189,239,191,189,108,239,191,189,91,114,6,17,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,54,30,20,15,113,13,239,191,189,57,239,191,189,239,191,189,118,93,102,9,203,164,239,191,189,106,75,239,191,189,120,74,239,191,189,105,239,191,189,78,239,191,189,239,191,189,53,122,123,47,107,239,191,189,111,239,191,189,239,191,189,239,191,189,59,10,239,191,189,239,191,189,120,10,239,191,189,11,239,191,189,69,29,77,81,106,21,19,236,149,170,73,34,14,239,191,189,239,191,189,239,191,189,121,239,191,189,46,239,191,189,99,92,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,97,16,95,239,191,189,66,1,239,191,189,239,191,189,239,191,189,41,16,25,88,239,191,189,239,191,189,77,239,191,189,239,191,189,44,82,239,191,189,98,239,191,189,16,239,191,189,16,239,191,189,239,191,189,113,239,191,189,239,191,189,91,239,191,189,26,239,191,189,239,191,189,74,239,191,189,239,191,189,12,23,239,191,189,79,239,191,189,21,239,191,189,239,191,189,239,191,189,94,32,64,239,191,189,51,239,191,189,239,191,189,16,79,239,191,189,50,104,239,191,189,36,101,239,191,189,239,191,189,239,191,189,61,47,85,3,43,239,191,189,31,59,9,197,175,38,239,191,189,109,239,191,189,103,18,97,77,121,92,27,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,55,239,191,189,52,239,191,189,101,121,44,91,239,191,189,239,191,189,239,191,189,239,191,189,58,96,40,64,239,191,189,119,80,18,4,78,60,45,34,239,191,189,239,191,189,8,239,191,189,239,191,189,123,239,191,189,62,239,191,189,239,191,189,239,191,189,46,8,118,58,239,191,189,109,239,191,189,239,191,189,99,38,81,19,239,191,189,69,239,191,189,44,14,239,191,189,51,101,239,191,189,93,67,239,191,189,74,83,78,239,191,189,71,28,239,191,189,239,191,189,100,54,17,239,191,189,0,21,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,53,96,14,78,205,133,89,239,191,189,239,191,189,239,191,189,197,161,239,191,189,98,31,9,111,71,111,239,191,189,239,191,189,239,191,189,51,42,43,239,191,189,92,239,191,189,239,191,189,114,239,191,189,71,239,191,189,125,30,239,191,189,239,191,189,78,49,83,239,191,189,59,64,239,191,189,95,38,239,191,189,119,239,191,189,22,239,191,189,239,191,189,239,191,189,31,239,191,189,44,239,191,189,35,239,191,189,40,239,191,189,207,136,62,125,31,114,68,48,113,118,239,191,189,62,80,239,191,189,96,239,191,189,51,239,191,189,239,191,189,99,37,50,91,16,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,120,8,239,191,189,239,191,189,239,191,189,2,122,63,239,191,189,239,191,189,70,34,239,191,189,239,191,189,77,94,63,56,56,239,191,189,86,3,197,151,239,191,189,44,45,239,191,189,76,20,239,191,189,111,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,16,239,191,189,239,191,189,110,116,30,75,239,191,189,4,126,117,66,0,98,239,191,189,212,183,239,191,189,239,191,189,239,191,189,102,239,191,189,8,22,239,191,189,94,239,191,189,71,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,112,239,191,189,83,239,191,189,239,191,189,116,239,191,189,35,11,239,191,189,126,39,28,1,239,191,189,127,239,191,189,6,239,191,189,239,191,189,127,87,239,191,189,239,191,189,239,191,189,65,13,239,191,189,239,191,189,42,71,239,191,189,21,47,99,27,239,191,189,127,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,99,42,239,191,189,47,100,94,239,191,189,239,191,189,37,239,191,189,7,53,239,191,189,239,191,189,239,191,189,111,122,239,191,189,113,239,191,189,17,239,191,189,127,239,191,189,57,21,239,191,189,239,191,189,52,239,191,189,239,191,189,93,22,23,239,191,189,43,204,150,239,191,189,100,9,103,19,115,239,191,189,76,4,106,239,191,189,89,122,56,81,62,89,239,191,189,239,191,189,36,239,191,189,239,191,189,204,164,239,191,189,35,85,86,239,191,189,239,191,189,239,191,189,78,239,191,189,218,179,239,191,189,239,191,189,53,107,99,109,239,191,189,239,191,189,122,239,191,189,239,191,189,105,239,191,189,11,216,190,211,158,239,191,189,239,191,189,13,239,191,189,101,239,191,189,239,191,189,29,116,239,191,189,113,127,52,93,239,191,189,239,191,189,239,191,189,91,35,69,41,239,191,189,239,191,189,239,191,189,81,239,191,189,238,186,174,75,239,191,189,239,191,189,23,239,191,189,84,239,191,189,20,125,239,191,189,124,69,239,191,189,9,239,191,189,239,191,189,239,191,189,124,239,191,189,34,103,125,239,191,189,239,191,189,116,239,191,189,38,30,71,239,191,189,239,191,189,52,111,41,9,239,191,189,104,239,191,189,8,239,191,189,223,143,221,139,239,191,189,239,191,189,239,191,189,104,85,239,191,189,113,239,191,189,239,191,189,55,57,239,191,189,60,99,239,191,189,239,191,189,205,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,69,116,10,66,216,159,15,197,144,51,92,239,191,189,239,191,189,239,191,189,63,67,239,191,189,70,239,191,189,98,239,191,189,72,239,191,189,5,87,239,191,189,31,239,191,189,239,191,189,13,239,191,189,239,191,189,127,194,150,239,191,189,239,191,189,72,11,239,191,189,42,194,171,48,92,239,191,189,239,191,189,217,167,3,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,22,127,105,68,239,191,189,68,239,191,189,54,47,77,66,93,239,191,189,59,57,56,28,239,191,189,117,239,191,189,239,191,189,239,191,189,70,239,191,189,125,27,102,239,191,189,239,191,189,14,239,191,189,46,239,191,189,93,239,191,189,24,239,191,189,126,41,239,191,189,202,156,239,191,189,239,191,189,100,239,191,189,86,77,239,191,189,78,239,191,189,96,89,92,102,47,57,107,239,191,189,102,239,191,189,239,191,189,62,33,239,191,189,19,123,61,70,33,119,239,191,189,115,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,118,55,213,133,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,14,239,191,189,93,239,191,189,239,191,189,80,43,25,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,124,239,191,189,127,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,125,62,239,191,189,69,239,191,189,66,33,239,191,189,122,10,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,18,239,191,189,239,191,189,124,74,5,7,122,239,191,189,95,239,191,189,239,191,189,33,73,239,191,189,239,191,189,239,191,189,89,18,53,211,133,239,191,189,239,191,189,18,61,84,115,239,191,189,72,239,191,189,239,191,189,69,239,191,189,239,191,189,119,239,191,189,46,50,57,239,191,189,203,178,239,191,189,33,239,191,189,49,239,191,189,239,191,189,205,138,54,117,215,140,70,28,106,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,43,239,191,189,14,6,239,191,189,38,239,191,189,70,8,211,171,22,239,191,189,35,239,191,189,47,123,17,83,239,191,189,30,37,49,239,191,189,239,191,189,37,239,191,189,90,66,43,32,239,191,189,239,191,189,99,239,191,189,118,239,191,189,27,99,93,47,207,185,239,191,189,6,122,94,239,191,189,239,191,189,89,11,239,191,189,239,191,189,239,191,189,12,114,239,191,189,97,239,191,189,0,79,239,191,189,198,167,239,191,189,113,78,75,239,191,189,119,116,96,239,191,189,239,191,189,239,191,189,79,108,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,32,111,239,191,189,239,191,189,86,39,239,191,189,90,45,98,14,68,9,17,15,239,191,189,44,19,2,45,239,191,189,3,239,191,189,15,239,191,189,5,70,239,191,189,239,191,189,57,82,53,221,135,28,113,91,239,191,189,99,239,191,189,26,50,75,239,191,189,91,70,91,239,191,189,10,30,239,191,189,239,191,189,239,191,189,3,117,107,79,239,191,189,33,83,239,191,189,239,191,189,41,239,191,189,14,43,239,191,189,239,191,189,34,239,191,189,30,239,191,189,79,239,191,189,120,239,191,189,200,179,119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,18,239,191,189,34,121,91,65,239,191,189,239,191,189,239,191,189,33,44,77,26,209,148,239,191,189,78,239,191,189,91,55,56,239,191,189,239,191,189,239,191,189,46,32,118,239,191,189,239,191,189,3,239,191,189,99,96,82,119,66,0,86,239,191,189,93,239,191,189,72,206,150,239,191,189,102,93,239,191,189,43,239,191,189,55,239,191,189,239,191,189,118,239,191,189,21,239,191,189,239,191,189,74,59,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,89,81,239,191,189,239,191,189,239,191,189,239,191,189,114,239,191,189,45,29,239,191,189,239,191,189,195,157,105,19,203,180,102,239,191,189,97,70,101,11,239,191,189,239,191,189,206,168,40,25,239,191,189,121,239,191,189,127,239,191,189,239,191,189,64,30,239,191,189,3,239,191,189,239,191,189,222,176,239,191,189,119,44,239,191,189,239,191,189,239,191,189,239,191,189,98,2,22,239,191,189,10,239,191,189,239,191,189,74,106,239,191,189,71,5,4,23,78,45,30,239,191,189,43,239,191,189,239,191,189,103,239,191,189,1,121,104,239,191,189,239,191,189,16,102,65,27,78,80,112,118,127,239,191,189,239,191,189,100,84,211,148,95,105,239,191,189,217,152,52,73,14,239,191,189,97,78,50,239,191,189,28,21,126,239,191,189,239,191,189,98,57,4,98,43,239,191,189,239,191,189,239,191,189,215,174,239,191,189,239,191,189,239,191,189,54,239,191,189,211,134,239,191,189,239,191,189,239,191,189,29,85,239,191,189,87,68,239,191,189,239,191,189,30,117,90,105,8,46,239,191,189,239,191,189,239,191,189,61,43,37,239,191,189,92,239,191,189,119,62,239,191,189,24,111,39,239,191,189,125,239,191,189,18,239,191,189,13,115,239,191,189,30,113,239,191,189,239,191,189,49,125,69,239,191,189,239,191,189,46,67,40,66,239,191,189,90,107,105,44,239,191,189,43,239,191,189,5,32,239,191,189,78,239,191,189,239,191,189,33,27,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,85,239,191,189,107,239,191,189,71,239,191,189,12,34,123,239,191,189,239,191,189,20,71,239,191,189,24,80,239,191,189,239,191,189,239,191,189,88,108,118,70,94,1,95,239,191,189,239,191,189,239,191,189,239,191,189,108,25,239,191,189,239,191,189,89,239,191,189,19,103,105,239,191,189,202,166,113,101,239,191,189,239,191,189,23,239,191,189,123,239,191,189,239,191,189,239,191,189,36,239,191,189,124,54,36,117,69,239,191,189,99,239,191,189,239,191,189,239,191,189,22,239,191,189,114,212,191,239,191,189,239,191,189,125,121,2,239,191,189,239,191,189,4,239,191,189,35,71,239,191,189,19,81,45,239,191,189,239,191,189,239,191,189,122,34,239,191,189,239,191,189,34,239,191,189,84,54,33,239,191,189,79,239,191,189,108,66,7,239,191,189,239,191,189,44,98,34,110,239,191,189,49,68,239,191,189,33,62,239,191,189,239,191,189,51,239,191,189,239,191,189,5,239,191,189,89,239,191,189,11,29,91,239,191,189,239,191,189,88,239,191,189,100,239,191,189,239,191,189,239,191,189,4,239,191,189,51,103,0,45,239,191,189,106,239,191,189,239,191,189,76,239,191,189,0,239,191,189,211,181,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,115,22,17,205,178,50,106,57,239,191,189,77,204,163,88,51,47,239,191,189,239,191,189,239,191,189,104,90,239,191,189,218,163,239,191,189,103,239,191,189,239,191,189,239,191,189,27,111,95,239,191,189,46,97,94,83,239,191,189,35,239,191,189,239,191,189,239,191,189,107,46,104,33,89,112,239,191,189,239,191,189,83,239,191,189,20,99,119,219,153,114,91,102,239,191,189,75,239,191,189,29,53,239,191,189,49,116,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,196,133,239,191,189,59,239,191,189,14,88,72,63,200,175,74,55,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,54,14,77,239,191,189,122,239,191,189,239,191,189,120,239,191,189,239,191,189,112,55,239,191,189,125,239,191,189,85,239,191,189,55,239,191,189,88,239,191,189,3,71,85,239,191,189,239,191,189,239,191,189,239,191,189,113,15,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,41,239,191,189,119,88,120,90,239,191,189,3,48,216,168,239,191,189,100,32,51,239,191,189,239,191,189,115,239,191,189,239,191,189,39,7,239,191,189,239,191,189,239,191,189,108,123,239,191,189,239,191,189,30,58,118,35,46,239,191,189,239,191,189,239,191,189,239,191,189,13,73,62,239,191,189,64,55,81,239,191,189,102,84,123,239,191,189,63,63,239,191,189,2,239,191,189,198,169,116,11,239,191,189,239,191,189,4,18,239,191,189,50,108,53,112,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,108,198,130,124,239,191,189,5,38,83,16,239,191,189,239,191,189,239,191,189,119,44,215,187,37,239,191,189,1,105,82,239,191,189,46,239,191,189,31,239,191,189,48,239,191,189,239,191,189,239,191,189,68,239,191,189,93,239,191,189,18,68,45,239,191,189,6,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,113,99,35,102,239,191,189,239,191,189,239,191,189,92,88,239,191,189,66,239,191,189,26,239,191,189,33,46,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,39,75,239,191,189,36,239,191,189,118,58,239,191,189,239,191,189,122,91,239,191,189,51,49,118,16,217,153,239,191,189,120,113,114,239,191,189,125,239,191,189,115,104,114,239,191,189,239,191,189,239,191,189,227,191,173,239,191,189,239,191,189,239,191,189,198,171,239,191,189,239,191,189,239,191,189,75,27,38,239,191,189,239,191,189,58,239,191,189,239,191,189,96,117,1,39,239,191,189,120,87,74,96,13,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,115,239,191,189,127,92,239,191,189,239,191,189,214,131,121,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,56,4,12,60,124,239,191,189,239,191,189,126,92,239,191,189,101,239,191,189,44,26,239,191,189,110,239,191,189,56,86,70,239,191,189,77,4,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,222,160,239,191,189,11,220,140,1,239,191,189,56,109,56,87,94,239,191,189,26,239,191,189,122,82,88,125,239,191,189,7,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,104,20,239,191,189,46,239,191,189,64,239,191,189,239,191,189,239,191,189,45,122,239,191,189,239,191,189,77,239,191,189,31,102,37,79,13,239,191,189,67,28,99,22,17,34,239,191,189,239,191,189,15,239,191,189,239,191,189,114,239,191,189,35,239,191,189,10,239,191,189,30,239,191,189,76,239,191,189,77,216,158,239,191,189,105,59,239,191,189,119,63,239,191,189,239,191,189,37,239,191,189,75,23,239,191,189,30,24,221,180,239,191,189,239,191,189,41,70,239,191,189,239,191,189,96,91,106,49,13,239,191,189,85,207,139,120,77,239,191,189,239,191,189,96,239,191,189,102,90,239,191,189,239,191,189,113,44,115,239,191,189,47,0,239,191,189,110,56,239,191,189,81,117,125,239,191,189,239,191,189,47,27,239,191,189,103,239,191,189,47,239,191,189,40,239,191,189,239,191,189,61,101,125,124,28,31,43,239,191,189,239,191,189,70,124,239,191,189,104,59,49,38,26,29,8,57,2,239,191,189,6,7,49,124,239,191,189,243,191,139,161,3,239,191,189,84,239,191,189,106,239,191,189,28,239,191,189,38,239,191,189,239,191,189,107,22,65,239,191,189,239,191,189,53,239,191,189,20,239,191,189,32,239,191,189,239,191,189,109,95,117,74,239,191,189,239,191,189,56,239,191,189,1,239,191,189,121,58,20,73,239,191,189,239,191,189,39,1,97,19,22,221,154,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,118,239,191,189,239,191,189,43,239,191,189,239,191,189,59,239,191,189,124,25,239,191,189,35,239,191,189,199,157,7,239,191,189,80,239,191,189,239,191,189,236,176,190,116,239,191,189,239,191,189,196,131,90,213,148,122,196,138,239,191,189,239,191,189,14,92,239,191,189,91,239,191,189,127,239,191,189,71,37,239,191,189,239,191,189,239,191,189,84,239,191,189,43,239,191,189,31,5,239,191,189,62,36,239,191,189,50,239,191,189,118,112,77,239,191,189,239,191,189,115,95,102,17,7,239,191,189,66,239,191,189,66,55,108,44,119,78,239,191,189,239,191,189,239,191,189,47,114,239,191,189,239,191,189,91,239,191,189,0,118,113,86,42,239,191,189,239,191,189,86,50,239,191,189,194,177,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,29,239,191,189,239,191,189,29,17,239,191,189,104,239,191,189,81,239,191,189,65,239,191,189,239,191,189,239,191,189,24,239,191,189,102,239,191,189,239,191,189,239,191,189,24,239,191,189,93,239,191,189,58,79,239,191,189,239,191,189,239,191,189,28,48,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,101,239,191,189,239,191,189,126,97,20,87,239,191,189,40,239,191,189,239,191,189,32,38,239,191,189,76,239,191,189,98,126,239,191,189,239,191,189,239,191,189,239,191,189,203,158,53,84,95,87,60,203,152,239,191,189,239,191,189,53,208,181,239,191,189,61,239,191,189,239,191,189,239,191,189,112,239,191,189,3,12,239,191,189,9,41,54,239,191,189,108,0,4,239,191,189,239,191,189,239,191,189,33,239,191,189,72,12,239,191,189,0,239,191,189,93,0,68,239,191,189,239,191,189,239,191,189,68,36,239,191,189,32,1,80,108,200,146,57,75,53,33,77,95,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,46,2,239,191,189,95,23,66,239,191,189,239,191,189,71,125,239,191,189,239,191,189,82,96,89,90,15,239,191,189,126,239,191,189,85,239,191,189,104,239,191,189,23,95,239,191,189,4,239,191,189,48,239,191,189,8,31,239,191,189,61,239,191,189,239,191,189,239,191,189,51,239,191,189,23,27,198,134,63,239,191,189,57,69,239,191,189,45,239,191,189,2,121,48,239,191,189,45,71,239,191,189,96,239,191,189,6,22,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,53,239,191,189,239,191,189,92,239,191,189,239,191,189,77,211,144,31,61,239,191,189,95,75,103,112,28,8,13,42,239,191,189,239,191,189,122,239,191,189,239,191,189,1,49,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,73,77,90,239,191,189,239,191,189,35,208,166,203,130,106,239,191,189,239,191,189,20,105,239,191,189,19,239,191,189,116,23,239,191,189,27,239,191,189,232,175,187,36,239,191,189,239,191,189,239,191,189,99,118,66,239,191,189,239,191,189,66,239,191,189,239,191,189,111,23,239,191,189,53,239,191,189,239,191,189,239,191,189,110,60,239,191,189,13,239,191,189,19,49,239,191,189,100,49,114,239,191,189,239,191,189,103,239,191,189,239,191,189,48,239,191,189,6,75,239,191,189,80,239,191,189,239,191,189,239,191,189,50,239,191,189,92,34,239,191,189,107,102,1,6,77,239,191,189,239,191,189,60,80,68,239,191,189,95,239,191,189,239,191,189,12,239,191,189,7,108,239,191,189,5,239,191,189,122,239,191,189,36,29,239,191,189,16,69,89,239,191,189,213,139,239,191,189,239,191,189,11,239,191,189,239,191,189,26,239,191,189,18,239,191,189,125,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,41,239,191,189,117,239,191,189,102,239,191,189,47,54,239,191,189,72,239,191,189,239,191,189,111,9,239,191,189,239,191,189,239,191,189,64,19,239,191,189,239,191,189,99,120,195,147,52,45,239,191,189,47,239,191,189,29,5,239,191,189,97,11,80,31,101,0,239,191,189,58,88,239,191,189,239,191,189,239,191,189,69,239,191,189,28,122,39,239,191,189,70,67,69,239,191,189,40,211,174,1,101,239,191,189,239,191,189,239,191,189,194,138,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,0,28,239,191,189,11,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,18,15,239,191,189,111,239,191,189,30,239,191,189,83,239,191,189,239,191,189,82,239,191,189,39,239,191,189,239,191,189,239,191,189,44,13,62,239,191,189,101,120,239,191,189,20,239,191,189,42,239,191,189,58,30,82,239,191,189,95,24,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,65,239,191,189,72,239,191,189,22,239,191,189,27,112,11,239,191,189,239,191,189,16,66,113,239,191,189,111,239,191,189,239,191,189,115,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,209,153,239,191,189,239,191,189,4,239,191,189,33,239,191,189,239,191,189,36,239,191,189,88,83,127,53,123,239,191,189,19,239,191,189,239,191,189,79,239,191,189,28,239,191,189,64,239,191,189,120,120,1,79,12,9,239,191,189,239,191,189,68,91,31,239,191,189,7,239,191,189,239,191,189,91,118,77,239,191,189,22,239,191,189,90,61,12,239,191,189,33,239,191,189,208,163,239,191,189,125,0,239,191,189,22,97,239,191,189,239,191,189,124,23,239,191,189,202,133,59,239,191,189,91,68,11,239,191,189,30,239,191,189,95,239,191,189,42,41,94,30,58,239,191,189,239,191,189,15,239,191,189,42,73,239,191,189,30,239,191,189,239,191,189,110,34,239,191,189,239,191,189,53,15,75,10,31,99,239,191,189,124,21,32,239,191,189,239,191,189,239,191,189,239,191,189,214,129,239,191,189,66,110,239,191,189,239,191,189,45,239,191,189,13,90,239,191,189,239,191,189,60,105,27,107,239,191,189,76,102,239,191,189,26,239,191,189,84,239,191,189,239,191,189,67,17,239,191,189,239,191,189,11,123,239,191,189,46,72,88,56,43,239,191,189,239,191,189,11,8,94,62,239,191,189,45,102,116,18,239,191,189,239,191,189,239,191,189,99,52,22,239,191,189,239,191,189,100,67,239,191,189,123,239,191,189,88,239,191,189,1,239,191,189,67,239,191,189,239,191,189,17,239,191,189,63,72,99,91,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,57,85,24,121,24,239,191,189,239,191,189,239,191,189,239,191,189,27,109,45,239,191,189,239,191,189,60,239,191,189,234,153,128,1,23,117,109,239,191,189,217,133,239,191,189,4,239,191,189,113,40,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,201,180,103,92,15,87,45,239,191,189,45,239,191,189,33,98,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,20,118,239,191,189,239,191,189,79,48,17,239,191,189,9,32,239,191,189,24,239,191,189,8,30,63,10,239,191,189,239,191,189,221,162,239,191,189,81,92,239,191,189,239,191,189,194,174,42,33,217,172,239,191,189,239,191,189,58,51,221,176,15,239,191,189,239,191,189,239,191,189,239,191,189,54,88,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,13,40,239,191,189,102,110,116,76,239,191,189,90,239,191,189,239,191,189,63,239,191,189,12,61,5,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,95,37,239,191,189,1,30,25,239,191,189,54,51,41,239,191,189,239,191,189,239,191,189,239,191,189,111,60,239,191,189,3,112,239,191,189,47,239,191,189,96,239,191,189,104,239,191,189,55,36,239,191,189,239,191,189,60,7,40,66,64,239,191,189,114,45,239,191,189,239,191,189,239,191,189,239,191,189,22,89,57,74,109,9,95,239,191,189,11,205,176,239,191,189,47,46,40,84,239,191,189,118,104,18,56,71,98,239,191,189,239,191,189,85,239,191,189,239,191,189,202,148,79,239,191,189,16,239,191,189,239,191,189,6,115,30,54,46,239,191,189,66,239,191,189,111,87,52,19,18,239,191,189,30,119,61,80,239,191,189,86,239,191,189,239,191,189,110,126,23,125,239,191,189,239,191,189,118,125,239,191,189,239,191,189,77,33,239,191,189,64,58,76,239,191,189,112,239,191,189,116,239,191,189,65,121,203,172,29,18,102,98,73,18,15,5,239,191,189,30,239,191,189,239,191,189,85,96,239,191,189,94,80,239,191,189,197,156,61,239,191,189,239,191,189,22,96,96,94,3,239,191,189,239,191,189,239,191,189,3,11,65,88,107,239,191,189,239,191,189,69,59,17,239,191,189,239,191,189,34,239,191,189,94,239,191,189,16,0,22,70,239,191,189,239,191,189,47,110,62,21,80,1,239,191,189,12,12,239,191,189,72,239,191,189,239,191,189,19,7,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,99,239,191,189,218,140,2,239,191,189,78,2,239,191,189,24,79,239,191,189,239,191,189,26,86,66,127,92,239,191,189,5,239,191,189,66,239,191,189,239,191,189,123,239,191,189,8,122,75,118,126,41,239,191,189,10,88,58,239,191,189,239,191,189,41,101,9,41,20,47,94,6,64,239,191,189,48,239,191,189,79,239,191,189,3,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,50,69,239,191,189,239,191,189,43,239,191,189,37,55,239,191,189,239,191,189,27,126,239,191,189,50,33,239,191,189,239,191,189,45,239,191,189,124,116,77,28,73,239,191,189,39,239,191,189,38,31,117,239,191,189,58,18,119,239,191,189,32,239,191,189,239,191,189,239,191,189,56,239,191,189,119,42,20,10,206,175,239,191,189,239,191,189,118,85,52,19,239,191,189,40,62,239,191,189,3,239,191,189,239,191,189,23,83,14,239,191,189,108,9,59,1,124,18,68,21,68,239,191,189,239,191,189,239,191,189,53,239,191,189,89,239,191,189,69,239,191,189,239,191,189,61,239,191,189,239,191,189,100,18,239,191,189,65,239,191,189,239,191,189,57,239,191,189,35,27,51,239,191,189,239,191,189,116,239,191,189,12,239,191,189,50,64,239,191,189,110,15,54,9,29,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,41,10,58,86,94,125,11,239,191,189,239,191,189,2,25,239,191,189,119,101,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,2,239,191,189,56,239,191,189,59,239,191,189,127,55,84,74,54,16,32,74,239,191,189,209,136,239,191,189,239,191,189,239,191,189,94,95,6,4,21,239,191,189,84,239,191,189,42,239,191,189,88,239,191,189,239,191,189,39,73,2,239,191,189,34,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,8,116,44,239,191,189,239,191,189,29,56,239,191,189,9,118,239,191,189,97,49,239,191,189,38,239,191,189,42,66,41,239,191,189,239,191,189,112,114,35,239,191,189,239,191,189,207,176,239,191,189,88,239,191,189,0,239,191,189,58,239,191,189,239,191,189,109,239,191,189,58,13,239,191,189,118,239,191,189,55,239,191,189,239,191,189,239,191,189,30,239,191,189,14,97,115,51,8,239,191,189,1,9,4,239,191,189,77,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,103,8,27,239,191,189,104,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,77,99,239,191,189,100,239,191,189,79,239,191,189,6,94,239,191,189,239,191,189,88,217,129,118,239,191,189,239,191,189,106,23,17,239,191,189,239,191,189,239,191,189,104,95,239,191,189,239,191,189,92,239,191,189,86,239,191,189,195,169,58,239,191,189,23,239,191,189,239,191,189,91,239,191,189,10,239,191,189,239,191,189,75,36,47,61,41,239,191,189,235,180,185,199,165,239,191,189,239,191,189,95,99,35,51,1,46,52,8,239,191,189,48,70,239,191,189,122,81,239,191,189,239,191,189,32,123,239,191,189,24,239,191,189,19,239,191,189,109,239,191,189,51,239,191,189,107,34,9,239,191,189,14,26,72,85,56,239,191,189,8,239,191,189,121,239,191,189,239,191,189,239,191,189,232,173,174,239,191,189,57,239,191,189,239,191,189,76,218,190,86,75,239,191,189,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,78,239,191,189,239,191,189,95,8,92,239,191,189,99,114,5,239,191,189,239,191,189,93,210,132,239,191,189,12,49,41,112,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,31,58,80,239,191,189,239,191,189,43,239,191,189,54,43,78,239,191,189,239,191,189,117,54,239,191,189,239,191,189,31,106,239,191,189,239,191,189,49,239,191,189,74,103,239,191,189,239,191,189,26,239,191,189,239,191,189,49,239,191,189,11,239,191,189,0,67,56,239,191,189,239,191,189,24,50,44,77,239,191,189,53,104,84,239,191,189,58,239,191,189,239,191,189,49,89,14,239,191,189,81,106,239,191,189,239,191,189,24,23,16,239,191,189,63,239,191,189,239,191,189,239,191,189,58,117,239,191,189,31,48,82,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,66,9,239,191,189,239,191,189,17,0,67,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,0,33,64,14,194,130,239,191,189,26,61,72,26,239,191,189,0,6,81,80,109,113,239,191,189,239,191,189,239,191,189,13,48,239,191,189,45,239,191,189,111,239,191,189,239,191,189,239,191,189,25,88,84,90,81,239,191,189,93,239,191,189,53,239,191,189,48,40,203,151,239,191,189,75,239,191,189,60,239,191,189,100,65,103,109,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,18,51,239,191,189,119,46,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,59,73,239,191,189,239,191,189,66,239,191,189,11,239,191,189,239,191,189,51,239,191,189,33,239,191,189,239,191,189,239,191,189,115,91,94,239,191,189,11,239,191,189,109,127,239,191,189,239,191,189,84,105,32,239,191,189,90,239,191,189,239,191,189,112,239,191,189,43,35,39,82,239,191,189,89,70,239,191,189,239,191,189,239,191,189,66,115,239,191,189,124,239,191,189,239,191,189,74,86,14,239,191,189,239,191,189,202,188,25,239,191,189,47,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,219,134,239,191,189,76,8,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,97,239,191,189,72,239,191,189,15,49,239,191,189,6,92,89,107,56,239,191,189,41,90,239,191,189,46,52,70,239,191,189,22,239,191,189,15,239,191,189,65,239,191,189,239,191,189,35,239,191,189,47,42,1,239,191,189,239,191,189,66,239,191,189,45,239,191,189,122,22,41,239,191,189,41,109,239,191,189,239,191,189,239,191,189,38,106,2,113,106,116,93,75,239,191,189,57,41,206,136,39,100,91,45,46,105,62,55,239,191,189,199,157,239,191,189,47,239,191,189,66,204,162,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,75,106,3,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,63,118,239,191,189,239,191,189,62,239,191,189,59,211,176,69,239,191,189,8,42,239,191,189,88,93,201,142,239,191,189,239,191,189,110,110,221,162,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,98,90,239,191,189,11,90,4,109,239,191,189,15,71,239,191,189,56,33,211,170,100,40,97,25,197,141,208,153,238,188,162,102,118,239,191,189,239,191,189,6,239,191,189,62,90,51,239,191,189,125,239,191,189,52,239,191,189,69,239,191,189,95,239,191,189,202,189,122,122,26,119,239,191,189,221,187,4,66,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,239,191,189,38,64,239,191,189,239,191,189,199,159,239,191,189,239,191,189,106,44,114,127,9,112,3,35,239,191,189,40,239,191,189,92,127,72,40,52,58,23,239,191,189,62,239,191,189,110,125,8,79,239,191,189,56,84,239,191,189,195,179,239,191,189,110,239,191,189,53,239,191,189,72,239,191,189,57,33,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,116,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,108,90,239,191,189,239,191,189,105,48,121,56,239,191,189,64,59,116,17,239,191,189,239,191,189,19,119,239,191,189,239,191,189,127,239,191,189,239,191,189,31,239,191,189,87,239,191,189,28,89,60,47,4,3,239,191,189,2,55,57,1,239,191,189,84,239,191,189,239,191,189,13,239,191,189,20,26,239,191,189,239,191,189,239,191,189,203,161,239,191,189,10,239,191,189,126,239,191,189,239,191,189,239,191,189,18,123,93,239,191,189,114,17,55,112,52,239,191,189,239,191,189,117,12,97,30,239,191,189,116,50,11,211,183,9,239,191,189,239,191,189,239,191,189,103,239,191,189,50,94,23,239,191,189,92,63,239,191,189,239,191,189,98,10,239,191,189,122,220,169,106,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,117,104,239,191,189,239,191,189,90,114,239,191,189,80,215,170,61,62,239,191,189,239,191,189,27,125,53,63,239,191,189,239,191,189,239,191,189,217,183,46,41,77,72,200,156,111,239,191,189,80,239,191,189,118,239,191,189,52,239,191,189,81,115,102,239,191,189,239,191,189,239,191,189,208,159,107,239,191,189,239,191,189,115,239,191,189,124,32,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,12,41,239,191,189,239,191,189,103,239,191,189,239,191,189,95,49,239,191,189,239,191,189,239,191,189,239,191,189,34,31,239,191,189,21,231,143,190,239,191,189,92,21,41,122,47,48,239,191,189,26,7,239,191,189,239,191,189,102,60,239,191,189,6,92,209,178,239,191,189,53,239,191,189,203,128,16,239,191,189,239,191,189,214,139,239,191,189,239,191,189,19,6,84,239,191,189,239,191,189,239,191,189,207,188,52,69,42,99,11,88,101,239,191,189,202,185,22,239,191,189,17,239,191,189,239,191,189,73,239,191,189,105,127,50,239,191,189,239,191,189,239,191,189,239,191,189,211,133,18,111,239,191,189,123,111,2,239,191,189,120,239,191,189,104,116,239,191,189,74,24,84,239,191,189,204,178,54,239,191,189,239,191,189,42,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,83,117,239,191,189,79,73,20,230,153,146,17,239,191,189,51,239,191,189,52,25,94,206,180,9,239,191,189,239,191,189,65,68,20,239,191,189,239,191,189,107,239,191,189,57,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,80,92,61,25,239,191,189,239,191,189,239,191,189,27,112,36,239,191,189,239,191,189,66,18,48,239,191,189,239,191,189,94,98,122,239,191,189,89,41,33,239,191,189,239,191,189,61,118,239,191,189,93,50,107,76,51,3,43,85,239,191,189,24,239,191,189,239,191,189,239,191,189,82,239,191,189,33,239,191,189,239,191,189,239,191,189,113,202,187,36,59,213,184,239,191,189,239,191,189,7,239,191,189,239,191,189,75,239,191,189,239,191,189,51,78,14,14,5,101,239,191,189,69,239,191,189,127,239,191,189,6,53,239,191,189,84,40,88,4,14,239,191,189,13,47,118,123,30,59,239,191,189,51,16,239,191,189,1,239,191,189,239,191,189,50,239,191,189,84,239,191,189,239,191,189,108,101,239,191,189,239,191,189,112,86,239,191,189,222,186,239,191,189,99,223,133,239,191,189,60,239,191,189,3,215,147,239,191,189,202,172,239,191,189,53,18,126,76,62,3,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,32,239,191,189,64,239,191,189,26,239,191,189,49,51,12,73,239,191,189,125,239,191,189,125,0,230,161,184,89,239,191,189,94,216,153,239,191,189,239,191,189,239,191,189,99,74,4,92,239,191,189,54,239,191,189,67,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,4,239,191,189,113,2,94,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,97,71,239,191,189,239,191,189,201,142,108,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,53,87,38,239,191,189,239,191,189,127,102,239,191,189,65,48,101,239,191,189,104,101,239,191,189,239,191,189,239,191,189,239,191,189,111,1,15,239,191,189,3,90,29,239,191,189,239,191,189,76,239,191,189,239,191,189,127,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,95,239,191,189,41,239,191,189,48,239,191,189,74,20,239,191,189,239,191,189,239,191,189,86,1,38,239,191,189,34,56,239,191,189,208,164,74,239,191,189,239,191,189,239,191,189,36,37,3,239,191,189,239,191,189,25,29,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,55,231,146,187,101,239,191,189,62,199,167,239,191,189,89,17,61,26,239,191,189,239,191,189,67,102,10,195,132,61,239,191,189,239,191,189,239,191,189,239,191,189,100,118,239,191,189,72,105,239,191,189,239,191,189,44,19,239,191,189,17,41,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,104,239,191,189,37,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,95,34,239,191,189,42,17,7,43,239,191,189,26,239,191,189,117,239,191,189,239,191,189,13,36,24,239,191,189,120,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,56,25,111,92,48,34,106,239,191,189,38,239,191,189,107,3,239,191,189,63,122,239,191,189,15,124,239,191,189,109,38,110,239,191,189,17,239,191,189,38,35,71,48,217,173,33,9,104,239,191,189,239,191,189,239,191,189,239,191,189,10,3,95,60,239,191,189,20,12,57,105,239,191,189,239,191,189,52,63,73,239,191,189,239,191,189,44,94,239,191,189,10,239,191,189,34,239,191,189,76,34,74,239,191,189,93,101,239,191,189,239,191,189,239,191,189,239,191,189,59,99,34,14,239,191,189,89,239,191,189,25,239,191,189,239,191,189,75,239,191,189,120,239,191,189,239,191,189,15,239,191,189,93,239,191,189,223,134,239,191,189,57,18,25,109,25,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,3,239,191,189,121,239,191,189,124,4,55,239,191,189,20,68,127,96,239,191,189,105,59,239,191,189,86,203,152,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,110,106,22,1,93,239,191,189,239,191,189,239,191,189,239,191,189,83,84,68,89,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,111,4,239,191,189,30,125,17,85,239,191,189,239,191,189,78,106,239,191,189,239,191,189,239,191,189,24,200,134,239,191,189,66,34,239,191,189,211,139,96,61,2,239,191,189,63,49,239,191,189,68,239,191,189,47,73,38,239,191,189,75,239,191,189,239,191,189,7,239,191,189,239,191,189,111,195,148,93,64,239,191,189,104,114,97,239,191,189,215,156,120,125,239,191,189,122,239,191,189,21,113,42,10,239,191,189,96,117,239,191,189,50,56,59,101,81,26,239,191,189,239,191,189,239,191,189,239,191,189,121,109,40,239,191,189,105,91,239,191,189,118,239,191,189,114,239,191,189,109,18,105,30,101,239,191,189,114,239,191,189,239,191,189,239,191,189,98,31,239,191,189,14,239,191,189,45,13,15,124,239,191,189,124,239,191,189,103,13,98,22,7,239,191,189,56,27,239,191,189,3,55,239,191,189,38,239,191,189,71,239,191,189,41,239,191,189,45,119,20,23,78,239,191,189,239,191,189,239,191,189,46,239,191,189,103,26,239,191,189,239,191,189,239,191,189,2,16,3,239,191,189,106,239,191,189,76,239,191,189,239,191,189,27,101,74,104,92,239,191,189,35,83,92,239,191,189,4,120,79,239,191,189,239,191,189,37,44,239,191,189,116,239,191,189,239,191,189,114,96,210,161,239,191,189,54,239,191,189,78,25,62,43,82,126,51,37,239,191,189,114,239,191,189,239,191,189,67,239,191,189,52,82,239,191,189,13,239,191,189,82,44,239,191,189,62,78,239,191,189,13,239,191,189,5,119,199,140,239,191,189,58,4,66,70,239,191,189,37,209,139,239,191,189,125,239,191,189,239,191,189,118,112,239,191,189,62,13,239,191,189,29,228,187,152,239,191,189,239,191,189,83,69,239,191,189,239,191,189,32,47,239,191,189,69,111,8,239,191,189,239,191,189,11,19,239,191,189,239,191,189,239,191,189,123,56,239,191,189,127,97,239,191,189,3,106,239,191,189,239,191,189,51,111,239,191,189,127,107,103,86,239,191,189,239,191,189,60,1,239,191,189,78,14,239,191,189,6,103,36,76,1,210,172,59,29,64,96,86,112,239,191,189,31,40,239,191,189,119,239,191,189,196,137,86,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,90,52,239,191,189,29,239,191,189,239,191,189,239,191,189,52,239,191,189,62,11,16,239,191,189,55,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,76,69,239,191,189,239,191,189,87,86,118,239,191,189,122,239,191,189,115,239,191,189,1,50,239,191,189,239,191,189,54,75,75,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,64,24,86,17,90,239,191,189,122,239,191,189,53,239,191,189,48,107,239,191,189,239,191,189,239,191,189,239,191,189,54,210,166,19,12,239,191,189,239,191,189,74,125,75,214,156,116,239,191,189,61,1,58,127,29,239,191,189,239,191,189,239,191,189,99,14,3,0,98,239,191,189,72,100,239,191,189,11,2,3,74,102,57,45,12,195,143,16,44,47,11,0,239,191,189,19,87,47,48,124,239,191,189,86,56,239,191,189,111,239,191,189,15,11,48,239,191,189,1,25,77,203,154,112,239,191,189,239,191,189,239,191,189,12,115,89,17,239,191,189,93,51,3,3,63,79,95,25,51,239,191,189,100,239,191,189,202,157,239,191,189,239,191,189,29,0,239,191,189,239,191,189,14,18,239,191,189,63,102,80,239,191,189,239,191,189,103,36,9,77,69,239,191,189,80,59,239,191,189,12,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,38,239,191,189,114,239,191,189,76,239,191,189,74,82,196,157,239,191,189,239,191,189,222,178,15,119,22,102,41,76,239,191,189,13,16,52,239,191,189,90,37,44,21,239,191,189,119,239,191,189,239,191,189,239,191,189,64,52,239,191,189,239,191,189,239,191,189,24,6,239,191,189,239,191,189,111,239,191,189,27,239,191,189,54,239,191,189,84,79,239,191,189,124,239,191,189,36,24,239,191,189,62,18,239,191,189,99,29,60,239,191,189,37,67,40,61,113,239,191,189,239,191,189,109,17,70,239,191,189,62,239,191,189,86,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,46,239,191,189,124,39,85,88,117,6,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,78,239,191,189,239,191,189,115,239,191,189,27,106,89,83,239,191,189,61,239,191,189,123,36,116,239,191,189,124,98,55,20,43,239,191,189,74,239,191,189,239,191,189,25,102,93,93,36,90,87,239,191,189,239,191,189,127,42,89,76,239,191,189,239,191,189,195,164,41,77,24,112,239,191,189,239,191,189,63,33,48,239,191,189,18,239,191,189,199,140,122,120,234,167,181,13,239,191,189,46,127,239,191,189,44,215,165,74,110,48,239,191,189,100,80,239,191,189,239,191,189,239,191,189,108,24,32,239,191,189,29,60,239,191,189,239,191,189,69,53,239,191,189,239,191,189,239,191,189,97,32,28,239,191,189,239,191,189,239,191,189,239,191,189,49,67,33,60,239,191,189,0,239,191,189,53,63,239,191,189,125,12,210,134,50,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,71,239,191,189,222,157,46,58,239,191,189,239,191,189,70,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,212,143,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,76,40,239,191,189,89,37,49,107,101,239,191,189,96,86,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,68,239,191,189,9,239,191,189,91,239,191,189,105,239,191,189,62,239,191,189,92,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,214,188,239,191,189,99,194,136,50,101,61,239,191,189,239,191,189,3,239,191,189,18,239,191,189,0,239,191,189,124,117,239,191,189,84,239,191,189,239,191,189,239,191,189,109,239,191,189,8,239,191,189,107,121,72,39,115,239,191,189,46,239,191,189,211,129,42,215,146,30,13,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,65,96,239,191,189,35,52,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,45,239,191,189,239,191,189,30,96,239,191,189,9,239,191,189,239,191,189,75,239,191,189,194,173,239,191,189,105,239,191,189,71,239,191,189,239,191,189,239,191,189,42,25,239,191,189,3,63,239,191,189,70,23,221,178,44,239,191,189,239,191,189,76,239,191,189,239,191,189,217,141,109,239,191,189,239,191,189,96,101,70,116,114,92,33,117,61,239,191,189,65,125,239,191,189,239,191,189,19,239,191,189,239,191,189,223,185,239,191,189,239,191,189,3,72,30,0,239,191,189,96,239,191,189,125,222,186,78,30,38,201,180,112,239,191,189,239,191,189,74,37,239,191,189,239,191,189,42,239,191,189,48,68,239,191,189,239,191,189,9,1,239,191,189,239,191,189,1,239,191,189,93,29,39,116,239,191,189,239,191,189,58,239,191,189,95,239,191,189,239,191,189,94,239,191,189,239,191,189,95,114,72,18,111,101,80,99,30,51,207,139,239,191,189,26,115,239,191,189,12,239,191,189,29,77,107,239,191,189,73,26,41,78,239,191,189,63,92,239,191,189,209,188,239,191,189,108,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,64,31,239,191,189,239,191,189,239,191,189,87,65,57,115,239,191,189,40,46,239,191,189,33,122,239,191,189,36,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,36,113,86,239,191,189,239,191,189,113,239,191,189,85,118,17,13,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,111,239,191,189,239,191,189,35,33,239,191,189,239,191,189,60,239,191,189,239,191,189,73,76,113,239,191,189,94,79,0,239,191,189,116,1,48,211,183,239,191,189,19,239,191,189,239,191,189,102,39,239,191,189,110,75,239,191,189,9,108,239,191,189,239,191,189,51,95,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,90,121,94,74,239,191,189,239,191,189,14,82,116,239,191,189,239,191,189,239,191,189,15,114,92,110,21,33,55,239,191,189,239,191,189,103,61,196,144,239,191,189,96,239,191,189,101,239,191,189,55,239,191,189,14,83,83,10,8,239,191,189,239,191,189,239,191,189,60,78,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,45,69,122,239,191,189,239,191,189,20,239,191,189,59,239,191,189,239,191,189,239,191,189,110,127,239,191,189,99,239,191,189,203,187,30,81,102,57,41,239,191,189,239,191,189,93,239,191,189,109,239,191,189,239,191,189,239,191,189,115,5,56,239,191,189,239,191,189,77,68,62,96,239,191,189,110,33,34,48,239,191,189,97,239,191,189,108,239,191,189,25,104,239,191,189,55,239,191,189,12,80,1,8,239,191,189,33,206,155,15,44,239,191,189,121,239,191,189,15,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,23,6,103,3,239,191,189,239,191,189,0,35,239,191,189,63,239,191,189,239,191,189,113,239,191,189,108,76,59,239,191,189,63,239,191,189,239,191,189,18,239,191,189,52,67,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,73,239,191,189,5,239,191,189,69,239,191,189,120,124,239,191,189,87,239,191,189,66,239,191,189,57,81,75,239,191,189,126,239,191,189,37,4,16,51,239,191,189,79,239,191,189,57,239,191,189,0,84,239,191,189,25,239,191,189,239,191,189,35,239,191,189,54,239,191,189,239,191,189,49,90,239,191,189,10,220,152,106,90,239,191,189,239,191,189,70,239,191,189,49,239,191,189,239,191,189,57,102,69,107,80,239,191,189,239,191,189,124,239,191,189,196,145,239,191,189,239,191,189,22,239,191,189,20,41,239,191,189,81,239,191,189,110,5,86,39,229,154,173,239,191,189,239,191,189,95,1,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,97,239,191,189,239,191,189,239,191,189,25,115,24,7,239,191,189,92,118,76,50,239,191,189,12,239,191,189,222,130,52,15,29,239,191,189,239,191,189,239,191,189,239,191,189,55,194,169,239,191,189,96,44,82,35,239,191,189,220,181,2,85,239,191,189,61,32,26,62,54,239,191,189,239,191,189,239,191,189,239,191,189,7,27,27,239,191,189,60,239,191,189,239,191,189,239,191,189,49,86,60,85,93,37,239,191,189,73,239,191,189,15,3,48,43,239,191,189,44,239,191,189,239,191,189,239,191,189,106,119,239,191,189,239,191,189,59,239,191,189,205,162,239,191,189,69,119,21,79,239,191,189,239,191,189,0,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,66,239,191,189,120,239,191,189,239,191,189,239,191,189,62,239,191,189,19,106,239,191,189,113,123,3,71,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,70,42,11,46,76,239,191,189,58,116,52,239,191,189,54,239,191,189,17,8,239,191,189,75,87,100,239,191,189,120,122,110,239,191,189,239,191,189,239,191,189,95,8,90,239,191,189,26,205,184,121,126,239,191,189,51,239,191,189,198,128,239,191,189,239,191,189,70,63,17,86,239,191,189,127,239,191,189,79,94,110,58,71,239,191,189,239,191,189,45,239,191,189,73,239,191,189,239,191,189,49,25,239,191,189,239,191,189,105,11,239,191,189,239,191,189,21,24,239,191,189,239,191,189,42,239,191,189,125,40,239,191,189,119,239,191,189,52,239,191,189,21,11,45,239,191,189,239,191,189,112,219,166,239,191,189,239,191,189,118,53,239,191,189,106,226,157,149,239,191,189,75,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,15,106,31,239,191,189,112,10,239,191,189,91,239,191,189,28,14,122,239,191,189,213,154,239,191,189,239,191,189,103,32,103,53,114,239,191,189,239,191,189,40,239,191,189,66,69,239,191,189,54,239,191,189,101,219,131,6,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,74,77,239,191,189,35,239,191,189,210,176,50,18,76,207,168,104,239,191,189,239,191,189,239,191,189,36,71,58,121,22,239,191,189,239,191,189,57,21,34,82,239,191,189,0,239,191,189,126,239,191,189,100,239,191,189,239,191,189,36,239,191,189,103,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,5,239,191,189,115,239,191,189,13,55,239,191,189,239,191,189,107,65,195,137,103,239,191,189,14,117,127,28,49,39,239,191,189,13,67,239,191,189,239,191,189,212,190,239,191,189,239,191,189,61,239,191,189,3,239,191,189,239,191,189,52,87,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,86,35,239,191,189,97,239,191,189,42,89,27,125,117,239,191,189,28,239,191,189,122,239,191,189,239,191,189,56,120,22,20,45,90,239,191,189,239,191,189,108,102,239,191,189,239,191,189,214,148,104,15,27,239,191,189,32,16,239,191,189,24,239,191,189,99,239,191,189,239,191,189,113,33,59,239,191,189,61,239,191,189,22,239,191,189,78,81,1,239,191,189,41,239,191,189,9,239,191,189,80,196,162,85,239,191,189,239,191,189,121,239,191,189,0,63,89,239,191,189,43,32,239,191,189,121,109,239,191,189,98,239,191,189,41,217,175,239,191,189,69,22,14,125,239,191,189,87,6,239,191,189,239,191,189,239,191,189,239,191,189,70,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,46,109,78,37,239,191,189,239,191,189,107,96,195,154,201,165,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,2,239,191,189,95,88,20,239,191,189,50,84,88,239,191,189,198,174,44,85,32,32,23,239,191,189,239,191,189,88,239,191,189,120,239,191,189,107,4,53,239,191,189,239,191,189,86,239,191,189,69,11,90,75,239,191,189,13,101,239,191,189,89,92,239,191,189,103,239,191,189,116,239,191,189,20,110,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,222,138,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,83,239,191,189,239,191,189,19,239,191,189,65,80,98,101,107,239,191,189,38,239,191,189,239,191,189,199,130,28,239,191,189,112,239,191,189,57,46,108,239,191,189,39,112,239,191,189,122,97,96,105,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,66,104,111,239,191,189,115,239,191,189,239,191,189,35,99,23,120,117,72,239,191,189,36,239,191,189,36,115,239,191,189,239,191,189,74,239,191,189,239,191,189,0,5,1,239,191,189,98,239,191,189,46,57,239,191,189,239,191,189,45,35,239,191,189,104,239,191,189,93,103,77,31,98,239,191,189,239,191,189,33,49,239,191,189,92,239,191,189,25,195,132,239,191,189,239,191,189,239,191,189,110,239,191,189,114,239,191,189,93,47,52,222,149,239,191,189,121,239,191,189,0,239,191,189,239,191,189,122,127,239,191,189,239,191,189,239,191,189,115,23,27,223,156,194,151,239,191,189,31,30,39,49,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,10,30,239,191,189,83,31,239,191,189,108,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,32,86,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,71,27,112,91,19,239,191,189,239,191,189,123,222,179,239,191,189,239,191,189,239,191,189,55,47,36,239,191,189,239,191,189,40,239,191,189,239,191,189,112,4,4,239,191,189,97,111,239,191,189,72,239,191,189,239,191,189,124,95,81,45,73,204,171,87,239,191,189,239,191,189,50,49,239,191,189,239,191,189,90,0,118,239,191,189,239,191,189,61,239,191,189,122,239,191,189,88,0,86,14,239,191,189,239,191,189,11,88,107,40,239,191,189,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,213,131,239,191,189,207,144,62,113,91,239,191,189,97,239,191,189,239,191,189,88,239,191,189,63,1,239,191,189,239,191,189,45,239,191,189,239,191,189,119,104,239,191,189,8,239,191,189,41,239,191,189,33,239,191,189,239,191,189,10,104,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,41,19,122,18,239,191,189,239,191,189,125,46,239,191,189,200,181,39,41,239,191,189,45,102,239,191,189,54,239,191,189,50,23,64,120,239,191,189,78,31,38,43,239,191,189,48,108,14,10,69,239,191,189,100,239,191,189,104,3,239,191,189,83,59,239,191,189,73,239,191,189,62,97,239,191,189,127,239,191,189,239,191,189,30,239,191,189,78,233,154,153,196,129,239,191,189,82,107,239,191,189,92,239,191,189,29,239,191,189,21,239,191,189,119,21,239,191,189,194,134,239,191,189,5,239,191,189,239,191,189,107,239,191,189,196,130,66,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,88,239,191,189,91,239,191,189,239,191,189,90,75,239,191,189,8,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,1,89,239,191,189,239,191,189,239,191,189,40,239,191,189,123,239,191,189,239,191,189,239,191,189,93,239,191,189,34,38,239,191,189,65,46,219,128,100,239,191,189,239,191,189,121,239,191,189,58,73,35,239,191,189,239,191,189,107,239,191,189,239,191,189,83,239,191,189,70,196,136,239,191,189,1,239,191,189,239,191,189,49,108,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,203,175,99,117,12,239,191,189,25,67,44,239,191,189,57,87,32,4,239,191,189,239,191,189,15,206,145,239,191,189,124,239,191,189,28,126,239,191,189,8,116,26,239,191,189,239,191,189,85,239,191,189,77,123,195,187,112,121,70,239,191,189,45,239,191,189,92,239,191,189,199,135,239,191,189,44,239,191,189,101,239,191,189,22,48,53,239,191,189,38,239,191,189,239,191,189,239,191,189,4,63,239,191,189,239,191,189,106,239,191,189,239,191,189,10,239,191,189,65,239,191,189,24,239,191,189,239,191,189,239,191,189,114,239,191,189,73,76,239,191,189,239,191,189,60,71,49,38,239,191,189,62,88,24,221,156,41,239,191,189,239,191,189,65,239,191,189,47,239,191,189,239,191,189,55,22,125,39,239,191,189,34,77,60,239,191,189,239,191,189,195,163,239,191,189,70,46,239,191,189,239,191,189,239,191,189,204,146,122,90,89,239,191,189,198,165,239,191,189,239,191,189,12,70,11,66,49,87,20,239,191,189,126,20,92,15,216,180,239,191,189,239,191,189,85,58,239,191,189,239,191,189,93,239,191,189,121,239,191,189,99,55,118,221,188,239,191,189,96,69,239,191,189,239,191,189,47,72,118,239,191,189,113,239,191,189,50,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,198,170,239,191,189,239,191,189,239,191,189,239,191,189,47,119,239,191,189,95,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,23,239,191,189,24,239,191,189,103,96,239,191,189,239,191,189,56,239,191,189,239,191,189,32,239,191,189,17,239,191,189,125,239,191,189,51,58,239,191,189,239,191,189,94,201,145,239,191,189,123,22,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,66,66,34,239,191,189,194,173,10,95,87,6,78,58,124,49,2,239,191,189,2,223,184,239,191,189,239,191,189,239,191,189,239,191,189,73,51,81,239,191,189,239,191,189,38,239,191,189,199,142,114,239,191,189,109,239,191,189,23,40,17,239,191,189,239,191,189,50,97,116,239,191,189,102,239,191,189,115,239,191,189,239,191,189,127,31,239,191,189,113,25,118,85,217,147,113,25,85,56,239,191,189,63,239,191,189,199,158,239,191,189,17,239,191,189,239,191,189,239,191,189,8,2,85,105,119,239,191,189,239,191,189,85,33,239,191,189,39,30,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,53,8,239,191,189,92,239,191,189,239,191,189,108,239,191,189,81,239,191,189,110,239,191,189,12,239,191,189,88,239,191,189,27,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,84,70,45,112,239,191,189,91,239,191,189,65,120,45,239,191,189,113,213,186,122,86,1,239,191,189,239,191,189,239,191,189,239,191,189,206,133,239,191,189,239,191,189,239,191,189,14,239,191,189,11,216,129,239,191,189,113,24,94,35,81,239,191,189,105,75,239,191,189,223,152,33,239,191,189,239,191,189,86,32,64,239,191,189,53,239,191,189,239,191,189,110,119,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,109,85,120,239,191,189,99,239,191,189,27,51,239,191,189,239,191,189,239,191,189,239,191,189,33,6,53,99,23,10,239,191,189,239,191,189,93,16,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,123,239,191,189,9,239,191,189,239,191,189,239,191,189,114,66,239,191,189,239,191,189,97,239,191,189,4,13,75,119,70,68,239,191,189,104,66,68,239,191,189,239,191,189,239,191,189,239,191,189,69,92,239,191,189,211,140,239,191,189,239,191,189,52,239,191,189,47,239,191,189,239,191,189,5,41,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,80,239,191,189,43,94,239,191,189,36,65,239,191,189,55,239,191,189,73,24,212,178,21,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,85,28,195,168,63,108,239,191,189,80,239,191,189,239,191,189,22,0,239,191,189,239,191,189,239,191,189,239,191,189,116,208,132,239,191,189,239,191,189,127,105,106,239,191,189,48,118,127,98,239,191,189,239,191,189,35,25,239,191,189,239,191,189,103,239,191,189,125,239,191,189,109,84,239,191,189,41,51,23,239,191,189,239,191,189,125,8,98,239,191,189,51,3,63,214,178,88,34,14,239,191,189,84,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,83,239,191,189,74,60,239,191,189,63,55,110,56,239,191,189,2,89,239,191,189,20,239,191,189,32,239,191,189,36,239,191,189,15,239,191,189,110,239,191,189,24,102,5,62,14,59,54,194,141,239,191,189,72,103,239,191,189,2,3,114,33,239,191,189,239,191,189,60,82,239,191,189,38,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,16,43,239,191,189,10,50,239,191,189,239,191,189,1,40,51,1,239,191,189,116,111,239,191,189,239,191,189,86,104,239,191,189,32,239,191,189,239,191,189,223,152,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,127,77,239,191,189,239,191,189,119,100,93,239,191,189,44,54,113,239,191,189,239,191,189,239,191,189,68,239,191,189,36,72,10,16,83,17,239,191,189,117,34,75,75,239,191,189,109,4,237,153,128,239,191,189,239,191,189,11,239,191,189,102,104,239,191,189,239,191,189,239,191,189,18,239,191,189,94,239,191,189,65,230,173,151,94,239,191,189,44,60,54,30,239,191,189,44,24,239,191,189,24,40,73,239,191,189,120,239,191,189,32,56,239,191,189,239,191,189,239,191,189,23,112,103,239,191,189,98,45,239,191,189,66,239,191,189,87,85,58,239,191,189,119,239,191,189,239,191,189,239,191,189,58,79,31,201,130,239,191,189,58,124,239,191,189,239,191,189,9,239,191,189,31,239,191,189,239,191,189,127,239,191,189,239,191,189,106,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,98,60,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,43,40,239,191,189,91,239,191,189,57,239,191,189,56,239,191,189,126,105,202,162,107,6,87,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,113,13,105,239,191,189,19,239,191,189,62,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,83,30,37,124,6,239,191,189,54,86,239,191,189,239,191,189,111,113,52,127,239,191,189,239,191,189,17,239,191,189,239,191,189,198,147,20,225,182,178,45,114,127,23,18,43,64,24,89,126,239,191,189,239,191,189,239,191,189,118,26,96,239,191,189,24,239,191,189,239,191,189,239,191,189,8,20,239,191,189,239,191,189,239,191,189,5,210,191,9,68,239,191,189,83,239,191,189,239,191,189,214,149,239,191,189,67,48,28,38,12,239,191,189,68,239,191,189,239,191,189,121,239,191,189,51,61,239,191,189,20,239,191,189,110,106,107,69,78,97,59,70,239,191,189,117,239,191,189,8,239,191,189,239,191,189,67,239,191,189,87,239,191,189,114,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,122,239,191,189,92,91,88,107,80,49,239,191,189,239,191,189,214,141,239,191,189,118,59,84,239,191,189,239,191,189,105,105,239,191,189,239,191,189,87,239,191,189,110,82,239,191,189,127,122,239,191,189,32,14,239,191,189,9,86,67,239,191,189,90,239,191,189,122,37,239,191,189,125,239,191,189,10,100,239,191,189,81,122,239,191,189,197,188,33,239,191,189,15,4,239,191,189,239,191,189,24,239,191,189,239,191,189,103,68,239,191,189,126,239,191,189,109,239,191,189,17,117,107,239,191,189,239,191,189,239,191,189,3,35,239,191,189,239,191,189,10,239,191,189,102,5,239,191,189,239,191,189,100,239,191,189,196,131,70,62,6,113,239,191,189,239,191,189,115,239,191,189,57,19,239,191,189,119,53,108,104,114,89,43,50,35,239,191,189,239,191,189,118,239,191,189,239,191,189,104,49,239,191,189,239,191,189,90,81,239,191,189,41,239,191,189,239,191,189,110,239,191,189,239,191,189,13,77,121,239,191,189,122,65,239,191,189,122,239,191,189,239,191,189,33,239,191,189,56,239,191,189,239,191,189,0,90,239,191,189,79,239,191,189,86,239,191,189,198,181,239,191,189,239,191,189,239,191,189,78,74,206,149,3,95,91,37,239,191,189,9,2,239,191,189,117,76,239,191,189,55,15,239,191,189,239,191,189,25,216,136,239,191,189,67,10,31,104,121,93,239,191,189,239,191,189,11,239,191,189,71,68,48,43,7,30,48,220,148,239,191,189,239,191,189,88,239,191,189,239,191,189,69,104,120,239,191,189,3,21,239,191,189,32,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,69,239,191,189,66,46,7,239,191,189,12,7,239,191,189,239,191,189,60,68,239,191,189,239,191,189,239,191,189,61,69,35,17,239,191,189,239,191,189,239,191,189,239,191,189,15,38,127,207,160,125,58,57,239,191,189,239,191,189,123,239,191,189,97,239,191,189,239,191,189,62,239,191,189,107,239,191,189,111,124,109,239,191,189,7,108,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,1,51,7,239,191,189,239,191,189,107,239,191,189,89,95,64,119,66,65,239,191,189,239,191,189,239,191,189,239,191,189,102,121,32,81,121,239,191,189,73,119,98,1,48,239,191,189,101,43,239,191,189,239,191,189,45,96,87,239,191,189,239,191,189,239,191,189,0,36,22,29,44,100,239,191,189,43,21,239,191,189,5,239,191,189,106,105,94,50,239,191,189,239,191,189,239,191,189,16,239,191,189,105,90,239,191,189,239,191,189,21,239,191,189,70,19,41,90,239,191,189,47,239,191,189,120,239,191,189,59,92,117,239,191,189,55,235,149,149,119,239,191,189,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,87,36,22,239,191,189,125,23,239,191,189,63,15,239,191,189,239,191,189,239,191,189,97,239,191,189,43,26,239,191,189,93,83,126,239,191,189,40,239,191,189,84,14,239,191,189,24,80,239,191,189,15,239,191,189,119,239,191,189,51,239,191,189,56,94,14,53,32,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,60,3,239,191,189,239,191,189,13,71,239,191,189,24,4,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,53,73,15,46,20,239,191,189,239,191,189,40,51,126,111,239,191,189,239,191,189,84,239,191,189,108,21,239,191,189,239,191,189,1,66,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,70,96,33,100,239,191,189,239,191,189,239,191,189,239,191,189,126,14,239,191,189,239,191,189,67,30,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,70,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,96,92,31,239,191,189,239,191,189,18,26,239,191,189,27,71,239,191,189,2,94,37,239,191,189,239,191,189,239,191,189,35,239,191,189,46,239,191,189,37,239,191,189,46,239,191,189,239,191,189,55,107,229,135,143,4,56,15,239,191,189,94,208,191,87,239,191,189,127,239,191,189,114,239,191,189,239,191,189,68,8,239,191,189,16,239,191,189,63,239,191,189,239,191,189,23,99,58,239,191,189,239,191,189,239,191,189,218,174,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,39,239,191,189,239,191,189,83,239,191,189,205,179,45,95,239,191,189,239,191,189,115,90,26,71,239,191,189,64,32,239,191,189,84,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,122,239,191,189,45,239,191,189,239,191,189,64,1,112,104,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,102,83,239,191,189,75,239,191,189,89,239,191,189,239,191,189,65,239,191,189,71,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,85,42,64,55,69,239,191,189,118,7,239,191,189,207,184,20,239,191,189,78,78,114,239,191,189,88,125,39,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,92,124,239,191,189,220,138,239,191,189,239,191,189,27,102,239,191,189,239,191,189,33,127,79,68,55,239,191,189,239,191,189,115,123,239,191,189,80,239,191,189,60,97,239,191,189,66,115,79,112,35,89,23,25,239,191,189,1,239,191,189,45,92,28,50,239,191,189,239,191,189,1,54,239,191,189,239,191,189,77,239,191,189,80,223,131,121,64,99,43,33,239,191,189,41,0,110,239,191,189,23,23,239,191,189,239,191,189,104,54,239,191,189,53,239,191,189,239,191,189,51,86,73,17,101,239,191,189,6,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,215,182,94,239,191,189,84,4,92,239,191,189,239,191,189,239,191,189,239,191,189,125,110,239,191,189,239,191,189,239,191,189,116,239,191,189,27,79,34,239,191,189,81,198,136,239,191,189,239,191,189,33,121,239,191,189,25,239,191,189,239,191,189,239,191,189,127,91,85,66,239,191,189,215,169,239,191,189,64,239,191,189,27,239,191,189,239,191,189,61,97,83,68,117,79,239,191,189,239,191,189,100,239,191,189,87,239,191,189,63,58,51,239,191,189,239,191,189,76,239,191,189,239,191,189,3,34,55,31,118,92,120,121,55,17,51,108,1,239,191,189,239,191,189,24,239,191,189,239,191,189,16,239,191,189,42,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,22,239,191,189,69,239,191,189,17,239,191,189,27,41,52,239,191,189,25,239,191,189,68,239,191,189,83,100,239,191,189,72,86,27,29,239,191,189,59,2,91,82,7,115,32,239,191,189,239,191,189,239,191,189,3,33,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,87,6,239,191,189,239,191,189,239,191,189,8,239,191,189,94,19,239,191,189,55,69,90,239,191,189,239,191,189,9,239,191,189,239,191,189,120,19,239,191,189,19,239,191,189,61,239,191,189,65,239,191,189,239,191,189,119,1,239,191,189,29,239,191,189,44,239,191,189,239,191,189,68,68,116,74,64,21,12,32,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,104,58,239,191,189,239,191,189,56,67,39,239,191,189,194,165,239,191,189,239,191,189,239,191,189,18,6,25,239,191,189,46,51,239,191,189,239,191,189,60,65,46,211,160,7,239,191,189,239,191,189,102,239,191,189,95,234,147,152,239,191,189,107,239,191,189,244,129,180,139,239,191,189,239,191,189,239,191,189,68,45,239,191,189,25,239,191,189,239,191,189,122,239,191,189,23,30,44,239,191,189,239,191,189,239,191,189,60,105,32,92,12,33,16,83,122,120,239,191,189,239,191,189,58,239,191,189,21,58,239,191,189,113,100,239,191,189,115,13,239,191,189,14,239,191,189,30,106,239,191,189,117,107,239,191,189,239,191,189,239,191,189,92,69,75,106,36,194,167,52,239,191,189,126,239,191,189,239,191,189,239,191,189,63,66,1,239,191,189,113,239,191,189,30,83,36,46,239,191,189,17,239,191,189,239,191,189,61,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,207,150,239,191,189,239,191,189,89,239,191,189,239,191,189,4,49,239,191,189,239,191,189,40,209,145,239,191,189,12,200,164,56,22,239,191,189,88,81,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,22,23,98,239,191,189,55,20,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,15,239,191,189,107,77,21,239,191,189,239,191,189,67,239,191,189,86,67,118,68,239,191,189,239,191,189,98,239,191,189,30,72,26,115,124,82,239,191,189,124,30,50,103,239,191,189,239,191,189,117,239,191,189,120,7,239,191,189,98,239,191,189,239,191,189,90,239,191,189,25,212,189,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,214,146,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,60,19,105,239,191,189,239,191,189,239,191,189,100,0,239,191,189,239,191,189,211,164,222,135,51,239,191,189,20,239,191,189,239,191,189,79,239,191,189,49,51,38,239,191,189,239,191,189,99,62,239,191,189,60,197,157,121,239,191,189,90,239,191,189,43,239,191,189,239,191,189,239,191,189,19,239,191,189,55,239,191,189,104,45,239,191,189,111,114,196,131,54,239,191,189,44,76,11,239,191,189,67,28,18,97,37,124,98,239,191,189,53,43,62,45,70,239,191,189,84,239,191,189,56,59,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,204,190,239,191,189,239,191,189,239,191,189,76,83,79,11,239,191,189,239,191,189,91,239,191,189,73,239,191,189,239,191,189,50,1,239,191,189,66,43,31,47,114,239,191,189,239,191,189,96,16,239,191,189,239,191,189,239,191,189,38,110,89,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,37,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,92,239,191,189,62,239,191,189,97,20,239,191,189,236,149,139,41,113,239,191,189,34,239,191,189,100,239,191,189,98,126,239,191,189,215,163,239,191,189,239,191,189,239,191,189,239,191,189,3,239,190,184,30,33,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,21,239,191,189,23,239,191,189,18,239,191,189,105,111,75,239,191,189,61,10,239,191,189,38,239,191,189,52,83,239,191,189,103,16,239,191,189,46,239,191,189,108,8,35,39,239,191,189,239,191,189,239,191,189,63,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,239,191,189,127,114,8,239,191,189,22,239,191,189,96,239,191,189,239,191,189,77,35,239,191,189,65,239,191,189,219,170,239,191,189,239,191,189,201,158,239,191,189,112,54,39,239,191,189,63,206,142,99,239,191,189,73,118,84,239,191,189,212,139,239,191,189,88,239,191,189,239,191,189,13,119,27,18,87,65,37,14,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,235,151,170,239,191,189,239,191,189,33,239,191,189,52,233,130,171,20,239,191,189,6,7,30,1,239,191,189,239,191,189,239,191,189,15,84,36,207,188,26,239,191,189,239,191,189,104,239,191,189,239,191,189,114,239,191,189,60,239,191,189,2,239,191,189,239,191,189,239,191,189,217,142,239,191,189,103,66,84,30,7,239,191,189,239,191,189,103,121,239,191,189,81,239,191,189,66,239,191,189,31,15,6,58,239,191,189,239,191,189,239,191,189,239,191,189,111,122,54,239,191,189,61,239,191,189,8,72,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,109,60,102,239,191,189,33,239,191,189,239,191,189,91,239,191,189,125,239,191,189,239,191,189,54,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,94,49,197,154,92,239,191,189,200,146,239,191,189,11,239,191,189,239,191,189,19,239,191,189,99,239,191,189,88,67,239,191,189,239,191,189,27,239,191,189,239,191,189,118,239,191,189,114,1,32,239,191,189,239,191,189,19,123,19,113,239,191,189,53,1,239,191,189,239,191,189,115,239,191,189,80,214,147,30,71,239,191,189,23,57,43,239,191,189,239,191,189,108,239,191,189,239,191,189,211,135,79,25,233,133,168,239,191,189,25,239,191,189,6,219,162,239,191,189,45,239,191,189,208,172,93,79,202,180,21,88,56,120,239,191,189,239,191,189,10,109,15,84,239,191,189,9,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,23,108,87,82,11,239,191,189,239,191,189,239,191,189,15,112,22,31,114,239,191,189,239,191,189,112,239,191,189,239,191,189,75,14,239,191,189,239,191,189,239,191,189,17,239,191,189,127,239,191,189,98,239,191,189,112,101,82,239,191,189,121,65,239,191,189,32,239,191,189,239,191,189,7,88,117,239,191,189,239,191,189,122,239,191,189,59,239,191,189,239,191,189,59,80,40,44,239,191,189,17,31,239,191,189,70,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,11,239,191,189,39,239,191,189,239,191,189,20,80,5,239,191,189,67,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,67,53,239,191,189,239,191,189,31,60,38,73,104,34,239,191,189,239,191,189,239,191,189,79,115,9,125,96,216,182,239,191,189,67,8,121,239,191,189,74,66,239,191,189,239,191,189,239,191,189,39,65,239,191,189,239,191,189,72,93,122,52,127,206,156,221,144,239,191,189,44,117,6,239,191,189,207,172,239,191,189,239,191,189,239,191,189,239,191,189,14,0,45,91,239,191,189,239,191,189,239,191,189,61,82,107,239,191,189,239,191,189,44,58,6,22,239,191,189,73,239,191,189,10,26,239,191,189,117,76,118,68,239,191,189,24,74,102,239,191,189,118,206,183,72,47,31,91,239,191,189,239,191,189,95,239,191,189,36,239,191,189,239,191,189,73,204,143,239,191,189,30,77,239,191,189,239,191,189,239,191,189,40,76,239,191,189,14,97,239,191,189,77,36,7,4,106,47,93,239,191,189,239,191,189,239,191,189,110,239,191,189,54,54,239,191,189,90,239,191,189,239,191,189,239,191,189,45,120,28,95,44,25,218,182,7,239,191,189,239,191,189,119,17,239,191,189,25,239,191,189,58,239,191,189,32,45,87,239,191,189,73,239,191,189,210,175,95,126,239,191,189,11,206,189,239,191,189,71,52,24,48,239,191,189,239,191,189,239,191,189,120,86,239,191,189,239,191,189,111,93,239,191,189,29,239,191,189,239,191,189,239,191,189,110,239,191,189,111,65,47,75,239,191,189,125,239,191,189,91,44,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,1,85,117,239,191,189,52,239,191,189,222,148,84,14,99,81,108,97,218,139,239,191,189,79,41,239,191,189,239,191,189,239,191,189,239,191,189,56,93,50,52,75,90,51,239,191,189,209,148,45,27,89,10,45,58,19,239,191,189,239,191,189,239,191,189,61,40,43,77,239,191,189,82,112,239,191,189,239,191,189,115,239,191,189,239,191,189,24,112,60,75,1,105,239,191,189,58,33,239,191,189,239,191,189,239,191,189,62,69,239,191,189,239,191,189,239,191,189,21,22,71,69,14,239,191,189,15,50,239,191,189,58,239,191,189,239,191,189,106,239,191,189,93,239,191,189,90,3,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,110,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,9,239,191,189,45,24,28,47,239,191,189,80,239,191,189,239,191,189,52,25,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,108,74,239,191,189,85,239,191,189,121,239,191,189,214,133,40,239,191,189,106,239,191,189,0,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,28,122,98,34,2,239,191,189,98,85,43,113,56,60,25,239,191,189,239,191,189,94,239,191,189,239,191,189,213,179,84,69,239,191,189,114,85,75,55,51,30,21,72,121,18,28,239,191,189,239,191,189,239,191,189,82,52,22,110,239,191,189,19,239,191,189,81,239,191,189,15,239,191,189,19,69,74,239,191,189,117,239,191,189,239,191,189,239,191,189,204,182,239,191,189,46,54,21,41,239,191,189,42,239,191,189,59,239,191,189,117,9,97,239,191,189,239,191,189,229,153,149,239,191,189,239,191,189,239,191,189,118,36,239,191,189,2,2,46,37,239,191,189,239,191,189,32,239,191,189,228,155,171,239,191,189,56,239,191,189,239,191,189,47,239,191,189,84,239,191,189,16,38,9,239,191,189,79,239,191,189,60,60,109,52,239,191,189,17,10,239,191,189,18,38,239,191,189,4,86,81,239,191,189,125,37,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,82,4,239,191,189,239,191,189,19,90,239,191,189,31,239,191,189,239,191,189,22,239,191,189,228,138,176,223,154,221,131,239,191,189,195,159,239,191,189,239,191,189,50,49,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,57,239,191,189,26,47,22,30,239,191,189,89,25,7,11,46,63,239,191,189,239,191,189,239,191,189,116,239,191,189,90,239,191,189,41,127,239,191,189,117,239,191,189,239,191,189,239,191,189,20,1,239,191,189,60,52,115,83,111,239,191,189,239,191,189,123,239,191,189,41,106,239,191,189,239,191,189,95,239,191,189,239,191,189,54,239,191,189,111,55,89,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,110,95,20,239,191,189,5,6,57,239,191,189,11,49,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,20,43,31,22,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,119,122,123,239,191,189,239,191,189,8,239,191,189,90,28,210,129,101,239,191,189,90,109,239,191,189,92,239,191,189,48,123,26,122,208,185,239,191,189,125,71,239,191,189,239,191,189,45,104,239,191,189,96,60,239,191,189,120,239,191,189,120,239,191,189,124,45,239,191,189,239,191,189,31,125,239,191,189,118,197,168,53,239,191,189,28,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,17,43,239,191,189,35,239,191,189,239,191,189,106,239,191,189,4,120,239,191,189,239,191,189,34,227,146,180,78,87,239,191,189,239,191,189,59,239,191,189,7,239,191,189,239,191,189,80,87,75,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,103,209,187,10,239,191,189,211,180,239,191,189,239,191,189,239,191,189,44,239,191,189,18,239,191,189,22,239,191,189,87,69,239,191,189,239,191,189,26,36,61,40,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,38,84,124,239,191,189,239,191,189,67,105,239,191,189,239,191,189,239,191,189,77,9,86,70,62,102,239,191,189,239,191,189,92,54,126,239,191,189,72,76,239,191,189,126,239,191,189,107,60,239,191,189,239,191,189,239,191,189,19,87,239,191,189,239,191,189,117,239,191,189,30,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,68,49,93,45,112,239,191,189,86,80,11,47,19,122,98,239,191,189,239,191,189,102,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,29,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,38,11,56,239,191,189,108,94,1,61,239,191,189,69,239,191,189,239,191,189,52,239,185,150,14,91,36,239,191,189,41,239,191,189,64,101,239,191,189,239,191,189,107,57,118,239,191,189,239,191,189,239,191,189,239,191,189,98,215,157,45,96,4,239,191,189,239,191,189,122,205,171,66,6,239,191,189,88,99,67,72,36,109,239,191,189,239,191,189,97,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,23,28,104,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,34,124,25,19,239,191,189,51,108,239,191,189,20,54,239,191,189,118,239,191,189,89,96,66,239,191,189,53,239,191,189,239,191,189,21,14,71,239,191,189,64,71,218,154,239,191,189,239,191,189,239,191,189,39,106,54,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,30,239,191,189,70,239,191,189,74,15,77,20,239,191,189,239,191,189,39,127,19,53,90,210,141,89,209,188,52,115,99,12,239,191,189,239,191,189,220,153,239,191,189,66,32,62,9,239,191,189,119,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,12,44,66,239,191,189,239,191,189,78,78,12,100,58,239,191,189,79,239,191,189,22,227,149,174,102,112,123,36,115,239,191,189,239,191,189,117,35,119,239,191,189,51,239,191,189,239,191,189,239,191,189,2,61,103,54,239,191,189,239,191,189,11,239,191,189,75,239,191,189,239,191,189,239,191,189,126,239,191,189,5,239,191,189,239,191,189,9,79,100,239,191,189,62,210,153,81,88,64,121,239,191,189,107,239,191,189,212,172,59,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,48,107,239,191,189,239,191,189,106,239,191,189,30,239,191,189,78,42,65,40,239,191,189,239,191,189,106,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,57,67,109,89,239,191,189,239,191,189,62,239,191,189,9,239,191,189,14,102,4,92,239,191,189,91,6,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,89,36,239,191,189,45,80,239,191,189,239,191,189,239,191,189,39,78,239,191,189,239,191,189,103,239,191,189,31,239,191,189,239,191,189,4,201,135,239,191,189,30,53,239,191,189,239,191,189,49,119,239,191,189,239,191,189,239,191,189,23,22,31,239,191,189,96,63,204,190,239,191,189,121,239,191,189,239,191,189,55,239,191,189,45,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,61,23,64,239,191,189,6,239,191,189,125,239,191,189,91,19,5,120,104,239,191,189,239,191,189,72,5,90,239,191,189,239,191,189,239,191,189,41,80,239,191,189,231,159,130,14,109,239,191,189,82,239,191,189,19,239,191,189,239,191,189,239,191,189,16,90,239,191,189,79,49,127,101,239,191,189,77,239,191,189,239,191,189,106,108,239,191,189,124,239,191,189,5,239,191,189,20,239,191,189,90,23,30,239,191,189,239,191,189,126,239,191,189,114,239,191,189,239,191,189,85,239,191,189,239,191,189,105,239,191,189,239,191,189,53,239,191,189,198,169,239,191,189,74,112,25,239,191,189,24,239,191,189,239,191,189,36,239,191,189,239,191,189,56,239,191,189,55,239,191,189,239,191,189,60,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,121,22,239,191,189,3,239,191,189,124,77,115,20,106,239,191,189,16,239,191,189,4,63,239,191,189,239,191,189,61,78,239,191,189,239,191,189,28,13,239,191,189,239,191,189,239,191,189,239,191,189,127,61,18,23,239,191,189,96,212,160,239,191,189,113,239,191,189,230,167,129,78,36,91,92,116,81,55,118,114,239,191,189,84,239,191,189,5,239,191,189,92,9,26,31,204,186,239,191,189,54,1,82,239,191,189,239,191,189,100,239,191,189,112,61,86,239,191,189,98,239,191,189,239,191,189,239,191,189,47,111,239,191,189,239,191,189,9,239,191,189,59,239,191,189,84,91,38,67,239,191,189,87,127,26,239,191,189,24,34,8,120,239,191,189,125,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,13,99,87,239,191,189,32,47,239,191,189,107,197,143,239,191,189,84,239,191,189,32,9,25,239,191,189,60,239,191,189,239,191,189,239,191,189,213,168,239,191,189,239,191,189,45,239,191,189,50,199,162,239,191,189,87,239,191,189,25,239,191,189,62,108,239,191,189,239,191,189,239,191,189,239,191,189,92,121,239,191,189,113,208,178,239,191,189,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,51,6,239,191,189,119,239,191,189,239,191,189,35,239,191,189,55,239,191,189,239,191,189,65,202,172,239,191,189,66,239,191,189,239,191,189,239,191,189,120,46,239,191,189,56,92,5,100,239,191,189,239,191,189,4,21,195,148,81,239,191,189,56,239,191,189,6,70,93,9,57,239,191,189,239,191,189,239,191,189,61,113,2,60,239,191,189,127,70,54,239,191,189,21,239,191,189,102,206,149,113,45,239,191,189,92,239,191,189,33,239,191,189,239,191,189,239,191,189,60,115,39,59,239,191,189,96,239,191,189,63,126,26,98,31,239,191,189,97,239,191,189,220,133,207,140,239,191,189,59,13,239,191,189,239,191,189,112,239,191,189,48,67,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,2,76,107,118,239,191,189,239,191,189,35,239,191,189,63,82,76,20,239,191,189,46,239,191,189,45,239,191,189,239,191,189,48,239,191,189,99,239,191,189,239,191,189,101,239,191,189,19,239,191,189,239,191,189,24,65,62,239,191,189,17,100,11,239,191,189,239,191,189,239,191,189,239,191,189,100,32,91,239,191,189,63,239,191,189,42,204,152,38,239,191,189,121,239,191,189,239,191,189,74,115,110,239,191,189,5,239,191,189,239,191,189,48,75,103,239,191,189,19,239,191,189,2,79,34,29,239,191,189,239,191,189,239,191,189,239,191,189,109,7,239,191,189,73,239,191,189,239,191,189,70,2,239,191,189,239,191,189,200,141,16,239,191,189,239,191,189,239,191,189,239,191,189,98,45,51,239,191,189,239,191,189,43,25,40,125,117,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,122,80,239,191,189,46,239,191,189,239,191,189,53,239,191,189,239,191,189,59,94,239,191,189,92,21,109,239,191,189,239,191,189,239,191,189,18,58,30,239,191,189,239,191,189,201,140,239,191,189,239,191,189,31,239,191,189,53,239,191,189,21,70,56,239,191,189,239,191,189,5,59,14,119,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,59,12,66,68,89,76,92,239,191,189,85,239,191,189,239,191,189,239,191,189,91,22,239,191,189,80,81,239,191,189,112,22,239,191,189,239,191,189,18,239,191,189,93,4,239,191,189,121,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,42,239,191,189,98,73,239,191,189,97,239,191,189,67,239,191,189,70,127,239,191,189,4,79,239,191,189,239,191,189,239,191,189,85,239,191,189,226,172,181,17,5,239,191,189,239,191,189,51,6,93,239,191,189,239,191,189,239,191,189,44,90,239,191,189,37,47,19,81,97,239,191,189,239,191,189,5,99,28,99,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,64,6,239,191,189,117,239,191,189,92,81,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,211,128,239,191,189,3,39,78,232,176,173,239,191,189,15,239,191,189,69,26,239,191,189,239,191,189,102,37,239,191,189,76,72,239,191,189,239,191,189,81,52,239,191,189,239,191,189,21,239,191,189,68,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,239,191,189,47,115,239,191,189,239,142,152,239,191,189,2,239,191,189,114,69,38,64,239,191,189,239,191,189,16,239,191,189,239,191,189,10,239,191,189,226,164,156,21,239,191,189,88,89,0,3,78,108,239,191,189,239,191,189,25,94,4,98,239,191,189,29,18,18,7,209,178,239,191,189,239,191,189,98,20,239,191,189,33,37,32,239,191,189,41,76,239,191,189,32,239,191,189,239,191,189,63,114,2,239,191,189,36,217,145,239,191,189,113,78,11,79,77,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,68,37,239,191,189,40,76,239,191,189,94,205,143,228,136,176,222,160,16,71,239,191,189,239,191,189,66,13,239,191,189,239,191,189,239,191,189,239,191,189,216,166,239,191,189,114,239,191,189,54,239,191,189,35,73,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,39,199,156,239,191,189,87,119,239,191,189,36,17,0,239,191,189,5,127,85,16,80,239,191,189,197,188,91,239,191,189,239,191,189,239,191,189,115,51,106,239,191,189,76,98,239,191,189,77,6,239,191,189,9,59,10,239,191,189,42,239,191,189,239,191,189,37,239,191,189,94,67,239,191,189,239,191,189,204,170,239,191,189,26,239,191,189,72,43,121,239,191,189,15,6,239,191,189,67,40,114,196,158,18,239,191,189,120,239,191,189,7,21,239,191,189,48,239,191,189,123,239,191,189,239,191,189,90,46,81,197,172,239,191,189,7,101,72,20,4,239,191,189,46,50,43,3,239,191,189,239,191,189,101,96,239,191,189,76,239,191,189,53,239,191,189,197,149,74,239,191,189,12,239,191,189,112,239,191,189,124,239,191,189,30,239,191,189,239,191,189,106,94,85,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,127,239,191,189,239,191,189,86,40,97,239,191,189,197,143,239,191,189,239,191,189,114,27,94,7,55,106,61,239,191,189,75,77,239,191,189,80,43,239,191,189,1,239,191,189,78,216,151,89,239,191,189,106,97,8,26,239,191,189,26,239,191,189,239,191,189,194,179,239,191,189,67,239,191,189,239,191,189,124,51,65,30,239,191,189,75,239,191,189,90,239,191,189,91,38,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,105,239,191,189,47,79,117,239,191,189,76,93,3,239,191,189,119,2,239,191,189,239,191,189,88,91,99,23,239,191,189,14,102,124,7,110,239,191,189,239,191,189,92,105,3,239,191,189,72,239,191,189,50,239,191,189,1,80,77,239,191,189,204,130,81,239,191,189,239,191,189,239,191,189,34,88,104,18,59,239,191,189,239,191,189,98,19,239,191,189,3,119,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,89,107,68,239,191,189,239,191,189,239,191,189,8,14,239,191,189,75,80,239,191,189,120,239,191,189,58,75,102,56,74,46,113,3,239,191,189,123,214,137,239,191,189,239,191,189,82,239,191,189,67,110,239,191,189,126,239,191,189,120,239,191,189,239,191,189,103,51,239,191,189,19,22,239,191,189,239,191,189,239,191,189,239,191,189,99,116,42,239,191,189,239,191,189,239,191,189,104,94,239,191,189,84,13,32,86,239,191,189,45,83,12,79,239,191,189,20,239,191,189,239,191,189,221,180,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,78,24,40,92,79,239,191,189,239,191,189,21,40,239,191,189,52,118,71,239,191,189,1,239,191,189,195,182,239,191,189,239,191,189,208,176,239,191,189,77,239,191,189,17,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,123,7,105,5,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,74,239,191,189,61,239,191,189,29,239,191,189,8,11,64,214,165,211,157,118,239,191,189,116,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,213,151,239,191,189,239,191,189,239,191,189,21,110,239,191,189,38,87,239,191,189,239,191,189,117,239,191,189,11,112,239,191,189,239,191,189,239,191,189,27,239,191,189,106,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,72,239,191,189,239,191,189,71,86,39,63,71,239,191,189,55,2,119,31,55,239,191,189,239,191,189,98,239,191,189,43,20,239,191,189,98,239,191,189,35,107,239,191,189,239,191,189,74,120,126,239,191,189,111,53,239,191,189,91,34,239,191,189,84,239,191,189,73,69,112,60,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,220,177,111,239,191,189,239,191,189,66,77,239,191,189,65,239,191,189,220,168,34,13,239,191,189,239,191,189,239,191,189,102,37,239,191,189,125,120,239,191,189,196,147,239,191,189,74,12,55,89,239,191,189,116,51,239,191,189,120,2,239,191,189,80,239,191,189,239,191,189,239,191,189,18,239,191,189,81,22,14,239,191,189,38,239,191,189,86,12,124,239,191,189,57,46,100,239,191,189,97,15,239,191,189,65,91,239,191,189,239,191,189,103,117,41,239,191,189,239,191,189,7,126,239,191,189,43,29,107,239,191,189,127,239,191,189,239,191,189,41,35,34,239,191,189,77,61,239,191,189,239,191,189,239,191,189,19,34,46,239,191,189,2,84,239,191,189,201,137,239,191,189,239,191,189,109,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,28,195,157,96,239,191,189,239,191,189,239,191,189,239,191,189,31,121,239,191,189,239,191,189,239,191,189,123,95,239,191,189,239,191,189,217,143,52,41,200,179,239,191,189,239,191,189,239,191,189,235,188,145,40,239,191,189,239,191,189,239,191,189,32,239,191,189,6,118,239,191,189,47,19,239,191,189,44,53,61,47,239,191,189,239,191,189,29,14,15,43,117,239,191,189,239,191,189,106,83,15,239,191,189,106,0,239,191,189,41,67,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,88,11,12,239,191,189,124,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,206,174,239,191,189,239,191,189,29,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,86,46,35,239,191,189,239,191,189,62,87,84,239,191,189,107,127,239,191,189,4,31,204,130,239,191,189,110,239,191,189,239,191,189,239,191,189,115,1,34,123,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,20,96,53,239,191,189,122,89,7,19,85,30,120,239,191,189,239,191,189,79,239,191,189,125,239,191,189,81,63,10,71,239,191,189,93,3,239,191,189,45,0,6,40,68,239,191,189,60,239,191,189,239,191,189,107,84,239,191,189,105,82,41,239,191,189,91,106,122,89,120,108,210,130,68,28,119,239,191,189,239,191,189,73,3,49,239,191,189,76,88,0,239,191,189,16,239,191,189,60,239,191,189,5,227,163,173,116,239,191,189,22,24,239,191,189,95,239,191,189,107,239,191,189,46,239,191,189,239,191,189,40,23,98,9,239,191,189,33,81,239,191,189,239,191,189,5,239,191,189,239,191,189,112,89,239,191,189,28,122,102,239,191,189,222,150,239,191,189,119,239,191,189,219,169,239,191,189,32,239,191,189,102,239,191,189,41,124,6,239,191,189,121,239,191,189,239,191,189,11,239,191,189,81,16,239,191,189,239,191,189,69,38,123,5,239,191,189,239,191,189,239,191,189,90,62,239,191,189,77,239,191,189,239,191,189,239,191,189,46,80,56,49,22,48,122,239,191,189,116,105,113,113,66,239,191,189,91,45,239,191,189,239,191,189,239,191,189,126,125,239,191,189,45,239,191,189,40,239,191,189,117,48,239,191,189,215,184,104,239,191,189,57,197,187,239,191,189,32,239,191,189,239,191,189,126,239,191,189,239,191,189,18,239,191,189,239,191,189,74,106,239,191,189,17,24,199,180,33,34,121,34,84,9,27,239,191,189,74,239,191,189,239,191,189,239,191,189,8,239,191,189,8,239,191,189,239,191,189,239,191,189,108,239,191,189,31,239,191,189,239,191,189,2,27,78,239,191,189,239,191,189,11,49,217,191,239,191,189,23,75,239,191,189,53,23,239,191,189,239,191,189,52,239,191,189,21,97,239,191,189,239,191,189,65,239,191,189,95,110,239,191,189,60,239,191,189,34,67,119,7,5,104,106,239,191,189,25,239,191,189,221,191,84,239,191,189,239,191,189,117,6,109,85,239,191,189,46,239,191,189,239,191,189,239,191,189,194,177,111,98,239,191,189,106,20,239,191,189,30,239,191,189,239,191,189,212,145,48,239,191,189,116,65,27,239,191,189,55,239,191,189,55,16,79,51,89,1,86,239,191,189,102,87,71,239,191,189,77,66,239,191,189,239,191,189,76,72,120,239,191,189,11,54,73,30,239,191,189,117,61,239,191,189,56,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,32,46,119,105,239,191,189,37,239,191,189,62,239,191,189,75,67,239,191,189,239,191,189,121,239,191,189,210,135,111,239,191,189,0,239,191,189,48,239,191,189,239,191,189,196,176,86,122,239,191,189,74,239,191,189,52,239,191,189,21,239,191,189,30,239,191,189,15,11,239,191,189,126,10,239,191,189,85,49,79,239,191,189,239,191,189,239,191,189,239,191,189,117,70,239,191,189,239,191,189,239,191,189,239,155,147,239,191,189,13,239,191,189,61,239,191,189,65,119,15,54,239,191,189,239,191,189,2,120,100,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,117,2,239,191,189,239,191,189,239,191,189,213,141,239,191,189,44,58,239,191,189,60,106,239,191,189,22,65,115,81,239,191,189,34,24,239,191,189,32,33,239,191,189,239,191,189,239,191,189,239,191,189,8,30,80,93,239,191,189,47,10,55,239,191,189,239,191,189,108,239,191,189,93,9,239,191,189,239,191,189,83,239,191,189,13,102,239,191,189,64,72,77,95,239,191,189,92,56,118,97,239,191,189,216,171,239,191,189,36,28,239,191,189,37,90,59,239,191,189,222,134,239,191,189,239,191,189,239,191,189,239,191,189,15,33,110,239,191,189,21,239,191,189,123,55,239,191,189,239,191,189,3,239,191,189,81,239,191,189,239,191,189,239,191,189,89,220,147,62,124,239,191,189,23,45,106,239,191,189,115,239,191,189,239,191,189,239,191,189,104,107,239,191,189,77,22,8,239,191,189,239,191,189,239,191,189,47,239,191,189,92,70,239,191,189,39,9,103,32,29,44,239,191,189,80,239,191,189,72,41,239,191,189,86,239,191,189,239,191,189,28,8,123,13,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,15,211,136,70,239,191,189,5,96,107,82,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,46,239,191,189,39,45,79,17,239,191,189,239,191,189,239,191,189,239,191,189,101,101,102,201,166,239,191,189,117,239,191,189,78,213,154,74,239,191,189,239,191,189,239,191,189,127,96,239,191,189,239,191,189,3,98,57,6,239,191,189,239,191,189,239,191,189,239,191,189,57,52,239,191,189,112,221,137,239,191,189,56,38,11,113,16,13,239,191,189,51,239,191,189,89,239,191,189,27,113,78,207,177,120,239,191,189,239,191,189,127,44,94,239,191,189,239,191,189,200,189,239,191,189,103,26,81,41,109,39,200,166,88,85,18,239,191,189,239,191,189,239,191,189,5,42,121,239,191,189,239,191,189,118,86,105,239,191,189,12,239,191,189,92,10,239,191,189,217,146,20,239,191,189,82,61,27,25,239,191,189,47,119,239,191,189,239,191,189,119,92,101,237,138,159,38,52,26,7,7,70,121,239,191,189,239,191,189,68,114,16,29,6,239,191,189,239,191,189,64,106,120,239,191,189,239,191,189,239,191,189,73,119,239,191,189,205,174,239,191,189,38,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,119,12,239,191,189,12,239,191,189,28,239,191,189,70,239,191,189,102,215,162,219,177,27,239,191,189,116,239,191,189,239,191,189,59,239,191,189,209,144,57,121,239,191,189,12,112,239,191,189,239,191,189,61,239,191,189,108,39,78,51,239,191,189,108,239,191,189,104,88,239,191,189,16,239,191,189,42,239,191,189,65,10,239,191,189,84,1,239,191,189,95,16,239,191,189,124,103,239,191,189,239,191,189,15,18,239,191,189,19,41,36,54,239,191,189,98,239,191,189,49,7,239,191,189,51,239,191,189,60,68,127,67,79,239,191,189,239,191,189,101,239,191,189,85,59,34,12,23,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,86,239,191,189,121,239,191,189,239,191,189,239,191,189,30,239,191,189,35,123,76,37,92,239,191,189,239,191,189,97,239,191,189,36,67,0,68,239,191,189,239,191,189,239,191,189,239,191,189,1,42,239,191,189,239,191,189,48,239,191,189,45,239,191,189,123,239,191,189,203,152,113,91,239,191,189,239,191,189,66,116,8,22,239,191,189,127,67,69,239,191,189,61,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,201,129,34,239,191,189,30,67,239,191,189,17,71,239,191,189,100,239,191,189,239,191,189,37,87,106,69,239,191,189,239,191,189,59,239,191,189,88,117,117,239,191,189,239,191,189,239,191,189,71,210,150,15,239,191,189,239,191,189,239,191,189,88,239,191,189,79,239,191,189,239,191,189,239,191,189,5,109,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,6,35,239,191,189,30,41,239,191,189,124,27,239,191,189,94,121,63,239,191,189,239,191,189,239,191,189,16,85,204,140,26,125,239,191,189,3,54,61,92,239,191,189,32,5,239,191,189,16,75,239,191,189,239,191,189,9,122,13,115,47,29,210,172,98,116,239,191,189,46,74,40,239,191,189,123,88,8,111,35,51,59,32,93,239,191,189,239,191,189,239,191,189,92,21,239,191,189,77,46,239,191,189,239,191,189,125,76,2,239,191,189,110,72,239,191,189,105,239,191,189,239,191,189,15,17,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,111,239,191,189,239,191,189,90,239,191,189,239,191,189,99,55,117,239,191,189,239,191,189,39,93,239,191,189,126,239,191,189,66,121,118,107,1,239,191,189,97,210,145,239,191,189,210,186,72,203,139,15,69,83,60,25,239,191,189,239,191,189,82,79,57,55,239,191,189,59,239,191,189,103,77,239,191,189,239,191,189,239,191,189,78,17,25,239,191,189,217,147,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,10,69,101,239,191,189,80,38,38,49,239,191,189,9,38,43,42,101,69,39,85,125,122,239,191,189,239,191,189,121,239,191,189,201,180,42,85,239,191,189,239,191,189,72,40,48,239,191,189,67,71,45,239,191,189,239,191,189,239,191,189,239,191,189,106,15,239,191,189,41,207,157,239,191,189,123,239,191,189,239,191,189,44,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,70,38,208,151,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,34,239,191,189,239,191,189,94,126,239,191,189,3,62,105,30,239,191,189,228,140,190,20,14,239,191,189,239,191,189,239,191,189,54,76,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,91,201,141,239,191,189,50,239,191,189,239,191,189,117,125,239,191,189,58,239,191,189,0,239,191,189,239,191,189,39,125,239,191,189,98,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,86,1,88,111,82,103,239,191,189,239,191,189,117,239,191,189,116,239,191,189,117,109,76,239,191,189,73,239,191,189,239,191,189,116,77,239,191,189,125,81,239,191,189,45,239,191,189,78,62,8,239,191,189,54,239,191,189,239,191,189,219,150,239,191,189,5,43,32,239,191,189,7,239,191,189,17,239,191,189,76,8,239,191,189,21,6,239,191,189,239,191,189,12,94,239,191,189,239,191,189,239,191,189,6,239,191,189,36,239,191,189,95,104,109,239,191,189,62,32,239,191,189,239,191,189,239,191,189,239,191,189,68,106,101,239,191,189,70,20,107,239,191,189,62,37,9,57,55,64,239,191,189,41,92,44,35,18,239,191,189,32,6,80,45,239,191,189,29,66,71,43,87,239,191,189,94,19,239,191,189,239,191,189,239,191,189,118,80,239,191,189,24,58,239,191,189,239,191,189,239,191,189,38,48,44,239,191,189,20,196,132,109,239,191,189,89,36,99,20,239,191,189,239,191,189,239,191,189,41,239,191,189,19,239,191,189,13,239,191,189,35,239,191,189,105,239,191,189,239,191,189,220,128,239,191,189,94,121,7,239,191,189,6,109,239,191,189,94,50,103,211,142,239,191,189,239,191,189,94,30,239,191,189,239,191,189,239,191,189,239,191,189,238,182,147,50,239,191,189,76,13,111,122,239,191,189,221,168,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,58,5,239,191,189,82,239,191,189,239,191,189,127,31,104,94,74,239,191,189,42,51,239,191,189,11,239,191,189,239,191,189,239,191,189,209,186,96,239,191,189,227,159,137,43,239,191,189,17,239,191,189,239,191,189,239,191,189,8,7,109,239,191,189,35,100,239,191,189,56,57,45,239,191,189,16,48,239,191,189,239,191,189,116,26,239,191,189,82,195,135,239,191,189,239,191,189,218,132,239,191,189,34,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,43,239,191,189,67,0,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,214,182,239,191,189,116,109,239,191,189,58,79,14,239,191,189,34,59,239,191,189,239,191,189,105,90,31,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,32,107,31,19,53,239,191,189,76,24,89,239,191,189,59,239,191,189,77,239,191,189,20,50,8,239,191,189,239,191,189,60,51,62,109,239,191,189,10,11,66,69,8,239,191,189,239,191,189,94,45,80,47,239,191,189,116,15,5,239,191,189,119,81,0,239,191,189,239,191,189,239,191,189,89,34,124,124,239,191,189,8,124,239,191,189,239,191,189,239,191,189,239,191,189,95,9,41,114,6,15,239,191,189,239,191,189,220,139,239,191,189,104,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,92,239,191,189,31,201,139,239,191,189,239,191,189,226,166,154,77,239,191,189,20,6,219,139,112,65,62,239,191,189,239,191,189,34,92,239,191,189,11,239,191,189,239,191,189,97,239,191,189,239,191,189,212,163,22,96,239,191,189,120,82,61,239,191,189,17,36,239,191,189,239,191,189,98,26,203,169,239,191,189,239,191,189,9,84,239,191,189,239,191,189,59,26,58,85,101,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,197,169,239,191,189,239,191,189,89,99,57,50,239,191,189,44,239,191,189,239,191,189,61,239,191,189,239,191,189,63,20,239,191,189,239,191,189,239,191,189,110,51,239,191,189,239,191,189,70,114,34,239,191,189,127,239,191,189,77,239,191,189,239,191,189,1,239,191,189,113,61,239,191,189,239,191,189,103,239,191,189,33,239,191,189,210,180,48,239,191,189,91,239,191,189,126,239,191,189,202,190,28,117,239,191,189,5,239,191,189,109,239,191,189,64,76,239,191,189,6,223,182,239,191,189,59,92,46,1,30,96,46,14,76,80,239,191,189,37,21,118,239,191,189,38,1,239,191,189,239,191,189,17,239,191,189,11,107,239,191,189,239,191,189,239,191,189,38,239,191,189,110,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,124,239,191,189,105,239,191,189,14,41,65,51,239,191,189,87,112,121,37,239,191,189,9,92,239,191,189,7,239,191,189,80,239,191,189,119,239,191,189,239,191,189,7,239,191,189,239,191,189,116,239,191,189,40,208,180,199,143,239,191,189,98,24,239,191,189,239,191,189,98,239,191,189,56,239,191,189,48,66,239,191,189,94,239,191,189,210,150,88,61,17,239,191,189,239,191,189,5,3,239,191,189,239,191,189,239,191,189,75,239,191,189,85,101,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,68,36,50,77,239,191,189,239,191,189,123,102,107,90,43,34,239,191,189,72,207,146,239,191,189,25,239,191,189,127,94,92,239,191,189,81,23,239,191,189,226,151,169,239,191,189,239,191,189,200,142,43,82,51,11,239,191,189,40,73,239,191,189,239,191,189,81,46,88,41,43,12,239,191,189,239,191,189,23,239,191,189,219,174,72,239,191,189,44,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,94,98,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,111,99,239,191,189,239,191,189,239,191,189,106,7,42,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,109,55,239,191,189,106,239,191,189,239,191,189,239,191,189,98,239,191,189,72,239,191,189,239,191,189,239,191,189,7,117,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,92,83,82,239,191,189,79,239,191,189,239,191,189,2,88,29,239,191,189,8,72,55,239,191,189,239,191,189,38,92,239,191,189,239,191,189,65,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,212,128,239,191,189,33,239,191,189,100,16,239,191,189,85,239,191,189,105,239,191,189,60,103,239,191,189,239,191,189,17,218,191,61,63,239,191,189,54,239,191,189,239,191,189,26,14,106,239,191,189,239,191,189,7,239,191,189,38,239,191,189,120,239,191,189,53,239,191,189,55,83,102,231,188,182,82,61,91,85,77,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,82,239,191,189,116,239,191,189,239,191,189,239,191,189,221,157,239,191,189,65,99,119,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,11,239,191,189,127,239,191,189,239,191,189,239,191,189,239,191,189,28,61,239,191,189,239,191,189,239,191,189,239,191,189,37,16,239,191,189,46,65,126,124,72,239,191,189,25,239,191,189,239,191,189,239,191,189,222,175,227,177,145,208,188,239,191,189,239,191,189,107,239,191,189,239,191,189,54,28,239,191,189,96,57,239,191,189,239,191,189,239,191,189,111,81,239,191,189,53,8,70,107,92,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,109,90,239,191,189,93,29,239,191,189,114,239,191,189,239,191,189,239,191,189,107,10,97,239,191,189,239,191,189,106,21,75,239,191,189,239,191,189,33,239,191,189,239,191,189,74,100,95,239,191,189,239,191,189,4,239,191,189,13,111,66,96,6,71,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,59,9,239,191,189,239,191,189,77,239,191,189,239,191,189,106,62,76,75,239,191,189,72,18,239,191,189,117,239,191,189,22,239,191,189,239,191,189,94,239,191,189,31,77,239,191,189,93,24,239,191,189,111,239,191,189,239,191,189,57,60,12,15,91,239,191,189,239,191,189,65,8,29,239,191,189,49,239,191,189,20,90,239,191,189,63,239,191,189,102,74,239,191,189,70,239,191,189,62,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,107,17,110,59,3,94,239,191,189,239,191,189,213,152,239,191,189,239,191,189,105,41,57,239,191,189,94,216,188,9,64,75,239,191,189,239,191,189,110,112,80,239,191,189,81,35,210,169,126,239,191,189,2,239,191,189,239,191,189,60,113,239,191,189,126,239,191,189,239,191,189,239,191,189,55,239,191,189,39,111,239,191,189,11,239,191,189,239,191,189,114,31,31,239,191,189,109,239,191,189,239,191,189,115,222,131,117,239,191,189,18,239,191,189,54,239,191,189,239,191,189,239,191,189,74,103,194,140,68,239,191,189,75,54,239,191,189,40,126,239,191,189,24,67,239,191,189,11,106,239,191,189,21,86,239,191,189,239,191,189,46,239,191,189,59,56,23,112,76,34,239,191,189,239,191,189,239,191,189,111,68,239,191,189,239,191,189,239,191,189,239,191,189,50,33,94,62,75,95,239,191,189,93,239,191,189,89,239,191,189,53,82,239,191,189,69,239,191,189,239,191,189,57,34,80,11,239,191,189,239,191,189,239,191,189,55,239,191,189,205,168,239,191,189,47,90,239,191,189,8,239,191,189,52,73,69,239,191,189,63,121,239,191,189,125,23,109,239,191,189,74,239,191,189,123,126,79,239,191,189,66,206,165,70,117,239,191,189,19,239,191,189,239,191,189,239,191,189,41,239,191,189,94,73,239,191,189,16,239,191,189,239,191,189,85,239,191,189,239,191,189,47,14,239,191,189,124,239,191,189,239,191,189,97,30,44,127,239,191,189,205,148,57,60,239,191,189,212,148,207,139,239,191,189,38,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,16,123,82,213,136,27,74,239,191,189,239,191,189,16,104,33,239,191,189,239,191,189,87,82,9,45,214,147,17,68,239,191,189,239,191,189,91,239,191,189,239,191,189,34,41,239,191,189,239,191,189,108,219,132,84,57,239,191,189,239,191,189,197,163,49,239,191,189,68,61,124,239,191,189,18,115,82,24,239,191,189,105,239,191,189,101,239,191,189,54,239,191,189,85,45,239,191,189,100,239,191,189,239,191,189,117,194,181,239,191,189,103,50,30,239,191,189,106,103,50,98,76,239,191,189,126,4,97,110,114,239,191,189,17,4,59,239,191,189,117,239,191,189,29,239,191,189,90,112,43,63,239,191,189,36,239,191,189,122,239,191,189,239,191,189,239,191,189,64,52,117,43,2,122,3,239,191,189,55,24,80,239,191,189,43,239,191,189,197,143,112,239,191,189,239,191,189,239,191,189,239,191,189,20,123,73,239,191,189,59,239,191,189,239,191,189,40,48,3,62,98,239,191,189,49,239,191,189,239,191,189,239,191,189,56,69,114,239,191,189,239,191,189,9,239,191,189,239,191,189,77,215,148,95,239,191,189,239,191,189,120,239,191,189,43,239,191,189,43,49,199,134,61,239,191,189,7,20,18,104,104,239,191,189,41,239,191,189,78,239,191,189,19,16,46,239,191,189,63,84,59,239,191,189,239,191,189,239,191,189,16,110,239,191,189,239,191,189,5,239,191,189,112,239,191,189,113,239,191,189,52,72,239,191,189,117,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,200,165,31,101,239,191,189,239,191,189,239,191,189,239,191,189,220,139,239,191,189,78,239,191,189,54,4,239,191,189,126,110,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,123,71,23,239,191,189,24,65,239,191,189,8,106,78,239,191,189,65,8,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,113,83,239,191,189,40,239,191,189,101,30,239,191,189,239,191,189,45,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,239,191,189,13,4,46,239,191,189,85,239,191,189,45,239,191,189,46,239,191,189,33,239,191,189,20,239,191,189,118,239,191,189,10,239,191,189,89,124,70,239,191,189,239,191,189,44,239,191,189,33,239,191,189,80,91,239,191,189,239,191,189,7,239,191,189,21,239,191,189,76,122,239,191,189,239,191,189,239,191,189,239,191,189,32,54,30,239,191,189,239,191,189,24,239,191,189,122,6,66,239,191,189,106,106,239,191,189,48,49,1,239,191,189,51,239,191,189,239,191,189,86,98,33,25,239,191,189,239,191,189,31,42,44,51,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,114,239,191,189,9,110,239,191,189,84,239,191,189,46,239,191,189,239,191,189,239,191,189,239,191,189,27,121,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,111,79,239,191,189,15,239,191,189,239,191,189,239,191,189,91,239,191,189,123,239,191,189,41,42,239,191,189,7,2,239,191,189,239,191,189,124,98,106,119,14,239,191,189,84,44,239,191,189,99,92,209,183,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,122,116,200,170,57,29,239,191,189,234,181,160,57,22,239,191,189,239,191,189,10,36,121,239,191,189,239,191,189,65,39,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,196,188,54,58,239,191,189,239,191,189,239,191,189,93,126,239,191,189,239,191,189,49,89,111,199,159,239,191,189,239,191,189,77,239,191,189,213,173,239,191,189,121,64,6,69,82,239,191,189,239,191,189,239,191,189,37,58,100,239,191,189,46,126,101,239,191,189,239,191,189,63,239,191,189,239,191,189,112,239,191,189,125,239,191,189,239,191,189,95,27,1,114,55,104,239,191,189,22,15,239,191,189,239,191,189,239,191,189,59,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,38,239,191,189,86,55,32,60,239,191,189,239,191,189,103,115,239,191,189,239,191,189,78,239,191,189,210,129,239,191,189,31,239,191,189,107,33,90,10,0,239,191,189,126,47,239,191,189,239,191,189,61,239,191,189,239,191,189,219,136,127,18,239,191,189,239,191,189,239,191,189,6,55,33,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,36,116,239,191,189,122,95,239,191,189,239,191,189,93,76,55,43,239,191,189,239,191,189,59,239,191,189,53,44,239,191,189,9,239,191,189,109,239,191,189,239,191,189,239,191,189,76,239,191,189,52,239,191,189,239,191,189,239,191,189,6,66,218,139,99,52,110,76,239,191,189,32,239,191,189,34,239,191,189,116,239,191,189,19,127,239,191,189,98,239,191,189,22,80,239,191,189,239,191,189,54,100,239,191,189,0,45,239,191,189,239,191,189,239,191,189,203,132,48,239,191,189,239,191,189,239,191,189,216,138,239,191,189,239,191,189,13,239,191,189,6,75,239,191,189,97,5,56,58,56,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,110,30,239,191,189,239,191,189,239,191,189,86,65,67,239,191,189,47,239,191,189,35,239,191,189,239,191,189,54,67,239,191,189,239,191,189,239,191,189,106,60,239,191,189,239,191,189,106,77,43,239,191,189,239,191,189,123,79,239,191,189,239,191,189,239,191,189,88,239,191,189,23,78,15,239,191,189,239,191,189,30,36,9,239,191,189,21,239,191,189,53,122,114,239,191,189,38,105,239,191,189,88,115,41,239,191,189,77,203,139,109,200,145,72,239,191,189,73,239,191,189,114,117,44,113,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,55,103,239,191,189,89,8,116,239,191,189,62,68,239,191,189,228,152,139,1,68,105,75,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,69,105,95,115,239,191,189,58,239,191,189,61,239,191,189,21,100,239,191,189,20,239,191,189,29,239,191,189,239,191,189,4,71,239,191,189,221,161,111,239,191,189,239,191,189,102,239,191,189,67,43,239,191,189,106,239,191,189,239,191,189,83,239,191,189,11,97,239,191,189,97,98,71,90,239,191,189,239,191,189,239,191,189,115,54,239,191,189,117,56,61,199,153,52,40,239,191,189,239,191,189,239,191,189,239,191,189,125,114,89,17,1,239,191,189,239,191,189,35,239,191,189,239,191,189,18,38,210,163,239,191,189,70,239,191,189,239,132,163,25,47,48,239,191,189,239,191,189,239,191,189,43,30,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,239,191,189,64,1,80,117,239,191,189,99,17,106,36,239,191,189,238,165,181,117,57,239,191,189,77,65,239,191,189,31,102,7,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,88,57,62,67,239,191,189,201,185,239,191,189,106,239,191,189,48,126,57,239,191,189,239,191,189,104,239,191,189,74,24,239,191,189,239,191,189,97,41,73,56,17,239,191,189,239,191,189,98,111,124,100,239,191,189,239,191,189,107,119,50,239,191,189,2,239,191,189,239,191,189,33,62,54,239,191,189,239,191,189,239,191,189,15,116,101,87,239,191,189,41,71,239,191,189,16,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,7,113,239,191,189,26,122,26,25,239,191,189,105,239,191,189,21,2,2,64,239,191,189,19,239,191,189,89,239,191,189,239,191,189,72,239,191,189,23,239,191,189,59,119,239,191,189,91,239,191,189,39,8,4,239,191,189,239,191,189,25,204,130,110,60,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,68,239,191,189,36,239,191,189,90,53,6,8,239,191,189,10,90,12,239,191,189,3,124,239,191,189,110,65,239,191,189,16,71,46,38,31,239,191,189,65,29,61,239,191,189,239,191,189,0,113,239,191,189,19,50,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,14,113,117,239,191,189,56,60,55,21,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,5,80,25,24,239,191,189,46,239,191,189,9,239,191,189,37,239,191,189,209,148,239,191,189,239,191,189,116,239,191,189,19,239,191,189,239,191,189,23,239,191,189,26,239,191,189,239,191,189,0,239,191,189,239,191,189,70,116,56,51,27,88,48,81,239,191,189,239,191,189,52,239,191,189,123,5,239,191,189,79,239,191,189,103,239,191,189,239,191,189,72,69,38,239,191,189,74,45,119,88,53,103,52,200,139,25,239,191,189,116,237,151,181,60,86,123,239,191,189,27,239,191,189,17,110,18,36,239,191,189,239,191,189,124,88,239,191,189,103,0,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,27,75,239,191,189,108,239,191,189,97,65,20,98,44,239,191,189,108,90,205,131,10,239,191,189,56,239,191,189,101,52,107,122,239,191,189,111,239,191,189,239,191,189,239,191,189,38,80,239,191,189,239,191,189,91,126,95,118,239,191,189,113,25,12,239,191,189,15,104,239,191,189,239,191,189,236,151,154,125,66,223,176,47,122,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,127,239,191,189,17,125,239,191,189,16,239,191,189,109,12,117,75,31,239,191,189,239,191,189,37,2,239,191,189,239,191,189,1,23,69,239,191,189,113,239,191,189,239,191,189,239,191,189,218,175,239,191,189,239,191,189,116,239,191,189,92,81,33,86,68,239,191,189,220,187,45,112,205,147,239,191,189,124,239,191,189,126,239,191,189,24,239,191,189,122,93,239,191,189,57,10,239,191,189,127,84,47,1,239,191,189,102,239,191,189,239,191,189,101,86,66,3,239,191,189,116,15,239,191,189,69,239,191,189,239,191,189,22,239,191,189,109,27,239,191,189,92,2,239,191,189,239,191,189,239,191,189,92,239,191,189,24,23,239,191,189,196,138,239,191,189,239,191,189,111,9,31,239,191,189,43,37,239,191,189,122,0,239,191,189,239,191,189,239,191,189,23,239,191,189,100,239,191,189,239,191,189,18,57,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,33,66,239,191,189,87,239,191,189,1,239,191,189,21,39,69,21,239,191,189,34,239,191,189,80,119,21,239,191,189,47,88,239,191,189,34,239,191,189,120,239,191,189,10,239,191,189,75,216,139,51,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,194,185,239,191,189,239,191,189,125,118,239,191,189,2,239,191,189,52,239,191,189,117,198,156,239,191,189,65,31,98,239,191,189,84,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,27,36,82,239,191,189,12,239,191,189,83,239,191,189,62,239,191,189,41,94,21,1,239,191,189,8,239,191,189,23,85,22,108,239,191,189,96,95,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,103,10,239,191,189,91,239,191,189,239,191,189,27,39,239,191,189,34,239,191,189,94,239,191,189,24,239,191,189,76,220,143,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,116,31,239,191,189,239,191,189,49,43,239,191,189,239,191,189,55,64,239,191,189,239,191,189,83,121,239,191,189,31,88,239,191,189,239,191,189,108,239,191,189,106,71,239,191,189,34,239,191,189,239,191,189,1,51,110,103,38,59,239,191,189,239,191,189,239,191,189,78,62,239,191,189,29,52,86,109,239,191,189,53,112,239,191,189,32,195,139,239,191,189,211,130,89,239,191,189,66,239,191,189,119,6,99,63,239,191,189,83,239,191,189,82,107,62,239,191,189,239,191,189,239,191,189,30,239,191,189,13,239,191,189,54,239,191,189,239,191,189,239,191,189,109,63,239,191,189,111,239,191,189,83,239,191,189,239,191,189,18,239,191,189,102,239,191,189,56,48,221,167,2,239,191,189,239,191,189,239,191,189,49,239,191,189,46,239,191,189,109,239,191,189,239,191,189,1,34,239,191,189,239,191,189,212,138,239,191,189,35,94,29,113,52,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,71,124,220,162,239,191,189,239,191,189,0,65,34,60,68,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,100,89,239,191,189,75,239,191,189,13,126,239,191,189,239,191,189,76,239,191,189,23,122,115,239,191,189,68,37,126,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,104,92,223,172,127,239,191,189,120,115,239,191,189,82,46,99,239,191,189,239,191,189,239,191,189,239,191,189,36,5,94,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,89,79,61,239,191,189,88,208,142,37,0,239,191,189,67,45,239,191,189,10,239,191,189,239,191,189,13,28,39,69,127,75,42,239,191,189,25,58,239,191,189,108,13,239,191,189,94,239,191,189,14,239,191,189,37,239,191,189,58,207,163,239,191,189,239,191,189,61,239,191,189,24,239,191,189,239,191,189,82,239,191,189,239,191,189,222,180,237,153,139,78,14,37,239,191,189,239,191,189,29,67,34,24,47,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,61,121,239,191,189,239,191,189,66,81,17,7,119,232,146,163,46,28,112,1,239,191,189,239,191,189,22,239,191,189,239,191,189,69,239,191,189,62,125,37,201,146,239,191,189,93,23,239,191,189,69,118,116,239,191,189,239,191,189,12,239,191,189,19,239,191,189,18,53,239,191,189,127,239,191,189,19,21,239,191,189,239,191,189,101,239,191,189,94,239,191,189,239,191,189,239,191,189,103,40,28,239,191,189,126,22,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,90,117,10,50,79,239,191,189,239,191,189,59,239,191,189,125,73,239,191,189,239,191,189,73,239,191,189,74,126,127,239,191,189,239,191,189,239,191,189,52,239,191,189,125,29,239,191,189,54,239,191,189,0,109,25,239,191,189,1,239,191,189,115,239,191,189,239,191,189,197,164,239,191,189,41,239,191,189,239,191,189,1,239,191,189,16,239,191,189,49,61,239,191,189,39,124,239,191,189,222,145,37,239,191,189,21,239,191,189,87,64,59,72,100,239,191,189,239,191,189,20,213,153,89,239,191,189,218,179,239,191,189,15,98,239,191,189,239,191,189,13,25,4,239,191,189,97,70,239,191,189,25,34,81,78,8,99,239,191,189,0,239,191,189,233,165,137,239,191,189,28,44,125,92,239,191,189,69,110,239,191,189,239,191,189,73,239,191,189,239,191,189,77,239,191,189,8,239,191,189,83,239,191,189,239,191,189,2,199,150,239,191,189,195,135,239,191,189,239,191,189,9,239,191,189,50,239,191,189,106,239,191,189,239,191,189,239,191,189,225,155,167,239,191,189,27,239,191,189,239,191,189,75,239,191,189,207,138,239,191,189,239,191,189,239,191,189,117,45,42,202,135,213,133,106,239,191,189,239,191,189,18,80,101,198,155,239,191,189,23,239,191,189,87,71,38,239,191,189,239,191,189,41,239,191,189,75,239,191,189,239,191,189,239,191,189,239,191,189,109,97,101,4,127,239,191,189,80,31,14,118,239,191,189,239,191,189,239,191,189,239,191,189,114,53,239,191,189,57,239,191,189,239,191,189,99,63,239,191,189,239,191,189,239,191,189,73,11,93,10,58,239,191,189,239,191,189,239,191,189,60,239,191,189,3,97,239,191,189,31,119,239,191,189,56,57,239,191,189,14,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,59,93,114,45,239,191,189,223,129,53,239,191,189,239,191,189,21,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,111,239,191,189,25,25,63,4,43,6,239,191,189,118,239,191,189,52,23,239,191,189,116,239,191,189,212,138,122,201,181,33,239,191,189,21,239,191,189,239,191,189,34,102,239,191,189,239,191,189,221,134,11,71,195,128,239,191,189,239,191,189,88,71,39,17,104,239,191,189,1,125,76,239,191,189,51,31,239,191,189,239,191,189,239,191,189,51,77,80,4,47,92,93,8,239,191,189,18,239,191,189,203,174,11,95,239,191,189,31,62,239,191,189,33,239,191,189,239,191,189,16,25,60,239,191,189,102,91,239,191,189,50,239,191,189,101,93,239,191,189,239,191,189,239,191,189,114,124,101,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,12,83,113,239,191,189,239,191,189,19,239,191,189,0,94,67,239,191,189,61,55,239,191,189,71,239,191,189,1,239,191,189,109,117,28,110,239,191,189,50,102,63,239,191,189,239,191,189,239,191,189,38,66,6,17,51,48,239,191,189,239,191,189,111,239,191,189,31,239,191,189,101,239,191,189,125,50,239,191,189,58,239,191,189,30,239,191,189,239,191,189,239,191,189,26,239,191,189,201,158,102,62,239,191,189,239,191,189,111,7,17,55,1,239,191,189,44,4,239,191,189,239,191,189,0,239,191,189,239,191,189,77,239,191,189,239,191,189,110,112,0,239,191,189,4,239,191,189,68,44,239,191,189,239,191,189,105,239,191,189,46,239,191,189,239,191,189,225,175,181,83,239,191,189,123,239,191,189,239,191,189,54,29,107,239,191,189,103,239,191,189,239,191,189,239,191,189,18,47,239,191,189,62,219,172,239,191,189,76,239,191,189,11,119,239,191,189,239,191,189,239,191,189,5,239,191,189,74,239,191,189,19,239,191,189,2,100,239,191,189,239,191,189,108,27,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,31,239,191,189,86,97,56,119,12,53,46,105,239,191,189,239,191,189,4,239,191,189,239,191,189,23,239,191,189,94,239,191,189,239,191,189,46,207,174,239,191,189,1,209,191,222,175,239,191,189,49,69,239,191,189,239,191,189,239,191,189,68,239,191,189,75,210,157,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,50,49,239,191,189,103,60,8,21,239,191,189,239,191,189,239,191,189,54,239,191,189,76,86,127,108,84,118,82,77,239,191,189,88,116,239,191,189,239,191,189,32,239,191,189,239,191,189,55,208,157,17,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,10,239,191,189,239,191,189,20,44,80,239,191,189,239,191,189,43,239,191,189,117,239,191,189,62,56,239,191,189,69,202,175,239,191,189,66,48,239,191,189,239,191,189,60,37,95,239,191,189,239,191,189,239,191,189,239,191,189,94,56,239,191,189,239,191,189,239,188,169,239,191,189,95,239,191,189,74,239,191,189,11,71,40,115,7,85,212,176,239,191,189,69,85,90,113,92,196,142,239,191,189,204,144,239,191,189,102,85,42,60,239,191,189,73,29,239,191,189,65,79,24,239,191,189,96,239,191,189,239,191,189,19,239,191,189,87,106,239,191,189,239,191,189,10,25,239,191,189,91,58,239,191,189,239,191,189,27,239,191,189,239,191,189,62,106,106,239,191,189,29,239,191,189,117,11,239,191,189,21,239,191,189,239,191,189,61,97,16,239,191,189,52,122,61,116,38,11,239,191,189,74,17,90,239,191,189,88,239,191,189,37,127,239,191,189,239,191,189,217,141,239,191,189,239,191,189,114,40,37,239,191,189,94,28,195,128,35,239,191,189,239,191,189,41,239,191,189,195,161,91,30,24,94,239,191,189,107,12,239,191,189,239,191,189,29,85,239,191,189,239,191,189,239,191,189,56,100,239,191,189,26,239,191,189,239,191,189,81,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,97,239,191,189,76,239,191,189,239,191,189,46,26,239,191,189,102,239,191,189,39,239,191,189,8,239,191,189,45,239,191,189,239,191,189,63,37,15,12,2,79,68,239,191,189,79,111,17,239,191,189,30,239,191,189,107,239,191,189,120,48,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,76,90,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,43,2,117,110,30,239,191,189,95,239,191,189,8,17,113,239,191,189,9,239,191,189,72,239,191,189,239,191,189,214,143,89,118,9,79,239,191,189,127,15,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,10,115,117,28,101,239,191,189,208,168,239,191,189,40,239,191,189,239,191,189,49,239,191,189,239,191,189,108,18,239,191,189,52,239,191,189,49,11,38,34,239,191,189,239,191,189,239,191,189,15,16,239,191,189,239,191,189,239,191,189,81,227,180,149,106,44,86,239,191,189,6,239,191,189,78,123,239,191,189,106,239,191,189,24,83,239,191,189,239,191,189,31,239,191,189,93,239,191,189,77,83,105,239,191,189,13,239,191,189,239,191,189,24,47,239,191,189,56,78,50,97,1,239,191,189,116,239,191,189,73,239,191,189,215,166,239,191,189,111,86,239,191,189,239,191,189,34,97,239,191,189,239,191,189,239,191,189,239,191,189,71,23,239,191,189,202,177,69,79,112,31,239,191,189,239,191,189,27,102,239,191,189,82,239,191,189,239,191,189,239,191,189,19,125,118,239,191,189,124,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,125,26,239,191,189,35,239,191,189,194,169,239,191,189,18,239,191,189,3,95,83,239,191,189,65,106,115,114,239,191,189,115,56,239,191,189,106,70,239,191,189,239,191,189,125,117,122,81,95,239,191,189,84,239,191,189,103,239,191,189,18,239,191,189,48,25,106,239,191,189,239,191,189,28,239,191,189,199,135,112,239,191,189,91,89,5,84,69,73,127,239,191,189,45,239,191,189,44,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,6,239,191,189,2,239,191,189,95,2,124,90,239,191,189,18,239,191,189,41,239,191,189,50,239,191,189,5,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,31,3,239,191,189,239,191,189,88,4,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,87,239,191,189,239,191,189,119,54,239,191,189,239,191,189,69,239,191,189,55,127,239,191,189,111,239,191,189,239,191,189,239,191,189,97,82,26,57,122,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,31,113,19,239,191,189,93,239,191,189,239,191,189,77,5,44,28,42,239,191,189,239,191,189,239,191,189,239,191,189,21,51,239,191,189,101,239,191,189,239,191,189,95,239,191,189,83,96,239,191,189,115,16,52,126,123,0,34,38,36,35,239,191,189,65,115,239,191,189,96,239,191,189,53,53,239,191,189,62,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,87,17,239,191,189,68,239,191,189,122,58,60,209,174,239,191,189,41,239,191,189,120,101,239,191,189,45,239,191,189,117,116,239,191,189,239,191,189,42,89,98,33,239,191,189,26,101,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,19,239,191,189,239,191,189,68,239,191,189,239,191,189,35,40,239,191,189,239,191,189,239,191,189,101,99,239,191,189,2,239,191,189,239,191,189,91,239,191,189,28,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,32,239,191,189,78,239,191,189,239,191,189,239,191,189,93,239,191,189,81,8,239,191,189,239,191,189,124,239,191,189,102,239,191,189,239,191,189,196,155,239,191,189,65,37,99,239,191,189,239,191,189,79,239,191,189,95,69,45,118,239,191,189,104,34,239,191,189,76,218,143,239,191,189,71,8,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,36,239,191,189,239,191,189,65,101,70,31,239,191,189,239,191,189,116,78,19,239,191,189,239,191,189,239,191,189,100,36,239,191,189,239,191,189,69,89,40,25,239,191,189,20,36,84,239,191,189,239,191,189,239,191,189,105,6,239,191,189,112,239,191,189,239,191,189,97,239,191,189,17,122,72,239,191,189,239,191,189,216,139,123,239,191,189,239,191,189,10,84,126,103,48,239,191,189,239,191,189,239,191,189,23,44,64,239,191,189,108,12,119,10,71,87,54,23,85,3,57,239,191,189,78,239,191,189,203,140,64,63,239,191,189,43,198,169,51,4,2,239,191,189,239,191,189,239,191,189,11,73,239,191,189,209,136,219,129,36,239,191,189,67,36,239,191,189,118,239,191,189,81,69,239,191,189,239,191,189,239,191,189,110,91,216,147,20,43,239,191,189,239,191,189,114,8,114,124,75,112,73,239,191,189,122,239,191,189,239,191,189,33,74,104,114,239,191,189,116,104,80,239,191,189,239,191,189,27,239,191,189,239,191,189,48,56,239,191,189,113,42,239,191,189,92,24,239,191,189,239,191,189,239,191,189,209,167,119,5,107,239,191,189,239,191,189,55,28,239,191,189,111,6,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,236,128,134,26,56,239,191,189,71,79,239,191,189,105,8,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,74,239,191,189,75,239,191,189,239,191,189,239,191,189,51,239,191,189,50,198,149,12,15,239,191,189,74,239,191,189,239,191,189,239,191,189,81,33,92,239,191,189,239,191,189,80,122,68,239,191,189,239,191,189,239,191,189,79,60,239,191,189,81,239,191,189,239,191,189,69,239,191,189,239,191,189,8,239,191,189,82,89,5,210,178,67,239,191,189,239,191,189,239,191,189,239,191,189,217,171,239,191,189,124,239,191,189,239,191,189,122,239,191,189,34,120,239,191,189,239,191,189,239,191,189,84,239,191,189,5,7,64,208,166,239,191,189,3,239,191,189,239,191,189,239,191,189,55,97,239,191,189,239,191,189,221,150,104,216,165,37,20,239,191,189,239,191,189,67,105,239,191,189,239,191,189,100,35,72,207,137,239,191,189,239,191,189,239,191,189,239,191,189,119,3,51,220,145,239,191,189,239,191,189,93,67,62,88,123,23,75,33,10,20,46,239,191,189,119,87,239,191,189,103,30,239,191,189,239,191,189,239,191,189,206,173,239,191,189,239,191,189,68,239,191,189,31,100,239,191,189,201,147,96,239,191,189,82,0,42,47,94,77,239,191,189,38,239,191,189,116,95,31,65,239,191,189,123,239,191,189,20,239,191,189,239,191,189,16,1,239,191,189,239,191,189,107,239,191,189,55,33,44,239,191,189,100,75,239,191,189,122,239,191,189,5,239,191,189,60,239,191,189,81,205,143,9,57,115,239,191,189,2,102,239,191,189,200,144,239,191,189,80,239,191,189,239,191,189,107,239,191,189,239,191,189,39,44,239,191,189,106,96,41,196,165,239,191,189,239,191,189,127,96,37,82,239,191,189,66,113,239,191,189,91,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,42,239,191,189,66,239,191,189,125,73,109,37,35,37,239,191,189,16,239,191,189,11,99,239,191,189,37,104,107,239,191,189,239,191,189,13,97,61,15,239,191,189,239,191,189,239,191,189,113,33,117,239,191,189,239,191,189,239,191,189,122,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,124,31,76,239,191,189,75,71,239,191,189,239,191,189,239,191,189,99,239,191,189,104,239,191,189,239,191,189,28,109,4,239,191,189,239,191,189,124,123,239,191,189,1,239,191,189,29,81,229,144,148,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,96,239,191,189,127,239,191,189,34,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,93,97,66,110,45,95,105,239,191,189,29,239,191,189,239,191,189,239,191,189,98,61,60,72,45,7,239,191,189,51,120,46,88,239,191,189,239,191,189,53,125,89,31,67,239,191,189,239,191,189,111,23,50,50,81,239,191,189,86,47,63,239,191,189,239,191,189,121,239,191,189,239,191,189,29,239,191,189,239,191,189,74,239,191,189,239,191,189,73,239,191,189,85,47,9,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,197,138,75,10,10,239,191,189,101,239,191,189,239,191,189,239,191,189,92,239,191,189,3,239,191,189,24,239,191,189,115,212,177,239,191,189,239,191,189,239,191,189,2,40,239,191,189,22,94,77,46,16,239,191,189,239,191,189,239,191,189,62,210,183,239,191,189,83,43,49,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,40,239,191,189,21,200,137,7,239,191,189,67,78,81,92,198,173,102,59,41,239,191,189,69,4,239,191,189,239,191,189,239,191,189,239,191,189,16,9,41,47,239,191,189,25,88,126,38,239,191,189,60,205,178,239,191,189,118,72,239,191,189,239,191,189,16,239,191,189,239,191,189,67,239,191,189,239,191,189,108,239,191,189,113,9,239,191,189,34,5,83,239,191,189,61,5,239,191,189,95,239,191,189,239,191,189,42,239,191,189,239,191,189,53,53,113,239,191,189,239,191,189,99,62,239,191,189,84,239,191,189,112,239,191,189,239,191,189,239,191,189,22,64,239,191,189,15,239,191,189,79,239,191,189,4,239,191,189,239,191,189,43,116,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,11,14,239,191,189,120,239,191,189,102,13,202,157,239,191,189,104,239,191,189,239,191,189,106,56,239,191,189,31,20,210,130,239,191,189,239,191,189,48,239,191,189,239,191,189,109,19,239,191,189,239,191,189,20,125,239,191,189,239,191,189,239,191,189,199,190,90,239,191,189,238,169,154,239,191,189,69,55,34,5,49,10,239,191,189,14,239,191,189,239,191,189,68,99,64,27,239,191,189,18,239,191,189,103,82,105,66,239,191,189,79,239,191,189,88,55,239,191,189,122,78,87,38,41,239,191,189,33,239,191,189,239,191,189,239,191,189,239,191,189,59,8,27,121,74,239,191,189,64,38,239,191,189,239,191,189,239,191,189,71,215,135,87,48,66,239,191,189,239,191,189,64,239,191,189,239,191,189,104,13,239,191,189,113,239,191,189,27,123,31,113,239,191,189,110,43,73,78,239,191,189,63,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,210,183,239,191,189,239,191,189,17,71,239,191,189,64,239,191,189,14,239,191,189,239,191,189,30,37,239,191,189,99,59,239,191,189,239,191,189,104,91,13,239,191,189,122,124,82,239,191,189,123,69,114,114,239,191,189,239,191,189,239,191,189,72,239,191,189,64,239,191,189,239,191,189,67,239,191,189,239,191,189,63,15,101,117,124,239,191,189,81,239,191,189,239,191,189,73,24,66,239,191,189,239,191,189,100,114,239,191,189,239,191,189,89,239,191,189,45,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,34,239,191,189,41,121,239,191,189,112,100,239,191,189,106,23,239,191,189,33,239,191,189,239,191,189,239,191,189,112,216,187,239,191,189,239,191,189,239,191,189,15,19,239,191,189,64,239,191,189,123,239,191,189,15,124,84,239,191,189,239,191,189,47,1,115,239,191,189,73,239,191,189,96,49,239,191,189,91,239,191,189,100,6,117,198,142,16,100,88,239,191,189,70,239,191,189,22,223,141,127,239,191,189,0,91,239,191,189,239,191,189,239,191,189,83,196,182,97,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,49,19,239,191,189,239,191,189,6,220,128,108,239,191,189,71,239,191,189,239,191,189,88,93,239,191,189,82,119,48,239,191,189,239,191,189,89,4,17,65,239,191,189,101,239,191,189,123,52,55,98,239,191,189,239,191,189,203,178,239,191,189,239,191,189,36,239,191,189,45,239,191,189,59,239,191,189,239,191,189,94,4,239,191,189,211,151,239,191,189,239,191,189,68,239,191,189,239,191,189,14,201,168,72,118,239,191,189,239,191,189,117,18,115,239,191,189,99,119,36,9,239,191,189,239,191,189,12,196,147,239,191,189,239,191,189,105,102,95,97,60,239,191,189,227,135,169,30,0,13,239,191,189,239,191,189,236,153,174,70,65,35,40,52,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,96,23,68,95,66,239,191,189,20,86,63,239,191,189,239,191,189,239,191,189,104,98,106,103,32,239,191,189,239,191,189,94,125,81,239,191,189,239,191,189,53,17,99,213,176,239,191,189,9,113,39,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,105,239,191,189,33,36,239,191,189,8,26,35,3,15,121,239,191,189,42,49,239,191,189,63,239,191,189,93,239,191,189,25,239,191,189,239,191,189,239,191,189,117,239,191,189,39,76,196,140,79,11,4,239,191,189,36,202,180,239,191,189,55,1,86,4,239,191,189,239,191,189,124,239,191,189,94,120,41,90,74,239,191,189,10,239,191,189,239,191,189,34,214,172,53,17,239,191,189,239,191,189,94,119,239,191,189,109,239,191,189,93,13,239,191,189,239,191,189,26,37,239,191,189,194,157,48,49,239,191,189,25,57,239,191,189,35,105,65,239,191,189,1,239,191,189,4,1,239,191,189,7,85,38,32,239,191,189,239,191,189,34,239,191,189,14,54,0,107,110,239,191,189,48,127,239,191,189,239,191,189,41,239,191,189,28,239,191,189,50,239,191,189,239,191,189,53,21,108,30,89,11,199,131,239,191,189,239,191,189,102,56,239,191,189,13,95,239,191,189,239,191,189,57,66,239,191,189,239,191,189,17,43,125,239,191,189,239,191,189,15,78,83,57,78,239,191,189,223,177,239,191,189,239,191,189,24,239,191,189,96,239,191,189,76,107,127,30,239,191,189,49,239,191,189,69,239,191,189,57,239,191,189,239,191,189,239,191,189,90,35,239,191,189,239,191,189,94,125,239,191,189,120,47,239,191,189,239,191,189,120,89,70,32,239,191,189,70,202,146,239,191,189,14,78,239,191,189,239,191,189,94,55,239,191,189,43,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,210,179,239,191,189,41,100,45,28,239,191,189,206,165,47,239,191,189,196,162,239,191,189,110,11,13,239,191,189,11,125,62,239,191,189,39,239,191,189,239,191,189,111,239,191,189,239,191,189,0,122,109,239,191,189,85,209,146,17,105,125,239,191,189,49,239,191,189,220,185,8,239,191,189,103,102,6,239,191,189,239,191,189,239,191,189,6,75,76,239,191,189,35,239,191,189,84,239,191,189,239,191,189,118,84,239,191,189,42,239,191,189,239,191,189,110,239,191,189,239,191,189,93,239,191,189,239,191,189,4,217,184,97,239,191,189,31,21,104,9,239,191,189,239,191,189,91,239,191,189,103,239,191,189,9,61,111,127,20,239,191,189,34,239,191,189,112,14,239,191,189,70,239,191,189,239,191,189,239,191,189,21,52,2,97,1,113,239,191,189,50,76,115,62,45,239,191,189,239,191,189,90,114,239,191,189,90,86,100,239,191,189,239,191,189,221,142,239,191,189,239,191,189,30,71,82,72,239,191,189,82,110,114,239,191,189,239,191,189,89,41,101,51,117,11,34,12,213,187,109,239,191,189,22,239,191,189,239,191,189,239,191,189,108,239,191,189,3,239,191,189,86,116,239,191,189,31,82,76,239,191,189,4,239,191,189,239,191,189,66,75,239,191,189,25,118,239,191,189,35,239,191,189,95,209,184,239,191,189,115,56,49,239,191,189,90,239,191,189,239,191,189,239,191,189,111,239,191,189,111,239,191,189,111,69,239,191,189,40,43,29,113,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,119,239,191,189,73,239,191,189,123,52,239,191,189,239,191,189,205,171,25,27,40,239,191,189,239,191,189,5,239,191,189,239,191,189,85,37,52,7,239,191,189,66,239,191,189,92,65,96,239,191,189,239,191,189,72,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,13,3,115,239,191,189,239,191,189,24,89,67,90,78,111,70,6,239,191,189,31,239,191,189,36,239,191,189,239,191,189,99,122,106,239,191,189,199,184,103,239,191,189,221,148,59,10,102,22,123,239,191,189,88,205,156,239,191,189,239,191,189,239,191,189,91,85,239,191,189,114,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,60,239,191,189,53,76,239,191,189,15,239,191,189,11,124,104,123,239,191,189,31,67,9,48,239,191,189,37,239,191,189,37,239,191,189,2,8,117,30,21,13,84,9,239,191,189,89,8,239,191,189,118,206,163,239,191,189,47,23,73,33,239,191,189,110,109,114,239,191,189,54,239,191,189,104,126,12,49,14,239,191,189,61,58,239,191,189,239,191,189,46,239,191,189,1,87,1,239,191,189,15,115,239,191,189,117,102,80,90,13,125,3,239,191,189,239,191,189,239,191,189,2,113,239,191,189,107,239,191,189,239,191,189,40,239,191,189,30,57,239,191,189,239,191,189,31,1,239,191,189,71,202,144,239,191,189,94,239,191,189,195,141,44,2,45,239,191,189,35,239,191,189,239,191,189,71,239,191,189,31,239,191,189,239,191,189,239,191,189,239,191,189,107,118,239,191,189,239,191,189,122,239,191,189,111,239,191,189,124,49,89,239,191,189,53,56,101,239,191,189,60,3,239,191,189,80,63,239,191,189,94,18,5,103,122,239,191,189,239,191,189,239,191,189,96,69,219,177,95,25,239,191,189,119,239,191,189,239,191,189,30,74,239,191,189,239,191,189,88,239,191,189,92,107,239,191,189,239,191,189,239,191,189,14,93,86,239,191,189,24,239,191,189,239,191,189,18,79,125,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,127,239,191,189,50,239,191,189,99,98,239,191,189,101,11,15,15,22,239,191,189,54,126,90,239,191,189,1,6,239,191,189,113,239,191,189,239,191,189,84,239,191,189,42,68,239,191,189,216,145,239,191,189,239,191,189,29,59,90,42,98,30,239,191,189,28,123,7,64,110,239,191,189,239,191,189,42,239,191,189,42,40,239,191,189,74,239,191,189,47,14,10,239,191,189,239,191,189,239,191,189,55,116,111,50,125,122,53,239,191,189,106,239,191,189,83,239,191,189,239,191,189,75,239,191,189,25,105,105,50,117,8,0,102,204,175,239,191,189,74,239,191,189,239,191,189,45,80,239,191,189,194,142,126,239,191,189,12,239,191,189,239,191,189,239,191,189,0,239,191,189,2,239,191,189,48,60,239,191,189,5,22,239,191,189,239,191,189,95,42,239,191,189,55,14,239,191,189,239,191,189,239,191,189,48,67,239,191,189,61,239,191,189,239,191,189,54,48,239,191,189,66,12,239,191,189,239,191,189,63,239,191,189,8,64,100,239,191,189,127,89,75,239,191,189,215,136,239,191,189,57,239,191,189,6,71,239,191,189,106,81,239,191,189,239,191,189,101,35,239,191,189,119,28,239,191,189,12,50,239,191,189,9,15,239,191,189,32,94,127,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,87,5,239,191,189,219,129,239,191,189,41,239,191,189,239,191,189,239,191,189,67,239,191,189,124,102,239,191,189,239,191,189,216,133,77,24,42,239,191,189,121,239,191,189,24,58,239,191,189,80,239,191,189,78,79,239,191,189,14,30,204,155,239,191,189,92,239,191,189,24,102,239,191,189,49,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,125,62,239,191,189,45,55,59,39,104,99,239,191,189,53,239,191,189,239,191,189,239,191,189,121,239,191,189,87,239,191,189,239,191,189,82,60,41,107,109,17,103,239,191,189,239,191,189,115,66,239,191,189,25,49,239,191,189,239,191,189,16,17,239,191,189,239,191,189,115,51,239,191,189,64,118,93,239,191,189,214,184,6,239,191,189,239,191,189,69,106,239,191,189,84,239,191,189,95,27,207,140,239,191,189,239,191,189,32,239,191,189,28,239,191,189,239,191,189,36,104,239,191,189,118,239,191,189,96,239,191,189,9,48,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,23,239,191,189,239,191,189,82,124,61,239,191,189,239,191,189,23,4,239,191,189,62,216,137,89,211,135,239,191,189,79,121,41,239,191,189,229,139,141,35,239,191,189,104,102,239,191,189,220,135,126,239,191,189,72,194,168,239,191,189,43,218,176,239,191,189,91,17,239,191,189,88,239,191,189,239,191,189,239,191,189,93,39,122,239,191,189,120,34,239,191,189,59,239,191,189,88,239,191,189,73,95,45,80,239,191,189,89,239,191,189,17,17,239,191,189,8,35,239,191,189,121,45,239,191,189,122,239,191,189,239,191,189,6,203,133,239,191,189,239,191,189,98,239,191,189,5,124,90,239,191,189,239,191,189,80,239,191,189,239,191,189,80,239,191,189,11,32,20,239,191,189,239,191,189,239,191,189,239,191,189,126,30,86,84,239,191,189,239,191,189,100,239,191,189,3,239,191,189,239,191,189,125,218,161,194,143,34,84,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,40,239,191,189,126,89,239,191,189,239,191,189,80,63,239,191,189,13,110,11,63,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,7,19,118,239,191,189,72,239,191,189,239,191,189,71,239,191,189,70,239,191,189,102,239,191,189,70,239,191,189,97,239,191,189,102,86,239,191,189,62,62,36,239,191,189,83,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,200,186,33,8,106,110,239,191,189,8,66,239,191,189,47,38,15,95,239,191,189,1,239,191,189,239,191,189,81,100,239,191,189,13,15,92,96,19,239,191,189,101,112,67,75,37,198,176,239,191,189,239,191,189,239,191,189,53,211,182,8,75,64,239,191,189,30,239,191,189,239,191,189,98,239,191,189,239,191,189,37,96,53,65,239,191,189,239,191,189,196,167,87,239,191,189,38,239,191,189,239,191,189,239,191,189,9,96,95,239,191,189,239,191,189,98,239,191,189,1,239,191,189,92,239,191,189,239,191,189,36,61,239,191,189,97,33,239,191,189,124,239,191,189,38,197,144,111,239,191,189,239,191,189,218,142,123,239,191,189,239,191,189,65,61,21,95,82,239,191,189,239,191,189,239,191,189,40,35,239,191,189,217,151,237,135,135,6,239,191,189,239,191,189,85,26,120,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,40,65,14,239,191,189,39,239,191,189,94,2,0,239,191,189,239,191,189,239,191,189,105,83,239,191,189,239,191,189,2,239,191,189,239,191,189,200,183,208,144,98,194,174,8,34,239,191,189,239,191,189,96,239,191,189,97,239,191,189,94,239,191,189,239,191,189,72,46,46,25,239,191,189,68,24,24,239,191,189,53,126,239,191,189,239,191,189,239,191,189,93,239,191,189,47,88,239,191,189,239,191,189,239,191,189,120,239,191,189,60,100,10,87,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,105,239,191,189,51,239,191,189,120,74,239,191,189,29,210,164,239,191,189,40,115,68,239,191,189,113,5,20,58,239,191,189,239,191,189,74,239,191,189,31,57,239,191,189,239,191,189,83,239,191,189,64,239,191,189,96,17,239,191,189,239,191,189,19,239,191,189,239,191,189,57,97,239,191,189,91,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,100,48,239,191,189,31,239,191,189,19,82,239,191,189,104,239,191,189,86,239,191,189,239,191,189,61,23,239,191,189,81,239,191,189,117,57,239,191,189,217,167,90,57,69,88,87,239,191,189,239,191,189,92,110,81,14,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,122,239,191,189,239,191,189,91,5,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,210,138,239,191,189,76,229,140,187,239,191,189,239,191,189,119,43,239,191,189,64,239,191,189,64,53,239,191,189,124,73,239,191,189,239,191,189,89,239,191,189,75,85,239,191,189,239,191,189,206,140,239,191,189,80,239,191,189,239,191,189,60,113,88,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,48,30,62,239,191,189,72,239,191,189,2,35,34,86,239,191,189,121,239,191,189,60,239,191,189,43,239,191,189,239,191,189,109,239,191,189,38,58,91,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,95,62,239,191,189,95,27,55,123,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,53,239,191,189,239,191,189,239,191,189,27,239,191,189,194,190,64,18,239,191,189,91,239,191,189,194,153,55,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,33,239,191,189,239,191,189,52,102,118,36,239,191,189,109,38,0,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,30,43,9,3,38,116,239,191,189,12,62,57,239,191,189,65,62,239,191,189,239,191,189,125,239,191,189,239,191,189,18,239,191,189,218,155,239,191,189,97,239,191,189,239,191,189,239,191,189,92,114,239,191,189,239,191,189,201,181,216,140,239,191,189,70,239,191,189,75,207,169,90,56,239,191,189,96,43,239,191,189,21,223,137,239,191,189,220,185,76,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,72,46,239,191,189,70,88,207,139,102,94,62,54,239,191,189,239,191,189,67,239,191,189,127,99,239,191,189,1,92,239,191,189,239,191,189,125,239,191,189,48,4,15,104,239,191,189,239,191,189,56,239,191,189,92,115,239,191,189,123,239,191,189,241,145,145,160,239,191,189,239,191,189,239,191,189,83,239,191,189,68,118,108,239,191,189,44,239,191,189,65,34,196,176,239,191,189,22,84,239,191,189,35,239,191,189,97,6,239,191,189,239,191,189,35,239,191,189,101,239,191,189,114,9,111,239,191,189,51,239,191,189,220,149,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,3,27,80,239,191,189,239,191,189,15,239,191,189,61,239,191,189,125,239,191,189,85,239,191,189,239,191,189,37,32,239,191,189,6,5,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,38,38,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,204,157,62,239,191,189,119,67,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,22,109,210,149,97,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,51,239,191,189,77,239,191,189,107,86,34,20,239,191,189,70,105,239,191,189,239,191,189,71,104,239,191,189,71,49,59,122,75,239,191,189,239,191,189,112,46,239,191,189,239,191,189,105,34,239,191,189,239,191,189,219,178,97,239,191,189,239,191,189,81,30,239,191,189,113,239,191,189,88,62,78,239,191,189,75,101,239,191,189,197,180,99,37,110,74,239,191,189,118,239,191,189,220,146,199,156,239,191,189,239,191,189,94,239,191,189,239,191,189,46,239,191,189,194,162,41,239,191,189,201,133,239,191,189,125,239,191,189,120,239,191,189,62,14,239,191,189,109,239,191,189,239,191,189,108,104,239,191,189,41,239,191,189,117,239,191,189,239,191,189,239,191,189,59,102,239,191,189,239,191,189,106,126,54,4,3,18,58,125,239,191,189,196,162,239,191,189,8,100,239,191,189,239,191,189,239,191,189,20,239,191,189,18,239,191,189,33,100,98,125,239,191,189,45,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,14,101,8,9,239,191,189,91,84,69,198,164,42,49,239,191,189,16,239,191,189,57,71,39,239,191,189,84,72,25,212,135,59,229,157,152,239,191,189,122,21,23,85,85,73,239,191,189,239,191,189,115,40,239,191,189,86,91,239,191,189,56,76,239,191,189,28,239,191,189,239,191,189,239,191,189,34,239,191,189,87,95,239,191,189,75,51,239,191,189,101,118,239,191,189,239,191,189,20,42,20,25,239,191,189,239,191,189,239,191,189,239,191,189,195,179,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,59,100,239,191,189,239,191,189,239,191,189,6,87,106,239,191,189,239,191,189,239,191,189,239,191,189,76,2,13,239,191,189,7,239,191,189,70,239,191,189,35,50,58,97,43,239,191,189,239,191,189,110,239,191,189,97,239,191,189,239,191,189,70,1,239,191,189,216,190,13,210,169,89,239,191,189,43,239,191,189,108,239,191,189,239,191,189,7,239,191,189,82,239,191,189,239,191,189,119,9,41,102,239,191,189,239,191,189,30,239,191,189,122,52,239,191,189,239,191,189,11,239,191,189,239,191,189,12,4,46,239,191,189,56,239,191,189,121,216,149,54,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,14,51,46,32,60,239,191,189,71,38,239,191,189,239,191,189,239,191,189,47,37,16,116,239,191,189,239,191,189,4,239,191,189,3,239,191,189,103,109,239,191,189,239,191,189,48,239,191,189,48,29,118,239,191,189,31,239,191,189,108,239,191,189,239,191,189,221,148,127,52,239,191,189,8,40,73,239,191,189,74,239,191,189,239,191,189,239,191,189,11,239,191,189,34,47,239,191,189,50,239,191,189,239,191,189,46,34,12,67,22,9,76,239,191,189,201,158,239,191,189,239,191,189,239,191,189,36,239,191,189,101,69,239,191,189,62,35,38,239,191,189,124,15,110,17,239,191,189,239,191,189,239,191,189,58,222,189,239,191,189,114,114,239,191,189,239,191,189,239,191,189,81,15,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,201,160,239,191,189,104,239,191,189,8,110,239,191,189,51,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,126,239,191,189,52,239,191,189,239,191,189,18,115,239,191,189,239,191,189,98,239,191,189,22,7,239,191,189,20,239,191,189,239,191,189,1,55,38,11,239,191,189,118,27,239,191,189,3,239,191,189,239,191,189,7,57,46,54,239,191,189,124,79,239,191,189,97,239,191,189,239,191,189,86,0,22,6,239,191,189,239,191,189,102,14,31,9,69,239,191,189,239,191,189,239,191,189,239,191,189,52,24,87,239,191,189,47,239,191,189,239,191,189,239,191,189,41,239,191,189,239,191,189,77,5,239,191,189,2,81,10,239,191,189,239,191,189,10,126,111,75,239,191,189,239,191,189,212,158,239,191,189,194,151,67,239,191,189,211,147,26,239,191,189,9,72,91,239,191,189,96,239,191,189,239,191,189,43,18,25,9,90,7,239,191,189,61,239,191,189,239,191,189,106,239,191,189,204,163,17,91,22,239,191,189,195,145,96,91,122,113,239,191,189,127,72,239,191,189,82,47,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,1,5,239,191,189,239,191,189,41,85,239,191,189,102,54,239,191,189,239,191,189,239,191,189,239,191,189,75,202,182,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,124,49,239,191,189,1,239,191,189,239,191,189,210,190,239,191,189,91,239,191,189,239,191,189,72,84,239,191,189,239,191,189,82,239,191,189,239,191,189,33,71,85,239,191,189,239,191,189,51,239,191,189,101,35,44,25,239,191,189,197,173,35,10,101,239,191,189,111,239,191,189,239,191,189,215,186,111,239,191,189,26,79,92,239,191,189,239,191,189,72,239,191,189,12,59,91,239,191,189,86,21,239,191,189,93,62,88,239,191,189,99,65,200,190,239,191,189,48,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,89,239,191,189,239,191,189,81,57,239,191,189,79,0,18,120,239,191,189,6,86,46,54,92,239,191,189,43,0,77,101,239,191,189,30,59,17,92,112,41,239,191,189,122,7,239,191,189,119,127,239,191,189,239,191,189,52,73,239,191,189,10,45,239,191,189,239,191,189,118,98,66,54,239,191,189,239,191,189,110,46,11,239,191,189,12,127,239,191,189,239,191,189,77,64,239,191,189,66,38,33,239,191,189,112,239,191,189,239,191,189,109,82,39,107,53,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,114,112,75,239,191,189,12,107,239,191,189,239,191,189,30,239,191,189,9,25,239,191,189,6,239,191,189,56,5,119,239,191,189,94,74,100,70,239,191,189,214,176,239,191,189,239,191,189,239,191,189,29,116,113,239,191,189,239,191,189,239,191,189,239,191,189,75,117,239,191,189,34,239,191,189,118,51,64,98,27,45,25,239,191,189,239,191,189,239,191,189,97,26,239,191,189,111,14,41,239,191,189,36,91,127,3,18,0,114,239,191,189,97,62,83,15,236,144,152,239,191,189,239,191,189,239,191,189,48,6,95,239,191,189,239,191,189,239,191,189,58,55,123,18,86,239,191,189,26,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,99,51,239,191,189,202,186,239,191,189,197,177,239,191,189,17,201,136,64,239,191,189,239,191,189,34,41,105,217,172,239,191,189,219,132,95,65,113,36,239,191,189,239,191,189,42,63,21,239,191,189,112,239,191,189,57,239,191,189,0,239,191,189,13,239,191,189,119,105,73,205,176,126,239,191,189,100,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,109,239,191,189,73,239,191,189,22,41,239,191,189,210,180,239,191,189,239,191,189,43,239,191,189,239,191,189,104,68,239,191,189,64,99,26,22,115,239,191,189,239,191,189,239,191,189,35,239,191,189,88,107,239,191,189,239,191,189,239,191,189,79,239,191,189,11,239,191,189,239,191,189,239,191,189,95,226,151,149,51,35,83,239,191,189,123,3,126,101,87,239,191,189,36,239,191,189,87,21,239,191,189,34,44,5,2,121,72,239,191,189,239,191,189,67,239,191,189,29,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,83,4,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,194,187,116,239,191,189,47,239,191,189,239,191,189,90,239,191,189,30,76,239,191,189,61,15,82,93,122,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,40,92,115,239,191,189,67,1,9,239,191,189,213,168,239,191,189,239,191,189,239,191,189,221,134,239,191,189,100,53,239,191,189,96,68,239,191,189,75,20,13,26,239,191,189,239,191,189,30,239,191,189,239,191,189,33,68,216,161,239,191,189,108,127,8,239,191,189,51,239,191,189,124,239,191,189,239,191,189,74,26,239,191,189,100,4,239,191,189,239,191,189,39,239,191,189,239,191,189,118,17,95,239,191,189,40,16,24,97,42,9,112,61,239,191,189,59,239,191,189,52,239,191,189,44,28,44,239,191,189,52,239,191,189,43,239,191,189,239,191,189,30,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,77,43,239,191,189,12,239,191,189,239,191,189,26,45,82,239,191,189,119,13,33,239,191,189,239,191,189,239,191,189,239,191,189,115,10,93,239,191,189,66,123,51,239,191,189,40,239,191,189,71,42,10,119,239,191,189,239,191,189,16,239,191,189,39,239,191,189,76,239,191,189,18,239,191,189,239,191,189,235,180,181,222,135,239,191,189,74,56,239,191,189,239,191,189,92,119,239,191,189,112,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,118,239,191,189,62,239,191,189,239,191,189,39,110,75,78,95,239,191,189,126,24,74,106,239,191,189,239,191,189,239,191,189,126,239,191,189,39,51,39,44,78,212,149,13,239,191,189,239,191,189,239,191,189,74,239,191,189,43,103,1,115,239,191,189,102,100,239,191,189,16,41,239,191,189,239,191,189,90,8,108,36,239,191,189,239,191,189,53,34,119,97,66,94,17,90,239,191,189,239,191,189,96,200,171,239,191,189,68,239,191,189,239,191,189,239,191,189,104,103,91,239,191,189,25,7,23,10,239,191,189,75,239,191,189,239,191,189,40,239,191,189,206,186,239,191,189,40,61,239,191,189,37,239,191,189,97,71,105,239,191,189,32,71,125,227,156,143,27,239,191,189,239,191,189,77,239,191,189,239,191,189,8,111,74,55,239,191,189,239,191,189,102,48,105,118,239,191,189,239,191,189,31,28,239,191,189,34,239,191,189,239,191,189,5,20,34,70,239,191,189,207,141,239,191,189,239,191,189,100,239,191,189,239,191,189,46,239,191,189,45,239,191,189,31,239,191,189,127,239,191,189,239,191,189,239,191,189,57,105,239,191,189,77,239,191,189,196,128,2,239,191,189,239,191,189,239,191,189,71,120,239,191,189,194,136,123,239,191,189,5,23,2,127,239,191,189,72,120,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,51,239,191,189,239,191,189,61,239,191,189,1,239,191,189,46,97,239,191,189,239,191,189,56,57,239,191,189,85,93,68,4,66,221,132,222,185,239,191,189,97,239,191,189,200,128,239,191,189,67,85,239,191,189,18,239,191,189,68,239,191,189,239,191,189,75,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,15,63,14,239,191,189,122,239,191,189,239,191,189,5,239,191,189,85,47,64,219,172,56,117,239,191,189,30,98,239,191,189,38,90,113,239,191,189,120,239,191,189,10,239,191,189,206,155,61,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,200,182,110,12,239,191,189,239,191,189,110,239,191,189,111,77,113,239,191,189,63,239,191,189,99,37,239,191,189,239,191,189,52,38,239,191,189,239,191,189,239,191,189,54,73,24,60,239,191,189,239,191,189,23,126,239,191,189,239,191,189,86,239,191,189,102,25,97,239,191,189,74,212,137,239,191,189,39,54,92,239,191,189,239,191,189,126,103,239,191,189,29,94,239,191,189,70,35,121,214,176,239,191,189,50,7,239,191,189,53,239,191,189,122,44,239,191,189,239,191,189,208,131,25,239,191,189,81,239,191,189,239,191,189,239,191,189,0,239,191,189,93,239,191,189,30,35,103,96,239,191,189,5,15,239,191,189,239,191,189,67,239,191,189,239,191,189,24,204,165,239,191,189,52,127,239,191,189,215,190,239,191,189,44,3,116,109,79,77,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,206,145,52,117,28,47,210,141,239,191,189,108,210,132,82,77,239,191,189,239,191,189,10,239,191,189,239,191,189,95,239,191,189,58,93,14,239,191,189,239,191,189,58,64,109,239,191,189,52,239,191,189,239,191,189,227,185,162,74,108,113,239,191,189,239,191,189,9,89,239,191,189,239,191,189,239,191,189,239,191,189,0,19,84,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,52,37,239,191,189,91,239,191,189,32,239,191,189,55,63,239,191,189,111,239,191,189,239,191,189,54,239,191,189,93,45,115,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,58,44,25,51,239,191,189,239,191,189,90,239,191,189,38,110,37,239,191,189,22,239,191,189,89,239,191,189,115,94,98,71,239,191,189,108,30,29,27,75,239,191,189,22,239,191,189,239,191,189,109,239,191,189,45,239,191,189,239,191,189,102,6,239,191,189,239,191,189,92,71,239,191,189,109,239,191,189,16,14,71,122,25,239,191,189,109,103,11,103,55,239,191,189,14,239,191,189,24,64,97,67,239,191,189,115,0,109,97,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,0,239,191,189,239,191,189,239,191,189,12,13,4,7,239,191,189,25,68,6,239,191,189,239,191,189,96,239,191,189,87,10,239,191,189,107,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,200,128,37,239,191,189,239,191,189,239,191,189,5,103,107,239,191,189,119,239,191,189,10,60,89,71,239,191,189,47,239,191,189,239,191,189,239,191,189,29,14,239,191,189,239,191,189,38,71,10,239,191,189,3,3,15,104,97,59,239,191,189,239,191,189,97,239,191,189,81,239,191,189,94,239,191,189,26,239,191,189,27,239,191,189,47,239,191,189,239,191,189,239,191,189,203,140,239,191,189,16,239,191,189,113,239,191,189,223,133,109,239,191,189,106,103,239,191,189,103,239,191,189,239,191,189,0,239,191,189,112,127,239,191,189,239,191,189,24,61,41,239,191,189,239,191,189,239,191,189,24,104,65,29,56,239,191,189,239,191,189,80,239,191,189,21,77,239,191,189,18,239,191,189,239,191,189,77,120,239,191,189,239,191,189,46,239,191,189,75,102,52,239,191,189,239,191,189,211,129,124,239,191,189,35,239,191,189,85,239,191,189,41,74,239,191,189,239,191,189,1,88,112,239,191,189,35,239,191,189,239,191,189,239,191,189,108,73,239,191,189,239,191,189,66,39,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,124,14,239,191,189,127,95,36,239,191,189,24,239,191,189,66,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,39,105,239,191,189,29,95,239,191,189,239,191,189,212,139,239,191,189,61,106,239,191,189,52,239,191,189,239,191,189,68,71,239,191,189,97,35,239,191,189,239,191,189,96,55,83,127,89,238,174,148,35,43,239,191,189,239,191,189,77,84,239,191,189,91,239,191,189,41,239,191,189,239,191,189,100,239,191,189,35,29,239,191,189,239,191,189,41,80,76,239,191,189,93,239,191,189,239,191,189,80,239,191,189,11,11,239,191,189,239,191,189,239,191,189,102,26,62,118,102,69,59,239,191,189,239,191,189,239,191,189,55,95,239,191,189,57,121,19,53,239,191,189,239,191,189,94,72,113,206,149,74,239,191,189,4,239,191,189,79,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,47,106,239,191,189,96,239,191,189,37,239,191,189,211,145,239,191,189,239,191,189,239,191,189,34,239,191,189,32,126,30,239,191,189,112,239,191,189,27,239,191,189,55,39,239,191,189,2,239,191,189,239,191,189,239,191,189,60,239,191,189,46,239,191,189,239,191,189,62,239,191,189,239,191,189,231,169,169,5,118,239,191,189,45,239,191,189,121,196,186,239,191,189,239,191,189,239,191,189,35,116,239,191,189,19,239,191,189,239,191,189,102,239,191,189,197,138,14,58,85,41,239,191,189,70,104,239,191,189,72,239,191,189,54,239,191,189,239,191,189,220,165,239,191,189,9,95,35,61,239,191,189,239,191,189,0,93,239,191,189,239,191,189,201,165,239,191,189,34,106,36,239,191,189,30,239,191,189,60,239,191,189,4,35,50,91,21,117,239,191,189,35,239,191,189,239,191,189,110,213,172,7,239,191,189,239,191,189,239,191,189,73,58,239,191,189,239,191,189,239,191,189,125,239,191,189,14,37,68,18,28,239,191,189,239,191,189,104,56,5,59,239,191,189,239,191,189,239,191,189,78,22,239,191,189,102,12,239,191,189,54,239,191,189,118,98,239,191,189,91,116,239,191,189,2,239,191,189,100,58,239,191,189,239,191,189,7,79,239,191,189,239,191,189,7,5,3,6,239,191,189,239,191,189,204,174,239,191,189,239,191,189,239,191,189,35,65,56,220,156,239,191,189,77,239,191,189,239,191,189,239,191,189,50,56,102,239,191,189,239,191,189,0,60,73,239,191,189,239,191,189,111,32,95,6,239,191,189,48,35,207,150,214,180,239,191,189,239,191,189,239,191,189,97,44,93,23,11,239,191,189,239,191,189,239,191,189,7,69,239,191,189,203,159,8,5,239,191,189,113,93,26,239,191,189,239,191,189,33,239,191,189,239,191,189,239,191,189,92,41,239,191,189,74,239,191,189,13,239,191,189,239,191,189,239,191,189,51,116,239,191,189,36,61,10,95,239,191,189,24,25,51,16,239,191,189,27,239,191,189,239,191,189,100,86,124,239,191,189,42,64,83,239,191,189,87,239,191,189,239,191,189,239,191,189,121,80,56,54,69,23,212,145,40,77,31,15,239,191,189,8,8,239,191,189,239,191,189,239,191,189,239,191,189,13,21,127,82,239,191,189,32,239,191,189,93,239,191,189,32,27,204,143,121,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,121,70,57,239,191,189,23,54,108,25,33,55,239,191,189,239,191,189,226,130,170,239,191,189,239,191,189,239,191,189,22,117,239,191,189,239,191,189,112,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,221,165,239,191,189,82,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,60,239,191,189,239,191,189,54,36,239,191,189,239,191,189,239,191,189,55,239,191,189,95,239,191,189,86,239,191,189,100,200,150,239,191,189,239,191,189,239,191,189,27,74,239,191,189,239,191,189,63,196,143,239,191,189,239,191,189,29,239,191,189,1,98,239,191,189,125,39,239,191,189,239,191,189,91,239,191,189,8,239,191,189,117,126,239,191,189,239,191,189,239,191,189,98,19,69,239,191,189,239,191,189,221,155,239,191,189,239,191,189,239,191,189,239,191,189,95,29,59,39,25,8,93,239,191,189,239,191,189,66,61,239,191,189,239,191,189,58,239,191,189,55,19,239,191,189,239,191,189,57,239,191,189,55,239,191,189,89,239,191,189,239,191,189,28,39,239,191,189,34,239,191,189,99,17,239,191,189,239,191,189,239,191,189,99,239,191,189,109,32,59,239,191,189,80,36,47,239,191,189,106,22,239,191,189,239,191,189,71,65,239,191,189,119,40,33,239,191,189,109,64,239,191,189,54,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,50,35,20,25,68,66,239,191,189,52,239,191,189,83,239,191,189,16,223,155,67,33,118,103,211,163,239,191,189,116,69,239,191,189,239,191,189,61,127,239,191,189,74,93,239,191,189,44,24,239,191,189,85,36,45,239,191,189,50,239,191,189,118,239,191,189,239,191,189,239,191,189,58,38,31,239,191,189,115,239,191,189,91,122,107,91,82,239,191,189,221,147,47,7,239,191,189,17,239,191,189,44,239,191,189,239,191,189,239,191,189,13,69,30,239,191,189,239,191,189,52,239,191,189,45,212,145,88,69,239,191,189,29,239,191,189,39,239,191,189,1,38,239,191,189,239,191,189,127,239,191,189,71,239,191,189,81,43,35,101,195,182,59,239,191,189,46,18,239,191,189,84,239,191,189,102,69,125,46,125,44,239,191,189,78,108,239,191,189,29,239,191,189,87,42,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,91,239,191,189,9,239,191,189,239,191,189,17,239,191,189,29,239,191,189,239,191,189,11,16,239,191,189,206,155,239,191,189,66,239,191,189,2,107,239,191,189,75,239,191,189,65,5,123,107,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,104,239,191,189,60,239,191,189,102,108,80,102,239,191,189,239,191,189,239,191,189,13,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,19,15,239,191,189,239,191,189,239,191,189,76,239,191,189,80,110,239,191,189,239,191,189,239,191,189,41,85,101,217,164,239,191,189,39,239,191,189,26,93,239,191,189,12,99,239,191,189,100,239,191,189,239,191,189,5,110,69,239,191,189,239,191,189,106,88,2,115,239,191,189,25,239,191,189,0,239,191,189,28,55,87,239,191,189,239,191,189,35,239,191,189,5,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,84,104,50,91,239,191,189,239,191,189,239,191,189,12,239,191,189,48,239,191,189,14,239,191,189,26,101,113,239,191,189,12,19,239,191,189,239,191,189,70,239,191,189,123,239,191,189,2,126,239,191,189,239,191,189,78,15,34,49,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,22,239,191,189,239,191,189,82,119,38,12,80,17,239,191,189,88,239,191,189,69,3,13,104,239,191,189,239,191,189,239,191,189,4,54,54,239,191,189,33,126,239,191,189,239,191,189,109,213,134,239,191,189,67,239,191,189,204,168,104,42,41,73,239,191,189,113,100,239,191,189,112,239,191,189,105,239,191,189,239,191,189,239,191,189,38,52,65,60,92,239,191,189,239,191,189,85,239,191,189,212,154,89,239,191,189,122,239,191,189,239,191,189,20,5,121,91,239,191,189,62,239,191,189,81,239,191,189,239,191,189,239,191,189,112,24,107,20,239,191,189,239,191,189,206,175,81,239,191,189,7,87,44,239,191,189,18,119,85,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,99,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,60,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,45,13,239,191,189,76,239,191,189,239,191,189,239,191,189,55,239,191,189,44,239,191,189,239,191,189,53,239,191,189,201,177,126,40,239,191,189,199,170,239,191,189,121,239,191,189,95,88,239,191,189,47,239,191,189,6,239,191,189,1,30,1,93,239,191,189,239,191,189,38,17,102,33,111,78,97,9,239,191,189,58,239,191,189,126,13,41,101,239,191,189,3,239,191,189,101,239,191,189,32,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,51,48,54,239,191,189,88,22,110,239,191,189,58,121,23,239,191,189,122,29,38,239,191,189,239,191,189,221,144,6,26,115,239,191,189,239,191,189,239,191,189,57,215,169,239,191,189,206,180,42,75,27,6,126,71,18,239,191,189,78,239,191,189,94,84,239,191,189,124,239,191,189,114,28,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,55,103,30,63,239,191,189,28,108,239,191,189,239,191,189,56,95,22,239,191,189,105,117,11,65,121,239,191,189,30,11,239,191,189,239,191,189,199,186,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,70,68,16,239,191,189,239,191,189,15,239,191,189,66,239,191,189,38,239,191,189,99,19,6,239,191,189,125,239,191,189,239,191,189,100,62,239,191,189,45,239,191,189,110,87,239,191,189,239,191,189,121,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,100,88,239,191,189,88,50,239,191,189,122,54,239,191,189,243,148,179,179,38,37,17,68,30,86,121,239,191,189,23,91,60,90,239,191,189,23,239,191,189,48,88,36,239,191,189,31,54,239,191,189,36,239,191,189,88,50,239,191,189,119,107,72,239,191,189,218,163,209,138,83,239,191,189,239,191,189,75,78,121,43,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,213,147,125,239,191,189,0,56,239,191,189,239,191,189,239,191,189,1,57,206,153,98,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,112,239,191,189,10,60,39,74,90,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,4,16,83,239,191,189,83,109,239,191,189,94,239,191,189,119,239,191,189,126,100,44,71,239,191,189,11,60,123,239,191,189,239,191,189,100,239,191,189,115,96,239,191,189,239,191,189,99,239,191,189,59,239,191,189,17,239,191,189,93,239,191,189,100,239,191,189,33,28,49,122,239,191,189,47,23,239,191,189,239,191,189,30,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,121,127,12,239,191,189,239,191,189,59,31,108,239,191,189,207,160,239,191,189,106,26,94,239,191,189,122,121,239,191,189,91,239,191,189,22,239,191,189,125,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,239,191,189,36,127,58,239,191,189,239,191,189,80,4,79,114,12,125,111,239,191,189,113,239,191,189,38,100,239,191,189,239,191,189,99,239,191,189,239,191,189,48,196,138,54,89,22,18,28,7,86,114,239,191,189,104,239,191,189,63,239,191,189,98,82,17,239,191,189,11,239,191,189,110,65,92,239,191,189,36,239,191,189,31,0,44,68,239,191,189,79,117,104,239,191,189,239,191,189,239,191,189,61,85,5,39,239,191,189,239,191,189,9,239,191,189,239,191,189,33,239,191,189,81,47,239,191,189,113,86,72,217,184,239,191,189,123,239,191,189,7,42,45,239,191,189,210,171,239,191,189,98,239,191,189,91,35,67,239,191,189,239,191,189,70,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,222,150,239,191,189,17,239,191,189,30,32,239,191,189,62,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,29,55,239,191,189,57,46,239,191,189,206,183,15,3,71,32,86,239,191,189,119,40,239,191,189,58,23,239,191,189,205,171,65,239,191,189,29,39,239,191,189,92,239,191,189,73,117,239,191,189,96,239,191,189,239,191,189,78,93,92,239,191,189,239,191,189,67,38,15,28,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,117,14,113,239,191,189,239,191,189,28,6,105,113,239,191,189,197,142,239,191,189,239,191,189,239,191,189,58,40,239,191,189,54,117,69,126,239,191,189,239,191,189,36,21,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,32,89,239,191,189,64,239,191,189,103,239,191,189,41,73,239,191,189,239,191,189,94,12,239,191,189,239,191,189,9,50,31,239,191,189,239,191,189,103,239,191,189,208,181,29,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,57,239,191,189,239,191,189,221,172,125,81,239,191,189,30,239,191,189,117,239,191,189,239,191,189,221,174,239,191,189,35,239,191,189,72,74,239,191,189,239,191,189,35,58,239,191,189,239,191,189,20,101,239,191,189,8,239,191,189,35,239,191,189,239,191,189,239,191,189,59,105,239,191,189,74,239,191,189,57,239,191,189,125,13,7,50,55,54,239,191,189,239,191,189,223,160,239,191,189,69,91,239,191,189,123,81,239,191,189,105,239,191,189,22,21,81,52,239,191,189,13,114,87,104,239,191,189,95,239,191,189,79,70,239,191,189,45,239,191,189,239,191,189,239,191,189,47,239,191,189,61,239,191,189,239,191,189,207,164,116,104,239,191,189,105,121,127,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,89,41,195,150,98,53,64,9,239,191,189,21,44,78,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,100,53,239,191,189,9,106,239,191,189,48,239,191,189,47,239,191,189,239,191,189,62,113,239,191,189,79,239,191,189,107,92,239,191,189,116,66,198,173,95,59,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,36,239,191,189,239,191,189,44,100,5,97,239,191,189,43,78,239,191,189,239,191,189,27,239,191,189,239,191,189,82,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,97,239,191,189,239,191,189,86,10,30,66,239,191,189,67,42,34,239,191,189,48,118,111,239,191,189,239,191,189,16,77,239,191,189,239,191,189,119,26,239,191,189,89,239,191,189,6,98,207,156,86,239,191,189,96,3,37,117,239,191,189,32,48,239,191,189,90,215,174,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,5,41,239,191,189,10,239,191,189,104,239,191,189,206,177,118,59,33,115,239,191,189,239,191,189,239,191,189,239,191,189,114,74,107,105,97,239,191,189,102,239,191,189,239,191,189,98,239,191,189,34,31,239,191,189,239,191,189,30,239,191,189,44,107,86,36,239,191,189,239,191,189,239,191,189,111,239,191,189,112,57,99,31,239,191,189,239,191,189,103,22,59,63,72,239,191,189,73,222,163,52,239,191,189,110,239,191,189,86,239,191,189,104,85,239,191,189,239,191,189,90,121,78,239,191,189,199,179,239,191,189,38,49,45,71,239,191,189,119,13,239,191,189,9,68,120,239,191,189,239,191,189,227,140,178,239,191,189,30,53,239,191,189,239,191,189,98,239,191,189,239,191,189,13,40,76,126,239,191,189,199,173,120,239,191,189,239,191,189,34,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,118,239,191,189,4,239,191,189,239,191,189,239,191,189,94,111,239,191,189,239,191,189,17,239,191,189,124,93,57,239,191,189,43,239,191,189,239,191,189,65,239,191,189,0,64,63,239,191,189,239,191,189,60,3,41,62,239,191,189,12,21,62,239,191,189,35,239,191,189,239,191,189,39,105,62,230,174,160,94,49,24,239,191,189,116,239,191,189,74,7,11,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,91,70,83,239,191,189,5,239,191,189,61,125,239,191,189,92,239,191,189,222,165,239,191,189,88,26,239,191,189,239,191,189,97,239,191,189,35,79,239,191,189,114,239,191,189,5,10,94,239,191,189,77,94,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,7,23,49,107,97,51,239,191,189,212,173,37,239,191,189,64,101,11,239,191,189,239,191,189,70,0,239,191,189,223,140,95,239,191,189,5,28,7,239,191,189,96,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,72,239,191,189,64,63,239,191,189,239,191,189,239,191,189,28,239,191,189,56,239,191,189,239,191,189,55,3,102,239,191,189,118,239,191,189,11,20,15,239,191,189,25,43,78,90,105,39,77,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,7,92,239,191,189,8,111,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,104,239,191,189,239,191,189,120,239,191,189,239,191,189,20,239,191,189,73,109,239,191,189,239,191,189,239,191,189,22,17,239,191,189,90,63,115,16,111,62,62,11,239,191,189,239,191,189,83,32,239,191,189,239,191,189,239,191,189,45,119,123,239,191,189,67,239,191,189,100,35,110,239,191,189,23,18,95,89,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,41,103,239,191,189,217,184,48,239,191,189,60,239,191,189,202,130,87,74,92,239,191,189,27,239,191,189,28,4,239,191,189,87,43,222,177,239,191,189,239,191,189,37,19,20,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,107,61,239,191,189,239,191,189,83,239,191,189,239,191,189,72,239,191,189,82,44,239,191,189,239,191,189,106,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,202,139,239,191,189,41,239,191,189,239,191,189,220,164,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,125,239,191,189,72,218,182,61,83,239,191,189,239,191,189,239,191,189,239,191,189,35,114,239,191,189,239,191,189,82,91,239,191,189,239,191,189,239,191,189,202,177,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,21,239,191,189,239,191,189,85,25,37,64,15,34,239,191,189,56,212,154,22,239,191,189,239,191,189,50,239,191,189,58,239,191,189,123,239,191,189,16,20,33,239,191,189,47,96,239,191,189,19,75,205,190,239,191,189,126,239,191,189,103,29,239,191,189,108,18,76,239,191,189,20,121,239,191,189,22,239,191,189,239,191,189,66,113,42,75,239,191,189,51,93,239,191,189,239,191,189,51,77,239,191,189,239,191,189,47,15,64,106,22,239,191,189,239,191,189,1,80,21,239,191,189,205,140,46,40,239,191,189,239,191,189,43,239,191,189,239,191,189,116,239,191,189,239,191,189,33,239,191,189,33,239,191,189,33,81,239,191,189,239,191,189,117,51,28,127,239,191,189,14,239,191,189,91,239,191,189,239,191,189,239,191,189,91,62,125,16,4,52,239,191,189,12,8,239,191,189,88,107,239,191,189,109,31,239,191,189,239,191,189,16,119,239,191,189,239,191,189,44,93,88,89,18,239,191,189,41,239,191,189,76,90,239,191,189,239,191,189,239,191,189,70,239,191,189,4,17,239,191,189,236,166,179,239,191,189,239,191,189,29,199,137,18,239,191,189,38,239,191,189,74,239,191,189,59,96,47,239,191,189,37,239,191,189,242,139,130,128,239,191,189,62,239,191,189,239,191,189,239,191,189,39,61,239,191,189,239,191,189,105,239,191,189,9,239,191,189,75,103,58,239,191,189,239,191,189,239,191,189,117,101,99,15,33,77,74,23,0,239,191,189,89,239,191,189,96,36,51,37,239,191,189,105,239,191,189,239,191,189,118,65,5,239,191,189,239,191,189,49,239,191,189,239,191,189,122,239,191,189,37,104,239,191,189,12,26,88,46,239,191,189,239,191,189,239,191,189,16,60,6,239,191,189,239,191,189,42,239,191,189,38,239,191,189,208,172,239,191,189,239,191,189,36,93,46,42,27,239,191,189,51,239,191,189,239,191,189,52,75,107,23,24,204,136,239,191,189,79,4,239,191,189,57,58,124,43,239,191,189,76,218,189,239,191,189,26,121,239,191,189,72,12,239,191,189,239,191,189,0,104,121,239,191,189,220,182,19,85,105,239,191,189,205,145,89,38,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,92,239,191,189,239,191,189,118,239,191,189,216,186,239,191,189,35,11,33,209,136,111,239,191,189,46,239,191,189,239,191,189,39,38,239,191,189,15,126,72,99,239,191,189,32,28,239,191,189,118,69,12,26,239,191,189,11,239,191,189,239,191,189,102,239,191,189,58,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,64,77,81,239,191,189,19,21,239,191,189,239,191,189,46,239,191,189,239,191,189,20,239,191,189,239,191,189,99,45,69,239,191,189,239,191,189,239,191,189,36,115,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,1,75,96,239,191,189,239,191,189,87,69,83,239,191,189,239,191,189,111,239,191,189,239,191,189,91,239,191,189,19,38,88,111,61,239,191,189,239,191,189,46,27,217,149,239,191,189,56,15,33,7,70,9,239,191,189,239,191,189,85,205,165,239,191,189,0,67,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,124,8,239,191,189,111,61,121,100,67,119,49,239,191,189,239,191,189,239,191,189,120,26,239,191,189,95,239,191,189,40,239,191,189,57,239,191,189,124,70,239,191,189,239,191,189,111,239,191,189,30,104,239,191,189,102,84,239,191,189,79,48,28,239,191,189,239,191,189,205,165,239,191,189,82,36,43,239,191,189,19,239,191,189,40,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,234,139,171,239,191,189,9,105,36,14,239,191,189,59,239,191,189,239,191,189,41,234,186,173,42,91,63,239,191,189,63,88,27,239,191,189,112,239,191,189,239,191,189,86,92,5,217,181,81,100,239,191,189,113,239,191,189,16,239,191,189,59,91,67,239,191,189,239,191,189,48,40,93,61,14,94,111,48,95,203,171,51,239,191,189,44,73,33,239,191,189,206,177,239,191,189,97,218,153,239,191,189,69,73,239,191,189,25,239,191,189,3,94,239,191,189,239,191,189,43,239,191,189,71,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,113,239,191,189,198,161,239,191,189,239,191,189,239,191,189,5,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,117,86,239,191,189,92,109,239,191,189,109,101,239,191,189,2,239,191,189,2,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,10,239,191,189,104,80,83,239,191,189,94,239,191,189,105,239,191,189,239,191,189,60,239,191,189,241,156,131,136,63,16,239,191,189,23,9,3,123,239,191,189,239,191,189,9,239,191,189,7,239,191,189,14,239,191,189,239,191,189,122,239,191,189,35,92,37,2,239,191,189,239,191,189,239,191,189,70,239,191,189,239,191,189,94,72,239,191,189,101,2,42,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,239,191,189,83,239,191,189,239,191,189,201,139,239,191,189,239,191,189,108,62,99,121,39,99,60,111,239,191,189,122,239,191,189,85,239,191,189,239,191,189,123,98,61,4,239,191,189,87,46,66,126,239,191,189,83,110,239,191,189,115,239,191,189,65,211,187,239,191,189,3,239,191,189,10,67,239,191,189,239,191,189,239,191,189,122,55,239,191,189,239,191,189,61,123,59,239,191,189,19,239,191,189,125,239,191,189,239,191,189,89,239,191,189,42,239,191,189,239,191,189,38,239,191,189,239,191,189,200,189,239,191,189,239,191,189,8,87,239,191,189,239,191,189,113,31,81,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,51,28,96,39,239,191,189,14,239,191,189,108,239,191,189,74,109,239,191,189,34,52,239,191,189,122,239,191,189,239,191,189,53,35,239,191,189,8,239,191,189,107,43,239,191,189,239,191,189,124,239,191,189,120,194,134,78,239,191,189,117,104,239,191,189,239,191,189,239,191,189,36,239,191,189,65,239,191,189,38,239,191,189,239,191,189,6,239,191,189,42,124,239,191,189,34,26,239,191,189,239,191,189,20,239,191,189,239,191,189,239,191,189,115,239,191,189,39,239,191,189,79,239,191,189,239,191,189,119,239,191,189,239,191,189,74,239,191,189,239,191,189,66,17,112,75,36,123,239,191,189,239,191,189,239,191,189,48,82,36,239,191,189,239,191,189,108,239,191,189,239,191,189,97,239,191,189,239,191,189,92,36,41,239,191,189,117,239,191,189,239,191,189,239,191,189,20,104,239,191,189,239,191,189,239,191,189,239,191,189,9,67,91,239,191,189,67,1,239,191,189,239,191,189,239,191,189,212,167,239,191,189,239,191,189,122,239,191,189,239,191,189,94,239,191,189,9,239,191,189,29,239,191,189,239,191,189,213,143,239,191,189,239,191,189,43,55,114,239,191,189,239,191,189,239,191,189,98,86,239,191,189,113,101,239,191,189,100,68,96,239,191,189,239,191,189,239,191,189,79,54,239,191,189,239,191,189,63,239,191,189,111,239,191,189,33,96,239,191,189,95,102,18,108,239,191,189,239,191,189,98,27,5,41,23,239,191,189,61,239,191,189,58,48,33,217,135,44,7,239,191,189,39,239,191,189,84,239,191,189,239,191,189,50,239,191,189,57,239,191,189,65,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,56,239,191,189,106,239,191,189,4,94,78,239,191,189,51,126,239,191,189,63,114,23,48,239,191,189,47,30,239,191,189,45,214,144,65,239,191,189,59,104,41,72,239,191,189,239,191,189,85,201,155,103,239,191,189,24,239,191,189,46,239,191,189,239,191,189,18,239,191,189,239,191,189,125,93,239,191,189,84,239,191,189,96,239,191,189,36,239,191,189,21,94,97,31,41,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,91,41,239,191,189,11,115,23,4,1,127,239,191,189,27,47,239,191,189,239,191,189,124,122,20,72,239,191,189,222,179,239,191,189,239,191,189,60,5,239,191,189,239,191,189,27,101,239,191,189,239,191,189,113,239,191,189,103,83,114,28,73,109,72,239,191,189,35,20,53,67,49,81,100,87,78,239,191,189,220,183,2,239,191,189,104,54,103,5,239,191,189,39,239,191,189,239,191,189,25,239,191,189,105,102,112,9,94,239,191,189,219,160,9,239,191,189,239,191,189,127,239,191,189,239,191,189,52,239,191,189,239,191,189,23,239,191,189,239,191,189,195,191,239,191,189,60,239,191,189,67,127,32,239,191,189,62,27,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,22,0,23,239,191,189,23,239,191,189,239,191,189,110,49,239,191,189,239,191,189,37,239,191,189,14,47,239,166,166,239,191,189,204,169,239,191,189,92,127,29,9,110,100,95,11,73,239,191,189,117,39,239,191,189,239,191,189,202,168,47,239,191,189,70,18,198,131,239,191,189,1,47,239,191,189,33,67,110,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,14,77,82,15,37,111,6,239,191,189,93,94,70,77,239,191,189,239,191,189,86,70,99,116,239,191,189,239,191,189,87,7,62,120,239,191,189,239,191,189,6,40,239,191,189,239,191,189,32,68,10,239,191,189,239,191,189,51,55,239,191,189,87,125,21,239,191,189,209,164,93,70,68,23,58,239,191,189,26,15,239,191,189,239,191,189,6,14,239,191,189,90,59,104,221,189,123,61,1,66,239,191,189,100,116,19,44,239,191,189,61,127,66,99,109,239,191,189,87,239,191,189,239,191,189,16})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff692ff27d",
                        container: "containers161743ab584f43a993f66d4d6e497ca4",
                        blob: "Blob625d09ea12d840e99689696ec2e75e12",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=509440-555007",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06532 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06532_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06532_s.txt", Encoding.UTF8);

    public Test06532() : base(recordedRequest, recordedResponse, "accounts8d439ff4a8d0465")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff4a8d0465",
                        container: "containersb04a805bee054344bac50afdec8dc861",
                        blob: "Blobfe0fbb003425486ca4125e0ade20ad82_WriteProtectedBlob",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=7168-17919",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07095 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07095_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07095_s.txt", Encoding.UTF8);

    public Test07095() : base(recordedRequest, recordedResponse, "accounts8d439ffda48294e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{66,108,44,75,212,132,36,84,239,191,189,239,191,189,86,24,239,191,189,110,115,239,191,189,239,191,189,239,191,189,80,29,115,239,191,189,120,239,191,189,110,80,26,19,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,32,80,239,191,189,239,191,189,239,191,189,97,42,87,92,51,239,191,189,30,218,129,239,191,189,96,77,239,191,189,207,169,239,191,189,239,191,189,102,51,10,64,51,70,239,191,189,239,191,189,239,191,189,239,191,189,97,121,239,191,189,99,239,191,189,239,191,189,57,18,239,191,189,33,41,58,239,191,189,239,191,189,57,239,191,189,223,153,84,239,191,189,28,99,70,90,239,191,189,115,239,191,189,239,191,189,45,228,177,168,239,191,189,239,191,189,239,191,189,97,239,191,189,96,107,239,191,189,91,239,191,189,16,239,191,189,239,191,189,43,100,14,7,99,102,11,94,239,191,189,239,191,189,239,191,189,50,239,191,189,120,239,191,189,208,150,239,191,189,111,239,191,189,239,191,189,28,62,239,191,189,41,127,46,239,191,189,239,191,189,94,82,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,126,239,191,189,74,13,2,239,191,189,46,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,35,27,239,191,189,72,239,191,189,47,57,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,127,194,184,114,35,239,191,189,25,52,239,191,189,54,239,191,189,25,127,239,191,189,5,239,191,189,68,239,191,189,212,132,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,126,14,239,191,189,19,239,191,189,97,47,118,239,191,189,239,191,189,239,191,189,40,90,239,191,189,15,46,80,239,191,189,52,80,239,191,189,42,42,205,181,239,191,189,32,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,105,107,239,191,189,239,191,189,102,239,191,189,239,191,189,10,239,191,189,239,191,189,53,239,191,189,25,239,191,189,239,191,189,239,191,189,93,70,48,83,239,191,189,239,191,189,94,239,191,189,65,239,191,189,202,135,58,56,239,191,189,91,44,239,191,189,239,191,189,228,139,144,239,191,189,239,191,189,88,31,8,239,191,189,97,118,18,239,191,189,239,191,189,42,86,239,191,189,99,239,191,189,239,191,189,13,57,97,239,191,189,3,75,207,140,66,217,145,239,191,189,211,167,91,239,191,189,92,102,239,191,189,239,191,189,239,191,189,117,6,239,191,189,41,239,191,189,204,146,13,52,239,191,189,239,191,189,3,61,239,191,189,82,47,36,239,191,189,12,79,124,239,191,189,239,191,189,239,191,189,239,191,189,63,19,77,94,239,191,189,104,103,207,173,239,191,189,50,239,191,189,239,191,189,75,127,61,126,14,77,239,191,189,125,239,191,189,239,191,189,8,239,191,189,56,239,191,189,239,191,189,116,92,239,191,189,39,15,52,120,239,191,189,69,239,191,189,57,36,97,52,239,191,189,64,32,239,191,189,239,191,189,123,239,191,189,18,239,191,189,239,191,189,239,191,189,8,118,239,191,189,67,68,239,191,189,239,191,189,239,191,189,120,90,80,239,191,189,11,113,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,41,102,73,5,239,191,189,239,191,189,239,191,189,35,98,98,94,55,239,191,189,7,239,191,189,239,191,189,117,1,239,191,189,118,91,239,191,189,239,191,189,63,120,20,60,31,239,191,189,239,191,189,26,47,239,191,189,105,239,191,189,45,239,191,189,239,191,189,91,239,191,189,18,239,191,189,21,239,191,189,239,191,189,118,106,239,191,189,3,81,239,191,189,239,191,189,93,239,191,189,125,110,239,191,189,23,211,177,239,191,189,121,239,191,189,71,47,115,43,101,239,191,189,43,239,191,189,239,191,189,26,100,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,117,239,191,189,117,36,77,102,239,191,189,35})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffda48294e",
                        container: "containers90c96c5cf0314aafb9c6be3ec2e651d0",
                        blob: "Blob0e210bd047ca4ad8bfec42e77d8eb49d",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07236 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07236_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07236_s.txt", Encoding.UTF8);

    public Test07236() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,35,239,191,189,239,191,189,239,191,189,93,239,191,189,6,11,239,191,189,239,191,189,106,65,113,239,191,189,239,191,189,29,109,2,239,191,189,5,239,191,189,64,87,239,191,189,127,239,191,189,239,191,189,107,106,239,191,189,239,191,189,220,142,222,177,239,191,189,239,191,189,111,55,239,191,189,97,72,239,191,189,122,239,191,189,69,30,239,191,189,64,239,191,189,124,93,29,239,191,189,51,239,191,189,77,239,191,189,0,239,191,189,239,191,189,25,205,142,239,191,189,239,191,189,239,191,189,94,239,191,189,86,118,110,239,191,189,239,191,189,104,239,191,189,76,116,239,191,189,42,239,191,189,126,126,112,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,54,239,191,189,239,191,189,46,4,239,191,189,46,239,191,189,48,13,239,191,189,12,239,191,189,7,239,191,189,115,239,191,189,239,191,189,92,239,191,189,126,239,191,189,239,191,189,118,39,79,15,66,239,191,189,239,191,189,239,191,189,100,239,191,189,239,191,189,31,239,191,189,239,191,189,202,128,124,110,239,191,189,67,239,191,189,72,239,191,189,119,201,137,67,12,239,191,189,239,191,189,37,239,191,189,31,73,7,239,191,189,239,191,189,239,191,189,27,65,47,125,96,239,191,189,239,191,189,37,239,191,189,239,191,189,45,239,191,189,65,239,191,189,72,30,46,65,239,191,189,239,191,189,121,12,239,191,189,239,191,189,239,191,189,34,239,191,189,116,98,100,239,191,189,202,159,239,191,189,126,2,239,191,189,202,132,239,191,189,239,191,189,239,191,189,239,191,189,83,223,190,71,65,98,1,26,239,191,189,239,191,189,68,115,15,239,191,189,93,239,191,189,62,47,114,239,191,189,97,45,98,64,239,191,189,101,69,239,191,189,99,239,191,189,31,8,239,191,189,72,88,239,191,189,7,219,136,18,97,73,239,191,189,239,191,189,90,15,111,109,42,19,70,106,29,239,191,189,98,37,124,125,239,191,189,239,191,189,29,107,239,191,189,8,239,191,189,60,239,191,189,239,191,189,61,106,239,191,189,99,239,191,189,96,98,24,49,239,191,189,239,191,189,239,191,189,239,191,189,107,80,118,239,191,189,239,191,189,239,191,189,239,191,189,50,117,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,30,113,239,191,189,47,239,191,189,98,239,191,189,195,189,126,74,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,102,239,191,189,39,80,239,191,189,239,191,189,10,239,191,189,38,15,239,191,189,106,108,239,191,189,61,239,191,189,239,191,189,62,77,239,191,189,239,191,189,239,191,189,239,191,189,46,117,239,191,189,62,239,191,189,239,191,189,123,197,176,239,191,189,43,97,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,60,239,191,189,239,191,189,82,18,196,183,74,208,152,239,191,189,239,191,189,83,120,239,191,189,54,34,51,70,239,191,189,105,53,239,191,189,52,239,191,189,117,90,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,225,177,191,39,239,191,189,99,214,135,65,32,239,191,189,44,20,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,88,97,7,62,239,191,189,239,191,189,239,191,189,106,239,191,189,119,239,191,189,34,18,24,114,239,191,189,64,15,71,239,191,189,111,69,39,20,239,191,189,7,239,191,189,210,167,122,62,78,239,191,189,5,42,127,239,191,189,239,191,189,239,191,189,68,239,191,189,108,239,191,189,239,191,189,73,239,191,189,26,239,191,189,48,239,191,189,33,239,191,189,99,239,191,189,16,19,57,239,191,189,239,191,189,239,191,189,239,191,189,97,57,239,191,189,64,12,239,191,189,239,191,189,28,239,191,189,124,2,10,3,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,29,239,191,189,22,69,239,191,189,239,191,189,6,82,239,191,189,239,191,189,74,239,191,189,239,191,189,127,13,12,62,239,191,189,97,9,96,239,191,189,13,121,239,191,189,38,239,191,189,239,191,189,71,41,6,8,239,191,189,239,191,189,34,23,215,172,100,239,191,189,117,239,191,189,16,89,78,239,191,189,11,114,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,100,239,191,189,105,239,191,189,89,103,10,208,162,65,16,34,93,239,191,189,52,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,16,27,40,239,191,189,239,191,189,239,191,189,25,18,239,191,189,19,239,191,189,47,59,67,239,191,189,114,14,239,191,189,63,239,191,189,12,239,191,189,239,191,189,21,239,191,189,104,208,131,96,27,217,187,52,113,88,117,49,239,191,189,96,9,239,191,189,47,62,14,239,191,189,239,191,189,239,191,189,78,239,191,189,35,239,191,189,9,105,239,191,189,30,85,50,18,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,58,3,239,191,189,239,191,189,239,191,189,93,65,102,70,54,45,239,191,189,124,239,191,189,118,35,110,239,191,189,239,191,189,61,239,191,189,239,191,189,81,56,83,2,67,30,239,191,189,30,18,239,191,189,126,239,191,189,212,155,239,191,189,48,99,56,239,191,189,30,239,191,189,51,239,191,189,65,239,191,189,88,239,191,189,239,191,189,239,191,189,116,239,191,189,116,31,105,239,191,189,239,191,189,117,239,191,189,26,34,239,191,189,39,35,57,94,239,191,189,6,239,191,189,87,62,30,239,191,189,90,119,12,30,105,18,41,239,191,189,33,75,239,191,189,75,9,104,106,239,191,189,9,239,191,189,122,29,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,82,239,191,189,90,239,191,189,85,239,191,189,26,239,191,189,93,239,191,189,89,98,239,191,189,47,239,191,189,112,220,133,239,191,189,85,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,14,239,191,189,48,68,239,191,189,239,191,189,199,182,72,88,239,191,189,239,191,189,12,87,239,191,189,88,239,191,189,239,191,189,31,27,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,12,18,239,191,189,91,127,239,191,189,237,132,134,50,122,239,191,189,239,191,189,38,60,239,191,189,101,202,142,239,191,189,239,191,189,42,239,191,189,123,207,177,239,191,189,42,239,191,189,239,191,189,239,191,189,239,186,164,239,191,189,239,191,189,112,3,31,239,191,189,41,38,65,86,62,113,239,191,189,77,19,39,239,191,189,39,55,110,239,191,189,201,177,3,239,191,189,59,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,239,130,165,239,191,189,239,191,189,239,191,189,111,239,191,189,116,4,239,191,189,83,60,94,24,54,23,123,89,239,191,189,239,191,189,75,239,191,189,239,191,189,74,108,21,239,191,189,239,191,189,206,151,239,191,189,239,191,189,77,239,191,189,22,239,191,189,122,50,201,184,113,239,191,189,239,191,189,34,94,198,143,35,239,191,189,67,19,56,239,191,189,57,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,73,239,191,189,2,70,81,216,171,236,165,134,239,191,189,9,239,191,189,239,191,189,119,239,191,189,20,239,191,189,80,239,191,189,44,239,191,189,24,45,125,83,119,42,239,191,189,215,179,32,59,239,191,189,201,168,239,191,189,239,191,189,82,239,191,189,43,97,239,191,189,42,239,191,189,239,191,189,28,239,191,189,127,9,239,191,189,239,191,189,239,191,189,239,191,189,112,239,191,189,119,239,191,189,239,191,189,239,191,189,97,239,191,189,63,239,191,189,211,160,239,191,189,239,191,189,207,176,32,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,55})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=4096-5119",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06902 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06902_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06902_s.txt", Encoding.UTF8);

    public Test06902() : base(recordedRequest, recordedResponse, "accounts8d439ff6f6383aa")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{110,49,64,239,191,189,239,191,189,239,191,189,68,239,191,189,118,239,191,189,29,239,191,189,219,183,239,191,189,239,191,189,88,239,191,189,17,239,191,189,239,191,189,15,239,191,189,52,93,239,191,189,94,208,154,239,191,189,35,122,118,109,239,191,189,43,239,191,189,47,58,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,50,239,191,189,100,239,191,189,239,191,189,239,191,189,67,10,239,191,189,34,239,191,189,118,239,191,189,60,239,191,189,24,239,191,189,5,239,191,189,103,34,110,239,191,189,239,191,189,239,191,189,41,113,109,47,239,191,189,22,239,191,189,53,239,191,189,239,191,189,102,108,9,41,63,55,107,239,191,189,220,132,82,239,191,189,239,191,189,239,191,189,104,20,243,183,151,174,239,191,189,63,239,191,189,208,144,114,239,191,189,219,188,11,239,191,189,65,239,191,189,239,191,189,127,239,191,189,239,191,189,219,186,47,239,191,189,239,191,189,239,191,189,9,109,239,191,189,116,239,191,189,239,191,189,239,191,189,35,49,239,191,189,222,189,38,239,191,189,57,239,191,189,239,191,189,97,239,191,189,19,239,191,189,239,191,189,16,239,191,189,67,62,239,191,189,65,23,239,191,189,103,239,191,189,38,98,239,191,189,98,12,239,191,189,39,20,239,191,189,231,142,163,30,239,191,189,88,23,239,191,189,65,239,191,189,239,191,189,38,239,191,189,12,67,92,239,191,189,49,112,10,239,191,189,11,51,54,239,191,189,239,191,189,239,191,189,214,141,239,191,189,58,124,35,239,191,189,55,108,239,191,189,69,229,164,168,239,191,189,16,239,191,189,208,156,85,239,191,189,5,48,205,182,10,100,239,191,189,90,109,55,103,239,191,189,79,194,180,29,239,191,189,239,191,189,103,35,12,239,191,189,82,239,191,189,101,239,191,189,53,35,239,191,189,22,239,191,189,111,62,239,191,189,92,2,239,191,189,113,239,191,189,12,239,191,189,239,191,189,81,239,191,189,81,85,239,191,189,33,239,191,189,5,38,53,49,124,21,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,54,239,191,189,33,109,36,17,239,191,189,87,26,15,56,239,191,189,22,47,239,191,189,1,13,57,16,239,191,189,20,47,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,127,32,87,239,191,189,60,102,239,191,189,47,47,111,44,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,76,37,239,191,189,239,191,189,243,148,131,145,6,56,49,239,191,189,239,191,189,79,55,239,191,189,239,191,189,239,191,189,107,107,239,191,189,239,191,189,239,191,189,209,157,12,239,191,189,11,75,87,239,191,189,1,55,34,116,239,191,189,239,191,189,76,100,56,239,191,189,213,159,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,61,239,191,189,33,106,239,191,189,100,10,53,239,191,189,239,191,189,120,70,239,191,189,239,191,189,47,114,239,191,189,219,162,52,239,191,189,83,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,90,120,101,127,22,239,191,189,239,191,189,48,239,191,189,22,125,112,65,239,191,189,239,191,189,96,239,191,189,83,239,191,189,25,24,239,191,189,49,239,191,189,80,110,239,191,189,217,154,54,94,32,239,191,189,39,239,191,189,55,49,239,191,189,92,12,41,113,239,191,189,239,191,189,239,191,189,239,191,189,113,75,239,191,189,105,5,239,191,189,69,239,191,189,56,239,191,189,71,123,47,239,191,189,39,215,150,98,239,191,189,93,127,25,239,191,189,239,191,189,47,29,239,191,189,116,239,191,189,32,239,191,189,19,239,191,189,239,191,189,69,239,191,189,49,49,239,191,189,239,191,189,51,239,191,189,78,239,181,129,239,191,189,239,191,189,82,239,191,189,57,239,191,189,120,66,88,239,191,189,66,57})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff6f6383aa",
                        container: "containers06c5687cacc943dc961cfb1bfa2c0f81",
                        blob: "PageBlobe1a4fe61e2f4479eac6776a7e8120745",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07237 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07237_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07237_s.txt", Encoding.UTF8);

    public Test07237() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{111,125,54,41,48,35,42,84,239,191,189,239,191,189,33,21,87,41,26,56,45,239,191,189,88,239,191,189,113,78,24,239,191,189,217,137,112,51,239,191,189,239,191,189,213,155,239,191,189,29,48,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,121,239,191,189,98,239,191,189,75,66,67,33,100,239,191,189,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,213,134,68,57,239,191,189,201,139,239,191,189,16,239,191,189,239,191,189,58,118,31,239,191,189,40,239,191,189,54,239,191,189,239,191,189,112,239,191,189,79,239,191,189,239,191,189,15,239,191,189,27,64,239,191,189,239,191,189,239,191,189,239,191,189,30,35,35,108,92,64,239,191,189,114,239,191,189,239,191,189,126,9,239,191,189,69,239,191,189,40,239,191,189,123,60,239,191,189,73,239,191,189,55,239,191,189,95,239,191,189,239,191,189,112,91,24,239,191,189,195,143,88,239,191,189,215,187,239,191,189,239,191,189,10,85,239,191,189,239,191,189,239,191,189,16,239,191,189,101,239,191,189,239,191,189,24,68,94,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,87,239,191,189,2,105,210,143,239,191,189,121,82,73,239,191,189,108,28,239,191,189,49,111,239,191,189,12,104,239,191,189,239,191,189,239,191,189,54,239,191,189,67,212,146,0,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,56,82,64,28,63,85,88,18,93,195,171,39,216,145,117,54,27,239,191,189,18,111,211,155,21,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,104,239,191,189,239,191,189,239,191,189,29,94,239,191,189,40,79,53,113,239,191,189,41,239,191,189,239,191,189,239,191,189,110,53,76,239,191,189,103,239,191,189,41,203,156,61,26,31,65,239,191,189,239,191,189,67,239,191,189,239,191,189,66,239,191,189,239,191,189,88,239,191,189,43,90,239,191,189,57,97,239,191,189,239,191,189,81,68,76,239,191,189,239,191,189,239,191,189,108,118,90,27,93,239,191,189,68,239,191,189,231,180,172,45,239,191,189,57,85,9,239,191,189,239,191,189,239,191,189,117,239,191,189,12,46,239,191,189,106,239,191,189,80,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,41,239,191,189,239,191,189,72,239,191,189,59,120,239,191,189,90,115,14,239,191,189,51,209,178,56,71,123,118,239,191,189,13,48,95,72,107,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,102,239,191,189,107,200,182,239,191,189,239,191,189,239,191,189,100,239,191,189,51,239,191,189,32,97,54,7,239,191,189,83,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,35,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,87,43,239,191,189,239,191,189,39,9,123,124,239,191,189,100,124,105,239,191,189,239,191,189,239,191,189,208,147,5,239,191,189,239,191,189,239,191,189,123,5,239,191,189,17,120,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,221,136,239,191,189,93,91,211,167,58,239,191,189,119,239,191,189,30,25,75,16,56,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,33,239,191,189,239,191,189,121,13,124,78,239,191,189,126,113,239,191,189,239,191,189,46,239,191,189,53,239,191,189,15,40,239,191,189,239,191,189,239,191,189,1,239,191,189,94,68,93,239,191,189,57,239,191,189,89,63,3,1,98,216,168,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,239,191,189,98,50,0,239,191,189,239,191,189,79,89,239,191,189,32,239,191,189,80,53,239,191,189,239,191,189,21,239,191,189,36,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=5632-6143",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07238 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07238_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07238_s.txt", Encoding.UTF8);

    public Test07238() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,68,216,162,123,100,6,239,191,189,196,174,239,191,189,239,191,189,200,184,239,191,189,91,36,239,191,189,8,239,191,189,239,191,189,55,123,239,191,189,239,191,189,22,101,239,191,189,3,239,191,189,3,101,239,191,189,239,191,189,121,126,119,239,191,189,52,81,14,239,191,189,95,239,191,189,239,191,189,239,191,189,3,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,111,239,191,189,239,191,189,101,239,191,189,96,239,191,189,239,191,189,78,39,3,62,103,227,144,182,239,191,189,239,191,189,41,239,191,189,239,191,189,25,239,191,189,18,32,239,191,189,97,77,96,239,191,189,58,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,121,216,141,239,191,189,239,191,189,6,62,239,191,189,0,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,201,172,82,239,191,189,97,239,191,189,239,191,189,74,239,191,189,239,191,189,31,52,239,191,189,78,239,191,189,239,191,189,98,239,191,189,86,93,31,239,191,189,35,18,26,239,191,189,239,191,189,76,117,86,122,44,114,239,191,189,239,191,189,63,123,117,76,61,239,191,189,239,191,189,239,191,189,239,191,189,210,140,110,91,3,239,191,189,239,191,189,96,58,239,191,189,61,239,191,189,64,195,161,239,191,189,75,239,191,189,117,114,239,191,189,239,191,189,206,131,102,108,239,191,189,25,124,239,191,189,239,191,189,56,51,72,51,52,239,191,189,114,239,191,189,239,191,189,239,191,189,56,50,239,191,189,239,191,189,59,239,191,189,239,191,189,74,239,191,189,239,191,189,76,119,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,70,239,191,189,32,116,80,12,123,109,239,191,189,90,98,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,49,60,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,70,55,117,73,239,191,189,219,177,49,239,191,189,123,18,25,101,46,53,61,239,191,189,59,87,100,239,191,189,197,136,34,239,191,189,69,101,239,191,189,239,191,189,119,239,191,189,72,239,191,189,239,191,189,239,191,189,68,239,191,189,116,95,239,191,189,55,239,191,189,239,191,189,13,239,191,189,239,191,189,74,2,6,239,191,189,65,239,191,189,239,191,189,24,44,239,191,189,239,191,189,83,83,239,191,189,118,17,239,191,189,13,239,191,189,239,191,189,34,239,191,189,104,239,191,189,69,25,239,191,189,239,191,189,44,239,191,189,35,122,239,191,189,25,239,191,189,99,239,191,189,239,191,189,54,43,239,191,189,239,191,189,98,68,239,191,189,239,191,189,32,239,191,189,16,37,0,239,191,189,105,239,191,189,239,191,189,116,239,191,189,21,91,39,207,175,239,191,189,72,93,52,239,191,189,58,239,191,189,19,121,239,191,189,239,191,189,119,1,68,115,36,91,239,191,189,239,191,189,49,239,191,189,7,239,191,189,16,239,191,189,95,239,191,189,201,130,239,191,189,14,92,24,239,191,189,26,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,116,0,117,239,191,189,239,191,189,46,239,191,189,239,191,189,239,191,189,100,239,191,189,35,239,191,189,239,191,189,52,73,239,191,189,79,239,191,189,27,239,191,189,82,89,61,239,191,189,239,191,189,18,66,239,191,189,91,239,191,189,239,191,189,30,25,239,191,189,84,239,191,189,239,191,189,223,189,40,13,239,191,189,25,61,6,11,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,55,239,191,189,1,27,91,44,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,94,239,191,189,69,239,191,189,35,239,191,189,239,191,189,7,239,191,189,15,239,191,189,239,191,189,239,191,189,72,67,239,191,189,239,191,189,28,8,239,191,189,239,191,189,98,239,191,189,239,191,189,8,33,57,61,28,10,239,191,189,239,191,189,88,9,120,22,239,191,189,3,20,3,79,20,239,191,189,29,239,191,189,239,191,189,23,239,191,189,239,191,189,38,239,191,189,239,191,189,37,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,117,239,191,189,126,81,31,126,239,191,189,239,191,189,45,239,191,189,239,191,189,8,4,119,239,191,189,239,191,189,222,162,49,9,125,239,191,189,239,191,189,58,239,191,189,96,239,191,189,239,191,189,124,82,28,105,17,239,191,189,239,191,189,42,84,239,191,189,239,191,189,88,63,239,191,189,88,58,239,191,189,239,191,189,33,71,118,108,239,191,189,30,105,239,191,189,4,239,191,189,239,191,189,67,107,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,58,18,239,191,189,239,191,189,202,147,94,239,191,189,68,20,63,81,109,15,108,239,191,189,239,191,189,25,123,28,54,16,96,4,115,75,239,191,189,125,106,239,191,189,218,156,239,191,189,239,191,189,50,239,191,189,63,239,191,189,46,113,95,55,239,191,189,87,126,239,191,189,239,191,189,68,110,239,191,189,114,239,191,189,8,239,191,189,78,41,239,191,189,239,191,189,101,127,239,191,189,239,191,189,81,239,191,189,57,239,191,189,239,191,189,123,221,154,239,191,189,110,239,191,189,9,239,191,189,239,191,189,17,8,239,191,189,239,191,189,239,191,189,81,15,239,191,189,17,239,191,189,239,191,189,40,239,191,189,8,31,101,43,239,191,189,117,126,239,191,189,63,29,239,191,189,239,191,189,11,103,239,191,189,20,3,239,191,189,239,191,189,239,191,189,79,24,239,191,189,84,239,191,189,239,191,189,239,191,189,210,185,239,191,189,60,14,127,239,191,189,239,191,189,123,87,66,60,239,191,189,62,24,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,13,11,239,191,189,99,84,239,191,189,117,17,239,191,189,239,191,189,202,172,44,239,191,189,239,191,189,239,191,189,107,51,239,191,189,88,239,191,189,239,191,189,239,191,189,106,239,191,189,54,70,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,54,239,191,189,49,121,27,239,191,189,239,191,189,6,70,239,191,189,71,201,146,239,191,189,64,10,221,136,239,191,189,87,239,191,189,239,191,189,76,85,42,239,191,189,29,239,191,189,239,191,189,103,21,239,191,189,10,21,239,191,189,239,191,189,83,80,239,191,189,239,191,189,82,118,36,110,239,191,189,239,191,189,73,5,239,191,189,239,191,189,7,122,104,239,191,189,112,83,239,191,189,78,61,101,57,80,222,134,83,239,191,189,125,239,191,189,79,90,239,191,189,56,214,169,239,191,189,79,40,239,191,189,239,191,189,212,165,1,239,191,189,14,121,239,191,189,97,239,191,189,239,191,189,239,191,189,4,18,74,116,2,239,191,189,239,191,189,27,239,191,189,118,82,239,191,189,90,66,207,163,239,191,189,34,33,42,239,191,189,239,191,189,83,239,191,189,239,191,189,78,66,120,239,191,189,29,27,114,239,191,189,239,191,189,239,191,189,37,239,191,189,52,239,191,189,239,191,189,239,191,189,203,168,115,239,191,189,239,191,189,89,62,239,191,189,239,191,189,63,99,114,239,191,189,64,239,191,189,239,191,189,239,191,189,86,37,65,239,191,189,91,239,191,189,3,212,189,239,191,189,23,239,191,189,239,191,189,106,239,191,189,42,27,239,191,189,15,239,191,189,239,191,189,239,191,189,58,3,57,239,191,189,14,63,239,191,189,68,102,239,191,189,84,239,191,189,96,101,239,191,189,239,191,189,24,239,191,189,239,191,189,209,155,239,191,189,239,191,189,89,239,191,189,239,191,189,210,180,36,222,170,59,10,108,239,191,189,62,239,191,189,127,239,191,189,239,191,189,44,121,66,67,53,239,191,189,10,58,239,191,189,55,239,191,189,108,239,191,189,239,191,189,77,239,191,189,67,239,191,189,48,21,109,239,191,189,32,239,191,189,41,25,239,191,189,239,191,189,122,75,89,239,191,189,239,191,189,40,239,191,189,34,81,123,35,239,191,189,239,191,189,19,239,191,189,22,61,239,191,189,51,31,69,239,191,189,239,191,189,79,239,191,189,86,57,88,239,191,189,26,28,239,191,189,23,239,191,189,85,239,191,189,47,239,191,189,239,191,189,50,43,83,200,188,59,39,239,191,189,239,191,189,51,114,236,150,158,239,191,189,52,80,239,191,189,73,21,239,191,189,107,201,151,97,7,14,239,191,189,215,190,14,239,191,189,239,191,189,0,239,191,189,239,191,189,50,239,191,189,19,239,191,189,239,191,189,89,37,72,46,239,191,189,71,67,239,191,189,5,46,230,134,189,239,191,189,97,239,191,189,102,239,191,189,45,80,239,191,189,33,36,239,191,189,74,239,191,189,239,191,189,239,191,189,66,29,239,191,189,53,239,191,189,81,17,239,191,189,78,50,239,191,189,198,148,77,239,191,189,239,191,189,239,191,189,27,53,57,239,191,189,54,239,191,189,57,239,191,189,67,239,191,189,56,0,239,191,189,239,191,189,239,191,189,99,72,239,191,189,109,239,191,189,4,107,239,191,189,239,191,189,109,52,50,102,239,191,189,239,191,189,103,68,239,191,189,47,110,101,76,11,82,239,191,189,80,62,239,191,189,217,163,239,191,189,79,239,191,189,29,48,4,239,191,189,114,79,22,201,131,239,191,189,201,151,7,127,239,191,189,239,191,189,208,188,48,239,191,189,114,68,23,60,239,191,189,239,191,189,96,197,157,239,191,189,25,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,61,24,239,191,189,239,191,189,118,66,239,191,189,239,191,189,209,182,239,191,189,8,239,191,189,98,239,191,189,46,239,191,189,25,239,191,189,60,239,191,189,239,191,189,81,43,239,191,189,239,191,189,239,191,189,117,53,239,191,189,38,59,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,101,239,191,189,15,239,191,189,239,191,189,49,120,72,99,111,113,239,191,189,88,68,78,239,191,189,122,57,239,191,189,83,7,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,0,97,118,120,239,191,189,98,39,95,65,239,191,189,212,138,118,106,18,197,138,66,226,165,164,239,191,189,82,41,239,191,189,239,191,189,91,239,191,189,86,239,191,189,5,53,9,71,2,239,191,189,239,191,189,21,239,191,189,29,239,191,189,239,191,189,101,46,221,157,239,191,189,239,191,189,46,239,191,189,239,191,189,86,239,191,189,45,14,77,239,191,189,40,239,191,189,239,191,189,106,239,191,189,239,191,189,85,108,34,16,204,145,45,236,136,181,76,98,195,184,239,191,189,54,100,30,39,57,27,239,191,189,62,26,239,191,189,103,239,191,189,103,82,239,191,189,239,191,189,49,239,191,189,239,191,189,112,122,239,191,189,9,239,191,189,101,239,191,189,239,191,189,21,224,171,137,239,191,189,95,88,103,76,196,132,239,191,189,119,45,8,28,32,41,63,239,191,189,53,48,239,191,189,48,45,239,191,189,87,239,191,189,124,21,239,191,189,239,191,189,29,15,41,57,72,34,239,191,189,239,191,189,15,239,191,189,56,214,173,239,191,189,97,66,114,239,191,189,239,191,189,115,38,121,239,191,189,239,191,189,47,123,92,239,191,189,7,239,191,189,239,191,189,54,58,239,191,189,239,191,189,104,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,74,239,191,189,218,131,73,126,21,73,239,191,189,44,22,239,191,189,239,191,189,117,69,10,239,191,189,197,150,239,191,189,114,0,1,239,191,189,239,191,189,77,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,116,3,79,239,191,189,84,239,191,189,19,122,239,191,189,83,57,10,35,3,239,191,189,239,191,189,239,191,189,7,56,3,42,3,73,239,191,189,61,239,191,189,239,191,189,239,191,189,214,166,239,191,189,65,61,56,239,191,189,38,89,239,191,189,213,178,28,239,191,189,30,239,191,189,239,191,189,121,239,191,189,91,6,239,191,189,239,191,189,239,191,189,239,191,189,73,0,5,239,191,189,22,111,23,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,101,15,49,239,191,189,239,191,189,239,191,189,0,196,143,239,191,189,126,85,239,191,189,201,144,104,239,191,189,32,100,239,191,189,102,239,191,189,39,119,112,70,46,239,191,189,45,8,58,27,206,190,43,239,191,189,27,239,191,189,239,191,189,81,239,191,189,118,118,239,191,189,239,191,189,56,125,219,179,239,191,189,0,112,239,191,189,239,191,189,30,116,59,239,191,189,49,98,239,191,189,67,58,239,191,189,11,100,121,59,239,191,189,239,191,189,111,77,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,81,85,239,191,189,26,94,239,191,189,64,47,239,191,189,239,191,189,72,34,32,125,239,191,189,50,239,191,189,239,191,189,239,191,189,4,239,191,189,46,13,239,191,189,35,68,239,191,189,13,109,239,191,189,239,191,189,27,16,66,239,191,189,32,239,191,189,24,36,73,239,191,189,239,191,189,84,77,44,9,70,127,37,239,191,189,239,191,189,34,17,239,191,189,38,239,191,189,239,191,189,58,239,191,189,122,34,39,239,191,189,239,191,189,70,5,108,239,191,189,126,107,80,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,68,239,191,189,58,126,239,191,189,72,74,197,186,10,95,27,49,239,191,189,96,105,239,191,189,39,127,32,239,191,189,7,39,239,191,189,239,191,189,0,239,191,189,77,82,115,86,239,191,189,239,191,189,239,191,189,68,68,115,239,191,189,239,191,189,239,191,189,114,215,139,239,191,189,12,127,76,239,191,189,239,191,189,41,5,239,191,189,121,48,1,61,206,157,211,141,239,191,189,239,191,189,115,71,239,191,189,239,191,189,70,105,82,27,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,44,239,191,189,43,239,191,189,239,191,189,93,40,109,239,191,189,62,239,191,189,239,191,189,7,117,239,191,189,40,7,79,117,100,68,71,101,57,239,191,189,239,191,189,52,87,1,216,129,33,239,191,189,239,191,189,12,239,191,189,217,169,239,191,189,74,239,191,189,239,191,189,104,239,191,189,239,191,189,74,239,191,189,31,239,191,189,239,191,189,81,57,123,55,239,191,189,43,239,191,189,239,191,189,99,239,191,189,239,191,189,22,239,191,189,102,35,239,191,189,69,239,191,189,239,191,189,127,46,239,191,189,239,191,189,25,106,86,239,191,189,239,191,189,66,54,46,20,239,191,189,119,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,9,70,22,86,239,191,189,46,1,125,239,191,189,5,239,191,189,85,6,91,239,191,189,99,97,204,142,46,88,239,191,189,44,90,239,191,189,69,74,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,37,95,239,191,189,195,167,40,239,191,189,27,70,49,91,239,191,189,239,191,189,27,239,191,189,239,191,189,69,239,191,189,46,239,191,189,95,123,26,239,191,189,119,126,239,191,189,34,239,191,189,239,191,189,73,239,191,189,107,61,54,75,239,191,189,239,191,189,37,102,52,60,71,239,191,189,239,191,189,31,122,47,4,239,191,189,239,191,189,239,191,189,239,191,189,55,105,239,191,189,69,2,75,40,68,239,191,189,121,72,239,191,189,83,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,125,34,51,31,239,191,189,87,4,239,191,189,29,239,191,189,67,77,239,191,189,52,212,140,6,239,191,189,82,239,191,189,34,91,239,191,189,239,191,189,18,96,239,191,189,239,191,189,74,116,239,191,189,18,99,32,239,191,189,70,118,37,70,239,191,189,36,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,31,239,191,189,88,239,191,189,239,191,189,85,239,191,189,239,191,189,34,95,52,13,92,239,191,189,23,106,239,191,189,239,191,189,49,239,191,189,122,239,191,189,22,239,191,189,91,94,215,146,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,52,239,191,189,239,191,189,25,239,191,189,239,191,189,122,239,191,189,239,191,189,65,24,239,191,189,104,13,36,17,239,191,189,211,177,23,239,191,189,43,65,239,191,189,65,239,191,189,239,191,189,19,239,191,189,106,59,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,116,33,57,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,110,239,191,189,30,37,239,191,189,126,6,8,239,191,189,65,239,191,189,239,191,189,2,103,21,124,5,239,191,189,35,239,191,189,42,239,191,189,83,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,75,21,239,191,189,72,239,191,189,239,191,189,239,191,189,125,4,239,191,189,31,239,191,189,239,191,189,42,239,191,189,68,77,110,239,191,189,239,191,189,59,35,239,191,189,53,239,191,189,69,239,191,189,68,95,7,239,191,189,7,239,191,189,33,48,239,191,189,219,174,79,239,191,189,239,191,189,239,191,189,239,191,189,112,12,239,191,189,90,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,40,78,239,191,189,239,191,189,239,191,189,86,239,191,189,30,239,191,189,239,191,189,24,15,239,191,189,239,191,189,222,145,114,239,191,189,80,239,191,189,101,45,23,197,147,81,42,239,191,189,239,191,189,239,191,189,50,239,191,189,239,191,189,105,8,239,191,189,24,50,26,239,191,189,95,239,191,189,239,191,189,239,191,189,88,239,191,189,71,97,239,191,189,12,16,239,191,189,9,3,82,239,191,189,54,239,191,189,20,66,44,239,191,189,93,120,239,191,189,107,46,66,239,191,189,60,120,63,239,191,189,87,126,239,191,189,53,81,108,239,191,189,10,239,191,189,239,191,189,116,94,239,191,189,239,191,189,22,14,107,67,30,239,191,189,205,131,90,127,13,239,191,189,239,191,189,4,112,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,125,55,99,239,191,189,4,88,239,191,189,81,43,239,191,189,239,191,189,53,33,204,138,239,191,189,82,239,191,189,68,127,239,191,189,5,88,103,32,239,191,189,48,239,191,189,88,112,72,239,191,189,218,160,239,191,189,106,239,191,189,239,191,189,123,239,191,189,37,124,216,142,239,191,189,95,239,191,189,97,40,239,191,189,83,16,239,191,189,239,191,189,50,10,239,191,189,239,191,189,96,40,239,191,189,239,191,189,239,191,189,239,191,189,73,90,239,191,189,43,31,108,239,191,189,57,239,191,189,89,77,44,202,181,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,56,239,191,189,239,191,189,239,191,189,110,95,2,41,27,239,191,189,78,239,191,189,29,239,191,189,103,4,47,53,8,28,239,191,189,239,191,189,16,239,191,189,102,5,63,239,191,189,239,191,189,107,89,13,42,239,191,189,97,98,104,239,191,189,239,191,189,239,191,189,106,118,30,3,10,239,191,189,15,239,191,189,78,239,191,189,197,152,239,191,189,239,191,189,105,98,239,191,189,98,239,191,189,104,31,43,98,239,191,189,50,64,87,127,239,191,189,5,239,191,189,239,191,189,120,72,239,191,189,61,239,191,189,13,239,191,189,239,191,189,239,191,189,105,239,191,189,11,239,191,189,239,191,189,77,120,52,239,191,189,239,191,189,5,13,85,239,191,189,63,19,110,239,191,189,239,191,189,115,239,191,189,67,72,31,42,32,120})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=6656-9215",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07128 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07128_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07128_s.txt", Encoding.UTF8);

    public Test07128() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{21,116,83,239,191,189,92,98,239,191,189,239,191,189,53,239,191,189,239,191,189,12,239,191,189,113,239,191,189,105,52,239,191,189,239,191,189,239,191,189,239,191,189,126,7,239,191,189,239,191,189,64,65,111,62,239,191,189,198,136,239,191,189,19,71,239,191,189,65,100,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,105,47,125,239,191,189,239,191,189,239,191,189,50,239,191,189,37,239,191,189,239,191,189,109,239,191,189,239,191,189,28,32,126,239,191,189,239,191,189,46,114,30,239,191,189,41,54,39,239,191,189,5,30,239,191,189,239,191,189,239,191,189,19,211,128,17,239,191,189,220,182,20,239,191,189,239,191,189,239,191,189,99,239,191,189,46,127,239,191,189,239,191,189,239,191,189,120,117,37,239,191,189,76,75,113,83,92,96,239,191,189,44,112,84,239,191,189,239,191,189,89,239,191,189,95,10,93,239,191,189,4,122,239,191,189,120,85,90,121,8,239,191,189,74,122,108,88,79,239,191,189,77,239,191,189,52,239,191,189,111,127,86,81,103,239,191,189,115,120,239,191,189,212,145,37,239,191,189,85,239,191,189,113,239,191,189,44,239,191,189,239,191,189,22,239,191,189,84,239,191,189,120,239,191,189,4,239,191,189,239,191,189,40,12,103,42,106,239,191,189,34,239,191,189,40,49,239,191,189,239,191,189,239,191,189,51,22,36,239,191,189,22,239,191,189,239,191,189,239,191,189,33,239,191,189,62,239,191,189,239,191,189,42,239,191,189,217,181,239,191,189,119,221,187,239,191,189,41,239,191,189,21,104,239,191,189,195,129,239,191,189,239,191,189,21,52,69,32,239,191,189,83,239,191,189,239,191,189,121,239,191,189,46,239,191,189,239,191,189,239,191,189,88,239,191,189,14,79,124,107,105,4,239,191,189,107,239,191,189,42,239,191,189,239,191,189,26,120,38,239,191,189,41,85,79,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,116,13,51,16,239,191,189,239,191,189,50,126,120,239,191,189,48,106,239,191,189,239,191,189,41,239,191,189,63,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,195,140,8,239,191,189,16,239,191,189,127,239,191,189,106,239,191,189,78,239,191,189,121,28,239,191,189,239,191,189,19,101,69,239,191,189,85,125,36,239,191,189,85,74,92,41,88,84,126,239,191,189,24,239,191,189,74,239,191,189,7,205,163,104,239,191,189,239,191,189,64,76,28,37,58,12,34,239,191,189,239,191,189,60,112,28,239,191,189,69,103,35,239,191,189,239,191,189,108,86,123,22,100,120,118,239,191,189,239,191,189,9,239,191,189,70,239,191,189,221,168,239,191,189,61,239,191,189,239,191,189,48,16,80,6,239,191,189,239,191,189,66,100,239,191,189,239,191,189,4,64,239,191,189,54,239,191,189,239,191,189,239,191,189,41,42,232,163,174,79,57,25,11,80,122,239,191,189,116,239,191,189,8,239,191,189,90,103,239,191,189,28,79,239,191,189,88,33,20,123,239,191,189,239,191,189,201,177,15,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,37,239,191,189,239,191,189,22,239,191,189,110,239,191,189,209,135,30,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,89,101,239,191,189,198,143,51,98,107,80,89,64,239,191,189,239,191,189,116,88,239,191,189,239,191,189,53,239,191,189,239,191,189,5,98,25,239,191,189,89,66,239,191,189,239,191,189,239,191,189,24,39,65,239,191,189,2,239,191,189,33,65,40,239,191,189,78,94,239,191,189,239,191,189,82,46,51,31,18,239,191,189,5,15,84,239,191,189,48,239,191,189,239,191,189,76,239,191,189,109,76,62,239,191,189,239,191,189,55,50,239,191,189,215,174,239,191,189,55,239,191,189,119,239,191,189,239,191,189,239,191,189,90,239,191,189,199,187,38,35,239,191,189,9})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersd67dcbdb8970497fb98d971662070b74",
                        blob: "Blob3dde31cd39c44b6ca3583da4708de103",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=512-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07239 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07239_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07239_s.txt", Encoding.UTF8);

    public Test07239() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,114,239,191,189,239,191,189,86,9,114,239,191,189,239,191,189,75,239,191,189,122,239,191,189,239,191,189,35,239,191,189,114,41,74,60,239,191,189,40,102,38,64,239,191,189,124,239,191,189,239,191,189,120,8,85,239,191,189,38,35,239,191,189,233,157,189,100,94,214,148,67,239,191,189,206,135,239,191,189,239,191,189,207,141,2,95,239,191,189,36,239,191,189,11,239,191,189,97,106,239,191,189,239,191,189,29,102,67,62,239,191,189,112,106,64,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,35,118,114,100,223,162,5,239,191,189,6,239,191,189,52,2,97,239,191,189,89,59,83,215,139,239,191,189,46,0,112,21,23,50,239,191,189,17,239,191,189,239,191,189,122,239,191,189,65,45,239,191,189,25,239,191,189,5,239,191,189,48,23,123,61,73,239,191,189,110,8,105,100,239,191,189,24,14,82,42,102,34,6,93,77,239,191,189,239,191,189,239,191,189,51,111,123,239,191,189,239,191,189,51,239,191,189,64,76,78,41,91,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,41,83,239,191,189,30,125,107,92,22,239,191,189,239,191,189,19,239,191,189,239,191,189,0,75,35,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,36,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,203,164,239,191,189,239,191,189,71,21,239,191,189,15,41,239,191,189,107,40,44,239,191,189,239,191,189,41,15,125,107,239,191,189,89,239,191,189,239,191,189,85,216,136,208,179,239,191,189,100,239,191,189,20,103,52,239,191,189,19,124,239,191,189,239,191,189,50,219,189,239,191,189,3,104,82,239,191,189,239,191,189,52,239,191,189,239,191,189,11,71,103,239,191,189,56,239,191,189,46,239,191,189,239,191,189,68,62,239,191,189,239,191,189,28,87,239,191,189,239,191,189,239,191,189,85,239,191,189,57,27,239,191,189,239,191,189,239,191,189,236,134,144,61,126,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,78,2,29,239,191,189,52,16,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,106,14,76,239,191,189,122,239,191,189,65,49,46,6,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,71,101,24,93,83,239,191,189,75,126,103,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,205,188,239,191,189,23,239,191,189,239,191,189,239,191,189,20,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,77,239,191,189,207,184,57,239,191,189,239,191,189,63,239,191,189,239,191,189,206,128,204,159,102,59,239,191,189,103,239,191,189,1,92,239,191,189,239,191,189,14,127,81,95,81,239,191,189,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,83,37,239,191,189,100,53,11,239,191,189,48,239,191,189,239,191,189,70,72,25,239,191,189,239,191,189,79,239,191,189,239,191,189,117,108,202,187,239,191,189,56,239,191,189,56,95,239,191,189,80,96,44,239,191,189,239,191,189,239,191,189,19,21,239,191,189,2,239,191,189,239,191,189,239,191,189,82,239,191,189,41,56,9,70,239,191,189,239,191,189,70,239,191,189,123,120,239,191,189,239,191,189,100,239,191,189,124,239,191,189,239,191,189,239,191,189,223,154,239,191,189,239,191,189,97,61,239,191,189,127,239,191,189,125,46,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,125,117,21,110,239,191,189,123,239,191,189,38,239,191,189,239,191,189,72,239,191,189,114,54,113,239,191,189,239,191,189,9,24,110,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,205,159,239,191,189,11,239,191,189,31,239,191,189,29,67,239,191,189,239,191,189,90,22,239,191,189,98,239,191,189,111,55,239,191,189,5,239,191,189,37,125,55})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=10240-10751",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07240 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07240_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07240_s.txt", Encoding.UTF8);

    public Test07240() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,26,239,191,189,96,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,25,45,225,181,174,1,239,191,189,91,110,25,239,191,189,239,191,189,124,239,191,189,239,191,189,34,101,35,92,239,191,189,239,191,189,5,87,239,191,189,66,239,191,189,72,239,191,189,239,191,189,13,239,191,189,239,191,189,84,103,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,59,100,239,191,189,239,191,189,239,191,189,239,191,189,22,19,239,191,189,90,114,239,191,189,239,191,189,239,191,189,239,191,189,96,93,239,191,189,114,21,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,47,89,22,115,239,191,189,118,239,191,189,43,239,191,189,112,80,239,191,189,33,65,16,239,191,189,239,191,189,9,114,72,116,122,118,239,191,189,118,239,191,189,222,161,239,191,189,50,227,129,183,81,43,24,239,191,189,70,6,9,239,191,189,50,239,191,189,1,239,191,189,215,142,68,239,191,189,99,239,191,189,239,191,189,34,19,16,239,191,189,239,191,189,71,239,191,189,35,239,191,189,231,132,191,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,2,104,113,66,239,191,189,117,9,239,191,189,239,191,189,239,191,189,239,191,189,67,79,239,191,189,94,239,191,189,65,118,53,86,73,239,191,189,114,239,191,189,43,116,239,191,189,7,239,191,189,45,239,191,189,123,71,239,191,189,239,191,189,35,109,61,92,39,239,191,189,24,65,111,239,191,189,111,44,239,191,189,239,191,189,239,191,189,239,191,189,80,31,239,191,189,239,191,189,239,191,189,101,0,19,239,191,189,61,108,239,191,189,239,191,189,8,239,191,189,239,191,189,1,114,83,239,191,189,24,239,191,189,116,239,191,189,107,239,191,189,213,134,239,191,189,49,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,32,57,239,191,189,109,42,239,191,189,239,191,189,36,122,103,239,191,189,239,191,189,43,27,76,239,191,189,120,99,99,239,191,189,239,191,189,41,239,191,189,43,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,16,39,239,191,189,239,191,189,57,239,191,189,91,239,191,189,41,239,191,189,239,191,189,239,191,189,83,48,239,191,189,239,191,189,22,65,32,113,239,191,189,111,66,119,16,21,66,239,191,189,6,222,179,74,239,191,189,87,126,239,191,189,74,225,184,158,239,191,189,57,239,191,189,239,191,189,239,191,189,56,85,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,107,124,239,191,189,239,191,189,104,40,127,25,80,35,239,191,189,47,104,83,239,191,189,239,191,189,239,191,189,101,52,239,191,189,239,191,189,239,191,189,90,221,162,239,191,189,216,191,71,239,191,189,239,191,189,239,191,189,21,239,191,189,50,239,191,189,239,191,189,76,239,191,189,57,239,191,189,58,22,239,191,189,111,239,191,189,239,191,189,89,72,1,239,191,189,239,191,189,20,54,239,191,189,33,239,191,189,239,191,189,239,191,189,80,239,191,189,209,131,42,11,25,239,191,189,33,34,235,131,131,122,79,239,191,189,239,191,189,67,63,51,239,191,189,239,191,189,102,239,191,189,239,191,189,79,39,1,90,239,191,189,239,191,189,239,191,189,81,239,191,189,105,121,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,54,93,126,37,70,239,191,189,57,239,191,189,222,154,239,191,189,239,191,189,92,89,211,184,239,191,189,239,191,189,24,125,115,105,239,191,189,49,239,191,189,17,239,191,189,73,239,191,189,87,239,191,189,239,191,189,61,49,47,239,191,189,76,41,239,191,189,60,32,239,191,189,239,191,189,81,239,191,189,4,13,31,239,191,189,239,191,189,17,239,191,189,61,56,79,239,191,189,93,76,239,191,189,52,239,191,189,239,191,189,223,134,239,191,189,239,191,189,43,42,50,108})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=12288-12799",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07241 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07241_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07241_s.txt", Encoding.UTF8);

    public Test07241() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,106,239,191,189,70,239,191,189,239,191,189,4,239,191,189,97,67,239,191,189,239,191,189,239,191,189,77,48,239,191,189,83,99,239,191,189,76,239,191,189,239,191,189,239,191,189,96,239,191,189,97,219,179,62,239,191,189,239,191,189,23,48,56,239,191,189,239,191,189,64,239,191,189,73,239,191,189,73,239,191,189,239,191,189,108,35,88,239,191,189,44,239,191,189,59,75,8,55,34,194,189,104,239,191,189,84,63,40,46,34,239,191,189,91,118,123,21,239,191,189,17,19,116,85,239,191,189,239,191,189,43,239,191,189,36,60,82,210,175,14,2,99,239,191,189,239,191,189,13,118,239,191,189,125,90,239,191,189,10,239,191,189,27,239,191,189,89,17,239,191,189,239,191,189,121,239,191,189,239,191,189,40,215,179,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,2,108,121,31,32,50,239,191,189,239,191,189,110,239,191,189,227,148,184,239,191,189,74,13,125,239,191,189,100,18,239,191,189,117,89,45,123,218,139,239,191,189,65,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,39,81,23,110,218,158,239,191,189,111,239,191,189,104,239,191,189,13,18,239,191,189,49,25,239,191,189,18,75,239,191,189,69,239,191,189,239,191,189,84,239,191,189,26,90,7,66,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,120,7,127,239,191,189,124,106,239,191,189,127,239,191,189,118,239,191,189,45,7,239,191,189,11,239,191,189,239,191,189,88,64,239,191,189,122,194,131,26,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,19,92,112,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,23,88,239,191,189,116,239,191,189,239,191,189,83,113,54,33,52,40,239,191,189,239,191,189,70,239,191,189,239,191,189,100,12,239,191,189,2,239,191,189,239,191,189,28,239,191,189,209,151,239,191,189,239,191,189,239,191,189,11,50,101,105,33,30,14,40,239,191,189,81,239,191,189,239,191,189,239,191,189,95,99,86,239,191,189,41,239,191,189,0,47,239,191,189,77,239,191,189,67,239,191,189,239,191,189,239,191,189,57,27,239,191,189,123,239,191,189,41,41,239,191,189,87,82,36,239,191,189,117,59,118,239,191,189,12,79,39,239,191,189,239,191,189,98,48,109,9,239,191,189,239,191,189,93,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,122,239,191,189,112,54,110,239,191,189,78,4,83,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,109,239,191,189,3,239,191,189,239,191,189,77,113,41,98,239,191,189,16,239,191,189,44,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,122,239,191,189,239,191,189,24,99,239,191,189,105,239,191,189,239,191,189,239,191,189,36,30,239,191,189,49,30,205,128,23,239,191,189,72,8,239,191,189,14,106,93,53,33,107,84,239,191,189,239,191,189,60,239,191,189,57,122,239,191,189,68,239,191,189,115,9,239,191,189,46,239,191,189,239,191,189,239,191,189,7,239,191,189,122,50,112,53,109,239,191,189,239,191,189,207,168,27,239,191,189,46,239,191,189,239,191,189,97,97,45,239,191,189,74,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,100,76,124,239,191,189,239,191,189,107,46,38,239,191,189,33,41,113,239,191,189,42,239,191,189,239,191,189,14,41,48,69,72,239,191,189,90,239,191,189,97,239,191,189,239,191,189,126,67,18,239,191,189,219,145,239,191,189,69,60,83,39,87,79,0,239,191,189,12,64,55,239,191,189,25,31,239,191,189,13,88,94,100,95,60,125,239,191,189,31,5,195,175,239,191,189,239,191,189,118,78,239,191,189,239,191,189,239,191,189,116,86,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        blob: "Blob082b57522b88456998d25f67c2bbaa7b",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=14848-15359",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07130 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07130_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07130_s.txt", Encoding.UTF8);

    public Test07130() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,89,239,191,189,73,16,239,191,189,18,101,31,47,91,113,69,239,191,189,81,239,191,189,239,191,189,81,239,191,189,127,48,239,191,189,44,71,41,92,239,191,189,239,191,189,46,95,239,191,189,74,239,191,189,29,98,91,239,191,189,85,239,191,189,239,191,189,72,96,239,191,189,239,191,189,202,177,239,191,189,123,123,112,29,6,239,191,189,127,79,45,115,32,239,191,189,64,69,54,239,191,189,239,191,189,17,239,191,189,39,43,239,191,189,239,191,189,95,239,191,189,239,191,189,55,239,191,189,222,159,124,119,239,191,189,14,81,239,191,189,66,239,191,189,86,221,158,18,45,73,53,211,140,2,42,239,191,189,4,239,191,189,239,191,189,116,80,239,191,189,239,191,189,239,191,189,59,38,113,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,120,126,239,191,189,13,239,191,189,24,200,145,42,239,191,189,64,53,239,191,189,239,191,189,239,191,189,195,176,75,239,191,189,239,191,189,40,239,191,189,101,47,108,238,160,159,82,239,191,189,239,191,189,90,14,239,191,189,104,28,239,191,189,239,191,189,239,191,189,55,239,191,189,3,239,191,189,68,239,191,189,59,10,122,239,191,189,51,239,191,189,239,191,189,115,39,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,40,63,239,191,189,21,239,191,189,38,239,191,189,126,239,191,189,239,191,189,95,239,191,189,17,36,239,191,189,33,73,48,239,191,189,38,239,191,189,30,239,191,189,57,239,191,189,239,191,189,98,110,239,191,189,115,25,80,239,191,189,239,191,189,239,191,189,239,191,189,46,0,20,23,239,191,189,115,110,2,71,239,191,189,21,43,7,96,65,112,239,191,189,81,123,32,11,239,191,189,239,191,189,63,239,191,189,32,239,191,189,81,239,191,189,15,239,191,189,126,96,239,191,189,239,191,189,72,27,239,191,189,59,57,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,103,58,49,239,191,189,239,191,189,109,23,239,191,189,239,191,189,81,1,213,135,202,144,29,38,55,37,239,191,189,239,191,189,8,110,239,191,189,84,239,191,189,22,65,112,123,239,191,189,5,110,89,239,191,189,239,191,189,32,51,119,89,102,239,191,189,21,239,191,189,70,70,68,113,239,191,189,239,191,189,106,239,191,189,239,191,189,58,108,95,239,191,189,55,84,239,191,189,87,239,191,189,50,109,102,239,191,189,103,45,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,48,13,239,191,189,205,178,14,239,191,189,239,191,189,239,191,189,239,191,189,17,49,48,51,239,191,189,89,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,57,74,239,191,189,22,95,239,191,189,239,191,189,119,239,191,189,8,9,94,108,239,191,189,239,191,189,70,3,239,191,189,61,85,92,53,239,191,189,51,63,239,191,189,10,20,19,239,191,189,201,159,239,191,189,73,239,191,189,104,47,239,191,189,69,239,191,189,71,239,191,189,56,39,42,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,80,83,52,76,4,126,239,191,189,215,167,239,191,189,239,191,189,100,5,63,106,239,191,189,34,106,29,22,114,108,103,14,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,44,239,191,189,122,43,120,76,78,239,191,189,239,191,189,233,131,185,239,191,189,31,239,191,189,52,50,232,191,180,239,191,189,115,69,239,191,189,86,239,191,189,239,191,189,38,239,191,189,7,219,162,38,221,138,239,191,189,239,191,189,239,191,189,239,191,189,30,239,191,189,36,239,191,189,52,239,191,189,239,191,189,239,191,189,71,72,239,191,189,202,187,73,239,191,189,239,191,189,239,191,189,108,239,191,189,212,148,96,40,116,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,74,88,33,239,191,189,39,239,191,189,239,191,189,17,239,191,189,21,239,191,189,239,191,189,239,191,189,61,31,89,42,239,191,189,239,191,189,99,239,191,189,5,50,239,191,189,100,239,191,189,84,38,239,191,189,37,14,239,191,189,82,67,113,239,191,189,239,191,189,239,191,189,90,32,90,10,54,127,239,191,189,74,121,73,239,191,189,104,239,191,189,195,147,89,83,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,60,121,6,239,191,189,203,133,239,191,189,85,239,191,189,239,191,189,8,239,191,189,206,179,2,25,55,10,55,42,239,191,189,44,239,191,189,239,191,189,29,239,191,189,239,191,189,17,101,239,191,189,111,205,189,120,202,191,239,191,189,126,104,239,191,189,18,95,17,239,191,189,114,239,191,189,59,225,169,189,57,239,191,189,17,239,191,189,239,191,189,2,239,191,189,204,174,239,191,189,239,191,189,68,30,212,152,25,17,58,56,90,117,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,51,120,239,191,189,111,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,207,142,239,191,189,239,191,189,65,60,239,191,189,88,115,1,239,191,189,78,72,239,191,189,239,191,189,19,13,36,239,191,189,84,21,106,10,239,191,189,118,49,239,191,189,92,17,239,191,189,112,103,239,191,189,239,191,189,63,107,219,139,239,191,189,65,31,37,110,56,25,94,239,191,189,239,191,189,239,191,189,237,144,162,90,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,10,21,239,191,189,98,101,57,239,191,189,239,191,189,239,191,189,81,55,239,191,189,239,191,189,86,53,239,191,189,239,191,189,239,191,189,239,191,189,24,60,5,93,36,10,239,191,189,13,239,191,189,1,27,239,191,189,239,191,189,239,191,189,239,191,189,43,35,239,191,189,8,239,191,189,49,239,191,189,3,49,239,191,189,239,191,189,14,30,3,107,239,191,189,40,12,45,239,191,189,239,191,189,16,239,191,189,61,90,107,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,43,17,45,239,191,189,209,145,239,191,189,56,212,175,110,239,191,189,239,191,189,9,116,55,239,191,189,15,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,20,239,191,189,239,191,189,104,78,48,239,191,189,89,239,191,189,51,58,239,191,189,47,239,191,189,59,239,191,189,239,191,189,94,239,191,189,239,191,189,116,239,191,189,239,191,189,68,239,191,189,239,191,189,38,16,239,191,189,239,191,189,70,61,57,239,191,189,36,44,239,191,189,6,239,191,189,125,49,26,239,191,189,239,191,189,69,31,239,191,189,49,223,148,239,191,189,78,215,135,57,93,17,239,191,189,214,157,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,98,91,113,15,42,200,177,62,239,191,189,89,28,239,191,189,239,191,189,113,239,191,189,239,191,189,48,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,27,33,48,16,115,105,77,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,106,237,157,152,239,191,189,239,191,189,64,57,239,191,189,101,239,191,189,21,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,53,11,119,5,239,191,189,239,191,189,75,52,96,239,191,189,3,91,239,191,189,202,186,239,191,189,239,191,189,124,239,191,189,67,94,239,191,189,120,239,191,189,221,177,13,239,191,189,21,239,191,189,97,85,239,191,189,205,178,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,54,71,0,239,191,189,239,191,189,239,191,189,5,36,18,239,191,189,239,191,189,93,107,99,239,191,189,239,191,189,39,6,239,191,189,239,191,189,31,239,191,189,43,239,191,189,95,0})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersd67dcbdb8970497fb98d971662070b74",
                        blob: "Blob3dde31cd39c44b6ca3583da4708de103",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=1024-2047",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test06937 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06937_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\06937_s.txt", Encoding.UTF8);

    public Test06937() : base(recordedRequest, recordedResponse, "accounts8d439ff906d3c8f")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d439ff906d3c8f",
                        container: "containers6e269a1813ca4ad1955c6927bd0bba01",
                        blob: "PageBlob606dee87721f4b569c0949287da19b30",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test17628 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\17628_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\17628_s.txt", Encoding.UTF8);

    public Test17628() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" +
    "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers2ea37d1e65ed4affb06e6b66df6285c1",
                        blob: "PageBlob95126741316f418bbb2a06cedf6912a7",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        leaseId: "4f94646d-c47d-4212-8fda-4907f95844a5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18587 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18587_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18587_s.txt", Encoding.UTF8);

    public Test18587() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "=",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18524 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18524_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18524_s.txt", Encoding.UTF8);

    public Test18524() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "validBlobName",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18623 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18623_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18623_s.txt", Encoding.UTF8);

    public Test18623() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "#",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18686 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18686_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18686_s.txt", Encoding.UTF8);

    public Test18686() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "a ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18560 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18560_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18560_s.txt", Encoding.UTF8);

    public Test18560() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19197 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19197_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19197_s.txt", Encoding.UTF8);

    public Test19197() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "^",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19134 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19134_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19134_s.txt", Encoding.UTF8);

    public Test19134() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: " ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18377 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18377_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18377_s.txt", Encoding.UTF8);

    public Test18377() : base(recordedRequest, recordedResponse, "accounts8d43a0243d3fd05")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,47,239,191,189,206,132,54,68,239,191,189,239,191,189,239,191,189,30,78,239,191,189,57,42,239,191,189,112,239,191,189,8,239,191,189,9,239,191,189,44,40,19,239,191,189,119,95,115,73,58,239,191,189,39,239,191,189,98,67,239,191,189,65,239,191,189,108,239,191,189,72,239,191,189,13,239,191,189,198,140,239,191,189,89,239,191,189,239,191,189,4,239,191,189,239,191,189,2,239,191,189,3,204,187,239,191,189,239,191,189,239,191,189,23,83,239,191,189,116,38,27,239,191,189,239,191,189,239,191,189,46,17,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,77,53,239,191,189,5,239,191,189,239,191,189,54,239,191,189,93,239,191,189,239,191,189,63,14,239,191,189,14,239,191,189,239,191,189,49,239,191,189,104,27,239,191,189,113,239,191,189,114,239,191,189,239,191,189,239,191,189,42,8,66,239,191,189,239,191,189,51,109,239,191,189,239,191,189,239,191,189,119,239,191,189,109,239,191,189,239,191,189,117,25,239,191,189,205,167,3,239,191,189,203,143,93,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,84,99,22,92,239,191,189,24,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,60,61,239,191,189,73,44,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,41,239,191,189,116,18,2,75,239,191,189,47,239,191,189,213,134,239,191,189,239,191,189,239,191,189,239,191,189,70,200,128,12,85,124,23,239,191,189,239,191,189,47,38,88,239,191,189,239,191,189,239,191,189,239,191,189,2,209,179,97,239,191,189,127,54,90,109,13,239,191,189,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,90,92,98,53,28,239,191,189,55,239,191,189,97,239,191,189,239,191,189,239,191,189,63,116,239,191,189,72,73,239,191,189,239,191,189,110,239,191,189,239,191,189,9,239,191,189,101,110,239,191,189,34,70,239,191,189,59,239,191,189,88,5,239,191,189,127,99,107,35,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,116,30,26,58,4,22,239,191,189,239,191,189,204,144,44,93,101,239,191,189,10,63,239,191,189,74,71,239,191,189,239,191,189,111,90,17,239,191,189,221,141,65,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,7,11,239,191,189,37,18,108,56,239,191,189,82,6,6,90,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,8,85,39,239,191,189,239,191,189,41,217,179,99,36,239,191,189,239,191,189,108,56,239,191,189,239,191,189,34,239,191,189,122,54,100,239,191,189,239,191,189,239,191,189,50,239,191,189,86,239,191,189,50,208,161,74,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,105,66,95,66,239,191,189,225,134,139,47,51,94,239,191,189,213,189,31,239,191,189,95,73,117,80,85,3,239,191,189,222,128,239,191,189,239,191,189,54,218,147,57,239,191,189,61,239,191,189,113,55,239,191,189,34,239,191,189,239,191,189,80,239,191,189,118,34,239,191,189,56,239,191,189,239,191,189,43,37,121,239,191,189,64,34,71,102,112,239,191,189,239,191,189,93,95,80,239,191,189,239,191,189,239,191,189,124,239,191,189,79,76,239,191,189,239,191,189,61,122,120,239,191,189,239,191,189,239,191,189,239,191,189,65,71,239,191,189,239,191,189,10,239,191,189,26,239,191,189,239,191,189,26,62,11,239,191,189,85,95,114,239,191,189,0,239,191,189,239,191,189,39,32,123,239,191,189,239,191,189,67,46,60,59,239,191,189,34,239,191,189,239,191,189,239,191,189,63,122,239,191,189,239,191,189,69,239,191,189,239,191,189,119,217,162,17,65,31,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,7,198,134,239,191,189,72,239,191,189,239,191,189,239,191,189,49,7,21,239,191,189,222,187,239,191,189,89,239,191,189,70,216,154,86,36,239,191,189,94,50,239,191,189,35,239,191,189,39,55,30,239,191,189,218,185,126,117,239,191,189,46,239,191,189,239,191,189,106,15,23,239,191,189,239,191,189,92,239,191,189,68,239,191,189,88,239,191,189,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,127,21,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,54,239,191,189,37,60,239,191,189,239,191,189,239,191,189,71,45,47,71,12,0,102,239,191,189,239,191,189,239,191,189,33,239,191,189,96,67,239,191,189,239,191,189,8,239,191,189,123,36,24,18,214,164,5,72,239,191,189,194,138,239,191,189,7,57,239,191,189,85,239,191,189,239,191,189,34,105,239,191,189,239,191,189,25,63,239,191,189,239,191,189,239,191,189,59,111,239,191,189,123,73,28,96,8,239,191,189,105,52,86,239,191,189,66,239,191,189,107,239,191,189,75,27,239,191,189,239,191,189,45,11,239,191,189,239,191,189,102,239,191,189,70,239,191,189,11,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,70,65,239,191,189,239,191,189,48,16,239,191,189,95,110,239,191,189,39,209,142,116,239,191,189,239,191,189,30,239,191,189,14,100,3,239,191,189,239,191,189,124,25,239,191,189,239,191,189,239,191,189,27,117,239,191,189,119,239,191,189,93,10,97,47,239,191,189,28,32,80,239,191,189,239,191,189,120,116,239,191,189,239,191,189,58,239,191,189,66,239,191,189,116,239,191,189,239,191,189,93,61,239,191,189,239,191,189,239,191,189,90,67,239,191,189,10,239,191,189,239,191,189,3,23,239,191,189,124,239,191,189,5,239,191,189,67,239,191,189,239,191,189,20,4,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,119,239,191,189,239,191,189,239,191,189,36,239,191,189,12,239,191,189,239,191,189,12,239,191,189,239,191,189,201,143,239,191,189,126,239,191,189,239,191,189,239,191,189,60,239,191,189,48,43,239,191,189,73,56,239,191,189,24,239,191,189,239,191,189,99,70,239,191,189,239,191,189,109,87,124,60,88,76,239,191,189,94,125,239,191,189,113,79,59,21,239,191,189,113,239,191,189,33,239,191,189,12,239,191,189,71,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,24,239,191,189,70,3,239,191,189,33,239,191,189,2,239,191,189,102,239,191,189,67,107,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,118,40,239,191,189,65,105,239,191,189,1,38,214,162,239,191,189,108,239,191,189,4,102,101,239,191,189,42,75,101,239,191,189,9,111,239,191,189,84,201,133,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,126,239,191,189,26,103,239,191,189,78,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,62,5,77,239,191,189,38,239,191,189,239,191,189,239,191,189,108,239,191,189,12,239,191,189,20,239,191,189,123,239,191,189,239,191,189,26,113,127,239,191,189,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,71,15,11,239,191,189,94,239,191,189,239,191,189,71,113,97,239,191,189,85,9,17,23,14,239,191,189,239,191,189,99,88,104,239,191,189,69,116,121,75,239,191,189,111,2,239,191,189,216,177,7,239,191,189,36,239,191,189,0,195,182,97,239,191,189,74,106,239,191,189,239,191,189,42,239,191,189,116,125,60,239,191,189,239,191,189,239,191,189,56,239,191,189,97,202,151,72,18,239,191,189,16,68,124,239,191,189,8,77,36,239,191,189,110,14,30,17,2,92,29,123,239,191,189,239,191,189,79,239,191,189,67,239,191,189,239,191,189,66,83,23,239,191,189,83,239,191,189,239,191,189,104,122,239,191,189,239,191,189,239,191,189,5,239,191,189,47,239,191,189,239,191,189,124,239,191,189,15,46,239,191,189,116,239,191,189,239,191,189,115,239,191,189,62,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0243d3fd05",
                        container: "containers1210574fd49047278e7d034cdaa1e319",
                        blob: "PageBlob16155c1708db4560aace3eabd416ea65",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        leaseId: "5b80f1f7-7b0c-4b06-8aa1-6e6435a8d30d",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19552 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19552_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19552_s.txt", Encoding.UTF8);

    public Test19552() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{77,239,191,189,110,93,239,191,189,103,239,191,189,24,12,239,191,189,104,49,96,31,55,16,15,239,191,189,46,239,191,189,38,239,191,189,239,191,189,118,239,191,189,62,239,191,189,239,191,189,86,57,85,19,37,12,111,41,88,67,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,212,180,239,191,189,239,191,189,239,191,189,121,0,239,191,189,239,191,189,19,239,191,189,108,239,191,189,239,191,189,17,239,191,189,239,191,189,73,84,11,84,239,191,189,14,239,191,189,239,191,189,34,15,53,48,18,239,191,189,77,61,100,239,191,189,239,191,189,203,167,239,191,189,239,191,189,36,120,239,191,189,21,97,239,191,189,17,72,239,191,189,51,239,191,189,239,191,189,212,167,239,191,189,35,239,191,189,239,191,189,198,151,106,239,191,189,99,239,191,189,71,239,191,189,47,41,25,44,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,17,198,154,239,191,189,80,37,121,239,191,189,222,153,62,239,191,189,239,191,189,2,47,88,21,52,206,183,239,191,189,239,191,189,47,110,60,239,191,189,239,191,189,26,239,191,189,239,191,189,60,239,191,189,124,209,134,239,191,189,49,101,67,33,48,239,191,189,75,127,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,198,179,41,239,191,189,77,41,239,191,189,43,239,191,189,239,191,189,46,95,239,191,189,52,93,239,191,189,124,16,124,239,191,189,39,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,62,75,74,239,191,189,50,227,136,132,221,131,92,12,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,34,93,239,191,189,57,48,239,191,189,102,23,239,191,189,124,23,65,239,191,189,232,170,130,111,239,191,189,208,162,81,239,191,189,11,239,191,189,239,191,189,31,127,33,10,105,239,191,189,239,191,189,71,239,191,189,239,191,189,35,239,191,189,17,26,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,66,239,191,189,35,91,34,24,16,0,35,239,191,189,77,82,239,191,189,17,127,69,12,87,239,191,189,95,239,191,189,7,91,239,191,189,239,191,189,93,239,191,189,64,214,132,12,3,239,191,189,74,79,91,239,191,189,239,191,189,81,239,191,189,239,191,189,35,239,191,189,63,239,191,189,239,191,189,100,9,16,239,191,189,239,191,189,111,67,102,72,239,191,189,239,191,189,239,191,189,93,239,191,189,70,239,191,189,76,64,65,78,8,98,239,191,189,35,127,35,6,26,239,191,189,239,191,189,71,28,239,191,189,239,191,189,239,191,189,239,191,189,47,80,197,157,239,191,189,114,1,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,1,71,239,191,189,6,239,191,189,105,41,239,191,189,114,239,191,189,239,191,189,30,116,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,97,56,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,30,51,20,239,191,189,120,67,73,42,52,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,23,239,191,189,239,191,189,103,239,191,189,3,90,239,191,189,62,239,191,189,14,91,119,3,239,191,189,112,13,115,239,191,189,239,191,189,239,191,189,95,239,191,189,14,76,239,191,189,80,111,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,35,239,191,189,239,191,189,62,239,191,189,86,105,239,191,189,239,191,189,39,58,38,239,191,189,27,80,87,239,191,189,11,239,191,189,27,41,239,191,189,239,191,189,239,191,189,93,239,191,189,221,176,239,191,189,239,191,189,95,239,191,189,239,191,189,80,239,191,189,202,173,239,191,189,115,239,191,189,100,239,191,189,41,52,239,191,189,57,239,191,189,239,191,189,83,239,191,189,201,143,15,46,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse70e0964710a4b7e98f006177011f4cb",
                        blob: "ABC",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18596 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18596_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18596_s.txt", Encoding.UTF8);

    public Test18596() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "~",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19525 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19525_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19525_s.txt", Encoding.UTF8);

    public Test19525() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "IsThisABug?OrNot.docx",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19528 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19528_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19528_s.txt", Encoding.UTF8);

    public Test19528() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "IsThisABug?OrNot.docx",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21819 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21819_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21819_s.txt", Encoding.UTF8);

    public Test21819() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,126,5,239,191,189,66,5,239,191,189,239,191,189,75,239,191,189,239,191,189,82,239,191,189,239,191,189,59,18,41,239,191,189,239,191,189,58,72,78,86,239,191,189,27,115,88,117,239,191,189,78,239,191,189,239,191,189,121,239,191,189,113,68,27,52,239,191,189,239,191,189,51,239,191,189,239,191,189,31,239,191,189,239,191,189,64,23,59,114,121,239,191,189,239,191,189,118,239,191,189,239,191,189,39,125,239,191,189,206,172,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,17,33,239,191,189,239,191,189,239,191,189,73,21,6,239,191,189,239,191,189,55,4,88,51,65,58,98,239,191,189,239,191,189,3,3,19,239,191,189,29,239,191,189,239,191,189,239,191,189,41,194,154,239,191,189,54,239,191,189,239,191,189,47,239,191,189,68,124,239,191,189,123,239,191,189,111,239,191,189,239,191,189,239,191,189,120,56,239,191,189,107,54,239,191,189,39,19,239,191,189,239,191,189,239,191,189,101,239,191,189,87,81,115,239,191,189,68,34,26,1,89,111,4,75,239,191,189,239,191,189,80,89,85,239,191,189,62,239,191,189,46,37,105,59,239,191,189,239,191,189,11,116,35,239,191,189,19,49,239,191,189,106,36,50,8,239,191,189,43,239,191,189,239,191,189,239,191,189,30,201,150,32,65,239,191,189,215,185,127,65,239,191,189,239,191,189,239,191,189,49,239,191,189,56,46,239,191,189,23,239,191,189,222,132,91,210,186,239,191,189,239,191,189,29,81,239,191,189,104,239,191,189,239,191,189,64,6,239,191,189,239,191,189,239,191,189,74,98,239,191,189,105,84,239,191,189,114,239,191,189,239,191,189,75,208,147,114,239,191,189,63,15,239,191,189,109,239,191,189,101,239,191,189,239,191,189,103,239,191,189,239,191,189,50,239,191,189,106,43,71,239,191,189,239,191,189,110,239,191,189,8,116,47,239,191,189,96,239,191,189,239,191,189,239,191,189,210,129,1,239,191,189,239,191,189,48,108,50,239,191,189,55,239,191,189,124,239,191,189,2,105,239,191,189,63,25,84,239,191,189,3,60,2,4,239,191,189,55,239,191,189,106,239,191,189,99,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,65,53,58,239,191,189,20,239,191,189,89,239,191,189,55,36,114,198,145,32,239,191,189,119,7,239,191,189,68,239,191,189,239,191,189,11,98,239,191,189,2,78,124,239,191,189,239,191,189,102,239,191,189,27,126,19,239,191,189,239,191,189,26,9,238,137,169,42,239,191,189,18,40,239,191,189,81,67,239,191,189,115,15,23,239,191,189,239,191,189,239,191,189,53,211,164,239,191,189,239,191,189,54,239,191,189,48,239,191,189,39,87,72,126,33,239,191,189,93,239,191,189,239,191,189,85,239,191,189,93,79,108,95,239,191,189,57,239,191,189,53,86,239,191,189,120,239,191,189,31,239,191,189,16,117,77,40,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,33,7,22,16,55,239,191,189,46,216,132,55,92,239,191,189,239,191,189,239,191,189,239,191,189,122,65,222,181,94,88,239,191,189,231,177,183,103,97,202,128,99,239,191,189,3,41,24,239,191,189,31,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,95,86,7,239,191,189,97,239,191,189,239,191,189,116,239,191,189,67,47,95,127,239,191,189,51,99,87,32,239,191,189,88,239,191,189,239,191,189,43,239,191,189,52,239,191,189,78,239,191,189,110,103,55,239,191,189,239,191,189,88,17,90,239,191,189,30,239,191,189,239,191,189,93,239,191,189,79,125,239,191,189,239,191,189,45,15,201,140,239,191,189,107,239,191,189,239,191,189,239,191,189,113,239,191,189,36,45,21,239,191,189,239,191,189,6,97,12,239,191,189,239,191,189,39,111,217,152,57,103,239,191,189,239,191,189,234,148,174,239,191,189,77,102,62,239,191,189,239,191,189,239,191,189,239,191,189,9,41,239,191,189,239,191,189,126,239,191,189,239,191,189,2,111,239,191,189,239,191,189,113,106,73,6,239,191,189,239,191,189,239,191,189,96,4,239,191,189,239,191,189,239,191,189,239,191,189,45,57,239,191,189,102,239,191,189,37,239,191,189,64,124,116,239,191,189,239,191,189,90,239,191,189,71,239,191,189,239,191,189,60,239,191,189,60,239,191,189,4,96,239,191,189,239,191,189,239,191,189,109,239,191,189,93,239,191,189,239,191,189,239,191,189,81,109,16,239,191,189,111,239,191,189,91,48,239,191,189,239,191,189,118,209,149,2,24,64,239,191,189,15,239,191,189,55,239,191,189,239,191,189,79,239,191,189,0,56,37,120,30,239,191,189,239,191,189,13,9,239,191,189,55,239,191,189,87,28,239,191,189,73,12,239,191,189,47,239,191,189,239,191,189,105,239,191,189,85,239,191,189,239,191,189,125,41,239,191,189,96,239,191,189,52,239,191,189,239,191,189,111,80,54,239,191,189,239,191,189,239,191,189,196,139,126,239,191,189,112,97,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,100,239,191,189,239,191,189,77,239,191,189,239,191,189,120,105,239,191,189,239,191,189,239,191,189,239,191,189,2,43,239,191,189,239,191,189,98,19,84,239,191,189,66,65,7,239,191,189,107,115,23,68,239,191,189,68,239,191,189,123,239,191,189,239,191,189,63,239,191,189,239,191,189,3,101,239,191,189,87,239,191,189,4,65,239,191,189,239,191,189,68,239,191,189,70,239,191,189,218,144,102,105,35,239,191,189,239,191,189,239,191,189,92,239,191,189,52,239,191,189,95,239,191,189,45,66,121,239,191,189,239,191,189,95,239,191,189,239,191,189,106,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,103,68,239,191,189,239,191,189,239,191,189,38,30,28,239,191,189,32,32,8,239,191,189,34,239,191,189,239,191,189,91,239,191,189,108,100,89,43,113,35,43,3,239,191,189,239,191,189,239,191,189,47,239,191,189,37,239,191,189,6,204,154,239,191,189,35,65,28,91,239,191,189,210,179,62,239,191,189,239,191,189,71,25,239,191,189,106,70,80,47,121,60,210,157,239,191,189,239,191,189,42,115,54,239,191,189,99,239,191,189,64,239,191,189,85,10,5,56,115,79,9,239,191,189,88,239,191,189,239,191,189,100,239,191,189,239,191,189,77,239,191,189,118,213,152,239,191,189,239,191,189,239,191,189,1,239,191,189,89,239,191,189,239,191,189,36,80,67,101,239,191,189,239,191,189,14,239,191,189,50,239,191,189,0,38,239,191,189,239,191,189,21,239,191,189,16,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,90,239,191,189,67,4,239,191,189,25,93,33,239,191,189,52,109,239,191,189,32,239,191,189,194,131,239,191,189,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,72,123,239,191,189,123,6,239,191,189,59,98,29,239,191,189,92,44,203,142,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,23,239,191,189,215,180,94,46,85,73,81,54,239,191,189,25,239,191,189,239,191,189,48,67,239,191,189,27,66,239,191,189,10,239,191,189,99,80,239,191,189,239,191,189,44,12,239,191,189,49,109,239,191,189,239,191,189,10,48,239,191,189,239,191,189,198,167,239,191,189,239,191,189,25,203,134,239,191,189,19,58,239,191,189,86,117,239,191,189,232,186,181,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,1,73,95,32,239,191,189,27,27,239,191,189,239,191,189,239,191,189,69,28,115,239,191,189,20,239,191,189,221,175,239,191,189,125,90,239,191,189,116,113,239,191,189,239,191,189,71,109,239,191,189,239,191,189,119,239,191,189,1,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,47,239,191,189,117,239,191,189,239,191,189,239,191,189,220,174,215,157,41,239,191,189,239,191,189,239,191,189,68,52,239,191,189,25,239,191,189,239,191,189,116,114,64,120,56,12,32,42,239,191,189,239,191,189,21,4,69,239,191,189,15,239,191,189,239,191,189,239,191,189,80,239,191,189,10,239,191,189,239,191,189,8,239,191,189,239,191,189,121,80,35,239,191,189,85,12,98,47,2,239,191,189,41,115,207,142,239,191,189,19,96,239,191,189,239,191,189,239,191,189,239,191,189,52,71,46,88,47,85,45,106,239,191,189,103,111,105,17,239,191,189,239,191,189,102,46,239,191,189,239,191,189,239,191,189,13,52,123,77,239,191,189,239,191,189,239,191,189,239,191,189,118,70,121,41,25,68,8,239,191,189,66,37,239,191,189,52,239,191,189,103,80,239,191,189,10,239,191,189,239,191,189,209,172,50,210,150,239,191,189,68,39,19,239,191,189,10,62,239,191,189,57,115,36,33,239,191,189,64,239,191,189,98,239,191,189,113,239,191,189,64,239,191,189,217,165,239,191,189,239,191,189,67,51,239,191,189,34,73,68,116,239,191,189,102,239,191,189,29,239,191,189,65,55,239,191,189,35,239,191,189,80,67,47,239,191,189,239,191,189,198,133,239,191,189,59,70,56,86,20,106,239,191,189,48,239,191,189,239,191,189,11,239,191,189,23,42,223,172,18,239,191,189,33,69,239,191,189,47,239,191,189,239,191,189,29,239,191,189,239,191,189,98,239,191,189,239,191,189,120,108,84,34,14,239,191,189,59,239,191,189,81,106,239,191,189,239,191,189,80,112,239,191,189,105,239,191,189,38,99,239,191,189,239,191,189,239,191,189,64,34,11,239,191,189,239,191,189,56,98,239,191,189,30,124,239,191,189,78,239,191,189,101,239,191,189,27,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,67,215,180,239,191,189,98,239,191,189,48,74,239,191,189,239,191,189,20,0,3,108,239,191,189,83,239,191,189,125,71,92,33,59,3,239,191,189,11,239,191,189,17,44,102,239,191,189,10,43,78,239,191,189,239,191,189,239,191,189,127,31,76,239,191,189,239,191,189,239,191,189,81,239,191,189,23,117,239,191,189,50,239,191,189,46,44,207,131,34,239,191,189,239,191,189,239,191,189,87,125,30,30,33,239,191,189,125,239,191,189,239,191,189,29,7,239,191,189,91,9,93,239,191,189,239,191,189,91,100,239,191,189,239,191,189,239,191,189,12,85,239,191,189,205,191,106,58,239,191,189,44,18,212,180,40,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,87,239,191,189,99,62,36,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,99,112,239,191,189,36,84,27,19,239,191,189,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,50,100,103,79,239,191,189,239,191,189,68,17,102,239,191,189,104,239,191,189,68,19,6,239,191,189,14,239,191,189,32,232,176,187,39,239,191,189,197,128,120,84,87,239,191,189,26,37,239,191,189,27,239,191,189,105,239,191,189,104,239,191,189,29,239,191,189,239,191,189,77,239,191,189,47,239,191,189,86,239,191,189,95,46,87,12,239,191,189,239,191,189,20,119,60,218,137,97,72,239,191,189,219,164,66,239,191,189,40,239,191,189,239,191,189,239,191,189,72,3,48,14,109,69,93,239,191,189,41,239,191,189,239,191,189,40,51,13,113,239,191,189,7,17,45,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,113,61,239,191,189,57,45,239,191,189,239,191,189,67,239,191,189,196,177,239,191,189,5,9,239,191,189,124,239,191,189,55,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,121,111,5,239,191,189,34,45,105,39,239,191,189,7,112,239,191,189,239,191,189,239,191,189,49,239,191,189,73,239,191,189,56,1,7,54,103,35,239,191,189,125,239,191,189,86,201,166,28,105,12,239,191,189,84,62,234,161,131,77,239,191,189,14,239,191,189,12,39,59,99,203,172,37,78,16,239,191,189,32,113,56,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,49,97,84,43,239,191,189,113,220,166,239,191,189,239,191,189,60,239,191,189,34,239,191,189,70,91,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,88,11,239,191,189,239,191,189,17,27,239,191,189,70,108,210,174,14,221,142,239,191,189,239,191,189,75,239,191,189,239,191,189,5,239,191,189,239,191,189,212,173,239,191,189,120,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,8,73,90,3,96,239,191,189,5,81,59,105,60,20,28,239,191,189,239,191,189,239,191,189,103,39,17,239,191,189,23,239,191,189,54,35,239,191,189,41,95,239,191,189,239,191,189,59,14,239,191,189,80,239,191,189,109,239,191,189,71,239,191,189,44,0,59,106,106,113,239,191,189,91,57,239,191,189,239,191,189,26,111,239,191,189,239,191,189,117,86,18,54,20,199,152,239,191,189,239,191,189,80,45,45,44,239,191,189,51,54,94,31,239,191,189,239,191,189,239,191,189,71,204,178,5,61,239,191,189,239,191,189,239,191,189,239,191,189,204,129,102,239,191,189,46,91,107,51,202,147,90,239,191,189,25,60,67,239,191,189,239,191,189,6,102,73,239,191,189,217,168,221,153,15,70,239,191,189,15,239,191,189,239,191,189,227,185,128,96,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,81,73,82,45,239,191,189,110,72,239,191,189,239,191,189,91,239,191,189,239,191,189,239,191,189,216,136,65,31,21,239,191,189,35,64,239,191,189,119,207,152,219,151,239,191,189,239,191,189,1,239,191,189,86,14,13,87,239,191,189,70,239,191,189,20,239,191,189,219,191,239,191,189,10,239,191,189,109,239,191,189,61,239,191,189,239,191,189,239,191,189,10,201,138,103,209,130,239,191,189,239,191,189,239,191,189,81,16,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,61,95,239,191,189,92,101,43,239,191,189,239,191,189,239,191,189,110,195,185,239,191,189,28,239,191,189,75,69,239,191,189,239,191,189,239,191,189,239,191,189,77,1,61,117,239,191,189,215,184,239,191,189,239,191,189,82,72,239,191,189,239,191,189,102,56,109,37,60,225,189,167,69,19,239,191,189,36,239,191,189,9,11,239,191,189,99,239,191,189,51,53,239,191,189,93,239,191,189,239,191,189,83,56,18,7,239,191,189,112,113,54,116,95,19,239,191,189,93,239,191,189,239,191,189,6,239,191,189,239,191,189,42,221,166,11,239,191,189,239,191,189,99,35,239,191,189,20,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,232,169,171,239,191,189,93,239,191,189,38,239,191,189,87,239,191,189,239,191,189,239,191,189,5,239,191,189,82,46,74,239,191,189,106,8,239,191,189,71,239,191,189,107,239,191,189,196,175,92,239,191,189,239,191,189,85,112,80,239,191,189,239,191,189,55,91,5,94,239,191,189,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,30,239,191,189,239,191,189,82,109,104,56,126,239,191,189,239,191,189,32,64,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,83,239,191,189,88,49,17,27,239,191,189,68,66,239,191,189,81,59,239,191,189,239,191,189,239,191,189,239,191,189,202,154,99,78,239,191,189,56,239,191,189,61,42,23,27,9,197,147,239,191,189,127,24,239,191,189,39,97,239,191,189,210,166,126,40,37,84,44,90,12,239,191,189,239,191,189,18,239,191,189,40,47,239,191,189,76,102,78,239,191,189,239,191,189,239,191,189,4,239,191,189,59,125,79,100,239,191,189,123,211,148,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,30,123,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,4,199,158,239,191,189,239,191,189,239,191,189,56,49,59,239,191,189,38,239,191,189,106,239,191,189,16,200,136,33,67,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,81,29,56,31,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,109,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,35,25,239,191,189,239,191,189,239,191,189,31,32,239,191,189,239,191,189,63,52,239,191,189,119,37,239,191,189,239,191,189,239,191,189,127,239,191,189,1,239,191,189,59,239,191,189,122,239,191,189,17,239,191,189,38,88,10,239,191,189,75,239,191,189,239,191,189,239,191,189,56,120,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,115,114,239,191,189,34,19,239,191,189,239,191,189,44,239,191,189,239,191,189,27,239,191,189,67,42,239,191,189,239,191,189,116,239,191,189,51,239,191,189,99,239,191,189,44,239,191,189,61,239,191,189,90,95,93,239,191,189,67,19,239,191,189,98,7,70,239,151,143,114,83,239,191,189,103,239,191,189,239,191,189,0,239,191,189,77,239,191,189,54,74,195,132,239,191,189,15,239,191,189,99,239,191,189,239,191,189,239,191,189,87,239,191,189,25,239,191,189,8,86,239,191,189,35,239,191,189,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,61,239,191,189,12,239,191,189,38,239,191,189,127,239,191,189,239,191,189,82,126,239,191,189,105,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,20,42,46,58,109,88,239,191,189,80,92,8,236,166,152,40,126,239,191,189,239,191,189,239,191,189,55,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,217,135,239,191,189,51,119,40,239,191,189,239,191,189,239,191,189,116,239,191,189,19,38,239,191,189,108,239,191,189,118,239,191,189,239,191,189,40,239,191,189,104,71,55,239,191,189,239,191,189,60,16,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,201,138,239,191,189,116,126,5,127,239,191,189,64,239,191,189,239,191,189,16,239,191,189,45,239,191,189,46,239,191,189,239,191,189,239,191,189,63,112,63,239,191,189,127,239,191,189,239,191,189,34,91,239,191,189,67,194,143,239,191,189,107,239,191,189,239,191,189,68,35,1,239,191,189,7,122,45,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,239,191,189,93,87,121,239,191,189,239,191,189,84,195,146,239,191,189,93,65,80,121,196,129,204,138,44,239,191,189,49,239,191,189,239,191,189,62,239,191,189,56,32,81,239,191,189,92,239,191,189,51,3,29,108,100,55,104,25,123,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,105,53,239,191,189,88,239,191,189,203,160,75,239,191,189,25,239,191,189,80,239,191,189,2,239,191,189,54,239,191,189,41,61,51,13,95,73,100,113,239,191,189,62,115,239,191,189,46,239,191,189,28,239,191,189,31,239,191,189,197,153,70,114,56,124,32,239,191,189,30,239,191,189,200,172,74,239,191,189,123,239,191,189,121,75,239,191,189,239,191,189,10,239,191,189,94,239,191,189,16,239,191,189,45,113,94,127,239,191,189,206,175,26,4,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,43,207,169,4,239,191,189,126,94,111,32,239,191,189,239,191,189,44,239,191,189,239,191,189,59,95,98,239,191,189,78,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,35,239,191,189,70,239,191,189,6,239,191,189,239,191,189,239,191,189,62,12,239,191,189,239,191,189,18,239,191,189,94,239,191,189,206,130,61,42,96,60,85,89,103,62,13,239,191,189,239,191,189,6,195,142,127,76,94,239,191,189,52,37,89,25,239,191,189,32,85,19,239,191,189,239,191,189,239,191,189,64,239,191,189,43,122,239,191,189,239,191,189,126,239,191,189,108,239,191,189,99,239,191,189,117,52,239,191,189,239,191,189,5,239,191,189,32,239,191,189,239,191,189,239,191,189,92,239,191,189,92,239,191,189,17,239,191,189,27,239,191,189,69,200,162,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,102,239,191,189,239,191,189,94,239,191,189,239,191,189,17,239,191,189,79,62,127,9,239,191,189,64,239,191,189,239,191,189,29,15,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,37,239,191,189,239,191,189,10,122,3,87,239,191,189,60,14,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,239,191,189,239,191,189,7,72,239,191,189,239,191,189,9,98,239,191,189,109,239,191,189,21,53,239,191,189,239,191,189,239,191,189,52,56,239,191,189,239,191,189,114,239,191,189,239,191,189,59,39,119,239,191,189,50,239,191,189,239,191,189,31,15,239,191,189,42,64,239,191,189,239,191,189,82,239,191,189,86,239,191,189,61,22,12,65,65,92,239,191,189,239,191,189,202,149,239,191,189,12,50,46,1,239,191,189,239,191,189,32,34,239,191,189,215,137,45,78,239,191,189,239,191,189,10,90,239,191,189,85,225,173,155,26,53,113,239,191,189,239,191,189,239,191,189,27,11,239,191,189,14,48,89,3,83,239,191,189,63,239,191,189,239,191,189,50,105,103,8,239,191,189,233,189,143,239,191,189,81,70,239,191,189,117,239,191,189,24,113,23,239,191,189,239,191,189,16,239,191,189,58,6,239,191,189,46,123,239,191,189,239,191,189,239,191,189,59,14,27,228,128,175,67,51,18,239,191,189,239,191,189,11,106,52,239,191,189,239,191,189,239,191,189,124,64,239,191,189,60,1,239,191,189,239,191,189,2,239,191,189,98,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,118,66,42,239,191,189,239,191,189,4,239,191,189,61,4,120,8,4,103,5,60,29,71,239,191,189,127,239,191,189,28,239,191,189,12,108,18,126,239,191,189,239,191,189,56,72,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,119,106,84,55,239,191,189,239,191,189,205,154,239,191,189,37,102,239,191,189,86,108,19,239,191,189,119,53,239,191,189,239,191,189,118,77,239,191,189,239,191,189,239,191,189,47,108,239,191,189,239,191,189,71,239,191,189,239,191,189,62,62,7,74,239,191,189,199,131,239,191,189,68,239,191,189,197,186,72,239,191,189,239,191,189,46,47,239,191,189,70,81,239,191,189,62,44,42,117,239,191,189,106,90,58,12,239,191,189,239,191,189,112,239,191,189,84,23,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,70,38,60,61,239,191,189,24,0,99,239,191,189,239,191,189,18,239,191,189,239,191,189,2,92,41,239,191,189,56,39,26,74,99,81,239,191,189,239,191,189,102,202,151,239,191,189,229,184,153,239,191,189,59,127,68,29,239,191,189,122,239,191,189,239,191,189,12,62,84,5,239,191,189,239,191,189,239,191,189,82,239,191,189,107,77,108,108,239,191,189,239,191,189,239,191,189,97,115,42,77,105,196,191,71,121,57,239,191,189,239,191,189,24,11,239,191,189,239,191,189,239,191,189,113,61,36,239,191,189,239,191,189,66,113,239,191,189,68,22,122,106,44,54,75,239,191,189,110,239,191,189,239,191,189,80,85,64,71,126,13,239,191,189,77,92,117,58,125,220,143,239,191,189,239,191,189,239,191,189,239,191,189,216,139,49,239,191,189,123,36,239,191,189,69,239,191,189,76,3,77,239,191,189,79,5,109,45,48,239,191,189,239,191,189,239,191,189,73,239,191,189,20,92,10,239,191,189,239,191,189,239,191,189,68,58,239,191,189,223,150,47,88,239,191,189,239,191,189,27,239,191,189,57,49,64,74,15,239,191,189,239,191,189,45,239,191,189,33,239,191,189,202,188,23,239,191,189,66,61,239,191,189,30,26,21,239,191,189,0,7,200,180,7,19,32,239,191,189,239,191,189,83,20,92,108,239,191,189,9,239,191,189,5,239,191,189,122,107,198,185,239,191,189,111,239,191,189,199,174,239,191,189,27,239,191,189,1,239,191,189,239,191,189,48,56,239,191,189,90,239,191,189,125,13,41,74,103,239,191,189,95,239,191,189,42,56,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,71,126,89,239,191,189,64,101,50,239,191,189,239,191,189,19,239,191,189,219,142,239,191,189,40,239,191,189,71,239,191,189,93,239,191,189,111,33,239,191,189,125,28,239,191,189,239,191,189,239,191,189,82,106,97,217,176,239,191,189,40,239,191,189,70,23,218,151,100,206,162,239,191,189,207,155,103,106,239,191,189,9,239,191,189,76,67,239,191,189,92,239,191,189,89,36,239,191,189,126,10,239,191,189,46,239,191,189,239,191,189,42,239,191,189,23,239,191,189,39,0,239,191,189,6,10,83,22,239,191,189,76,239,191,189,76,28,94,97,239,191,189,239,191,189,108,17,92,239,191,189,42,34,54,91,239,191,189,210,160,239,191,189,239,191,189,239,191,189,79,106,239,191,189,8,239,191,189,239,191,189,61,239,191,189,9,239,191,189,99,239,191,189,239,191,189,49,239,191,189,52,239,191,189,239,191,189,112,239,191,189,239,191,189,239,191,189,119,239,191,189,222,174,39,121,56,239,191,189,37,109,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,0,239,191,189,47,67,83,0,239,191,189,74,62,41,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,97,239,191,189,239,191,189,239,191,189,41,15,239,191,189,196,148,86,99,239,191,189,47,6,53,59,239,191,189,115,239,191,189,80,103,118,54,239,191,189,112,239,191,189,218,154,239,191,189,40,84,239,191,189,239,191,189,103,239,191,189,239,191,189,47,239,191,189,34,107,239,191,189,239,191,189,239,191,189,239,191,189,26,55,239,191,189,99,239,191,189,95,10,107,87,16,44,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,58,239,191,189,110,117,239,191,189,125,239,191,189,68,1,239,191,189,36,239,191,189,107,239,191,189,102,120,56,8,118,239,191,189,127,29,239,191,189,105,127,59,64,39,239,191,189,82,126,239,191,189,239,191,189,239,191,189,98,46,239,191,189,239,191,189,39,239,191,189,25,27,9,239,191,189,51,111,239,191,189,239,191,189,51,30,102,239,191,189,114,90,239,191,189,29,239,191,189,5,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,119,56,239,191,189,118,225,145,134,99,20,6,54,16,121,239,191,189,239,191,189,122,239,191,189,239,191,189,14,90,239,191,189,69,117,239,191,189,205,149,239,191,189,95,111,89,215,144,239,191,189,239,191,189,44,239,191,189,81,239,191,189,239,191,189,211,148,8,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,49,239,191,189,38,239,191,189,239,191,189,88,49,239,191,189,37,239,191,189,76,239,191,189,39,239,191,189,47,239,191,189,239,191,189,239,191,189,112,239,191,189,40,239,191,189,42,45,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,124,8,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,56,44,71,109,239,191,189,239,191,189,239,191,189,77,239,191,189,40,85,122,47,239,191,189,9,239,191,189,239,191,189,102,10,95,239,191,189,239,191,189,76,239,191,189,239,191,189,225,141,182,37,126,239,191,189,239,191,189,26,118,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,89,239,191,189,65,239,191,189,239,191,189,1,239,191,189,239,191,189,52,204,180,239,191,189,239,191,189,35,5,58,223,135,239,191,189,22,29,239,191,189,39,3,127,239,191,189,96,239,191,189,10,13,21,62,49,46,6,5,239,191,189,239,191,189,45,239,191,189,7,239,191,189,239,191,189,88,239,191,189,19,239,191,189,239,191,189,112,239,191,189,28,44,31,30,239,191,189,111,239,191,189,61,48,220,161,32,239,191,189,39,239,191,189,117,100,239,191,189,29,0,125,66,89,239,191,189,14,94,104,239,191,189,58,107,239,191,189,105,72,239,191,189,239,191,189,239,191,189,31,18,111,239,191,189,61,127,108,80,43,239,191,189,239,191,189,89,239,191,189,84,239,191,189,4,239,191,189,112,8,239,191,189,239,191,189,79,15,96,7,239,191,189,3,239,191,189,239,191,189,56,239,191,189,63,54,239,191,189,86,81,70,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,39,98,14,45,239,191,189,239,191,189,239,191,189,239,191,189,123,23,22,239,191,189,2,15,239,191,189,69,123,239,191,189,110,239,191,189,15,239,191,189,35,239,191,189,239,191,189,93,239,191,189,82,239,191,189,9,3,201,170,239,191,189,239,191,189,239,191,189,239,191,189,29,9,239,191,189,0,239,191,189,31,239,191,189,239,191,189,79,54,239,191,189,125,239,191,189,46,239,191,189,239,191,189,24,239,191,189,239,191,189,90,239,191,189,94,56,61,41,113,20,77,37,25,17,239,191,189,122,93,239,191,189,239,191,189,74,14,239,191,189,4,28,119,13,239,191,189,90,48,239,191,189,239,191,189,47,239,191,189,239,191,189,88,13,112,53,239,191,189,239,191,189,107,239,191,189,81,11,106,97,53,37,96,2,37,239,191,189,22,103,9,239,191,189,239,191,189,62,112,81,239,191,189,239,191,189,239,191,189,239,191,189,63,29,43,73,239,191,189,239,191,189,10,40,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,21,239,191,189,97,239,191,189,45,97,67,24,239,191,189,199,172,38,50,239,191,189,89,2,239,191,189,239,191,189,102,239,191,189,76,53,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,3,239,191,189,91,121,78,239,191,189,204,137,239,191,189,5,239,191,189,239,191,189,11,97,239,191,189,99,239,191,189,239,191,189,87,90,65,45,101,239,191,189,239,191,189,239,191,189,33,52,100,239,191,189,239,191,189,10,239,191,189,239,191,189,56,239,191,189,105,224,179,159,17,239,191,189,239,191,189,71,239,191,189,106,97,118,33,239,191,189,1,119,48,119,239,191,189,239,191,189,39,122,239,191,189,90,199,151,36,84,50,239,191,189,239,191,189,98,40,49,239,191,189,239,191,189,27,239,191,189,73,100,93,29,68,239,191,189,239,191,189,239,191,189,19,203,165,91,239,191,189,125,239,191,189,120,127,239,191,189,82,88,239,191,189,121,239,191,189,123,21,11,239,191,189,239,191,189,77,239,191,189,70,92,121,46,93,98,9,53,13,239,191,189,27,239,191,189,89,239,191,189,214,182,15,123,239,191,189,239,191,189,11,104,239,191,189,239,191,189,207,172,239,191,189,8,57,239,191,189,239,191,189,93,35,43,94,239,191,189,96,79,239,191,189,21,117,239,191,189,68,239,191,189,239,191,189,239,191,189,94,239,191,189,62,85,206,131,239,191,189,61,239,191,189,222,153,239,191,189,94,239,191,189,239,191,189,0,239,191,189,106,51})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=32768-36863",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19170 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19170_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19170_s.txt", Encoding.UTF8);

    public Test19170() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "@",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18978 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18978_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18978_s.txt", Encoding.UTF8);

    public Test18978() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{27,239,191,189,32,82,85,88,13,124,239,191,189,115,239,191,189,73,9,239,191,189,239,191,189,44,81,239,191,189,239,191,189,87,97,44,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,106,71,91,239,191,189,69,38,239,191,189,239,191,189,27,54,239,191,189,69,239,191,189,239,191,189,78,239,191,189,84,20,239,191,189,221,150,13,55,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,104,64,18,68,23,239,191,189,3,239,191,189,3,239,191,189,108,239,191,189,239,191,189,102,28,81,239,191,189,50,91,79,239,191,189,39,239,191,189,239,191,189,77,239,191,189,239,191,189,70,6,87,7,239,191,189,105,206,176,50,239,191,189,239,191,189,239,191,189,239,191,189,113,110,239,191,189,86,41,89,112,59,196,156,81,108,239,191,189,98,239,191,189,24,239,191,189,239,191,189,239,191,189,27,95,239,191,189,239,191,189,239,191,189,126,239,191,189,74,239,191,189,239,191,189,239,191,189,38,239,191,189,102,239,191,189,109,239,191,189,54,239,191,189,239,191,189,61,104,239,191,189,105,6,239,191,189,66,7,65,239,191,189,239,191,189,3,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,216,163,15,119,239,191,189,239,191,189,239,191,189,42,239,191,189,60,239,191,189,31,239,191,189,79,11,239,191,189,239,191,189,239,191,189,26,53,239,191,189,239,191,189,67,67,239,191,189,30,60,239,191,189,51,67,239,191,189,9,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,227,166,136,239,191,189,239,191,189,6,239,191,189,34,4,93,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,96,239,191,189,239,191,189,103,239,191,189,40,239,191,189,124,106,123,239,191,189,2,239,191,189,40,239,191,189,24,19,115,239,191,189,239,191,189,7,61,239,191,189,239,191,189,25,239,191,189,239,191,189,22,239,191,189,51,80,3,62,104,239,191,189,22,4,123,8,96,239,191,189,95,239,191,189,7,239,191,189,2,107,239,191,189,42,115,239,191,189,69,239,191,189,239,191,189,34,12,44,78,239,191,189,104,239,191,189,239,191,189,55,43,126,196,137,239,191,189,239,191,189,19,239,191,189,107,76,230,167,161,239,191,189,239,191,189,22,114,239,191,189,239,191,189,66,239,191,189,10,22,239,191,189,121,96,10,239,191,189,45,71,239,191,189,2,239,191,189,100,239,191,189,34,62,239,191,189,43,78,96,239,191,189,217,161,239,191,189,70,239,191,189,82,56,55,77,119,239,191,189,239,191,189,239,191,189,32,103,12,16,67,239,191,189,59,105,36,84,239,191,189,13,61,239,191,189,239,191,189,216,145,198,157,239,191,189,48,117,23,51,223,184,239,191,189,239,191,189,239,191,189,239,191,189,13,23,213,187,239,191,189,49,239,191,189,239,191,189,126,37,239,191,189,239,191,189,76,239,191,189,56,68,116,102,94,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,24,239,191,189,115,42,239,191,189,239,191,189,239,191,189,104,34,22,239,191,189,239,191,189,239,191,189,31,239,191,189,43,122,40,91,239,191,189,239,191,189,67,57,239,191,189,61,208,181,119,239,191,189,239,191,189,239,191,189,61,239,191,189,101,239,191,189,21,239,191,189,121,239,191,189,66,239,191,189,82,79,239,191,189,239,191,189,239,191,189,56,239,191,189,117,201,153,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,3,33,126,109,87,78,105,239,191,189,91,239,191,189,51,21,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,124,239,191,189,75,85,239,191,189,239,191,189,18,239,191,189,239,191,189,41,57,239,191,189,118,239,191,189,239,191,189,110,239,191,189,1,77,50,118,127,239,191,189,239,191,189,239,191,189,26,35,42,9,239,191,189,118,239,191,189,239,191,189,5,239,191,189,239,191,189,33})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4b6ccbd70ce54b43862febf1401d5a89",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18659 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18659_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18659_s.txt", Encoding.UTF8);

    public Test18659() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: " ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21824 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21824_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21824_s.txt", Encoding.UTF8);

    public Test21824() : base(recordedRequest, recordedResponse, "accounts8d43a03fea0639a")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{65,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,214,142,102,37,127,3,239,191,189,239,191,189,239,191,189,72,86,116,46,79,239,191,189,48,239,191,189,239,191,189,49,239,191,189,22,239,191,189,239,191,189,5,239,191,189,239,191,189,75,58,54,0,69,239,191,189,239,191,189,77,87,45,93,51,239,191,189,239,191,189,239,191,189,69,56,239,191,189,80,16,96,239,191,189,122,33,3,239,191,189,239,191,189,113,239,191,189,239,191,189,125,32,239,191,189,45,116,74,239,191,189,71,16,239,191,189,1,239,191,189,2,62,239,191,189,57,22,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,33,102,239,191,189,239,191,189,61,90,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,106,115,94,239,191,189,119,239,191,189,62,72,239,191,189,40,61,71,239,191,189,106,65,239,191,189,239,191,189,239,191,189,111,74,77,239,191,189,123,239,191,189,20,82,0,106,111,239,191,189,239,191,189,239,191,189,35,74,35,22,239,191,189,73,49,239,191,189,122,106,239,191,189,40,64,47,239,191,189,25,17,103,239,191,189,80,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,216,147,98,84,239,191,189,92,32,29,239,191,189,239,191,189,63,61,239,191,189,211,137,239,191,189,114,239,191,189,34,46,81,94,239,191,189,203,152,239,191,189,239,191,189,43,83,239,191,189,36,79,239,191,189,215,150,211,142,211,178,239,191,189,112,112,239,191,189,18,25,239,191,189,239,191,189,117,80,12,2,239,191,189,239,191,189,122,6,239,191,189,239,191,189,239,191,189,239,191,189,76,239,191,189,77,20,27,239,191,189,49,239,191,189,239,191,189,69,78,123,86,239,191,189,28,16,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,34,239,191,189,102,38,239,191,189,239,191,189,23,239,191,189,14,102,8,35,92,239,191,189,36,118,239,191,189,58,239,191,189,239,191,189,198,179,56,45,239,191,189,239,191,189,54,239,191,189,239,191,189,101,61,74,61,239,191,189,82,60,11,239,191,189,239,191,189,120,64,21,77,201,191,113,97,96,88,239,191,189,43,80,15,111,99,57,239,191,189,239,191,189,119,239,191,189,239,191,189,41,0,239,191,189,239,191,189,30,239,191,189,239,191,189,57,123,87,239,191,189,42,77,115,34,239,191,189,239,191,189,42,21,213,137,239,191,189,239,191,189,18,239,191,189,45,239,191,189,239,191,189,3,113,239,191,189,117,239,191,189,239,191,189,22,21,239,191,189,239,191,189,203,143,38,239,191,189,84,239,191,189,37,239,191,189,239,191,189,65,89,213,187,98,11,89,239,191,189,71,239,191,189,239,191,189,239,191,189,28,239,191,189,54,10,91,38,239,191,189,239,191,189,92,12,92,210,137,73,69,98,239,191,189,99,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,64,18,239,191,189,60,122,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,9,239,191,189,52,239,191,189,3,50,24,239,191,189,239,191,189,239,191,189,239,191,189,53,9,239,191,189,239,191,189,52,239,191,189,110,27,19,239,191,189,123,239,191,189,63,239,191,189,239,191,189,216,155,239,191,189,113,239,191,189,106,24,51,98,239,191,189,122,239,191,189,239,191,189,13,239,191,189,239,191,189,69,239,191,189,239,191,189,10,43,32,121,101,100,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,107,68,90,125,44,239,191,189,12,120,29,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,13,25,19,53,81,84,239,191,189,239,191,189,239,191,189,123,31,12,122,239,191,189,239,191,189,122})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fea0639a",
                        container: "containers605ccf6228d649d6a9d82471bef636bc",
                        blob: "Blob21474a99e4914d2899a50d504ee65e1d",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19107 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19107_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19107_s.txt", Encoding.UTF8);

    public Test19107() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "zzz",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19531 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19531_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19531_s.txt", Encoding.UTF8);

    public Test19531() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "IsThisABug?.docx",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18387 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18387_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18387_s.txt", Encoding.UTF8);

    public Test18387() : base(recordedRequest, recordedResponse, "accounts8d43a0243f9d4e8")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(""));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0243f9d4e8",
                        container: "containers665e3ac9181d4441af8bc771f9e56af7",
                        blob: "PageBlob3863b37890654f909a86930c531679c7",
                        pageWrite: "Clear".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Clear"),
                        body: body,
                        timeout: 30,
                        range: "bytes=512-1023",
                        leaseId: "0339a8ec-ca76-44d2-9cf7-205031b3b5ce",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19534 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19534_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19534_s.txt", Encoding.UTF8);

    public Test19534() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "IsThisABug?.docx",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21829 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21829_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21829_s.txt", Encoding.UTF8);

    public Test21829() : base(recordedRequest, recordedResponse, "accounts8d43a03feb3286c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,111,239,191,189,239,191,189,2,12,119,239,191,189,239,191,189,90,91,78,112,52,239,191,189,239,191,189,90,239,191,189,105,116,239,191,189,227,132,129,239,191,189,239,191,189,96,239,191,189,236,188,133,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,6,122,239,191,189,73,239,191,189,28,216,186,15,239,191,189,239,191,189,10,117,239,191,189,59,227,157,188,239,191,189,14,9,6,239,191,189,239,191,189,47,213,133,211,172,79,203,190,84,34,239,191,189,43,239,191,189,93,104,239,191,189,239,191,189,239,191,189,213,158,239,191,189,71,228,153,151,37,40,239,191,189,239,191,189,115,239,191,189,88,73,86,71,82,239,191,189,98,58,29,75,33,126,110,239,191,189,239,191,189,94,239,191,189,102,31,26,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,39,239,191,189,9,87,239,191,189,239,191,189,211,149,7,33,85,2,239,191,189,239,191,189,239,191,189,239,191,189,37,102,42,239,191,189,102,239,191,189,102,78,239,191,189,89,24,4,239,191,189,110,85,102,239,191,189,239,191,189,19,58,66,239,191,189,206,145,239,191,189,41,87,96,16,29,239,191,189,60,239,191,189,47,194,138,239,191,189,92,32,93,124,239,191,189,122,85,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,69,83,91,239,191,189,239,191,189,239,191,189,60,114,5,62,239,191,189,239,191,189,239,191,189,50,84,239,191,189,203,164,79,239,191,189,239,191,189,239,191,189,239,191,189,79,121,239,191,189,23,24,239,191,189,239,191,189,33,239,191,189,223,181,239,191,189,239,191,189,103,239,191,189,40,98,239,191,189,239,191,189,118,124,239,191,189,239,191,189,232,155,189,239,191,189,239,191,189,74,6,239,191,189,208,135,239,191,189,11,30,239,191,189,239,191,189,36,239,191,189,111,28,239,191,189,239,191,189,38,239,191,189,119,68,239,191,189,124,239,191,189,239,191,189,239,191,189,71,10,239,191,189,239,191,189,239,191,189,123,91,208,150,239,191,189,239,191,189,239,191,189,239,191,189,5,16,91,239,191,189,92,239,191,189,239,191,189,54,7,96,195,162,239,191,189,239,191,189,69,239,191,189,39,239,191,189,25,32,5,64,239,191,189,119,49,239,191,189,102,239,191,189,239,191,189,239,191,189,69,55,239,191,189,66,239,191,189,102,239,191,189,3,31,108,21,239,191,189,64,239,191,189,239,191,189,74,36,239,191,189,21,38,110,9,239,191,189,239,191,189,239,191,189,239,191,189,79,239,191,189,118,26,239,191,189,81,45,26,239,191,189,239,191,189,126,85,239,191,189,239,191,189,36,239,191,189,239,191,189,10,112,239,191,189,23,239,191,189,239,191,189,239,191,189,224,179,190,107,60,239,191,189,54,99,239,191,189,23,4,95,239,191,189,82,30,67,18,239,191,189,67,239,191,189,239,191,189,47,54,102,73,90,239,191,189,239,191,189,109,239,191,189,55,60,239,191,189,239,191,189,58,67,239,191,189,239,191,189,239,191,189,239,191,189,108,27,122,199,187,239,191,189,5,90,239,191,189,45,239,191,189,99,62,29,239,191,189,125,87,33,239,191,189,119,239,191,189,21,239,191,189,200,163,239,191,189,24,219,176,80,239,191,189,71,59,239,191,189,239,191,189,110,239,191,189,239,191,189,85,239,191,189,239,191,189,64,216,175,239,191,189,125,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,102,239,191,189,37,100,239,191,189,239,191,189,33,15,66,16,125,239,191,189,239,191,189,27,3,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,47,239,191,189,37,94,239,191,189,21,116,239,191,189,239,191,189,239,191,189,71,100,80,239,191,189,239,191,189,99,70,92,239,191,189,239,191,189,59,216,189,122,3,239,191,189,239,191,189,239,191,189,4,113,111})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03feb3286c",
                        container: "containersda82900ee4934bdda3e04d6838635157",
                        blob: "Blob423ba80c087f42e2b2eb9481464aa7ec",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=512-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18632 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18632_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18632_s.txt", Encoding.UTF8);

    public Test18632() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "$",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23070 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23070_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23070_s.txt", Encoding.UTF8);

    public Test23070() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{61,121,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,112,84,239,191,189,60,108,239,191,189,92,239,191,189,239,191,189,239,191,189,32,40,239,191,189,239,191,189,89,239,191,189,5,96,24,112,66,115,24,239,191,189,59,74,105,124,239,191,189,239,191,189,89,239,191,189,52,239,191,189,9,239,191,189,239,191,189,239,191,189,78,239,191,189,2,83,239,191,189,239,191,189,239,191,189,84,239,191,189,127,239,191,189,95,239,191,189,239,191,189,113,115,239,191,189,60,239,191,189,1,33,123,239,191,189,10,121,69,239,191,189,239,191,189,126,239,191,189,239,191,189,88,239,191,189,201,174,64,31,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,9,239,191,189,61,12,83,19,239,191,189,239,191,189,239,191,189,239,191,189,79,73,44,120,239,191,189,112,97,239,191,189,9,6,239,191,189,8,239,191,189,51,239,191,189,239,191,189,239,191,189,117,43,239,191,189,226,189,138,239,191,189,59,49,239,191,189,113,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,126,207,133,39,72,239,191,189,120,239,191,189,1,0,9,46,239,191,189,46,53,116,239,191,189,239,191,189,239,191,189,239,191,189,127,61,239,191,189,239,191,189,239,191,189,62,40,89,239,191,189,17,239,191,189,67,7,239,191,189,101,239,191,189,239,191,189,202,154,239,191,189,17,239,191,189,57,48,239,191,189,66,239,191,189,119,239,191,189,20,239,191,189,94,22,239,191,189,65,68,239,191,189,55,9,239,191,189,31,239,191,189,239,191,189,10,239,191,189,39,3,201,143,239,191,189,23,100,239,191,189,239,191,189,239,191,189,3,89,45,239,191,189,80,118,239,191,189,101,239,191,189,39,239,191,189,239,191,189,36,97,235,146,144,14,239,191,189,239,191,189,73,38,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,105,20,61,234,141,138,239,191,189,77,61,239,191,189,239,191,189,239,191,189,239,191,189,54,67,239,191,189,45,239,191,189,212,177,239,191,189,207,185,51,87,239,191,189,103,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,119,94,8,239,191,189,239,191,189,239,191,189,88,86,67,239,191,189,239,191,189,68,239,191,189,239,191,189,120,239,191,189,239,191,189,68,239,191,189,239,191,189,53,239,191,189,81,239,191,189,69,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,6,119,99,239,191,189,98,239,191,189,239,191,189,72,61,209,134,41,88,239,191,189,102,98,239,191,189,40,16,239,191,189,239,191,189,111,122,99,31,88,52,12,239,191,189,5,84,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,74,239,191,189,119,8,12,108,239,191,189,67,239,191,189,50,92,239,191,189,91,106,118,239,191,189,239,191,189,239,191,189,239,191,189,9,120,239,191,189,239,191,189,55,125,239,191,189,239,191,189,93,48,239,191,189,65,239,191,189,85,239,191,189,239,191,189,239,191,189,103,110,239,191,189,36,21,93,239,191,189,41,14,239,191,189,239,191,189,34,10,16,239,191,189,33,239,191,189,239,191,189,239,191,189,219,181,208,143,239,191,189,106,230,166,153,26,239,191,189,6,239,191,189,239,191,189,105,47,239,191,189,8,239,191,189,239,191,189,26,218,153,40,239,191,189,239,191,189,110,82,32,239,191,189,32,239,191,189,239,191,189,239,191,189,27,210,150,239,191,189,19,239,191,189,47,239,191,189,64,14,15,239,191,189,238,162,160,239,191,189,66,24,76,213,183,0,28,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,122,239,191,189,100,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,25,239,191,189,8,204,177,62,239,191,189,8,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8e663a674c654dd5a9bf9cabbece68f9",
                        blob: "PageBlob55cf4727e070461084c815b0b15738c6",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19537 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19537_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19537_s.txt", Encoding.UTF8);

    public Test19537() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "With#Helper",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18569 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18569_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18569_s.txt", Encoding.UTF8);

    public Test18569() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "-",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23075 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23075_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23075_s.txt", Encoding.UTF8);

    public Test23075() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,39,239,191,189,239,191,189,49,110,20,14,119,61,61,10,72,239,191,189,35,90,16,84,102,239,191,189,239,191,189,119,239,191,189,48,239,191,189,71,76,239,191,189,77,239,191,189,116,74,223,169,239,191,189,239,191,189,52,40,49,44,117,10,27,202,142,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,36,96,93,67,239,191,189,239,191,189,239,191,189,33,34,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,239,191,189,85,37,239,191,189,35,58,28,239,191,189,91,25,239,191,189,57,80,89,13,239,191,189,29,239,191,189,239,191,189,239,191,189,73,126,239,191,189,239,191,189,109,71,10,82,72,103,1,239,191,189,125,87,60,239,191,189,51,239,191,189,239,191,189,121,8,239,191,189,1,41,235,128,153,239,191,189,21,204,150,60,92,111,85,56,239,191,189,125,123,239,191,189,47,239,191,189,59,239,191,189,23,5,239,191,189,239,191,189,29,126,239,191,189,96,239,191,189,28,239,191,189,108,124,96,239,191,189,239,191,189,67,61,124,239,191,189,239,191,189,63,13,2,3,195,182,65,239,191,189,74,62,239,191,189,13,18,239,191,189,195,160,239,191,189,239,191,189,10,54,116,64,239,191,189,239,191,189,106,239,191,189,239,191,189,45,236,140,190,35,82,198,175,239,191,189,26,239,191,189,11,30,239,191,189,239,191,189,115,239,191,189,111,78,239,191,189,40,13,239,191,189,239,191,189,113,239,191,189,80,239,191,189,80,25,70,89,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,31,20,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,110,73,29,77,28,239,191,189,102,32,83,239,191,189,76,239,191,189,1,239,191,189,95,239,191,189,239,191,189,97,21,107,35,116,239,191,189,232,132,142,239,191,189,20,98,9,239,191,189,114,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,60,13,76,239,191,189,10,204,149,97,239,191,189,88,239,191,189,205,188,122,239,191,189,113,239,191,189,239,191,189,52,200,141,48,82,239,191,189,74,27,239,191,189,6,69,55,87,239,191,189,239,191,189,36,8,31,239,191,189,106,239,191,189,82,35,239,191,189,95,94,239,191,189,77,79,239,191,189,239,191,189,74,239,191,189,127,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,120,32,93,239,191,189,239,191,189,86,239,191,189,232,144,146,225,165,188,239,191,189,239,191,189,39,239,191,189,239,191,189,80,49,239,191,189,239,191,189,239,191,189,24,239,191,189,116,43,37,239,191,189,239,191,189,67,239,191,189,239,191,189,88,62,1,239,191,189,106,239,191,189,239,191,189,72,98,5,239,191,189,239,191,189,239,191,189,11,6,239,191,189,239,191,189,239,191,189,107,41,125,127,239,191,189,239,191,189,57,239,191,189,103,60,239,191,189,78,74,239,191,189,100,239,191,189,239,191,189,126,239,191,189,210,167,233,151,156,239,191,189,49,28,239,191,189,32,31,239,191,189,239,191,189,94,42,239,191,189,218,191,123,239,191,189,49,24,239,191,189,239,191,189,38,30,239,191,189,239,191,189,239,191,189,239,191,189,120,20,54,49,18,239,191,189,63,239,191,189,226,154,163,29,95,239,191,189,72,70,239,191,189,239,191,189,31,60,239,191,189,239,191,189,118,239,191,189,96,239,191,189,239,191,189,8,113,125,76,239,191,189,109,239,191,189,10,239,191,189,239,191,189,75,102,96,239,191,189,239,191,189,239,191,189,49,19,239,191,189,93,239,191,189,239,191,189,30,239,191,189,124,114,4,239,191,189,239,191,189,239,191,189,239,191,189,88,14,54,116,100,78,13,239,191,189,108,239,191,189,61,239,191,189,74,239,191,189,239,191,189,220,149,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers912388af09444994a8aa02e6a39805d2",
                        blob: "PageBlobbf0d9ddc9531475ebe25b7a7554fee00",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19540 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19540_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19540_s.txt", Encoding.UTF8);

    public Test19540() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "With#Helper",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18695 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18695_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18695_s.txt", Encoding.UTF8);

    public Test18695() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "  a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21445 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21445_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21445_s.txt", Encoding.UTF8);

    public Test21445() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{17,31,239,191,189,239,191,189,84,33,239,191,189,239,191,189,239,191,189,239,191,189,11,33,239,191,189,24,17,239,191,189,25,239,191,189,2,24,22,9,239,191,189,53,48,49,57,239,191,189,92,239,191,189,93,239,191,189,41,76,44,239,191,189,239,191,189,5,239,191,189,86,239,191,189,16,115,239,191,189,239,191,189,94,239,191,189,117,239,191,189,239,191,189,22,21,122,114,239,191,189,7,72,90,114,35,239,191,189,7,67,63,119,45,239,191,189,70,239,191,189,125,239,191,189,19,0,239,191,189,111,5,239,191,189,24,92,239,191,189,114,196,177,239,191,189,239,191,189,72,99,239,191,189,79,37,74,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,52,72,239,191,189,102,120,239,191,189,119,19,2,21,239,191,189,2,239,191,189,113,48,239,191,189,239,191,189,239,191,189,35,86,239,191,189,239,191,189,46,239,191,189,65,239,191,189,239,191,189,51,26,127,77,61,239,191,189,55,98,208,177,107,239,191,189,58,57,239,191,189,239,191,189,50,239,191,189,239,191,189,89,239,191,189,26,239,191,189,239,191,189,1,75,75,44,123,25,239,191,189,37,239,191,189,239,191,189,68,239,191,189,239,191,189,199,145,52,239,191,189,14,96,77,52,239,191,189,239,191,189,28,18,52,239,191,189,52,239,191,189,239,191,189,18,24,239,191,189,239,191,189,76,239,191,189,10,239,191,189,239,191,189,69,119,119,239,191,189,239,191,189,1,107,4,127,239,191,189,239,191,189,239,191,189,64,239,191,189,74,98,47,26,71,29,239,191,189,239,191,189,239,191,189,43,107,239,191,189,123,239,191,189,239,191,189,239,191,189,39,239,191,189,125,239,191,189,63,113,38,124,50,239,191,189,48,14,3,108,94,76,239,191,189,2,239,191,189,84,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,43,10,239,191,189,100,239,191,189,239,191,189,125,16,239,191,189,239,191,189,10,239,191,189,8,239,191,189,20,239,191,189,124,239,191,189,239,191,189,68,239,191,189,30,42,121,15,93,196,137,15,91,64,239,191,189,239,191,189,92,80,40,239,191,189,239,191,189,64,30,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,75,82,239,191,189,13,239,191,189,35,239,191,189,239,191,189,239,191,189,13,239,191,189,118,85,112,33,239,191,189,1,103,239,191,189,93,68,239,191,189,77,239,191,189,239,191,189,73,239,191,189,84,126,239,191,189,46,239,191,189,111,17,113,239,191,189,2,239,191,189,29,239,191,189,41,95,67,73,43,118,239,191,189,239,191,189,239,191,189,76,34,107,239,191,189,90,239,191,189,5,239,191,189,34,239,191,189,239,191,189,239,191,189,45,126,120,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,114,99,27,76,9,239,191,189,239,191,189,58,121,239,191,189,90,50,113,239,191,189,239,191,189,20,113,108,96,239,191,189,239,191,189,66,10,239,191,189,239,191,189,203,152,54,239,191,189,113,77,5,77,113,239,191,189,53,63,83,239,191,189,239,191,189,98,239,191,189,96,42,239,191,189,76,7,239,191,189,12,239,191,189,239,191,189,67,239,191,189,31,239,191,189,48,89,32,107,62,9,239,191,189,239,191,189,8,120,84,239,191,189,239,191,189,201,178,239,191,189,29,112,101,125,6,239,191,189,239,191,189,39,239,191,189,195,171,42,239,191,189,239,191,189,9,112,46,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,18,88,239,191,189,126,102,8,35,89,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,77,121,239,191,189,239,191,189,122,94,94,239,191,189,110,239,191,189,125,0,213,182,54,239,191,189,114,239,191,189,239,191,189,45,239,191,189,45,239,191,189,239,191,189,239,191,189,198,180,54,64,239,191,189,239,191,189,123})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers48771f88575e4515915e87d6b2aed9d9",
                        blob: "Blobc5cc572d47f04d11af96df70fb23327a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19143 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19143_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19143_s.txt", Encoding.UTF8);

    public Test19143() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "=",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19543 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19543_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19543_s.txt", Encoding.UTF8);

    public Test19543() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "ThisIs&Ampersand",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18542 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18542_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18542_s.txt", Encoding.UTF8);

    public Test18542() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "zzz",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18668 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18668_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18668_s.txt", Encoding.UTF8);

    public Test18668() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "  ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18605 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18605_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18605_s.txt", Encoding.UTF8);

    public Test18605() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "*",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19561 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19561_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19561_s.txt", Encoding.UTF8);

    public Test19561() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{77,239,191,189,110,93,239,191,189,103,239,191,189,24,12,239,191,189,104,49,96,31,55,16,15,239,191,189,46,239,191,189,38,239,191,189,239,191,189,118,239,191,189,62,239,191,189,239,191,189,86,57,85,19,37,12,111,41,88,67,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,212,180,239,191,189,239,191,189,239,191,189,121,0,239,191,189,239,191,189,19,239,191,189,108,239,191,189,239,191,189,17,239,191,189,239,191,189,73,84,11,84,239,191,189,14,239,191,189,239,191,189,34,15,53,48,18,239,191,189,77,61,100,239,191,189,239,191,189,203,167,239,191,189,239,191,189,36,120,239,191,189,21,97,239,191,189,17,72,239,191,189,51,239,191,189,239,191,189,212,167,239,191,189,35,239,191,189,239,191,189,198,151,106,239,191,189,99,239,191,189,71,239,191,189,47,41,25,44,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,17,198,154,239,191,189,80,37,121,239,191,189,222,153,62,239,191,189,239,191,189,2,47,88,21,52,206,183,239,191,189,239,191,189,47,110,60,239,191,189,239,191,189,26,239,191,189,239,191,189,60,239,191,189,124,209,134,239,191,189,49,101,67,33,48,239,191,189,75,127,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,198,179,41,239,191,189,77,41,239,191,189,43,239,191,189,239,191,189,46,95,239,191,189,52,93,239,191,189,124,16,124,239,191,189,39,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,62,75,74,239,191,189,50,227,136,132,221,131,92,12,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,34,93,239,191,189,57,48,239,191,189,102,23,239,191,189,124,23,65,239,191,189,232,170,130,111,239,191,189,208,162,81,239,191,189,11,239,191,189,239,191,189,31,127,33,10,105,239,191,189,239,191,189,71,239,191,189,239,191,189,35,239,191,189,17,26,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,66,239,191,189,35,91,34,24,16,0,35,239,191,189,77,82,239,191,189,17,127,69,12,87,239,191,189,95,239,191,189,7,91,239,191,189,239,191,189,93,239,191,189,64,214,132,12,3,239,191,189,74,79,91,239,191,189,239,191,189,81,239,191,189,239,191,189,35,239,191,189,63,239,191,189,239,191,189,100,9,16,239,191,189,239,191,189,111,67,102,72,239,191,189,239,191,189,239,191,189,93,239,191,189,70,239,191,189,76,64,65,78,8,98,239,191,189,35,127,35,6,26,239,191,189,239,191,189,71,28,239,191,189,239,191,189,239,191,189,239,191,189,47,80,197,157,239,191,189,114,1,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,1,71,239,191,189,6,239,191,189,105,41,239,191,189,114,239,191,189,239,191,189,30,116,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,97,56,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,30,51,20,239,191,189,120,67,73,42,52,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,23,239,191,189,239,191,189,103,239,191,189,3,90,239,191,189,62,239,191,189,14,91,119,3,239,191,189,112,13,115,239,191,189,239,191,189,239,191,189,95,239,191,189,14,76,239,191,189,80,111,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,35,239,191,189,239,191,189,62,239,191,189,86,105,239,191,189,239,191,189,39,58,38,239,191,189,27,80,87,239,191,189,11,239,191,189,27,41,239,191,189,239,191,189,239,191,189,93,239,191,189,221,176,239,191,189,239,191,189,95,239,191,189,239,191,189,80,239,191,189,202,173,239,191,189,115,239,191,189,100,239,191,189,41,52,239,191,189,57,239,191,189,239,191,189,83,239,191,189,201,143,15,46,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse70e0964710a4b7e98f006177011f4cb",
                        blob: "abc",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19179 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19179_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19179_s.txt", Encoding.UTF8);

    public Test19179() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "$",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19546 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19546_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19546_s.txt", Encoding.UTF8);

    public Test19546() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,239,191,189,12,67,239,191,189,239,191,189,98,90,239,191,189,239,191,189,22,239,191,189,91,239,191,189,21,239,191,189,239,191,189,239,191,189,109,82,239,191,189,54,239,191,189,116,239,191,189,65,57,239,191,189,239,191,189,100,82,4,72,239,191,189,239,191,189,239,191,189,239,191,189,108,28,33,239,191,189,13,33,93,124,123,239,191,189,48,239,191,189,24,3,127,239,191,189,96,239,191,189,82,239,191,189,239,191,189,84,118,239,191,189,116,11,42,196,166,19,23,23,239,191,189,239,191,189,89,80,49,5,41,104,23,49,198,149,239,191,189,74,239,191,189,96,239,191,189,91,239,191,189,79,239,191,189,39,62,24,239,191,189,239,191,189,28,2,239,191,189,239,191,189,239,191,189,103,239,191,189,24,239,191,189,48,239,191,189,47,120,91,109,239,191,189,100,239,191,189,239,191,189,239,191,189,41,120,239,191,189,239,191,189,75,43,239,191,189,108,239,191,189,239,191,189,65,239,191,189,239,191,189,239,191,189,39,113,126,91,95,10,239,191,189,124,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,217,138,196,184,239,191,189,45,239,191,189,239,191,189,59,195,172,41,239,191,189,105,239,191,189,239,191,189,114,70,120,2,9,46,239,191,189,79,239,191,189,22,19,79,104,239,191,189,239,191,189,239,191,189,207,182,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,35,70,239,191,189,82,239,191,189,76,31,3,26,239,191,189,73,239,191,189,239,191,189,91,239,191,189,105,69,115,26,86,33,239,191,189,239,191,189,2,44,239,191,189,239,191,189,239,191,189,0,123,239,191,189,52,42,55,11,239,191,189,108,90,59,239,191,189,47,101,239,191,189,74,97,88,239,191,189,91,239,191,189,118,239,191,189,42,41,239,191,189,239,191,189,239,191,189,104,239,191,189,38,34,239,191,189,239,191,189,3,239,191,189,239,191,189,20,123,239,191,189,79,92,239,191,189,239,191,189,55,84,38,239,191,189,22,239,191,189,239,191,189,212,185,87,239,191,189,239,191,189,239,191,189,127,10,239,191,189,239,191,189,239,191,189,40,239,191,189,52,25,43,239,191,189,97,239,191,189,88,76,239,191,189,101,12,239,191,189,121,239,191,189,239,191,189,239,191,189,90,239,191,189,112,239,191,189,63,82,104,67,239,191,189,121,239,191,189,115,10,239,191,189,17,239,191,189,52,113,239,191,189,30,40,122,90,47,59,84,239,191,189,84,74,5,16,3,239,191,189,53,78,239,191,189,20,82,75,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,65,10,83,65,103,7,16,212,173,239,191,189,64,239,191,189,239,191,189,91,20,239,191,189,239,191,189,105,239,191,189,239,191,189,213,131,126,239,191,189,239,191,189,37,239,191,189,109,63,239,191,189,114,29,85,19,239,191,189,0,9,239,191,189,8,239,191,189,110,239,191,189,212,184,97,239,191,189,239,191,189,239,191,189,239,191,189,126,65,239,191,189,108,239,191,189,213,139,239,191,189,239,191,189,60,102,109,50,38,34,68,239,191,189,110,19,239,191,189,60,96,239,191,189,46,77,20,239,191,189,239,191,189,41,239,191,189,77,239,191,189,79,239,191,189,239,191,189,239,191,189,86,239,191,189,100,43,125,24,38,239,191,189,81,25,60,211,178,116,239,191,189,24,239,191,189,1,239,191,189,30,98,239,191,189,31,115,81,239,191,189,92,29,239,191,189,30,117,50,70,239,191,189,49,10,239,191,189,113,36,57,39,239,191,189,51,215,176,46,239,191,189,58,52,72,77,7,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,210,187,8,199,188,239,191,189,199,161,108,239,191,189,88,14,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7775a7837e2b44f1b4fdf34ef4aeb1a7",
                        blob: "ThisIs&Ampersand",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23085 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23085_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23085_s.txt", Encoding.UTF8);

    public Test23085() : base(recordedRequest, recordedResponse, "accounts8d43a04964ad6db")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,95,239,191,189,24,239,191,189,239,191,189,1,109,50,239,191,189,239,191,189,88,41,127,120,239,191,189,35,100,76,110,90,87,239,191,189,7,195,149,111,239,191,189,8,18,239,191,189,86,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,84,100,239,191,189,96,239,191,189,21,125,3,86,239,191,189,239,191,189,22,59,239,191,189,239,191,189,85,100,126,80,101,32,98,239,191,189,239,191,189,99,239,191,189,114,239,191,189,45,239,191,189,205,129,239,191,189,2,112,85,98,239,191,189,89,50,4,239,191,189,239,191,189,239,191,189,204,176,239,191,189,123,25,239,191,189,80,239,191,189,239,191,189,107,52,2,22,239,191,189,80,119,10,33,40,58,239,191,189,103,239,191,189,56,25,65,239,191,189,37,29,96,101,239,191,189,239,191,189,212,179,239,191,189,239,191,189,199,142,94,239,191,189,239,191,189,31,239,191,189,110,62,239,191,189,239,191,189,239,191,189,40,239,191,189,95,239,191,189,101,36,109,97,216,173,239,191,189,239,191,189,126,10,239,191,189,57,27,234,157,128,19,90,239,191,189,239,191,189,26,239,191,189,108,106,239,191,189,3,79,239,191,189,67,239,191,189,126,239,191,189,104,66,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,20,239,191,189,52,34,239,191,189,239,191,189,98,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,93,220,151,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,14,239,191,189,125,106,239,191,189,76,39,28,87,107,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,229,164,141,214,134,239,191,189,26,239,191,189,239,191,189,90,220,136,2,99,73,63,239,191,189,107,239,191,189,30,62,55,117,239,191,189,96,239,191,189,63,239,191,189,239,191,189,224,182,168,239,191,189,34,239,191,189,52,239,191,189,55,111,239,191,189,79,54,239,191,189,239,191,189,64,239,191,189,105,18,239,191,189,86,22,117,73,215,155,239,191,189,46,239,191,189,118,239,191,189,38,239,191,189,211,164,51,239,191,189,239,191,189,120,21,82,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,45,44,93,113,239,191,189,65,95,239,191,189,239,191,189,61,5,35,239,191,189,239,191,189,239,191,189,41,123,239,191,189,40,12,221,138,239,191,189,239,191,189,4,104,121,80,9,239,191,189,16,239,191,189,68,239,191,189,239,191,189,115,239,191,189,72,9,99,239,191,189,51,88,59,15,46,239,191,189,124,239,191,189,239,191,189,239,191,189,216,128,120,239,191,189,239,191,189,239,191,189,239,191,189,109,96,239,191,189,14,239,191,189,239,191,189,45,127,239,191,189,218,189,239,191,189,96,50,239,191,189,239,191,189,55,239,191,189,49,95,113,239,191,189,123,239,191,189,85,99,6,55,5,239,191,189,50,30,239,191,189,239,191,189,219,169,239,191,189,239,191,189,126,100,13,239,191,189,78,18,239,191,189,112,69,89,28,239,191,189,64,10,113,50,106,239,191,189,239,191,189,202,185,81,239,191,189,239,191,189,122,19,239,191,189,239,191,189,239,191,189,115,87,18,42,114,42,239,191,189,81,239,191,189,104,63,239,191,189,30,239,191,189,27,75,239,191,189,40,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,12,44,118,24,22,58,106,30,239,191,189,239,191,189,2,9,239,191,189,239,191,189,223,163,239,191,189,16,124,239,191,189,239,191,189,51,65,239,191,189,46,239,191,189,127,239,191,189,239,191,189,239,191,189,19,77,90,102,239,191,189,87,56,239,191,189,76,239,191,189,32,29,76,239,191,189,17,239,191,189,239,191,189,72,9,239,191,189,239,191,189,50,72,68,55,239,191,189,52,62,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,53,103,239,191,189,75,239,191,189,239,191,189,239,191,189,126,107,239,191,189,239,191,189,239,191,189,115,239,191,189,54,239,191,189,43,239,191,189,239,191,189,5,21,46,4,35,239,191,189,239,191,189,18,239,191,189,78,108,239,191,189,85,239,191,189,85,103,239,191,189,37,57,110,239,191,189,217,128,18,239,191,189,117,115,239,191,189,68,239,191,189,239,191,189,14,239,191,189,31,57,239,191,189,40,239,191,189,239,191,189,43,108,119,104,122,239,191,189,115,239,191,189,116,239,191,189,42,6,239,191,189,114,58,59,239,191,189,239,191,189,112,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,28,239,191,189,239,191,189,120,94,66,93,98,23,239,191,189,239,191,189,1,239,191,189,115,239,191,189,26,239,191,189,38,239,191,189,124,239,191,189,239,191,189,39,106,122,14,200,188,239,191,189,49,214,135,87,69,239,191,189,239,191,189,97,48,239,191,189,217,151,89,199,132,239,191,189,61,120,239,191,189,16,95,15,33,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,79,239,191,189,90,239,191,189,239,191,189,43,239,191,189,27,239,191,189,239,191,189,14,239,191,189,108,239,191,189,10,239,191,189,219,163,239,191,189,60,239,191,189,52,239,191,189,239,191,189,34,239,191,189,5,196,168,239,191,189,61,109,103,239,191,189,63,60,239,191,189,57,89,239,191,189,33,239,191,189,14,1,239,191,189,239,191,189,239,191,189,119,239,191,189,11,23,239,191,189,116,239,191,189,239,191,189,100,239,191,189,14,106,118,239,191,189,86,239,191,189,239,191,189,239,191,189,87,4,17,202,182,220,161,73,239,191,189,26,239,191,189,38,239,191,189,239,191,189,126,50,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,219,141,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,49,67,239,191,189,112,239,191,189,239,191,189,46,118,99,239,191,189,113,239,191,189,62,4,21,239,191,189,67,106,49,90,88,64,94,41,62,239,191,189,40,53,239,191,189,102,239,191,189,79,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,59,109,20,44,24,105,214,156,239,191,189,239,191,189,226,159,136,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,62,34,35,67,239,191,189,94,11,239,191,189,239,191,189,239,191,189,239,191,189,67,20,69,239,191,189,103,82,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,81,39,239,191,189,239,191,189,106,239,191,189,37,123,116,113,47,239,191,189,71,239,191,189,89,239,191,189,51,239,191,189,30,0,239,191,189,239,191,189,239,191,189,220,158,239,191,189,239,191,189,105,33,85,239,191,189,53,37,108,239,191,189,27,2,239,191,189,239,191,189,239,191,189,98,122,120,239,191,189,239,191,189,107,120,239,191,189,239,191,189,239,191,189,112,24,239,191,189,24,17,239,191,189,239,191,189,239,191,189,52,239,191,189,197,188,89,31,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,53,45,239,191,189,41,34,239,191,189,239,191,189,50,62,22,111,239,191,189,228,154,140,13,91,27,239,191,189,86,87,239,191,189,43,239,191,189,33,89,20,234,183,158,210,188,239,191,189,239,191,189,239,191,189,123,122,239,191,189,219,179,1,117,239,191,189,76,239,191,189,58,34,109,239,191,189,127,198,185,239,191,189,80,71,2,239,191,189,8,201,168,13,123,239,191,189,68,239,191,189,239,191,189,28,239,191,189,16,239,191,189,114,239,191,189,239,191,189,239,191,189,85,120,124,88,73,30,239,191,189,125,16,30,12,2,239,191,189,119})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a04964ad6db",
                        container: "containersfcb9d95283b747c2a0444ed270e774e9",
                        blob: "c9e02ecd-9b97-4adc-ae37-4d6c60fe3a27.vhd",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19116 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19116_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19116_s.txt", Encoding.UTF8);

    public Test19116() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "$root",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18641 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18641_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18641_s.txt", Encoding.UTF8);

    public Test18641() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "%",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23089 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23089_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23089_s.txt", Encoding.UTF8);

    public Test23089() : base(recordedRequest, recordedResponse, "accounts8d43a04965b0392")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{51,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,30,107,92,19,12,62,17,2,239,191,189,206,133,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,56,239,191,189,221,164,27,239,191,189,18,239,191,189,239,191,189,116,239,191,189,207,162,18,239,191,189,78,239,191,189,239,191,189,33,239,191,189,18,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,32,30,124,22,28,84,49,239,191,189,28,122,80,239,191,189,1,121,239,191,189,239,191,189,6,43,44,114,239,191,189,112,239,191,189,48,110,109,111,106,239,191,189,239,191,189,39,77,239,191,189,48,113,239,191,189,239,191,189,239,191,189,78,239,191,189,239,191,189,49,239,191,189,53,92,239,191,189,239,191,189,77,83,239,191,189,81,239,191,189,239,191,189,0,239,191,189,114,76,239,191,189,239,191,189,239,191,189,239,191,189,42,59,83,2,34,239,191,189,7,239,191,189,33,120,221,146,12,62,38,239,191,189,18,113,239,191,189,28,107,239,191,189,213,172,33,48,239,191,189,45,239,191,189,61,4,105,24,239,191,189,239,191,189,50,51,58,43,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,113,76,82,239,191,189,61,14,239,191,189,239,191,189,80,125,85,0,239,191,189,70,239,191,189,239,191,189,239,191,189,116,115,121,98,73,239,191,189,239,191,189,239,191,189,69,70,239,191,189,239,191,189,23,239,191,189,239,191,189,50,60,80,239,191,189,88,239,191,189,239,191,189,91,109,234,165,181,239,191,189,57,239,191,189,74,239,191,189,239,191,189,239,191,189,100,80,117,239,191,189,40,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,57,239,191,189,108,239,191,189,99,239,191,189,209,162,61,239,191,189,23,11,119,239,191,189,62,233,158,186,239,191,189,239,191,189,12,39,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,206,147,112,239,191,189,108,52,113,107,39,84,239,191,189,15,239,191,189,239,191,189,56,105,26,239,191,189,25,239,191,189,30,61,239,191,189,9,239,191,189,18,239,191,189,239,191,189,17,239,191,189,239,191,189,72,239,191,189,82,223,131,239,191,189,239,191,189,55,10,120,50,239,191,189,239,191,189,9,239,191,189,116,239,191,189,95,82,239,191,189,239,191,189,110,43,203,144,239,191,189,102,239,191,189,90,75,239,191,189,90,109,239,191,189,239,191,189,57,96,215,181,206,139,77,15,41,239,191,189,36,239,191,189,239,191,189,239,191,189,8,115,239,191,189,41,43,217,169,239,191,189,78,239,191,189,53,239,191,189,220,190,239,191,189,239,191,189,37,33,105,239,191,189,20,8,239,191,189,239,191,189,4,85,95,2,239,191,189,239,191,189,102,239,191,189,239,191,189,67,41,239,191,189,67,90,199,143,216,137,239,191,189,239,191,189,239,191,189,112,81,79,20,239,191,189,3,239,191,189,53,239,191,189,239,191,189,239,191,189,57,37,239,191,189,122,239,191,189,239,191,189,104,24,207,159,32,122,239,191,189,59,239,191,189,198,162,51,59,127,239,191,189,239,191,189,18,239,191,189,13,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,50,68,96,98,30,239,191,189,76,239,191,189,48,32,239,191,189,239,191,189,82,79,215,158,216,163,61,239,191,189,1,78,239,191,189,23,77,19,239,191,189,109,239,191,189,239,191,189,7,121,0,239,191,189,239,191,189,54,79,239,191,189,239,191,189,65,85,75,10,94,239,191,189,35,239,191,189,239,191,189,54,20,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,73,21,11,239,191,189,239,191,189,239,191,189,84,25,103,239,191,189,121,97,239,191,189,78,0,239,191,189,239,191,189,239,191,189,239,191,189,67,33,70,41,82,93,54,239,191,189,239,191,189,73,22,37,19,10,113,6,194,183,239,191,189,117,88,239,191,189,69,105,91,70,50,239,191,189,239,191,189,239,191,189,239,191,189,102,59,14,239,191,189,239,191,189,3,239,191,189,53,239,191,189,18,107,239,191,189,80,239,191,189,101,86,47,72,61,40,77,41,93,239,191,189,239,191,189,239,191,189,239,191,189,12,42,239,191,189,26,239,191,189,107,239,191,189,239,191,189,4,106,239,191,189,3,239,191,189,239,191,189,121,239,191,189,69,74,117,25,239,191,189,239,191,189,239,191,189,101,125,239,191,189,239,191,189,25,17,239,191,189,18,239,191,189,38,31,239,191,189,10,6,239,191,189,116,99,239,191,189,239,191,189,96,239,191,189,96,68,103,41,239,191,189,92,24,66,102,239,191,189,20,43,78,60,239,191,189,66,239,191,189,239,191,189,239,191,189,83,87,8,220,182,82,111,239,191,189,76,239,191,189,17,122,1,127,239,191,189,5,57,76,239,191,189,69,239,191,189,239,191,189,239,191,189,96,100,10,239,191,189,239,191,189,239,191,189,92,50,239,191,189,8,239,191,189,13,239,191,189,87,104,239,191,189,239,191,189,100,239,191,189,239,191,189,108,84,72,18,239,191,189,95,55,99,239,191,189,41,81,36,239,191,189,239,191,189,239,191,189,119,239,191,189,210,179,239,191,189,239,191,189,99,114,35,114,89,239,191,189,208,155,239,191,189,239,191,189,31,239,191,189,99,11,28,239,191,189,239,191,189,91,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,82,13,239,191,189,239,191,189,5,3,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,5,239,191,189,239,191,189,90,115,112,5,239,191,189,35,239,191,189,91,239,191,189,239,191,189,87,106,239,191,189,104,223,188,105,31,75,239,191,189,223,150,239,191,189,49,239,191,189,239,191,189,26,70,8,239,191,189,86,8,103,239,191,189,17,69,239,191,189,101,239,191,189,18,239,191,189,80,6,88,47,239,191,189,96,17,26,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,127,239,191,189,239,191,189,239,191,189,21,239,191,189,97,1,97,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,97,239,191,189,74,69,239,191,189,239,191,189,86,12,59,9,43,239,191,189,239,191,189,239,191,189,124,239,191,189,30,80,6,52,106,97,239,191,189,127,239,191,189,239,191,189,86,239,191,189,85,239,191,189,66,239,191,189,239,191,189,95,87,239,191,189,103,126,21,102,40,239,191,189,76,120,239,191,189,40,239,191,189,100,239,191,189,239,191,189,103,126,112,239,191,189,80,239,191,189,91,203,160,7,239,191,189,239,191,189,239,191,189,97,199,136,239,191,189,34,69,239,191,189,77,239,191,189,59,239,191,189,11,123,21,24,239,191,189,124,239,191,189,239,191,189,239,191,189,122,114,239,191,189,51,79,15,87,68,239,191,189,239,191,189,14,239,191,189,55,239,191,189,97,118,239,191,189,31,8,239,191,189,239,191,189,67,239,191,189,116,239,191,189,239,191,189,67,53,36,66,239,191,189,239,191,189,61,239,191,189,2,85,98,18,237,152,176,239,191,189,45,239,191,189,108,68,41,103,52,6,6,239,191,189,239,191,189,236,171,129,98,239,191,189,58,108,0,102,239,191,189,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,12,19,239,191,189,49,111,239,191,189,4,21,22,8,239,191,189,239,191,189,239,191,189,1,29,60,239,191,189,239,191,189,81,66,239,191,189,239,191,189,216,128,239,191,189,74,9,97,100,109,74,44,239,191,189,40,239,191,189,91,239,191,189,112,15,239,191,189,107,75,211,169,239,191,189,36,101,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,44,24,239,191,189,210,176,214,146,239,191,189,239,191,189,239,191,189,239,191,189,70,239,191,189,34})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a04965b0392",
                        container: "containers4bd13177c161449fa05677db194e06c8",
                        blob: "f77aaf5d-5bfb-4378-9dba-b1e59894ebcb.vhd",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18933 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18933_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18933_s.txt", Encoding.UTF8);

    public Test18933() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{27,239,191,189,32,82,85,88,13,124,239,191,189,115,239,191,189,73,9,239,191,189,239,191,189,44,81,239,191,189,239,191,189,87,97,44,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,106,71,91,239,191,189,69,38,239,191,189,239,191,189,27,54,239,191,189,69,239,191,189,239,191,189,78,239,191,189,84,20,239,191,189,221,150,13,55,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,104,64,18,68,23,239,191,189,3,239,191,189,3,239,191,189,108,239,191,189,239,191,189,102,28,81,239,191,189,50,91,79,239,191,189,39,239,191,189,239,191,189,77,239,191,189,239,191,189,70,6,87,7,239,191,189,105,206,176,50,239,191,189,239,191,189,239,191,189,239,191,189,113,110,239,191,189,86,41,89,112,59,196,156,81,108,239,191,189,98,239,191,189,24,239,191,189,239,191,189,239,191,189,27,95,239,191,189,239,191,189,239,191,189,126,239,191,189,74,239,191,189,239,191,189,239,191,189,38,239,191,189,102,239,191,189,109,239,191,189,54,239,191,189,239,191,189,61,104,239,191,189,105,6,239,191,189,66,7,65,239,191,189,239,191,189,3,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,216,163,15,119,239,191,189,239,191,189,239,191,189,42,239,191,189,60,239,191,189,31,239,191,189,79,11,239,191,189,239,191,189,239,191,189,26,53,239,191,189,239,191,189,67,67,239,191,189,30,60,239,191,189,51,67,239,191,189,9,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,227,166,136,239,191,189,239,191,189,6,239,191,189,34,4,93,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,96,239,191,189,239,191,189,103,239,191,189,40,239,191,189,124,106,123,239,191,189,2,239,191,189,40,239,191,189,24,19,115,239,191,189,239,191,189,7,61,239,191,189,239,191,189,25,239,191,189,239,191,189,22,239,191,189,51,80,3,62,104,239,191,189,22,4,123,8,96,239,191,189,95,239,191,189,7,239,191,189,2,107,239,191,189,42,115,239,191,189,69,239,191,189,239,191,189,34,12,44,78,239,191,189,104,239,191,189,239,191,189,55,43,126,196,137,239,191,189,239,191,189,19,239,191,189,107,76,230,167,161,239,191,189,239,191,189,22,114,239,191,189,239,191,189,66,239,191,189,10,22,239,191,189,121,96,10,239,191,189,45,71,239,191,189,2,239,191,189,100,239,191,189,34,62,239,191,189,43,78,96,239,191,189,217,161,239,191,189,70,239,191,189,82,56,55,77,119,239,191,189,239,191,189,239,191,189,32,103,12,16,67,239,191,189,59,105,36,84,239,191,189,13,61,239,191,189,239,191,189,216,145,198,157,239,191,189,48,117,23,51,223,184,239,191,189,239,191,189,239,191,189,239,191,189,13,23,213,187,239,191,189,49,239,191,189,239,191,189,126,37,239,191,189,239,191,189,76,239,191,189,56,68,116,102,94,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,24,239,191,189,115,42,239,191,189,239,191,189,239,191,189,104,34,22,239,191,189,239,191,189,239,191,189,31,239,191,189,43,122,40,91,239,191,189,239,191,189,67,57,239,191,189,61,208,181,119,239,191,189,239,191,189,239,191,189,61,239,191,189,101,239,191,189,21,239,191,189,121,239,191,189,66,239,191,189,82,79,239,191,189,239,191,189,239,191,189,56,239,191,189,117,201,153,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,3,33,126,109,87,78,105,239,191,189,91,239,191,189,51,21,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,124,239,191,189,75,85,239,191,189,239,191,189,18,239,191,189,239,191,189,41,57,239,191,189,118,239,191,189,239,191,189,110,239,191,189,1,77,50,118,127,239,191,189,239,191,189,239,191,189,26,35,42,9,239,191,189,118,239,191,189,239,191,189,5,239,191,189,239,191,189,33})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4b6ccbd70ce54b43862febf1401d5a89",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18578 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18578_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18578_s.txt", Encoding.UTF8);

    public Test18578() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: " ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19152 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19152_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19152_s.txt", Encoding.UTF8);

    public Test19152() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "~",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19316 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19316_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19316_s.txt", Encoding.UTF8);

    public Test19316() : base(recordedRequest, recordedResponse, "accounts8d43a02499eb9db")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{48,239,191,189,23,239,191,189,53,239,191,189,89,239,191,189,239,191,189,6,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,87,239,191,189,49,239,191,189,239,191,189,239,191,189,112,239,191,189,18,239,191,189,112,87,239,191,189,102,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,146,239,191,189,239,191,189,239,191,189,63,239,191,189,121,239,191,189,205,150,239,191,189,116,17,77,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,53,239,191,189,1,239,191,189,76,15,239,191,189,37,239,191,189,239,191,189,239,191,189,1,239,191,189,55,239,191,189,69,36,239,191,189,114,21,119,49,217,178,239,191,189,84,239,191,189,239,191,189,239,191,189,23,239,191,189,43,109,55,92,29,239,191,189,35,239,191,189,239,191,189,116,37,217,175,114,239,191,189,22,26,239,191,189,239,191,189,239,191,189,14,115,38,4,239,191,189,79,16,239,191,189,101,56,105,239,191,189,47,202,148,73,239,191,189,107,239,191,189,1,239,191,189,239,191,189,89,2,11,239,191,189,2,20,196,147,106,7,239,191,189,239,191,189,28,239,191,189,17,87,109,74,19,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,70,59,239,191,189,8,239,191,189,86,239,191,189,25,35,239,191,189,239,191,189,76,239,191,189,51,239,191,189,239,191,189,97,0,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,119,85,29,53,125,87,239,191,189,239,191,189,10,77,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,22,199,182,239,191,189,239,191,189,239,191,189,32,55,68,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,44,239,191,189,91,47,198,181,122,17,97,239,191,189,60,27,239,191,189,74,35,64,101,239,191,189,239,191,189,68,31,77,239,191,189,53,239,191,189,239,191,189,110,239,191,189,11,89,113,239,191,189,2,239,191,189,239,191,189,239,191,189,98,239,191,189,80,17,59,239,191,189,72,239,191,189,239,191,189,27,239,191,189,195,149,111,64,239,191,189,239,191,189,74,37,222,158,38,73,239,191,189,70,239,191,189,5,8,239,191,189,239,191,189,25,28,239,191,189,68,222,151,239,191,189,239,191,189,9,122,5,69,81,239,191,189,100,239,191,189,9,239,191,189,24,239,191,189,239,191,189,239,191,189,119,239,191,189,64,60,239,191,189,122,239,191,189,96,239,191,189,63,24,53,2,111,58,80,239,191,189,239,191,189,58,50,65,239,191,189,239,191,189,88,239,191,189,126,113,239,191,189,239,191,189,105,239,191,189,239,191,189,16,97,239,191,189,239,191,189,4,239,191,189,18,12,239,191,189,239,191,189,239,191,189,44,28,239,191,189,239,191,189,112,239,191,189,11,111,118,107,119,239,191,189,8,239,191,189,103,5,8,47,239,191,189,53,80,68,36,239,191,189,202,146,75,239,191,189,45,63,239,191,189,239,191,189,19,44,239,191,189,239,191,189,123,42,25,94,239,191,189,93,239,191,189,239,191,189,216,158,29,59,13,4,239,191,189,27,239,191,189,117,239,191,189,239,191,189,39,43,239,191,189,109,28,239,191,189,73,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,4,116,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,41,124,124,40,239,191,189,69,239,191,189,239,191,189,80,76,239,191,189,65,239,191,189,20,122,10,217,169,99,239,191,189,239,191,189,118,239,191,189,239,191,189,207,165,0,121,111,56,239,191,189,63,105,78,32,239,191,189,98,239,191,189,87,117,239,191,189,60,239,191,189,201,149,39,239,191,189,4,239,191,189,24,75,239,191,189,39,202,178,239,191,189,239,191,189,89,239,191,189,69,71,31,23,99,108,239,191,189,89,239,191,189,203,168,4,82})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a02499eb9db",
                        container: "$root",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18614 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18614_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18614_s.txt", Encoding.UTF8);

    public Test18614() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "@",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18677 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18677_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18677_s.txt", Encoding.UTF8);

    public Test18677() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: " a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23101 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23101_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23101_s.txt", Encoding.UTF8);

    public Test23101() : base(recordedRequest, recordedResponse, "accounts8d43a04968f5a64")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{46,195,137,239,191,189,118,8,239,191,189,98,239,191,189,93,239,191,189,239,191,189,14,239,191,189,125,216,189,106,239,191,189,15,55,10,92,239,191,189,94,57,23,57,239,191,189,239,191,189,90,239,191,189,2,239,191,189,18,239,191,189,5,72,239,191,189,95,239,191,189,118,239,191,189,239,191,189,239,191,189,96,118,115,5,15,122,18,80,239,191,189,35,102,239,191,189,77,60,239,191,189,110,82,239,191,189,64,17,11,21,107,76,239,191,189,34,2,239,191,189,80,239,191,189,239,191,189,211,154,216,160,239,191,189,239,191,189,95,72,86,16,197,171,239,191,189,239,191,189,11,239,191,189,239,191,189,120,35,11,118,239,191,189,85,97,7,239,191,189,87,88,15,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,100,80,201,128,239,191,189,36,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,22,46,239,191,189,239,191,189,113,239,191,189,93,239,191,189,63,239,191,189,53,41,7,57,239,191,189,110,54,19,95,5,239,191,189,239,191,189,6,239,191,189,80,239,191,189,125,239,191,189,90,17,71,239,191,189,88,65,239,191,189,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,16,10,75,239,191,189,29,239,191,189,6,239,191,189,25,239,191,189,97,239,191,189,110,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,40,46,119,61,239,191,189,239,191,189,88,239,191,189,24,61,239,191,189,58,239,191,189,115,239,191,189,239,191,189,239,191,189,201,190,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,220,183,239,191,189,13,239,191,189,87,101,19,239,191,189,1,111,209,190,239,191,189,55,239,191,189,51,120,18,32,239,191,189,89,54,220,167,112,239,191,189,35,9,239,191,189,25,67,239,191,189,93,15,239,191,189,104,239,191,189,239,191,189,113,88,239,191,189,239,191,189,239,191,189,43,196,161,43,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,101,104,101,66,10,44,239,191,189,43,49,97,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,30,112,63,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,3,239,191,189,91,239,191,189,126,239,191,189,239,191,189,57,103,12,22,212,188,15,239,191,189,239,191,189,64,239,191,189,87,239,191,189,34,239,191,189,71,7,239,191,189,239,191,189,108,5,239,191,189,239,191,189,239,191,189,29,13,41,83,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,91,66,239,191,189,239,191,189,74,239,191,189,48,239,191,189,80,239,191,189,50,239,191,189,101,239,191,189,19,201,189,239,191,189,121,239,191,189,239,191,189,239,191,189,108,239,191,189,198,147,239,191,189,47,51,93,239,191,189,239,191,189,239,191,189,199,154,239,191,189,86,118,58,60,84,49,8,108,80,239,191,189,71,239,191,189,239,191,189,239,191,189,36,36,71,23,239,191,189,115,38,239,191,189,239,191,189,32,115,239,191,189,29,50,239,191,189,54,239,191,189,25,29,95,115,71,239,191,189,60,87,239,191,189,239,191,189,0,239,191,189,31,75,33,115,239,191,189,56,239,191,189,78,239,191,189,35,38,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,19,239,191,189,239,191,189,25,21,46,125,93,35,221,156,11,239,191,189,30,239,191,189,38,15,100,239,191,189,82,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,110,116,239,191,189,114,239,191,189,25,239,191,189,9,29,239,191,189,21,121,91,239,191,189,67,239,191,189,4,121,102,239,191,189,239,191,189,67,117,196,147,239,191,189,239,191,189,50,63,55,239,191,189,239,191,189,78,239,191,189,45,239,191,189,59,239,191,189,239,191,189,12,239,191,189,90,239,191,189,239,191,189,239,191,189,6,239,191,189,18,239,191,189,239,191,189,239,191,189,126,107,70,239,191,189,43,239,191,189,239,191,189,239,191,189,18,49,91,239,191,189,239,191,189,30,239,191,189,43,210,189,239,191,189,239,191,189,88,239,191,189,89,12,51,239,191,189,239,191,189,203,141,62,213,142,101,69,7,31,7,239,191,189,2,239,191,189,123,205,170,239,191,189,37,239,191,189,210,143,109,239,191,189,239,191,189,84,239,191,189,25,239,191,189,239,191,189,17,57,239,191,189,239,191,189,55,239,191,189,81,239,191,189,91,239,191,189,100,239,191,189,22,107,35,17,239,191,189,21,69,239,191,189,16,126,231,162,184,55,94,239,191,189,114,239,191,189,239,191,189,75,239,191,189,68,13,239,191,189,46,98,96,239,191,189,124,239,191,189,127,88,44,50,120,1,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,52,25,239,191,189,239,191,189,94,86,239,191,189,88,239,191,189,239,191,189,15,58,239,191,189,239,191,189,118,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,121,123,60,123,97,239,191,189,239,191,189,116,239,191,189,36,18,62,239,191,189,239,191,189,96,239,191,189,64,45,21,239,191,189,120,239,191,189,239,191,189,122,96,64,57,239,191,189,239,191,189,239,191,189,125,239,191,189,84,63,239,191,189,218,166,239,191,189,82,239,191,189,49,239,191,189,89,106,99,72,24,239,191,189,239,191,189,225,166,137,98,239,191,189,26,239,191,189,239,191,189,27,32,239,191,189,58,203,177,239,191,189,113,239,191,189,102,239,191,189,239,191,189,48,99,239,191,189,70,204,178,58,89,23,24,40,239,191,189,7,239,191,189,76,239,191,189,62,239,191,189,37,0,35,239,191,189,239,191,189,50,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,21,239,191,189,67,239,191,189,27,239,191,189,103,239,191,189,94,239,191,189,3,239,191,189,53,51,4,100,239,191,189,50,55,65,239,191,189,97,76,239,191,189,239,191,189,46,213,185,239,191,189,239,191,189,37,239,191,189,119,239,191,189,239,191,189,22,9,68,34,222,190,86,239,191,189,57,239,191,189,58,239,191,189,239,191,189,239,191,189,68,17,239,191,189,38,111,61,239,191,189,100,239,191,189,6,239,191,189,239,191,189,239,191,189,23,200,133,73,239,191,189,239,191,189,66,239,191,189,90,110,16,89,239,191,189,103,239,191,189,19,239,191,189,110,76,18,239,191,189,77,239,191,189,102,239,191,189,7,71,61,239,191,189,104,62,53,239,191,189,16,62,239,191,189,239,191,189,116,239,191,189,49,239,191,189,7,233,162,174,239,191,189,239,191,189,239,191,189,23,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,31,239,191,189,120,104,4,60,239,191,189,48,239,191,189,122,114,40,239,191,189,96,111,239,191,189,26,239,191,189,239,191,189,99,239,191,189,239,191,189,26,113,37,95,239,191,189,239,191,189,239,191,189,239,191,189,38,116,239,191,189,239,191,189,239,191,189,65,239,191,189,124,239,191,189,239,191,189,114,239,191,189,83,122,239,191,189,120,239,191,189,78,239,191,189,92,45,102,99,103,239,191,189,93,239,191,189,239,191,189,239,191,189,71,239,191,189,70,239,191,189,75,239,191,189,239,191,189,204,176,114,81,20,239,191,189,107,110,239,191,189,114,239,191,189,196,172,110,92,239,191,189,12,239,191,189,239,191,189,13,85,44,239,191,189,239,191,189,209,156,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,36,239,191,189,112,53,72,59,239,191,189,239,191,189,126,239,191,189,51,50,110,239,191,189,239,191,189,58,239,191,189,82,239,191,189,239,191,189,239,191,189,226,143,128,119})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a04968f5a64",
                        container: "containers130d8adf33a84640874dfea54aa0cb45",
                        blob: "4adeca20-f090-400a-b960-534c150a01cd.vhd",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-1023",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18551 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18551_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18551_s.txt", Encoding.UTF8);

    public Test18551() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "$root",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18704 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18704_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18704_s.txt", Encoding.UTF8);

    public Test18704() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: " a ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19570 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19570_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19570_s.txt", Encoding.UTF8);

    public Test19570() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{77,239,191,189,110,93,239,191,189,103,239,191,189,24,12,239,191,189,104,49,96,31,55,16,15,239,191,189,46,239,191,189,38,239,191,189,239,191,189,118,239,191,189,62,239,191,189,239,191,189,86,57,85,19,37,12,111,41,88,67,239,191,189,30,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,212,180,239,191,189,239,191,189,239,191,189,121,0,239,191,189,239,191,189,19,239,191,189,108,239,191,189,239,191,189,17,239,191,189,239,191,189,73,84,11,84,239,191,189,14,239,191,189,239,191,189,34,15,53,48,18,239,191,189,77,61,100,239,191,189,239,191,189,203,167,239,191,189,239,191,189,36,120,239,191,189,21,97,239,191,189,17,72,239,191,189,51,239,191,189,239,191,189,212,167,239,191,189,35,239,191,189,239,191,189,198,151,106,239,191,189,99,239,191,189,71,239,191,189,47,41,25,44,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,17,198,154,239,191,189,80,37,121,239,191,189,222,153,62,239,191,189,239,191,189,2,47,88,21,52,206,183,239,191,189,239,191,189,47,110,60,239,191,189,239,191,189,26,239,191,189,239,191,189,60,239,191,189,124,209,134,239,191,189,49,101,67,33,48,239,191,189,75,127,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,198,179,41,239,191,189,77,41,239,191,189,43,239,191,189,239,191,189,46,95,239,191,189,52,93,239,191,189,124,16,124,239,191,189,39,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,62,75,74,239,191,189,50,227,136,132,221,131,92,12,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,34,93,239,191,189,57,48,239,191,189,102,23,239,191,189,124,23,65,239,191,189,232,170,130,111,239,191,189,208,162,81,239,191,189,11,239,191,189,239,191,189,31,127,33,10,105,239,191,189,239,191,189,71,239,191,189,239,191,189,35,239,191,189,17,26,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,66,239,191,189,35,91,34,24,16,0,35,239,191,189,77,82,239,191,189,17,127,69,12,87,239,191,189,95,239,191,189,7,91,239,191,189,239,191,189,93,239,191,189,64,214,132,12,3,239,191,189,74,79,91,239,191,189,239,191,189,81,239,191,189,239,191,189,35,239,191,189,63,239,191,189,239,191,189,100,9,16,239,191,189,239,191,189,111,67,102,72,239,191,189,239,191,189,239,191,189,93,239,191,189,70,239,191,189,76,64,65,78,8,98,239,191,189,35,127,35,6,26,239,191,189,239,191,189,71,28,239,191,189,239,191,189,239,191,189,239,191,189,47,80,197,157,239,191,189,114,1,239,191,189,239,191,189,239,191,189,239,191,189,98,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,1,71,239,191,189,6,239,191,189,105,41,239,191,189,114,239,191,189,239,191,189,30,116,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,97,56,239,191,189,239,191,189,239,191,189,111,239,191,189,239,191,189,239,191,189,239,191,189,30,51,20,239,191,189,120,67,73,42,52,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,23,239,191,189,239,191,189,103,239,191,189,3,90,239,191,189,62,239,191,189,14,91,119,3,239,191,189,112,13,115,239,191,189,239,191,189,239,191,189,95,239,191,189,14,76,239,191,189,80,111,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,35,239,191,189,239,191,189,62,239,191,189,86,105,239,191,189,239,191,189,39,58,38,239,191,189,27,80,87,239,191,189,11,239,191,189,27,41,239,191,189,239,191,189,239,191,189,93,239,191,189,221,176,239,191,189,239,191,189,95,239,191,189,239,191,189,80,239,191,189,202,173,239,191,189,115,239,191,189,100,239,191,189,41,52,239,191,189,57,239,191,189,239,191,189,83,239,191,189,201,143,15,46,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse70e0964710a4b7e98f006177011f4cb",
                        blob: Encoding.UTF8.GetString(new byte[]{224,174,181,224,174,191,224,174,169,224,175,141,224,174,159,224,175,139,224,174,184,224,175,141}),
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19188 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19188_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19188_s.txt", Encoding.UTF8);

    public Test19188() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "%",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19125 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19125_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19125_s.txt", Encoding.UTF8);

    public Test19125() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "-",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21793 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21793_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21793_s.txt", Encoding.UTF8);

    public Test21793() : base(recordedRequest, recordedResponse, "accounts8d43a03fdc9150e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,47,239,191,189,211,190,239,191,189,239,191,189,75,90,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,84,70,239,191,189,87,239,191,189,69,49,81,73,53,125,41,239,191,189,43,239,191,189,239,191,189,47,239,191,189,195,166,124,239,191,189,220,169,239,191,189,24,45,239,191,189,46,70,239,191,189,239,191,189,239,191,189,239,191,189,61,39,239,191,189,123,239,191,189,239,191,189,98,239,191,189,65,90,10,239,191,189,46,239,191,189,239,191,189,100,9,58,3,215,151,207,173,239,191,189,44,3,239,191,189,26,239,191,189,239,191,189,124,109,1,238,135,148,127,14,46,239,191,189,26,17,239,191,189,79,239,191,189,101,239,191,189,239,191,189,64,239,191,189,122,114,239,191,189,239,191,189,239,191,189,88,68,239,191,189,78,239,191,189,76,71,239,191,189,72,222,157,239,191,189,64,112,88,239,191,189,239,191,189,11,59,239,191,189,239,191,189,52,94,7,239,191,189,5,239,191,189,239,191,189,14,126,9,239,191,189,65,71,46,80,239,191,189,239,191,189,239,191,189,124,239,191,189,98,81,113,36,239,191,189,239,191,189,88,239,191,189,239,191,189,127,103,71,2,32,35,239,191,189,223,136,239,191,189,239,191,189,109,239,191,189,239,191,189,212,179,111,239,191,189,65,8,76,59,110,239,191,189,239,191,189,35,239,191,189,239,191,189,239,191,189,17,71,112,239,191,189,18,239,191,189,239,191,189,239,191,189,63,39,10,106,239,191,189,55,18,239,191,189,101,194,136,239,191,189,112,68,239,191,189,23,223,175,67,239,191,189,239,191,189,23,239,191,189,65,239,191,189,239,191,189,118,67,18,123,239,191,189,239,191,189,50,17,48,239,191,189,54,239,191,189,239,191,189,4,91,198,133,96,90,80,114,205,131,89,18,99,239,191,189,239,191,189,25,39,42,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,106,95,20,239,191,189,239,191,189,65,28,63,239,191,189,194,146,239,191,189,230,168,136,239,191,189,239,191,189,239,191,189,105,42,14,239,191,189,239,191,189,8,239,191,189,108,44,239,191,189,67,239,191,189,223,155,44,239,191,189,239,191,189,19,239,191,189,239,191,189,120,239,191,189,70,123,12,86,239,191,189,239,191,189,239,191,189,239,191,189,53,23,14,45,239,191,189,10,239,191,189,239,191,189,102,11,74,115,21,71,239,191,189,15,239,191,189,239,191,189,112,73,239,191,189,116,239,191,189,47,64,239,191,189,239,191,189,123,239,191,189,115,25,239,191,189,99,239,191,189,44,127,239,191,189,26,33,239,191,189,3,239,191,189,239,191,189,69,4,239,191,189,239,191,189,127,239,191,189,116,239,191,189,29,239,191,189,5,239,191,189,38,239,191,189,239,191,189,239,191,189,38,28,102,197,152,48,234,177,168,207,144,48,239,191,189,78,91,239,191,189,239,191,189,68,239,191,189,60,239,191,189,239,191,189,19,126,45,239,191,189,239,191,189,239,191,189,94,239,191,189,6,239,191,189,239,191,189,51,239,191,189,209,156,239,191,189,20,20,25,8,86,239,191,189,108,67,239,191,189,239,191,189,62,68,239,191,189,239,191,189,239,191,189,9,64,8,239,191,189,239,191,189,52,239,191,189,83,239,191,189,239,191,189,239,191,189,107,239,191,189,82,239,191,189,35,239,191,189,48,239,191,189,34,213,142,98,18,239,191,189,18,44,239,191,189,25,239,191,189,36,239,191,189,21,41,239,191,189,201,181,80,80,239,191,189,30,239,191,189,239,191,189,239,191,189,124,239,191,189,26,125,239,191,189,33,25,239,191,189,30,239,191,189,51,239,191,189,239,191,189,213,173,239,191,189,7,74,57,239,191,189,67,85,126,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,3,32,3,123,239,191,189,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,9})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fdc9150e",
                        container: "containersca9b89a2efd54ef081ad3b7688b059c4",
                        blob: "PageBlob63cac6407c344ff6aaaf1dadc32fec32",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18942 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18942_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18942_s.txt", Encoding.UTF8);

    public Test18942() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{27,239,191,189,32,82,85,88,13,124,239,191,189,115,239,191,189,73,9,239,191,189,239,191,189,44,81,239,191,189,239,191,189,87,97,44,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,106,71,91,239,191,189,69,38,239,191,189,239,191,189,27,54,239,191,189,69,239,191,189,239,191,189,78,239,191,189,84,20,239,191,189,221,150,13,55,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,104,64,18,68,23,239,191,189,3,239,191,189,3,239,191,189,108,239,191,189,239,191,189,102,28,81,239,191,189,50,91,79,239,191,189,39,239,191,189,239,191,189,77,239,191,189,239,191,189,70,6,87,7,239,191,189,105,206,176,50,239,191,189,239,191,189,239,191,189,239,191,189,113,110,239,191,189,86,41,89,112,59,196,156,81,108,239,191,189,98,239,191,189,24,239,191,189,239,191,189,239,191,189,27,95,239,191,189,239,191,189,239,191,189,126,239,191,189,74,239,191,189,239,191,189,239,191,189,38,239,191,189,102,239,191,189,109,239,191,189,54,239,191,189,239,191,189,61,104,239,191,189,105,6,239,191,189,66,7,65,239,191,189,239,191,189,3,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,216,163,15,119,239,191,189,239,191,189,239,191,189,42,239,191,189,60,239,191,189,31,239,191,189,79,11,239,191,189,239,191,189,239,191,189,26,53,239,191,189,239,191,189,67,67,239,191,189,30,60,239,191,189,51,67,239,191,189,9,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,227,166,136,239,191,189,239,191,189,6,239,191,189,34,4,93,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,96,239,191,189,239,191,189,103,239,191,189,40,239,191,189,124,106,123,239,191,189,2,239,191,189,40,239,191,189,24,19,115,239,191,189,239,191,189,7,61,239,191,189,239,191,189,25,239,191,189,239,191,189,22,239,191,189,51,80,3,62,104,239,191,189,22,4,123,8,96,239,191,189,95,239,191,189,7,239,191,189,2,107,239,191,189,42,115,239,191,189,69,239,191,189,239,191,189,34,12,44,78,239,191,189,104,239,191,189,239,191,189,55,43,126,196,137,239,191,189,239,191,189,19,239,191,189,107,76,230,167,161,239,191,189,239,191,189,22,114,239,191,189,239,191,189,66,239,191,189,10,22,239,191,189,121,96,10,239,191,189,45,71,239,191,189,2,239,191,189,100,239,191,189,34,62,239,191,189,43,78,96,239,191,189,217,161,239,191,189,70,239,191,189,82,56,55,77,119,239,191,189,239,191,189,239,191,189,32,103,12,16,67,239,191,189,59,105,36,84,239,191,189,13,61,239,191,189,239,191,189,216,145,198,157,239,191,189,48,117,23,51,223,184,239,191,189,239,191,189,239,191,189,239,191,189,13,23,213,187,239,191,189,49,239,191,189,239,191,189,126,37,239,191,189,239,191,189,76,239,191,189,56,68,116,102,94,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,24,239,191,189,115,42,239,191,189,239,191,189,239,191,189,104,34,22,239,191,189,239,191,189,239,191,189,31,239,191,189,43,122,40,91,239,191,189,239,191,189,67,57,239,191,189,61,208,181,119,239,191,189,239,191,189,239,191,189,61,239,191,189,101,239,191,189,21,239,191,189,121,239,191,189,66,239,191,189,82,79,239,191,189,239,191,189,239,191,189,56,239,191,189,117,201,153,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,3,33,126,109,87,78,105,239,191,189,91,239,191,189,51,21,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,124,239,191,189,75,85,239,191,189,239,191,189,18,239,191,189,239,191,189,41,57,239,191,189,118,239,191,189,239,191,189,110,239,191,189,1,77,50,118,127,239,191,189,239,191,189,239,191,189,26,35,42,9,239,191,189,118,239,191,189,239,191,189,5,239,191,189,239,191,189,33})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4b6ccbd70ce54b43862febf1401d5a89",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19161 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19161_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19161_s.txt", Encoding.UTF8);

    public Test19161() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "*",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18650 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18650_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18650_s.txt", Encoding.UTF8);

    public Test18650() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,48,84,41,47,71,24,239,191,189,239,191,189,5,66,239,191,189,76,213,157,239,191,189,2,239,191,189,199,185,9,66,73,239,191,189,71,239,191,189,239,191,189,239,191,189,88,35,56,239,191,189,79,71,93,29,239,191,189,239,191,189,105,239,191,189,239,191,189,198,186,116,46,239,191,189,41,2,59,239,191,189,124,104,57,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,97,42,93,239,191,189,239,191,189,114,119,5,120,239,191,189,80,91,66,30,239,191,189,67,239,191,189,239,191,189,89,83,239,191,189,239,191,189,239,191,189,124,239,191,189,207,150,239,191,189,239,191,189,111,17,1,239,191,189,239,191,189,71,239,191,189,104,27,239,191,189,239,191,189,124,36,239,191,189,239,191,189,239,191,189,33,37,27,239,191,189,124,101,54,71,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,9,110,78,239,191,189,107,239,191,189,49,239,191,189,108,45,239,191,189,239,191,189,103,42,239,191,189,239,191,189,123,239,191,189,12,9,219,186,40,208,154,16,239,191,189,35,239,191,189,225,161,167,127,76,60,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,82,96,15,112,0,239,191,189,239,191,189,117,239,191,189,60,32,82,73,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,2,239,191,189,54,41,106,15,239,191,189,15,107,48,23,65,239,191,189,239,191,189,87,239,191,189,239,191,189,55,127,239,191,189,239,191,189,14,31,8,127,78,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,58,113,98,41,239,191,189,5,239,191,189,239,191,189,239,191,189,9,106,36,223,186,239,191,189,43,59,239,191,189,239,191,189,43,239,191,189,13,239,191,189,239,191,189,45,239,191,189,28,95,75,33,239,191,189,81,63,239,191,189,93,62,239,191,189,86,239,191,189,49,239,191,189,239,191,189,34,4,239,191,189,227,160,148,23,91,239,191,189,239,191,189,87,239,191,189,239,191,189,45,125,239,191,189,239,191,189,60,239,191,189,117,99,38,25,239,191,189,239,191,189,92,90,53,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,27,74,9,239,191,189,72,239,191,189,110,239,191,189,239,191,189,239,191,189,115,48,239,191,189,99,90,112,71,239,191,189,239,191,189,239,191,189,222,156,239,191,189,239,191,189,56,239,191,189,37,239,191,189,239,191,189,0,16,239,191,189,66,239,191,189,118,239,191,189,50,98,73,239,191,189,239,191,189,39,31,83,118,43,239,191,189,210,137,239,191,189,15,239,191,189,79,44,17,127,76,83,78,239,191,189,203,158,16,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,62,239,191,189,239,191,189,200,182,124,239,191,189,63,12,35,82,69,104,239,191,189,112,96,22,124,239,191,189,101,239,191,189,19,239,191,189,239,191,189,86,23,38,209,178,61,101,239,191,189,239,191,189,72,41,239,191,189,82,99,90,2,239,191,189,20,66,103,120,88,239,191,189,8,17,99,215,182,239,191,189,66,95,239,191,189,239,191,189,67,114,239,191,189,86,217,140,207,190,108,101,31,199,133,13,239,191,189,34,239,191,189,239,191,189,239,191,189,239,191,189,87,65,239,191,189,111,29,239,191,189,78,102,239,191,189,239,191,189,239,191,189,86,239,191,189,15,239,191,189,199,135,114,239,191,189,12,239,191,189,64,239,191,189,85,36,239,191,189,1,125,239,191,189,1,239,191,189,1,116,47,56,25,62,104,15,124,239,191,189,55,112,239,191,189,239,191,189,239,191,189,103,72,239,191,189,66,94,239,191,189,53,10})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8bf0ade78d5c44debb2207edecfd6fd7",
                        blob: "^",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21811 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21811_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21811_s.txt", Encoding.UTF8);

    public Test21811() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{202,132,75,124,27,239,191,189,239,191,189,239,191,189,53,34,26,223,172,239,191,189,75,239,191,189,239,191,189,6,239,191,189,49,87,239,191,189,239,191,189,2,40,239,191,189,96,52,239,191,189,41,87,239,191,189,7,239,191,189,77,239,191,189,60,239,191,189,90,239,191,189,122,126,115,20,38,239,191,189,82,80,42,53,239,191,189,10,239,191,189,239,191,189,80,40,239,191,189,72,83,239,191,189,70,76,239,191,189,11,239,191,189,74,239,191,189,31,111,239,191,189,122,239,191,189,239,191,189,39,239,191,189,239,191,189,46,239,191,189,219,160,67,16,10,239,191,189,75,76,239,191,189,57,59,37,37,239,191,189,212,131,45,239,191,189,104,72,219,176,51,239,191,189,239,191,189,85,94,239,191,189,23,120,239,191,189,239,191,189,108,239,191,189,66,53,66,54,239,191,189,127,114,239,191,189,239,191,189,74,102,239,191,189,239,191,189,216,164,239,191,189,51,197,142,0,239,191,189,16,47,108,239,191,189,239,191,189,239,191,189,7,33,239,191,189,43,99,239,191,189,239,191,189,77,239,191,189,110,239,191,189,239,191,189,104,17,79,239,191,189,55,51,113,239,191,189,44,239,191,189,68,51,51,108,239,191,189,50,6,239,191,189,76,200,145,107,124,32,30,2,0,239,191,189,71,86,239,191,189,239,191,189,28,196,151,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,104,219,146,126,239,191,189,48,26,47,94,70,21,33,239,191,189,56,239,191,189,239,191,189,47,120,52,51,127,62,239,191,189,239,191,189,126,23,110,239,191,189,239,191,189,113,109,239,191,189,239,191,189,66,40,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,59,239,191,189,239,191,189,74,239,191,189,32,0,239,191,189,6,42,6,239,191,189,0,239,191,189,239,191,189,69,76,239,191,189,239,191,189,116,239,191,189,239,191,189,16,109,239,191,189,239,191,189,81,98,78,239,191,189,86,239,191,189,105,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,77,239,191,189,19,60,239,191,189,239,191,189,73,239,191,189,69,15,239,191,189,118,239,191,189,54,19,25,239,191,189,124,44,239,191,189,2,206,157,52,73,239,191,189,64,54,38,5,239,191,189,11,239,191,189,12,239,191,189,239,191,189,119,97,18,239,191,189,96,239,191,189,12,83,239,191,189,70,90,239,191,189,86,239,191,189,61,101,14,239,191,189,239,191,189,126,2,239,191,189,239,191,189,41,73,19,122,63,47,239,191,189,239,191,189,239,191,189,62,239,191,189,59,106,71,63,20,239,191,189,74,239,191,189,3,121,239,191,189,239,191,189,101,239,191,189,122,239,191,189,239,191,189,45,13,209,151,111,239,191,189,77,115,239,191,189,36,26,239,191,189,107,239,191,189,24,30,2,239,191,189,198,184,201,188,239,191,189,89,238,176,151,50,21,119,239,191,189,239,191,189,8,239,191,189,239,191,189,108,10,204,129,239,191,189,239,191,189,239,191,189,38,107,239,191,189,14,239,191,189,239,191,189,71,239,191,189,126,55,2,100,81,25,61,239,191,189,55,3,26,93,85,111,239,191,189,123,239,191,189,70,239,191,189,19,53,121,26,239,191,189,39,199,146,239,191,189,110,239,191,189,239,191,189,107,206,178,54,95,5,93,76,83,239,191,189,75,74,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,5,100,239,191,189,28,51,239,191,189,4,28,60,60,239,191,189,239,191,189,80,18,239,191,189,57,239,191,189,239,191,189,239,191,189,56,35,117,76,239,191,189,87,70,239,191,189,47,113,239,191,189,239,191,189,39,239,191,189,5,104,61,67,78,239,191,189,34,49,66,239,191,189,32,239,191,189,239,191,189,124,57,239,191,189,111,41,239,191,189,239,191,189,125,196,143,23,239,191,189,239,191,189,239,191,189,212,171,78,89,98,239,191,189,74,239,191,189,88,239,191,189,96,239,191,189,239,191,189,7,239,191,189,44,56,239,191,189,201,176,123,2,239,191,189,47,43,93,65,239,191,189,37,239,191,189,239,191,189,239,191,189,123,93,239,191,189,122,239,191,189,95,33,50,239,191,189,91,121,200,190,122,118,239,191,189,239,191,189,239,191,189,84,58,35,239,191,189,89,239,191,189,239,191,189,41,55,77,9,239,191,189,50,62,239,191,189,72,5,239,191,189,73,50,102,239,191,189,105,239,191,189,32,31,239,191,189,239,191,189,112,239,191,189,239,191,189,94,239,191,189,58,97,79,239,191,189,239,191,189,3,239,191,189,239,191,189,40,239,191,189,41,239,191,189,41,58,239,191,189,118,117,204,154,239,191,189,239,191,189,124,208,140,239,191,189,57,32,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,221,136,239,191,189,127,239,191,189,90,66,201,176,239,191,189,109,98,239,191,189,77,11,239,191,189,58,26,239,191,189,67,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,109,126,239,191,189,49,93,104,239,191,189,239,191,189,38,63,111,239,191,189,239,191,189,59,30,114,67,210,131,239,191,189,75,75,239,191,189,66,239,191,189,9,239,191,189,239,191,189,219,139,239,191,189,239,191,189,15,39,239,191,189,127,239,191,189,239,191,189,67,68,239,191,189,239,191,189,239,191,189,26,67,239,191,189,61,239,191,189,239,191,189,239,191,189,37,85,33,239,191,189,74,239,191,189,102,94,239,191,189,39,75,239,191,189,239,191,189,213,188,19,46,239,191,189,125,239,191,189,239,191,189,122,6,88,98,239,191,189,71,239,191,189,239,191,189,239,191,189,84,239,191,189,2,239,191,189,239,191,189,5,88,52,214,137,67,78,29,239,191,189,239,191,189,70,36,93,47,239,191,189,74,9,26,239,191,189,239,191,189,78,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,36,239,191,189,22,2,13,214,190,239,191,189,88,239,191,189,43,233,176,146,125,35,127,239,191,189,51,70,74,117,6,20,107,60,35,239,191,189,47,0,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,14,91,34,217,140,98,239,191,189,95,239,191,189,101,24,239,191,189,9,239,191,189,9,0,239,191,189,79,239,191,189,239,191,189,239,191,189,2,239,191,189,208,178,16,119,88,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,21,36,117,90,239,191,189,231,179,166,239,191,189,6,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,56,3,239,191,189,53,11,239,191,189,81,38,123,239,191,189,105,109,239,191,189,4,24,239,191,189,71,110,229,139,132,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,48,108,239,191,189,97,71,239,191,189,40,239,191,189,239,191,189,9,95,36,51,62,239,191,189,74,57,2,2,10,239,191,189,93,62,17,31,217,162,61,0,87,239,191,189,52,239,191,189,239,191,189,15,33,8,37,239,191,189,239,191,189,28,206,185,100,239,191,189,103,81,87,201,177,239,191,189,107,239,191,189,239,191,189,103,15,239,191,189,79,39,239,191,189,239,191,189,239,191,189,239,191,189,53,107,42,239,191,189,61,46,239,191,189,66,19,3,39,239,191,189,239,191,189,239,191,189,217,139,239,191,189,239,191,189,74,115,78,239,191,189,50,239,191,189,1,239,191,189,0,239,191,189,239,191,189,239,191,189,71,84,94,239,191,189,239,191,189,92,239,191,189,19,41,239,191,189,110,239,191,189,104,102,239,191,189,110,107,239,191,189,239,191,189,112,48,59,74,239,191,189,239,191,189,57,239,191,189,127,239,191,189,45,70,239,191,189,21,239,191,189,210,143,22,30,239,191,189,47,239,191,189,116,33,239,191,189,239,191,189,33,239,191,189,65,76,32,239,191,189,239,191,189,239,191,189,239,191,189,23,24,19,70,1,239,191,189,239,191,189,103,101,239,191,189,239,191,189,239,191,189,123,239,191,189,239,191,189,36,87,76,210,148,239,191,189,239,191,189,26,197,188,97,112,65,50,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,29,33,86,104,14,37,239,191,189,239,191,189,239,191,189,28,239,191,189,39,239,191,189,71,15,96,239,191,189,90,239,191,189,77,239,191,189,239,191,189,79,239,191,189,53,239,191,189,98,68,80,239,191,189,8,217,168,239,191,189,47,239,191,189,62,54,239,191,189,239,191,189,239,191,189,194,186,83,239,191,189,10,239,191,189,80,84,51,239,191,189,73,239,191,189,46,70,125,210,190,51,55,194,150,239,191,189,239,191,189,20,239,191,189,127,66,24,95,34,239,191,189,239,191,189,9,99,239,191,189,239,191,189,239,191,189,3,42,18,17,239,191,189,29,90,239,191,189,29,122,64,239,191,189,239,191,189,127,3,118,49,84,25,6,63,239,191,189,239,191,189,239,191,189,56,239,191,189,16,225,156,177,239,191,189,127,239,191,189,214,186,9,36,239,191,189,239,191,189,239,191,189,89,85,239,191,189,4,1,103,239,191,189,239,191,189,239,191,189,54,239,191,189,14,239,191,189,223,188,67,239,191,189,239,191,189,239,191,189,239,191,189,12,121,34,108,239,191,189,239,191,189,25,7,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,116,109,44,101,218,188,210,184,26,119,106,239,191,189,214,171,127,239,191,189,50,73,85,65,77,122,222,186,239,191,189,86,96,32,49,239,191,189,57,23,15,8,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,77,239,191,189,239,191,189,239,191,189,2,13,205,182,239,191,189,49,62,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,91,239,191,189,239,191,189,71,62,82,239,191,189,239,191,189,37,239,191,189,118,239,191,189,98,83,236,141,145,43,38,239,191,189,93,19,100,28,121,239,191,189,208,133,239,191,189,16,239,191,189,59,14,239,191,189,60,218,165,14,60,57,239,191,189,239,191,189,44,58,64,8,239,191,189,239,191,189,109,239,191,189,70,90,239,191,189,239,191,189,239,191,189,34,43,239,191,189,108,239,191,189,72,239,191,189,208,183,58,239,191,189,239,191,189,22,17,239,191,189,239,191,189,239,191,189,208,128,239,191,189,42,239,191,189,112,23,239,191,189,239,191,189,30,18,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,121,73,208,134,239,191,189,66,92,239,191,189,6,94,3,212,134,239,191,189,122,87,110,6,125,239,191,189,239,191,189,80,84,85,239,191,189,91,123,239,191,189,33,89,114,50,119,89,110,56,30,102,61,61,239,191,189,239,191,189,239,191,189,18,19,16,103,239,191,189,239,191,189,61,114,49,27,239,191,189,239,191,189,41,239,191,189,122,239,191,189,55,199,159,97,239,191,189,239,191,189,239,191,189,93,44,22,66,57,7,239,191,189,63,45,80,123,66,66,239,191,189,239,191,189,239,191,189,36,239,191,189,239,191,189,64,22,239,191,189,239,191,189,69,67,239,191,189,239,191,189,5,118,239,191,189,70,40,37,65,239,191,189,58,239,191,189,85,3,106,104,219,187,112,239,191,189,239,191,189,55,239,191,189,68,239,191,189,122,125,197,171,239,191,189,206,147,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,67,9,82,28,0,9,239,191,189,95,239,191,189,239,191,189,124,239,191,189,58,239,191,189,41,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,110,239,191,189,99,121,239,191,189,228,167,177,86,110,17,239,191,189,18,119,102,91,239,191,189,55,241,139,132,171,239,191,189,72,212,128,239,191,189,106,58,111,42,239,191,189,1,55,239,191,189,64,239,191,189,122,36,17,239,191,189,120,114,106,49,39,91,239,191,189,59,239,191,189,52,239,191,189,54,13,239,191,189,44,26,239,191,189,5,239,191,189,60,119,239,191,189,68,108,239,191,189,219,163,38,107,239,191,189,239,191,189,239,191,189,121,239,191,189,51,42,221,162,89,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,42,17,19,239,191,189,239,191,189,116,59,239,191,189,54,239,191,189,46,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,3,119,239,191,189,239,191,189,53,239,191,189,1,61,3,239,191,189,73,239,191,189,121,112,78,239,191,189,217,176,239,191,189,18,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,12,239,191,189,10,45,115,125,239,191,189,14,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,32,239,191,189,117,239,191,189,239,191,189,38,239,191,189,57,10,47,100,23,239,191,189,239,191,189,4,94,239,191,189,98,239,191,189,75,239,191,189,208,155,202,188,16,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,101,239,191,189,29,105,97,112,239,191,189,239,191,189,239,191,189,105,78,239,191,189,239,191,189,95,239,191,189,13,56,11,40,239,191,189,239,191,189,113,36,14,239,191,189,239,191,189,239,191,189,21,239,191,189,57,10,239,191,189,196,177,239,191,189,107,239,191,189,239,191,189,239,191,189,47,239,191,189,10,86,239,191,189,239,191,189,18,239,191,189,92,124,239,191,189,239,191,189,239,191,189,88,17,239,191,189,114,93,14,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,69,239,191,189,40,38,67,126,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,115,22,86,239,191,189,0,62,14,239,191,189,102,21,239,191,189,239,191,189,21,239,191,189,51,239,191,189,77,239,191,189,239,191,189,84,203,130,117,95,36,6,87,203,130,239,191,189,96,14,18,92,71,72,73,17,68,112,26,78,239,191,189,105,90,239,191,189,239,191,189,126,93,239,191,189,121,239,191,189,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,85,239,191,189,239,191,189,239,191,189,239,191,189,85,239,191,189,60,73,61,57,125,239,191,189,12,4,45,113,239,191,189,109,239,191,189,78,239,191,189,58,206,143,86,239,191,189,82,239,191,189,74,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,20,239,191,189,41,114,17,61,64,239,191,189,11,79,74,239,191,189,239,191,189,96,239,191,189,12,239,191,189,125,80,239,191,189,84,20,40,239,191,189,68,70,239,191,189,239,191,189,239,191,189,97,239,191,189,102,88,56,25,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,63,11,18,95,34,239,191,189,125,4,122,239,191,189,239,191,189,119,239,191,189,239,191,189,42,46,203,132,65,239,191,189,239,191,189,239,191,189,59,239,191,189,71,239,191,189,92,216,183,63,71,239,191,189,81,239,191,189,239,191,189,49,239,191,189,60,54,93,10,119,239,191,189,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,85,239,191,189,25,116,39,214,165,239,191,189,239,191,189,32,43,194,174,239,191,189,198,173,239,191,189,56,239,191,189,239,191,189,239,191,189,4,239,191,189,76,239,191,189,108,239,191,189,239,191,189,45,18,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,56,116,239,191,189,90,65,239,191,189,108,21,49,71,239,191,189,239,191,189,239,191,189,108,21,77,239,191,189,22,239,191,189,80,17,204,179,239,191,189,30,239,191,189,239,191,189,239,191,189,72,31,6,239,191,189,239,191,189,239,191,189,117,87,108,239,191,189,239,191,189,50,239,191,189,239,191,189,26,121,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,60,239,191,189,22,239,191,189,239,191,189,107,239,191,189,16,60,239,191,189,14,239,191,189,239,191,189,18,65,239,191,189,90,36,239,191,189,239,191,189,239,191,189,45,115,107,239,191,189,121,239,191,189,58,23,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,10,239,191,189,92,101,13,35,239,191,189,239,191,189,8,55,239,191,189,103,239,191,189,239,191,189,62,239,191,189,14,50,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,14,47,239,191,189,239,191,189,96,48,239,191,189,39,239,191,189,239,191,189,101,71,208,173,239,191,189,2,65,239,191,189,239,191,189,33,239,191,189,20,239,191,189,45,57,17,239,191,189,81,17,98,239,191,189,34,1,239,191,189,239,191,189,239,191,189,86,239,191,189,6,239,191,189,239,191,189,22,37,70,239,191,189,98,24,239,191,189,16,239,191,189,239,191,189,239,191,189,26,0,108,239,191,189,91,239,191,189,239,191,189,79,239,191,189,239,191,189,21,33,66,66,70,239,191,189,239,191,189,208,171,86,239,191,189,37,67,108,239,191,189,95,239,191,189,239,191,189,239,191,189,64,239,191,189,239,191,189,239,191,189,8,0,239,191,189,239,191,189,125,239,191,189,59,239,191,189,9,67,0,4,4,239,191,189,28,65,239,191,189,64,239,191,189,97,239,191,189,239,191,189,239,191,189,0,10,239,191,189,83,239,191,189,86,239,191,189,89,239,191,189,118,239,191,189,57,70,74,45,82,8,26,57,28,239,191,189,107,239,191,189,213,187,239,191,189,12,0,239,191,189,73,239,191,189,19,66,239,191,189,239,191,189,239,191,189,79,99,95,59,239,191,189,121,239,191,189,93,80,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,217,190,239,191,189,31,68,126,29,239,191,189,239,191,189,89,239,191,189,45,7,38,3,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,92,43,239,191,189,239,191,189,239,191,189,113,18,239,191,189,1,239,191,189,58,239,191,189,239,191,189,239,191,189,107,239,191,189,70,239,191,189,123,239,191,189,239,191,189,96,86,42,239,191,189,57,38,75,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,56,239,191,189,78,70,239,191,189,43,41,239,191,189,126,239,191,189,239,191,189,54,239,191,189,112,25,100,239,191,189,70,239,191,189,239,191,189,90,18,239,191,189,74,239,191,189,239,191,189,112,239,191,189,65,239,191,189,84,239,191,189,81,239,191,189,13,239,191,189,44,74,239,191,189,53,45,63,84,115,75,21,42,32,206,148,35,93,239,191,189,68,239,191,189,37,88,3,126,13,239,191,189,51,239,191,189,239,191,189,113,5,239,191,189,18,98,56,55,58,127,198,167,27,239,191,189,19,239,191,189,239,191,189,239,191,189,79,38,239,191,189,239,191,189,239,191,189,14,13,55,239,191,189,40,203,185,122,239,191,189,239,191,189,239,191,189,1,70,48,24,239,191,189,239,191,189,92,239,191,189,239,191,189,0,239,191,189,239,191,189,103,69,4,239,191,189,98,107,12,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,122,239,191,189,15,110,239,191,189,76,239,191,189,239,191,189,12,17,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,24,14,112,239,191,189,239,191,189,67,36,239,191,189,87,14,239,191,189,198,134,79,89,61,68,239,191,189,77,123,24,239,191,189,239,191,189,239,191,189,91,51,75,75,239,191,189,239,191,189,124,239,191,189,28,98,239,191,189,102,38,239,191,189,109,239,191,189,111,110,62,239,191,189,239,191,189,69,239,191,189,105,40,85,77,239,191,189,4,83,239,191,189,91,239,191,189,239,191,189,37,15,217,179,239,191,189,52,112,239,191,189,36,104,239,191,189,22,74,120,98,11,239,191,189,117,46,19,21,239,191,189,239,191,189,34,120,239,191,189,209,166,239,191,189,98,239,191,189,239,191,189,113,239,191,189,93,17,239,191,189,239,191,189,9,79,239,191,189,239,191,189,102,1,54,63,2,50,239,191,189,72,85,239,191,189,83,239,191,189,16,102,239,191,189,239,191,189,16,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,13,239,191,189,118,26,80,78,239,191,189,107,239,191,189,23,122,66,239,191,189,239,191,189,57,239,191,189,239,191,189,4,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,43,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,36,40,239,191,189,239,191,189,23,81,239,191,189,239,191,189,123,117,239,191,189,239,191,189,35,22,239,191,189,239,191,189,29,0,69,97,239,191,189,55,125,213,179,35,54,35,239,191,189,9,46,101,239,191,189,239,191,189,239,191,189,196,158,239,191,189,239,191,189,239,191,189,239,191,189,125,42,27,68,46,239,191,189,3,239,191,189,239,191,189,68,239,191,189,108,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,213,160,113,71,37,211,134,91,239,191,189,56,30,121,239,191,189,239,191,189,54,13,97,239,191,189,239,191,189,79,51,239,191,189,239,191,189,239,191,189,126,239,191,189,106,239,191,189,239,191,189,25,239,191,189,38,239,191,189,239,191,189,239,191,189,221,185,239,191,189,30,90,77,239,191,189,239,191,189,239,191,189,37,54,239,191,189,125,239,191,189,239,191,189,73,50,82,239,191,189,239,191,189,57,239,191,189,239,191,189,239,191,189,44,105,218,140,239,191,189,93,239,191,189,239,191,189,239,191,189,40,89,83,239,191,189,114,42,2,239,191,189,239,191,189,44,239,191,189,72,30,239,191,189,239,191,189,239,191,189,207,167,239,191,189,239,191,189,120,47,13,11,239,191,189,239,191,189,115,26,239,191,189,104,46,81,239,191,189,84,97,239,191,189,239,191,189,239,191,189,39,239,191,189,90,67,239,191,189,11,239,191,189,13,124,239,191,189,239,191,189,239,191,189,35,239,191,189,71,239,191,189,42,70,239,191,189,239,191,189,58,239,191,189,112,22,239,191,189,113,239,191,189,62,239,191,189,239,191,189,97,19,239,191,189,77,87,52,239,191,189,2,239,191,189,239,191,189,115,239,191,189,123,239,191,189,11,91,239,191,189,239,191,189,54,70,57,62,239,191,189,18,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,88,61,239,191,189,239,191,189,119,239,191,189,239,191,189,124,124,67,239,191,189,239,191,189,239,191,189,4,239,191,189,45,18,102,239,191,189,239,191,189,239,191,189,89,26,217,168,239,191,189,58,109,7,239,191,189,103,0,20,239,191,189,49,61,5,227,148,179,239,191,189,39,239,191,189,2,66,239,191,189,39,14,239,191,189,0,239,191,189,52,239,191,189,43,239,191,189,239,191,189,35,9,37,239,191,189,109,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,55,211,183,39,46,239,191,189,239,191,189,239,191,189,203,158,24,239,191,189,7,239,191,189,44,120,7,70,51,17,239,191,189,50,26,239,191,189,239,191,189,239,191,189,70,39,239,191,189,47,38,75,24,239,191,189,59,61,239,191,189,123,98,8,48,37,96,10,113,30,33,64,9,109,68,239,191,189,229,159,153,239,191,189,239,191,189,43,112,239,191,189,239,191,189,239,191,189,24,111,239,191,189,76,239,191,189,239,191,189,59,46,239,191,189,239,191,189,9,239,191,189,120,239,191,189,15,239,191,189,239,191,189,239,191,189,6,30,69,239,191,189,126,101,120,86,239,191,189,239,191,189,239,191,189,11,108,103,93,12,239,191,189,24,37,47,123,79,239,191,189,63,121,239,191,189,239,191,189,239,191,189,33,207,141,239,191,189,239,191,189,60,239,191,189,239,191,189,211,132,115,239,191,189,117,79,86,239,191,189,239,191,189,239,191,189,101,239,191,189,91,107,239,191,189,239,191,189,101,112,62,239,191,189,79,6,112,239,191,189,239,191,189,239,191,189,53,239,191,189,19,11,59,47,206,168,56,109,239,191,189,61,239,191,189,44,239,191,189,52,239,191,189,239,191,189,114,58,239,191,189,239,191,189,239,191,189,60,95,239,191,189,239,191,189,101,239,191,189,19,239,191,189,94,239,191,189,25,239,191,189,239,191,189,118,239,191,189,53,211,179,50,114,81,39,239,191,189,17,239,191,189,27,73,239,191,189,53,78,5,127,239,191,189,125,239,191,189,239,191,189,49,239,191,189,66,107,89,239,191,189,239,191,189,239,191,189,18,108,239,191,189,70,53,60,103,216,131,124,68,21,239,191,189,239,191,189,36,73,239,191,189,92,239,191,189,16,222,154,239,191,189,9,239,191,189,239,191,189,3,239,191,189,112,239,191,189,25,120,72,239,191,189,239,191,189,82,110,3,239,191,189,239,191,189,239,191,189,45,239,191,189,95,56,239,191,189,51,69,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,57,127,103,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,219,128,219,159,41,239,191,189,239,191,189,80,239,191,189,239,191,189,116,239,191,189,33,119,239,191,189,28,55,120,235,135,149,239,191,189,101,239,191,189,103,239,191,189,64,239,191,189,108,239,191,189,109,88,239,191,189,29,103,33,239,191,189,239,191,189,69,239,191,189,108,210,174,23,122,94,239,191,189,239,191,189,71,239,191,189,84,239,191,189,101,60,16,27,239,191,189,239,191,189,239,191,189,239,191,189,93,84,100,2,7,102,44,90,120,239,191,189,239,191,189,211,166,239,191,189,40,239,191,189,239,191,189,239,191,189,68,9,239,191,189,99,239,191,189,215,152,239,191,189,239,191,189,12,75,58,239,191,189,239,191,189,89,124,23,110,239,191,189,16,20,49,239,191,189,100,75,0,239,191,189,52,239,191,189,19,24,101,10,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,106,116,114,115,77,44,239,191,189,239,191,189,239,191,189,76,49,17,239,191,189,10,239,191,189,47,239,191,189,63,239,191,189,104,239,191,189,23,94,59,239,191,189,239,191,189,239,191,189,48,37,42,66,239,191,189,119,239,191,189,65,239,191,189,239,191,189,239,191,189,72,56,239,191,189,45,239,191,189,239,191,189,2,239,191,189,90,61,108,239,191,189,239,191,189,239,191,189,55,239,191,189,83,21,54,239,191,189,89,70,239,191,189,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,25,239,191,189,239,191,189,221,169,239,191,189,118,239,191,189,239,191,189,100,239,191,189,239,191,189,72,106,239,191,189,63,42,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,127,239,191,189,239,191,189,239,191,189,104,239,191,189,13,239,191,189,239,191,189,239,191,189,53,89,12,204,159,239,191,189,44,239,191,189,239,191,189,239,191,189,239,191,189,125,239,191,189,41,90,127,217,169,34,42,8,239,191,189,239,191,189,42,239,191,189,239,191,189,239,191,189,57,127,239,191,189,239,191,189,239,191,189,127,239,191,189,80,239,191,189,29,34,239,191,189,239,191,189,239,191,189,239,191,189,55,90,239,191,189,77,62,239,191,189,14,102,239,191,189,100,239,191,189,239,191,189,239,191,189,97,117,239,191,189,15,6,239,191,189,239,191,189,118,239,191,189,239,191,189,25,239,191,189,21,239,191,189,115,97,239,191,189,239,191,189,56,104,14,239,191,189,239,191,189,239,191,189,111,90,52,43,24,65,127,29,239,191,189,239,191,189,112,58,18,239,191,189,73,207,131,118,239,191,189,114,79,41,210,154,4,1,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,107,239,191,189,93,127,58,239,191,189,28,99,239,191,189,3,38,239,191,189,239,191,189,238,153,139,37,239,191,189,43,31,48,98,239,191,189,20,64,220,153,239,191,189,239,191,189,41,239,191,189,239,191,189,113,52,239,191,189,7,37,239,191,189,101,118,50,239,191,189,239,191,189,239,191,189,92,194,149,239,191,189,62,239,191,189,2,24,239,191,189,123,8,54,73,63,93,98,113,124,239,191,189,126,48,50,239,191,189,16,239,191,189,101,47,239,191,189,239,191,189,239,191,189,107,123,239,191,189,54,239,191,189,26,4,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,220,182,7,19,239,191,189,72,37,25,239,191,189,41,21,239,191,189,11,239,191,189,111,126,99,239,191,189,16,239,191,189,61,18,92,67,94,98,239,191,189,55,239,191,189,83,66,239,191,189,58,239,191,189,239,191,189,120,124,239,191,189,43,35,86,223,137,239,191,189,4,126,3,239,191,189,26,4,122,92,239,191,189,72,239,191,189,239,191,189,90,195,181,95,116,239,191,189,30,89,239,191,189,33,74,73,81,239,191,189,2,239,191,189,104,239,191,189,55,93,239,191,189,239,191,189,63,239,191,189,95,5,28,239,191,189,239,191,189,239,191,189,75,239,191,189,46,239,191,189,29,239,191,189,239,191,189,204,174,103,239,191,189,47,239,191,189,239,191,189,52,239,191,189,125,35,2,239,191,189,239,191,189,17,52,64,239,191,189,239,191,189,239,191,189,239,191,189,110,239,191,189,40,239,191,189,2,239,191,189,88,27,239,191,189,239,191,189,73,213,156,62,207,156,89,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,31,239,191,189,239,191,189,239,191,189,125,100,51,21,239,191,189,64,239,191,189,239,191,189,239,191,189,239,191,189,12,219,158,239,191,189,73,239,191,189,239,191,189,87,125,66,239,191,189,239,191,189,239,191,189,39,43,89,239,191,189,239,191,189,53,97,16,69,118,33,20,117,22,239,191,189,239,191,189,239,191,189,56,3,239,191,189,239,191,189,79,239,191,189,8,239,191,189,239,191,189,58,60,239,191,189,19,239,191,189,97,239,191,189,121,11,239,191,189,115,89,239,191,189,99,77,239,191,189,239,191,189,101,124,239,191,189,212,162,35,239,191,189,127,9,239,191,189,60,239,191,189,239,191,189,92,80,73,39,239,191,189,36,119,50,239,191,189,239,191,189,125,239,191,189,10,239,191,189,92,239,191,189,122,239,191,189,93,60,239,191,189,106,239,191,189,239,191,189,220,151,25,18,239,191,189,239,191,189,239,191,189,90,239,191,189,51,239,191,189,34,15,239,191,189,104,40,73,239,191,189,239,191,189,239,191,189,88,216,152,77,42,219,142,239,191,189,222,177,79,239,191,189,196,131,75,99,11,100,239,191,189,65,239,191,189,35,111,239,191,189,71,58,239,191,189,239,191,189,55,53,239,191,189,239,191,189,239,191,189,239,191,189,109,3,239,191,189,239,191,189,239,191,189,8,239,191,189,124,239,191,189,239,191,189,93,239,191,189,74,4,29,239,191,189,239,191,189,76,239,191,189,53,104,239,191,189,5,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,92,21,239,191,189,22,71,101,62,123,239,191,189,56,30,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,50,23,14,239,191,189,239,191,189,9,56,239,191,189,61,239,191,189,239,191,189,113,95,24,239,191,189,28,239,191,189,239,191,189,105,117,2,239,191,189,239,191,189,105,16,19,239,191,189,239,191,189,239,191,189,239,191,189,89,19,62,15,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-4095",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21812 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21812_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21812_s.txt", Encoding.UTF8);

    public Test21812() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,239,191,189,95,239,191,189,239,191,189,222,172,40,119,239,191,189,116,239,191,189,6,239,191,189,121,106,38,115,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,124,96,239,191,189,239,191,189,109,109,239,191,189,51,80,239,191,189,65,108,40,0,126,239,191,189,85,119,102,239,191,189,57,239,191,189,239,191,189,90,100,51,239,191,189,239,191,189,119,239,191,189,88,10,115,9,239,191,189,52,239,191,189,10,239,191,189,65,239,191,189,121,239,191,189,12,65,37,239,191,189,239,191,189,65,27,210,190,79,66,239,191,189,239,191,189,109,9,58,70,239,191,189,216,146,239,191,189,98,239,191,189,239,191,189,239,191,189,98,112,239,191,189,92,73,91,239,191,189,40,40,77,34,13,239,191,189,239,191,189,54,221,134,75,36,239,191,189,239,191,189,69,119,239,191,189,239,191,189,86,239,191,189,239,191,189,231,168,170,239,191,189,47,1,239,191,189,239,191,189,94,117,117,239,191,189,239,191,189,239,191,189,32,239,191,189,45,239,191,189,216,162,239,191,189,98,22,239,191,189,47,38,29,239,191,189,11,239,191,189,239,191,189,239,191,189,65,127,239,191,189,239,191,189,222,168,21,101,126,17,239,191,189,48,52,55,127,87,202,162,239,191,189,239,191,189,15,49,70,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,82,239,191,189,82,239,191,189,83,70,125,80,79,239,191,189,239,191,189,61,54,80,63,95,239,191,189,238,157,161,65,239,191,189,56,239,191,189,239,191,189,15,57,14,239,191,189,239,191,189,204,153,239,191,189,43,40,84,222,161,239,191,189,56,239,191,189,121,83,239,191,189,30,239,191,189,239,191,189,239,191,189,84,239,191,189,5,239,191,189,239,191,189,54,17,239,191,189,74,239,191,189,239,191,189,67,13,110,239,191,189,112,38,41,239,191,189,10,40,239,191,189,89,10,100,239,191,189,199,151,112,239,191,189,29,20,67,239,191,189,239,191,189,239,191,189,239,191,189,87,26,42,9,75,239,191,189,239,191,189,43,106,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,104,28,239,191,189,239,191,189,121,110,74,103,239,191,189,239,191,189,46,201,180,239,191,189,239,191,189,70,111,88,239,191,189,239,191,189,239,191,189,53,92,105,57,93,5,239,191,189,208,173,239,191,189,36,118,81,239,191,189,45,239,191,189,64,239,191,189,239,191,189,239,191,189,48,91,117,114,98,239,191,189,4,75,90,239,191,189,239,191,189,239,191,189,207,134,239,191,189,79,120,64,17,69,239,191,189,9,66,239,191,189,9,82,99,239,191,189,106,72,46,110,33,57,239,191,189,239,191,189,239,191,189,239,191,189,214,166,0,104,117,40,48,37,239,191,189,239,191,189,239,191,189,221,133,0,216,138,16,38,24,239,191,189,104,15,82,37,239,191,189,17,86,91,222,149,239,191,189,13,105,239,191,189,106,106,68,73,239,191,189,26,91,228,172,152,239,191,189,239,191,189,46,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,219,136,100,239,191,189,239,191,189,70,16,239,191,189,239,191,189,116,3,239,191,189,110,70,198,147,239,191,189,239,191,189,239,191,189,99,239,191,189,60,83,78,40,239,191,189,71,108,74,76,108,239,191,189,22,104,239,191,189,47,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,40,80,98,239,191,189,239,191,189,110,11,99,239,191,189,239,191,189,52,21,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,8,17,239,191,189,88,239,191,189,5,99,239,191,189,6,239,191,189,239,191,189,24,61,59,239,191,189,239,191,189,239,191,189,239,191,189,10,82,239,191,189,239,191,189,239,191,189,63,125,201,141,25,239,191,189,120,239,191,189,239,191,189,239,191,189,97,16,239,191,189,239,191,189,239,191,189,115,93,239,191,189,14,104,37,239,191,189,239,191,189,96,239,191,189,239,191,189,24,113,9,239,191,189,89,20,10,42,239,191,189,239,191,189,20,119,74,20,239,191,189,71,239,191,189,34,239,191,189,43,239,191,189,239,191,189,205,131,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,6,239,191,189,94,239,191,189,77,5,239,191,189,239,191,189,239,191,189,95,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,205,166,45,239,191,189,239,191,189,236,154,153,116,104,16,222,171,227,184,141,239,191,189,239,191,189,113,239,191,189,239,191,189,37,93,239,191,189,239,191,189,36,239,191,189,117,239,191,189,239,191,189,239,191,189,214,159,239,191,189,239,191,189,239,191,189,89,98,15,113,2,239,191,189,239,191,189,26,239,191,189,22,239,191,189,2,239,191,189,107,82,44,91,239,191,189,239,191,189,239,191,189,72,52,239,191,189,97,36,36,23,239,191,189,239,191,189,58,62,239,191,189,27,239,191,189,52,37,239,191,189,239,191,189,239,191,189,218,148,66,24,239,191,189,112,239,191,189,239,191,189,22,105,239,191,189,123,239,191,189,239,191,189,31,239,191,189,37,239,191,189,239,191,189,77,222,157,216,149,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,44,239,191,189,91,84,27,19,6,28,9,239,191,189,94,62,0,80,206,190,118,239,191,189,239,191,189,41,14,239,191,189,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,112,239,191,189,239,191,189,32,239,191,189,60,45,32,115,239,191,189,11,239,191,189,8,239,191,189,239,191,189,239,160,156,239,191,189,239,191,189,239,191,189,97,19,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,87,89,239,191,189,31,109,126,29,33,19,239,191,189,239,191,189,2,6,239,191,189,6,2,57,239,191,189,4,239,191,189,51,230,136,136,112,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,67,93,109,77,113,239,191,189,122,116,36,74,95,12,239,191,189,14,34,239,191,189,90,239,191,189,62,35,114,34,239,191,189,239,191,189,239,191,189,239,191,189,107,116,7,38,62,18,60,72,239,191,189,239,191,189,239,191,189,82,239,191,189,37,239,191,189,239,191,189,62,40,99,239,191,189,118,239,191,189,4,63,239,191,189,22,239,191,189,239,191,189,239,191,189,58,239,191,189,80,239,191,189,239,191,189,15,239,191,189,29,35,32,239,191,189,239,191,189,239,191,189,122,5,109,239,191,189,42,24,100,239,191,189,239,191,189,109,239,191,189,239,191,189,33,239,191,189,112,200,148,39,92,239,191,189,119,109,239,191,189,239,191,189,105,239,191,189,21,239,191,189,239,191,189,26,8,105,61,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,43,33,85,104,239,191,189,90,239,191,189,56,239,191,189,84,239,191,189,239,191,189,239,191,189,17,78,12,70,239,191,189,41,239,191,189,2,239,191,189,11,239,191,189,101,48,79,112,239,191,189,113,239,191,189,239,191,189,59,239,191,189,239,191,189,86,24,85,239,191,189,15,239,191,189,239,191,189,49,80,239,191,189,15,239,191,189,43,98,13,239,191,189,239,191,189,239,191,189,89,239,191,189,239,191,189,21,239,191,189,2,239,191,189,10,88,122,29,93,239,191,189,239,191,189,223,145,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,37,114,239,191,189,62,86,100,36,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,35,239,191,189,64,239,191,189,82,95,4,117,98,20,239,191,189,81,239,191,189,105,25,239,191,189,20,239,191,189,239,191,189,117,21,91,77,239,191,189,33,239,191,189,75,239,191,189,100,101,56,218,187,239,191,189,239,191,189,103,239,191,189,239,191,189,21,78,239,191,189,93,199,171,5,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,77,239,191,189,239,191,189,239,191,189,62,239,191,189,62,29,42,239,191,189,239,191,189,239,191,189,90,118,48,1,239,191,189,239,191,189,42,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,53,115,239,191,189,50,239,191,189,13,239,191,189,239,191,189,40,239,191,189,78,239,191,189,36,43,239,191,189,57,81,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,91,96,7,239,191,189,44,81,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,60,10,39,239,191,189,34,76,222,137,52,57,239,191,189,33,239,191,189,10,90,80,24,96,211,181,81,239,191,189,39,209,133,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,112,46,41,239,191,189,37,60,19,90,239,191,189,33,239,191,189,239,191,189,116,33,239,191,189,76,239,191,189,53,239,191,189,239,191,189,15,239,191,189,239,191,189,86,99,16,239,191,189,92,239,191,189,61,239,191,189,117,127,239,191,189,239,191,189,43,38,115,58,239,191,189,239,191,189,239,191,189,28,5,29,239,191,189,239,191,189,103,239,191,189,63,15,239,191,189,73,212,186,239,191,189,75,239,191,189,65,20,121,239,191,189,93,84,239,191,189,62,102,239,191,189,239,191,189,239,191,189,38,115,239,191,189,85,42,24,114,239,191,189,56,239,191,189,115,92,208,190,45,239,191,189,43,239,191,189,1,239,191,189,239,191,189,82,50,37,30,239,191,189,239,191,189,100,239,191,189,57,239,191,189,223,191,25,239,191,189,239,191,189,239,191,189,239,191,189,110,109,239,191,189,125,239,191,189,28,239,191,189,38,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,239,191,189,54,63,126,239,191,189,122,89,239,191,189,239,191,189,124,16,239,191,189,239,191,189,116,55,1,95,74,114,239,191,189,239,191,189,239,191,189,1,4,239,191,189,239,191,189,239,191,189,239,191,189,125,47,15,239,191,189,70,90,239,191,189,239,191,189,105,35,239,191,189,239,191,189,65,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,47,219,186,86,239,191,189,120,27,239,191,189,80,53,58,239,191,189,10,239,191,189,239,191,189,13,94,109,60,94,54,239,191,189,122,239,191,189,59,239,191,189,127,118,239,191,189,113,97,47,0,12,239,191,189,239,191,189,239,191,189,216,138,92,42,239,191,189,99,239,191,189,46,239,191,189,239,191,189,57,239,191,189,239,191,189,50,239,191,189,239,191,189,93,110,97,34,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,40,239,191,189,73,239,191,189,239,191,189,239,191,189,52,103,93,239,191,189,104,239,191,189,239,191,189,70,239,191,189,223,189,46,239,191,189,100,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,6,239,191,189,239,191,189,35,30,239,191,189,16,20,239,191,189,46,79,239,191,189,103,239,191,189,17,111,239,191,189,127,48,239,191,189,239,191,189,239,191,189,33,239,191,189,116,29,79,5,15,239,191,189,239,191,189,87,124,239,191,189,96,239,191,189,61,68,124,18,54,239,191,189,68,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,17,30,239,191,189,63,90,239,191,189,239,191,189,30,99,14,239,191,189,0,108,11,5,239,191,189,102,239,191,189,59,239,191,189,239,191,189,57,49,117,2,30,123,50,239,191,189,239,191,189,198,149,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,66,116,46,239,191,189,123,239,191,189,42,239,191,189,83,40,239,191,189,67,35,239,191,189,239,191,189,113,60,59,54,113,122,239,191,189,72,25,239,191,189,239,191,189,23,20,47,239,191,189,239,191,189,112,239,191,189,82,239,191,189,3,223,134,120,80,239,191,189,80,105,239,191,189,239,191,189,239,191,189,115,26,3,80,75,239,191,189,239,191,189,239,191,189,200,162,239,191,189,123,239,191,189,239,191,189,19,239,191,189,35,73,239,191,189,50,239,191,189,239,191,189,20,233,145,181,239,191,189,239,191,189,239,191,189,41,103,103,39,4,97,239,191,189,16,223,146,58,239,191,189,21,239,191,189,34,28,100,239,191,189,61,239,191,189,45,32,239,191,189,239,191,189,71,239,191,189,6,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,126,83,239,191,189,110,22,239,191,189,67,239,191,189,239,191,189,87,127,70,239,191,189,239,191,189,45,239,191,189,26,239,191,189,239,191,189,239,191,189,71,113,104,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,61,44,100,239,191,189,239,191,189,16,83,58,38,110,239,191,189,105,70,104,239,191,189,92,20,76,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,12,239,191,189,219,175,32,239,191,189,33,239,191,189,114,42,26,92,11,47,28,118,239,191,189,239,191,189,17,239,191,189,43,239,191,189,239,191,189,98,225,169,144,49,89,37,239,191,189,70,239,191,189,37,120,239,191,189,6,239,191,189,200,175,239,191,189,61,239,191,189,239,191,189,9,29,116,84,3,239,191,189,56,239,191,189,21,239,191,189,239,191,189,239,191,189,77,62,230,145,136,24,4,115,22,23,239,191,189,239,191,189,239,191,189,85,122,239,191,189,73,46,86,239,191,189,69,98,216,139,27,239,191,189,86,239,191,189,110,239,191,189,221,175,57,239,191,189,60,239,191,189,239,191,189,54,38,239,191,189,57,57,239,191,189,239,191,189,127,125,86,239,191,189,10,239,191,189,73,239,191,189,42,239,191,189,239,191,189,102,90,118,239,191,189,239,191,189,100,5,98,58,239,191,189,108,25,239,191,189,239,191,189,18,8,239,191,189,239,191,189,12,121,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,105,239,191,189,35,15,239,191,189,81,98,239,191,189,239,191,189,121,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,88,239,191,189,54,239,191,189,239,191,189,113,127,77,239,191,189,38,23,239,191,189,41,239,191,189,67,203,174,124,239,191,189,79,14,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,124,221,155,21,60,239,191,189,51,24,51,109,91,239,191,189,239,191,189,80,239,191,189,82,239,191,189,6,11,239,191,189,115,239,191,189,18,110,239,191,189,9,239,191,189,239,191,189,79,81,239,191,189,126,80,239,191,189,239,191,189,239,191,189,1,239,191,189,50,239,191,189,43,239,191,189,64,32,239,191,189,108,239,191,189,107,60,239,191,189,239,191,189,239,191,189,101,239,191,189,239,191,189,239,191,189,44,73,51,31,78,239,191,189,225,128,157,96,239,191,189,127,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,71,44,239,191,189,77,239,191,189,26,120,19,239,191,189,65,239,191,189,25,239,191,189,26,48,95,239,191,189,94,19,119,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,117,239,191,189,55,239,191,189,115,239,191,189,239,191,189,239,191,189,101,239,191,189,4,213,181,77,62,239,191,189,71,239,191,189,101,239,191,189,103,41,22,239,191,189,79,239,191,189,118,17,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,122,33,239,191,189,55,239,191,189,82,239,191,189,15,239,191,189,239,191,189,105,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,13,239,191,189,32,48,78,239,191,189,20,239,191,189,20,9,239,191,189,40,239,191,189,23,239,191,189,52,239,191,189,239,191,189,239,191,189,213,130,239,191,189,239,191,189,77,239,191,189,239,191,189,54,13,239,191,189,239,191,189,29,239,191,189,3,51,239,191,189,6,239,191,189,239,191,189,44,239,191,189,123,79,107,72,239,191,189,239,191,189,196,150,239,191,189,76,38,114,239,191,189,3,66,38,239,191,189,239,191,189,123,239,191,189,88,6,87,33,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,74,239,191,189,74,90,51,124,239,191,189,86,239,191,189,239,191,189,55,67,204,170,239,191,189,0,239,191,189,106,43,23,80,239,191,189,57,116,239,191,189,74,93,13,239,191,189,26,15,72,1,67,210,181,239,191,189,15,239,191,189,77,123,239,191,189,239,191,189,239,191,189,239,191,189,20,84,65,1,37,239,191,189,28,97,51,239,191,189,20,16,239,191,189,59,50,49,73,13,207,144,239,191,189,65,239,191,189,239,191,189,50,87,239,191,189,239,191,189,222,155,239,191,189,214,129,239,191,189,239,191,189,239,191,189,27,11,239,191,189,97,239,191,189,239,191,189,206,176,239,191,189,239,191,189,239,191,189,239,191,189,119,28,50,239,191,189,239,191,189,40,239,191,189,239,191,189,239,191,189,105,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,62,239,191,189,63,87,60,21,61,114,110,239,191,189,8,115,239,191,189,26,239,191,189,239,191,189,13,72,239,191,189,105,5,239,191,189,88,239,191,189,17,42,239,191,189,60,205,137,239,191,189,99,54,239,191,189,127,21,239,191,189,124,58,6,239,191,189,44,119,239,191,189,239,191,189,95,239,191,189,78,65,58,239,191,189,19,239,191,189,45,239,191,189,78,54,121,70,18,99,1,239,191,189,239,191,189,6,239,191,189,60,22,239,191,189,120,15,239,191,189,13,239,191,189,117,239,191,189,120,239,191,189,239,191,189,55,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,49,239,191,189,10,54,40,239,191,189,242,135,145,133,49,34,220,179,239,191,189,42,57,6,4,239,191,189,15,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,6,18,39,239,191,189,1,51,61,106,239,191,189,5,90,239,191,189,24,239,191,189,81,239,191,189,72,239,191,189,239,191,189,91,239,191,189,50,103,239,191,189,125,239,191,189,79,239,191,189,91,117,239,191,189,239,191,189,76,239,191,189,239,191,189,117,106,2,47,239,191,189,72,46,37,239,191,189,32,239,191,189,54,239,191,189,239,191,189,32,239,191,189,4,239,191,189,78,212,170,239,191,189,5,98,239,191,189,115,14,36,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,124,70,239,191,189,239,191,189,239,191,189,103,3,66,239,191,189,92,239,191,189,25,11,109,85,239,191,189,239,191,189,239,191,189,85,23,239,191,189,239,191,189,239,191,189,239,191,189,10,43,58,10,239,191,189,38,239,191,189,120,239,191,189,239,191,189,113,239,191,189,58,98,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,239,191,189,26,239,191,189,30,127,17,239,191,189,73,194,151,239,191,189,45,239,191,189,239,191,189,125,239,191,189,58,121,41,239,191,189,122,124,58,9,110,69,97,239,191,189,83,28,63,194,153,59,239,191,189,12,239,191,189,90,33,208,188,239,191,189,119,239,191,189,50,239,191,189,239,191,189,199,128,239,191,189,118,81,62,239,191,189,83,81,239,191,189,194,176,57,239,191,189,239,191,189,239,191,189,239,191,189,87,206,148,239,191,189,239,191,189,113,24,239,191,189,88,88,62,239,191,189,4,110,215,180,109,239,191,189,73,126,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,239,191,189,32,209,154,239,191,189,116,99,37,27,239,191,189,14,239,191,189,239,191,189,239,191,189,239,191,189,103,105,76,113,239,191,189,239,191,189,239,191,189,21,239,191,189,120,0,104,74,239,191,189,239,191,189,74,69,30,54,112,55,109,80,50,239,191,189,115,239,191,189,82,239,191,189,59,239,191,189,16,239,191,189,239,191,189,239,191,189,125,53,239,191,189,14,239,191,189,28,11,47,33,239,191,189,12,25,239,191,189,69,239,191,189,200,158,95,239,191,189,239,191,189,239,191,189,25,26,119,119,109,120,117,102,239,191,189,239,191,189,114,239,191,189,20,87,20,239,191,189,15,239,191,189,83,44,61,46,97,239,191,189,90,9,13,239,191,189,114,34,239,191,189,109,239,191,189,100,27,68,239,191,189,64,239,191,189,239,191,189,239,191,189,106,239,191,189,109,112,239,191,189,62,239,191,189,239,191,189,52,239,191,189,239,191,189,235,184,137,29,100,107,239,191,189,239,191,189,63,5,239,191,189,239,191,189,239,191,189,239,191,189,70,120,72,239,191,189,239,191,189,116,239,191,189,127,83,239,191,189,32,83,52,239,191,189,239,191,189,56,110,239,191,189,121,98,239,191,189,122,239,191,189,56,15,239,191,189,214,161,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,71,39,57,53,48,239,191,189,75,51,239,191,189,0,102,239,191,189,76,239,191,189,122,239,191,189,239,191,189,239,191,189,108,119,239,191,189,239,191,189,239,191,189,221,191,59,239,191,189,38,239,191,189,60,125,73,239,191,189,239,191,189,239,191,189,81,41,239,191,189,74,16,239,191,189,239,191,189,20,239,191,189,59,239,191,189,100,66,127,13,108,24,35,12,99,239,191,189,58,91,118,239,191,189,33,37,239,191,189,239,191,189,239,191,189,29,24,239,191,189,29,40,108,6,239,191,189,91,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,239,191,189,101,38,239,191,189,32,239,191,189,23,239,191,189,15,85,239,191,189,239,191,189,88,239,191,189,84,30,239,191,189,239,191,189,36,86,239,191,189,102,99,199,129,239,191,189,28,35,239,191,189,127,30,239,191,189,125,239,191,189,28,239,191,189,114,239,191,189,55,16,239,191,189,239,191,189,95,108,239,191,189,83,239,191,189,194,132,71,58,66,80,2,106,1,94,37,105,239,191,189,239,191,189,20,239,191,189,54,52,73,120,239,191,189,55,39,61,239,191,189,239,191,189,69,2,111,4,91,239,191,189,100,35,97,53,55,239,191,189,119,44,239,191,189,72,26,239,191,189,77,63,109,28,239,191,189,102,40,55,122,239,191,189,26,239,191,189,93,10,70,84,10,239,191,189,239,191,189,239,191,189,3,103,4,239,191,189,239,191,189,239,191,189,88,82,239,191,189,28,239,191,189,239,191,189,29,239,191,189,239,179,128,41,119,8,239,191,189,35,67,239,191,189,8,239,191,189,239,191,189,45,239,191,189,34,34,239,191,189,77,29,239,191,189,239,191,189,58,198,137,239,191,189,14,239,191,189,122,93,64,239,191,189,109,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,36,123,239,191,189,239,191,189,7,43,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,10,121,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,72,239,191,189,104,9,18,10,78,64,86,91,239,191,189,239,191,189,239,191,189,239,191,189,39,204,163,239,191,189,33,239,191,189,98,239,191,189,61,110,239,191,189,16,26,26,64,239,191,189,239,191,189,26,54,62,50,27,83,239,191,189,24,239,191,189,76,239,191,189,101,239,191,189,2,68,72,239,191,189,239,191,189,239,191,189,40,23,239,191,189,201,131,239,191,189,69,239,191,189,52,2,239,191,189,52,0,239,191,189,99,239,191,189,126,239,191,189,239,191,189,11,120,239,191,189,239,191,189,118,239,191,189,239,191,189,31,81,107,239,191,189,239,191,189,96,239,191,189,108,239,191,189,239,191,189,54,108,239,191,189,110,239,191,189,89,239,191,189,22,239,191,189,24,239,191,189,202,136,32,239,191,189,239,191,189,44,239,191,189,92,239,191,189,77,109,53,219,164,239,191,189,58,239,191,189,239,191,189,239,191,189,8,239,191,189,239,191,189,18,239,191,189,30,53,31,220,179,239,191,189,123,239,191,189,84,239,191,189,75,239,191,189,2,52,1,16,15,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,43,107,38,239,191,189,4,116,239,191,189,239,191,189,13,81,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,42,67,239,191,189,56,91,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,84,82,84,239,191,189,215,144,15,200,146,239,191,189,239,191,189,23,5,38,239,191,189,239,191,189,105,239,191,189,22,124,239,191,189,121,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,239,191,189,37,239,191,189,101,108,239,191,189,51,52,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,219,153,239,191,189,110,52,239,191,189,78,37,201,177,69,62,239,191,189,109,239,191,189,239,191,189,123,52,239,191,189,239,191,189,204,187,83,26,239,191,189,111,239,191,189,239,191,189,239,191,189,57,25,239,191,189,122,26,239,191,189,101,26,126,239,191,189,95,92,239,191,189,239,191,189,39,239,191,189,63,239,191,189,72,239,191,189,19,239,191,189,214,139,43,31,70,239,191,189,239,191,189,239,191,189,38,239,191,189,52,239,191,189,239,191,189,127,239,191,189,217,144,75,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,199,158,239,191,189,2,47,239,191,189,127,43,38,83,239,191,189,239,191,189,239,191,189,31,103,239,191,189,239,191,189,57,239,191,189,239,191,189,101,28,239,191,189,239,191,189,102,54,239,191,189,239,191,189,22,32,65,21,93,87,239,191,189,239,191,189,239,191,189,83,6,9,105,68,239,191,189,239,191,189,239,191,189,239,191,189,43,104,102,239,191,189,92,239,191,189,2,97,239,191,189,75,65,201,156,239,191,189,52,15,50,239,191,189,217,145,102,120,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,124,100,208,142,239,191,189,69,239,191,189,117,91,239,191,189,38,117,239,191,189,203,182,239,191,189,239,191,189,89,17,239,191,189,239,191,189,88,108,239,191,189,194,182,239,191,189,118,239,191,189,64,101,239,191,189,53,86,76,56,239,191,189,239,191,189,96,239,191,189,239,191,189,100,54,112,81,48,13,105,48,76,239,191,189,239,191,189,49,239,191,189,36,239,191,189,29,239,191,189,239,191,189,239,191,189,110,239,191,189,27,239,191,189,125,64,77,126,125,239,191,189,46,239,191,189,36,28,239,191,189,34,239,191,189,98,239,191,189,239,191,189,60,70,239,191,189,82,239,191,189,239,191,189,4,101,40,64,239,191,189,239,191,189,103,77,90,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,20,90,1,239,191,189,239,191,189,57,80,99,39,34,239,191,189,205,155,60,239,191,189,86,60,59,83,239,191,189,239,191,189,239,191,189,239,191,189,7,28,239,191,189,239,191,189,239,191,189,81,239,191,189,7,239,191,189,24,63,239,191,189,10,39,69,218,161,23,239,191,189,50,239,191,189,81,17,56,239,191,189,215,148,118,64,107,25,239,191,189,82,239,191,189,239,191,189,239,191,189,45,239,191,189,102,17,239,191,189,26,53,239,191,189,92,76,239,191,189,47,239,191,189,96,239,191,189,121,239,191,189,57,239,191,189,10,85,239,191,189,17,239,191,189,29,239,191,189,40,239,191,189,114,239,191,189,239,191,189,45,102,239,191,189,10,239,191,189,217,158,239,191,189,28,92,239,191,189,102,239,191,189,101,127,223,185,239,191,189,239,191,189,239,191,189,74,67,239,191,189,215,167,85,84,118,84,13,239,191,189,239,191,189,86,1,239,191,189,239,191,189,239,191,189,239,191,189,18,241,182,153,174,121,239,191,189,23,88,239,191,189,239,191,189,110,94,239,191,189,239,191,189,59,239,191,189,239,191,189,99,91,239,191,189,39,45,15,239,191,189,239,191,189,99,239,191,189,44,17,239,191,189,239,191,189,209,147,239,191,189,37,93,31,61,239,191,189,239,191,189,110,239,191,189,87,87,239,191,189,26,24,239,191,189,239,191,189,68,109,239,191,189,201,137,239,191,189,8,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,9,239,191,189,63,108,120,68,29,239,191,189,79,239,191,189,113,77,239,191,189,239,191,189,74,239,191,189,78,239,191,189,105,65,8,10,31,28,239,191,189,77,239,191,189,7,41,239,191,189,65,207,148,239,191,189,114,216,144,100,239,191,189,79,4,121,239,191,189,25,239,191,189,239,191,189,239,191,189,234,170,189,106,239,191,189,30,239,191,189,1,239,191,189,32,80,239,191,189,239,191,189,83,239,191,189,37,10,48,126,5,22,22,114,96,239,191,189,239,191,189,25,60,239,191,189,64,6,98,239,191,189,94,239,191,189,93,107,74,239,191,189,239,191,189,17,239,191,189,212,184,64,239,191,189,9,239,191,189,239,191,189,83,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,55,93,239,191,189,239,191,189,4,69,115,93,25,238,188,152,115,36,239,191,189,239,191,189,126,239,191,189,239,191,189,75,65,239,191,189,31,40,239,191,189,29,239,191,189,58,239,191,189,29,37,239,191,189,239,191,189,11,37,14,239,191,189,239,191,189,239,191,189,87,119,239,191,189,82,5,112,239,191,189,93,239,191,189,239,191,189,107,111,239,191,189,125,61,87,239,191,189,239,191,189,56,239,191,189,239,191,189,200,189,19,103,239,191,189,239,191,189,239,191,189,239,191,189,31,39,239,191,189,239,191,189,27,239,191,189,35,83,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,10,239,191,189,121,239,191,189,239,191,189,113,239,191,189,239,191,189,65,30,239,191,189,239,191,189,239,191,189,72,92,33,94,239,191,189,9,239,191,189,80,204,153,239,191,189,97,112,52,239,191,189,83,46,239,191,189,92,73,19,239,191,189,28,239,191,189,87,218,132,239,191,189,90,239,191,189,239,191,189,48,120,67,239,191,189,239,191,189,114,239,191,189,239,191,189,118,239,191,189,101,61,93,239,191,189,70,96,60,75,113,18,239,191,189,61,89,118,239,191,189,64,51,7,20,239,191,189,68,239,191,189,239,191,189,195,151,239,191,189,44,89,239,191,189,239,191,189,48,239,191,189,239,191,189,116,239,191,189,116,239,191,189,60,16,121,72,78,239,191,189,239,191,189,79,239,191,189,31,239,191,189,69,239,191,189,62,239,191,189,239,191,189,239,191,189,111,87,239,191,189,26,93,51,227,153,143,239,191,189,87,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,60,239,191,189,12,17,115,239,191,189,239,191,189,96,19,239,191,189,239,191,189,58,72,239,191,189,239,191,189,62,29,36,34,239,191,189,69,100,239,191,189,89,239,191,189,59,4,37,53,72,239,191,189,3,239,191,189,239,191,189,98,69,39,118,239,191,189,239,191,189,207,159,239,191,189,86,99,0,239,191,189,3,92,239,191,189,67,85,239,191,189,65,239,191,189,31,239,191,189,7,239,191,189,91,239,191,189,239,191,189,90,58,69,60,73,239,191,189,239,191,189,239,191,189,239,191,189,32,113,239,191,189,21,107,75,89,56,59,123,34,239,191,189,116,239,191,189,239,191,189,239,191,189,89,239,191,189,38,100,110,5,120,239,191,189,218,146})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=4096-8191",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21813 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21813_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21813_s.txt", Encoding.UTF8);

    public Test21813() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{108,17,39,239,191,189,239,191,189,43,95,40,35,239,191,189,66,43,72,239,191,189,104,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,93,239,191,189,46,239,191,189,239,191,189,61,26,239,191,189,239,191,189,58,239,191,189,239,191,189,72,16,239,191,189,239,191,189,239,191,189,121,76,239,191,189,202,156,45,102,82,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,239,191,189,122,239,191,189,239,191,189,126,122,239,191,189,239,191,189,8,239,191,189,239,191,189,110,239,191,189,32,239,191,189,239,191,189,18,239,191,189,113,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,104,97,239,191,189,75,44,239,191,189,239,191,189,71,239,191,189,79,124,239,191,189,97,239,191,189,239,191,189,14,60,239,191,189,93,239,191,189,239,191,189,239,191,189,65,125,18,10,239,191,189,8,3,239,191,189,28,40,75,239,191,189,239,191,189,239,191,189,66,5,82,119,16,239,191,189,88,239,191,189,56,83,235,178,133,239,191,189,1,194,191,239,191,189,239,191,189,91,239,191,189,25,239,191,189,31,63,239,191,189,239,191,189,95,239,191,189,22,239,191,189,88,29,239,191,189,239,191,189,87,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,218,182,239,191,189,85,125,239,191,189,27,101,239,191,189,25,239,191,189,239,191,189,239,191,189,40,31,51,55,86,41,239,191,189,50,33,96,239,191,189,239,191,189,239,191,189,27,239,191,189,58,87,239,191,189,24,114,13,63,47,91,239,191,189,60,239,191,189,68,37,239,191,189,216,171,239,191,189,239,191,189,239,191,189,56,85,48,124,239,191,189,239,191,189,239,191,189,85,48,239,191,189,239,191,189,239,191,189,113,43,52,103,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,78,25,118,239,191,189,13,239,191,189,239,191,189,239,191,189,14,46,239,191,189,113,239,191,189,38,53,126,239,191,189,239,191,189,239,191,189,239,191,189,42,40,239,191,189,239,191,189,239,191,189,239,191,189,86,112,22,99,239,191,189,239,191,189,71,124,239,191,189,99,35,61,239,191,189,34,239,191,189,73,239,191,189,97,58,239,191,189,70,14,50,22,239,191,189,73,99,23,239,191,189,37,108,239,191,189,239,191,189,19,64,23,209,170,55,239,191,189,42,104,67,239,191,189,90,67,239,191,189,99,11,239,191,189,118,75,239,191,189,211,179,72,62,239,191,189,239,191,189,239,191,189,61,48,207,189,239,191,189,239,191,189,92,109,239,191,189,119,8,41,75,239,191,189,239,191,189,239,191,189,96,239,191,189,94,73,0,11,203,174,33,239,191,189,12,95,239,191,189,239,191,189,239,191,189,233,138,176,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,231,146,129,85,105,110,34,98,239,191,189,239,191,189,126,239,191,189,67,97,99,61,36,3,14,213,182,79,13,239,191,189,220,166,30,239,191,189,239,191,189,239,191,189,68,67,239,191,189,239,191,189,119,239,191,189,126,239,191,189,97,64,239,191,189,124,15,239,191,189,121,239,191,189,239,191,189,239,191,189,39,114,213,149,119,6,13,239,191,189,239,191,189,239,191,189,121,239,191,189,79,239,191,189,239,191,189,33,239,191,189,58,90,75,234,172,191,110,239,191,189,239,191,189,239,191,189,58,64,239,191,189,112,239,191,189,23,239,191,189,118,40,6,239,191,189,239,191,189,125,239,191,189,239,191,189,49,239,191,189,60,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,63,239,191,189,66,239,191,189,123,239,191,189,102,239,191,189,48,239,191,189,86,0,38,239,191,189,239,191,189,239,191,189,13,239,191,189,27,239,191,189,110,239,191,189,97,9,122,239,191,189,50,3,239,191,189,91,239,191,189,83,239,191,189,49,65,239,191,189,239,191,189,239,191,189,117,239,191,189,239,191,189,33,77,23,239,191,189,49,239,191,189,239,191,189,239,191,189,56,109,21,239,191,189,22,239,191,189,239,191,189,239,191,189,0,239,191,189,51,239,191,189,239,191,189,239,191,189,76,2,116,239,191,189,85,214,191,17,42,123,36,76,239,191,189,74,127,73,24,239,191,189,17,239,191,189,239,191,189,113,239,191,189,117,95,125,239,191,189,101,239,191,189,239,191,189,108,239,191,189,84,120,202,135,239,191,189,239,191,189,79,27,120,91,239,191,189,86,239,191,189,52,239,191,189,20,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,219,129,239,191,189,239,191,189,239,191,189,239,191,189,90,22,239,191,189,14,88,239,191,189,22,127,239,191,189,239,191,189,78,61,239,191,189,44,239,191,189,239,191,189,42,239,191,189,239,191,189,72,94,80,69,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,6,239,191,189,52,119,58,29,69,91,72,239,191,189,239,191,189,29,23,28,41,115,104,239,191,189,239,191,189,84,85,86,122,239,191,189,239,191,189,239,191,189,9,209,182,72,105,204,133,239,191,189,239,191,189,239,191,189,25,198,187,14,76,42,239,191,189,239,191,189,77,42,71,52,27,101,93,7,47,61,239,191,189,239,191,189,68,121,239,191,189,19,116,239,191,189,239,191,189,48,239,191,189,239,191,189,239,191,189,43,92,89,239,191,189,44,239,191,189,7,42,115,239,191,189,109,100,58,213,181,81,239,191,189,98,239,191,189,71,239,191,189,65,239,191,189,239,191,189,239,191,189,3,239,191,189,215,134,227,185,141,239,191,189,239,191,189,8,239,191,189,11,239,191,189,239,191,189,65,53,110,60,239,191,189,12,239,191,189,125,61,239,191,189,82,19,239,191,189,35,80,239,191,189,239,191,189,210,185,239,191,189,41,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,70,48,239,191,189,91,18,239,191,189,4,213,147,91,239,191,189,239,191,189,24,51,239,191,189,239,191,189,106,65,47,30,239,191,189,81,239,191,189,239,191,189,79,5,202,173,239,191,189,44,239,191,189,4,112,239,191,189,11,239,191,189,71,239,191,189,62,9,239,191,189,239,191,189,38,102,239,191,189,52,22,112,239,191,189,239,191,189,117,239,191,189,74,239,191,189,9,239,191,189,55,239,191,189,12,13,239,191,189,87,239,191,189,103,239,191,189,239,191,189,76,80,39,239,191,189,239,191,189,2,38,56,239,191,189,43,239,191,189,13,26,239,191,189,89,239,191,189,239,191,189,31,239,191,189,194,191,22,239,191,189,113,239,191,189,48,76,239,191,189,6,239,191,189,239,191,189,34,239,191,189,239,191,189,73,239,191,189,69,210,142,35,117,26,201,165,239,191,189,239,191,189,30,99,105,3,239,191,189,239,191,189,199,138,239,191,189,16,65,50,239,191,189,239,191,189,217,169,239,191,189,108,239,191,189,239,191,189,50,39,16,26,239,191,189,227,144,150,76,239,191,189,77,5,239,191,189,239,191,189,18,239,191,189,36,2,14,48,91,94,53,56,239,191,189,19,239,191,189,74,239,191,189,49,93,239,191,189,239,191,189,239,191,189,239,191,189,82,78,86,239,191,189,239,191,189,48,61,239,191,189,239,191,189,59,239,191,189,32,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,239,191,189,216,137,239,191,189,239,191,189,239,191,189,75,239,191,189,115,239,191,189,53,239,191,189,7,26,239,191,189,214,172,65,53,42,32,73,116,85,239,191,189,239,191,189,239,191,189,90,71,74,239,191,189,42,77,239,191,189,5,122,197,188,239,191,189,38,239,191,189,120,239,191,189,5,239,191,189,24,239,191,189,88,239,191,189,58,28,111,100,239,191,189,239,191,189,99,52,15,48,239,191,189,239,191,189,57,41,239,191,189,11,127,27,21,28,17,239,191,189,110,15,69,98,208,161,79,207,176,87,2,239,191,189,15,239,191,189,239,191,189,56,92,22,239,191,189,239,191,189,239,191,189,78,239,191,189,79,239,191,189,239,191,189,59,239,191,189,239,191,189,60,239,191,189,74,239,191,189,95,30,80,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,239,191,189,25,15,80,239,191,189,239,191,189,5,239,191,189,67,239,191,189,239,191,189,81,222,129,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,52,91,239,191,189,239,191,189,84,239,191,189,108,34,239,191,189,5,239,191,189,53,210,169,239,191,189,26,239,191,189,54,29,7,239,191,189,239,191,189,114,85,1,239,191,189,239,191,189,205,185,40,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,214,168,239,191,189,75,239,191,189,75,239,191,189,239,191,189,239,191,189,221,189,81,239,191,189,239,191,189,117,47,83,28,239,191,189,85,20,239,191,189,61,239,191,189,239,191,189,239,191,189,239,191,189,32,239,191,189,239,191,189,72,49,57,239,191,189,239,191,189,119,10,19,239,191,189,53,200,153,200,150,239,191,189,56,204,133,3,93,239,191,189,21,83,239,191,189,110,239,191,189,106,239,191,189,239,191,189,18,119,76,10,239,191,189,239,191,189,23,18,123,239,191,189,37,63,57,3,31,75,67,117,74,110,123,14,239,191,189,239,191,189,39,239,191,189,28,239,191,189,239,191,189,19,239,191,189,239,191,189,29,235,170,189,123,239,191,189,51,10,113,37,80,239,191,189,239,191,189,30,126,17,51,239,191,189,42,71,31,239,191,189,124,3,221,172,239,191,189,4,112,49,72,104,66,239,191,189,33,77,89,98,208,181,65,63,239,191,189,85,239,191,189,18,239,191,189,8,17,10,239,191,189,54,239,191,189,115,239,191,189,239,191,189,111,239,191,189,239,191,189,206,171,46,239,191,189,63,239,191,189,239,191,189,70,89,239,191,189,49,239,191,189,239,191,189,239,191,189,117,5,223,138,38,69,239,191,189,239,191,189,239,191,189,239,191,189,101,127,18,127,239,191,189,4,239,191,189,222,178,239,191,189,1,9,18,239,191,189,239,191,189,120,239,191,189,239,191,189,104,11,239,191,189,83,239,191,189,114,115,110,239,191,189,11,72,97,21,239,191,189,239,191,189,59,53,239,191,189,239,191,189,104,119,84,114,82,5,79,239,191,189,108,239,191,189,58,205,174,110,239,191,189,239,191,189,239,191,189,18,17,239,191,189,239,191,189,12,96,99,127,239,191,189,81,108,29,56,239,191,189,111,239,191,189,239,191,189,110,84,19,239,191,189,239,191,189,78,239,191,189,239,191,189,6,123,102,62,239,191,189,239,191,189,23,96,1,40,35,34,42,91,23,239,191,189,239,191,189,239,191,189,51,27,239,191,189,239,191,189,1,0,239,191,189,111,54,239,191,189,239,191,189,12,239,191,189,6,239,191,189,239,191,189,65,239,191,189,94,84,239,191,189,54,239,191,189,75,219,130,19,61,35,239,191,189,209,154,239,191,189,10,239,191,189,95,239,191,189,110,239,191,189,239,191,189,110,239,191,189,202,163,96,21,58,85,50,239,191,189,85,239,191,189,239,191,189,239,191,189,108,127,239,191,189,127,239,191,189,107,76,239,191,189,239,191,189,41,93,239,191,189,51,239,191,189,97,239,191,189,101,108,239,191,189,239,191,189,108,10,239,191,189,239,191,189,71,239,191,189,11,47,239,191,189,18,69,32,35,239,191,189,239,191,189,27,121,24,5,2,239,191,189,57,239,191,189,54,239,191,189,84,33,239,191,189,239,191,189,239,191,189,89,239,191,189,26,239,191,189,98,239,191,189,47,55,47,96,28,239,191,189,239,191,189,239,191,189,61,239,191,189,93,239,191,189,70,88,77,102,239,191,189,40,51,26,239,191,189,12,239,191,189,94,239,191,189,21,239,191,189,92,120,8,69,239,191,189,239,191,189,74,239,191,189,214,161,239,191,189,239,191,189,79,82,123,239,191,189,239,191,189,26,75,239,191,189,12,239,191,189,239,191,189,239,191,189,93,71,239,191,189,34,69,239,191,189,2,126,239,191,189,239,191,189,197,185,23,1,239,191,189,14,108,239,191,189,66,239,191,189,239,191,189,239,191,189,98,239,191,189,96,239,191,189,67,82,239,191,189,239,191,189,218,180,22,239,191,189,72,239,191,189,40,239,191,189,66,239,191,189,9,20,103,202,182,216,172,25,239,191,189,119,239,191,189,239,191,189,81,239,191,189,124,125,239,191,189,229,187,190,43,239,191,189,59,239,191,189,16,239,191,189,47,239,191,189,23,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,99,239,191,189,219,135,42,42,239,191,189,24,12,239,191,189,51,239,191,189,34,239,191,189,42,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,29,44,28,239,191,189,53,124,97,117,239,191,189,207,163,221,187,67,25,239,191,189,93,239,191,189,239,191,189,101,239,191,189,47,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,77,26,239,191,189,195,184,100,54,122,53,81,239,191,189,239,191,189,81,239,191,189,61,69,86,9,222,178,68,239,191,189,88,239,191,189,75,121,62,239,191,189,88,239,191,189,86,111,116,239,191,189,69,239,191,189,239,191,189,25,2,239,191,189,239,191,189,106,127,11,239,191,189,239,191,189,19,88,239,191,189,127,239,191,189,239,191,189,47,57,239,191,189,106,239,191,189,239,191,189,119,63,38,57,34,108,239,191,189,62,84,239,191,189,65,239,191,189,104,60,7,239,191,189,239,191,189,239,191,189,98,76,18,239,191,189,101,239,191,189,11,239,191,189,66,239,191,189,63,58,239,191,189,239,191,189,239,191,189,12,239,191,189,195,184,239,191,189,71,18,16,239,191,189,119,75,23,105,23,73,239,191,189,48,106,239,191,189,7,117,239,191,189,239,191,189,239,191,189,65,45,74,42,121,239,191,189,25,239,191,189,102,239,191,189,91,239,191,189,67,70,37,239,191,189,80,59,110,8,25,205,162,239,191,189,239,191,189,239,191,189,15,239,191,189,18,239,191,189,125,79,239,191,189,239,191,189,118,123,239,191,189,232,151,166,93,99,239,191,189,211,188,239,191,189,239,191,189,239,191,189,68,59,239,191,189,57,79,239,191,189,239,191,189,115,239,191,189,239,191,189,50,239,191,189,239,191,189,73,212,147,24,12,239,191,189,91,208,170,239,191,189,103,239,191,189,199,170,239,191,189,28,239,191,189,5,74,40,38,239,191,189,239,191,189,27,68,239,191,189,239,191,189,40,2,239,191,189,117,239,191,189,208,183,20,239,191,189,29,239,191,189,239,191,189,239,191,189,47,25,239,191,189,239,191,189,79,239,191,189,239,191,189,68,10,87,239,191,189,239,191,189,239,191,189,200,189,239,191,189,119,239,191,189,12,53,50,205,186,31,239,191,189,239,191,189,16,239,191,189,39,239,191,189,19,85,239,191,189,239,191,189,13,239,191,189,49,204,176,120,118,30,239,191,189,51,239,191,189,239,191,189,51,239,191,189,87,239,191,189,239,191,189,232,163,136,239,191,189,75,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,88,239,191,189,46,91,239,191,189,239,191,189,239,191,189,204,171,35,239,191,189,239,191,189,20,33,239,191,189,46,239,191,189,33,62,239,191,189,89,43,239,191,189,3,239,191,189,239,191,189,17,239,191,189,46,239,191,189,1,239,191,189,59,83,239,191,189,239,191,189,114,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,42,89,88,239,191,189,32,85,111,75,239,191,189,125,124,88,239,191,189,239,191,189,239,191,189,33,124,51,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,106,114,16,239,191,189,239,191,189,94,102,239,191,189,56,22,239,191,189,239,191,189,81,117,206,172,88,239,191,189,83,12,70,25,239,191,189,58,208,163,125,239,191,189,125,239,191,189,13,91,92,239,191,189,71,16,102,239,191,189,122,239,191,189,23,239,191,189,31,239,191,189,97,2,239,191,189,7,100,239,191,189,239,191,189,123,239,191,189,36,88,37,239,191,189,239,191,189,46,239,191,189,239,191,189,35,99,8,59,91,99,45,239,191,189,69,239,191,189,117,239,191,189,239,191,189,107,239,191,189,91,239,191,189,239,191,189,239,191,189,117,44,239,191,189,56,36,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,75,239,191,189,66,239,191,189,239,191,189,239,191,189,38,239,191,189,109,217,166,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,22,91,108,239,191,189,239,191,189,43,239,191,189,91,239,191,189,63,212,146,239,191,189,42,239,191,189,239,191,189,61,213,178,38,101,239,191,189,239,191,189,239,191,189,56,239,191,189,24,112,17,239,191,189,31,239,191,189,239,191,189,239,191,189,82,239,191,189,44,239,191,189,239,191,189,202,183,212,154,239,191,189,13,59,73,239,191,189,72,5,33,239,191,189,41,239,191,189,239,191,189,239,191,189,34,239,191,189,239,191,189,50,66,127,239,191,189,239,191,189,239,191,189,239,191,189,1,57,239,191,189,25,239,191,189,239,191,189,51,239,191,189,110,239,191,189,1,239,191,189,239,191,189,239,191,189,104,69,39,11,109,42,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,111,239,191,189,56,76,239,191,189,30,83,57,15,49,47,126,117,239,191,189,65,239,191,189,101,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,87,124,66,239,191,189,11,47,63,31,239,191,189,239,191,189,15,239,191,189,95,54,68,23,239,191,189,239,191,189,239,191,189,89,19,239,191,189,239,191,189,239,191,189,104,109,80,239,191,189,239,191,189,7,238,166,166,239,191,189,239,191,189,208,168,239,191,189,71,9,239,191,189,17,239,191,189,239,191,189,101,239,191,189,239,191,189,75,32,239,191,189,239,191,189,19,51,112,239,191,189,94,239,191,189,73,32,239,191,189,223,170,107,239,191,189,0,105,28,239,191,189,85,116,110,0,79,239,191,189,239,191,189,1,107,239,191,189,239,191,189,105,239,191,189,5,116,239,191,189,46,239,191,189,114,53,239,191,189,239,191,189,239,191,189,94,116,239,191,189,42,36,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,72,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,54,111,108,38,239,191,189,239,191,189,51,211,147,16,239,191,189,239,191,189,239,191,189,101,91,121,111,239,191,189,239,191,189,124,15,200,180,85,22,239,191,189,78,239,191,189,239,191,189,240,168,190,148,81,239,191,189,54,239,191,189,104,5,239,191,189,239,191,189,34,24,56,77,29,236,129,140,121,239,191,189,31,46,239,191,189,239,191,189,109,239,191,189,22,16,239,191,189,239,191,189,122,68,239,191,189,103,239,191,189,18,61,119,37,239,191,189,7,239,191,189,239,191,189,239,191,189,239,191,189,123,7,239,191,189,12,239,191,189,44,21,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,111,87,8,98,95,239,191,189,118,239,191,189,127,10,239,191,189,10,103,239,191,189,122,239,191,189,239,191,189,239,191,189,220,189,63,15,23,239,191,189,239,191,189,78,47,51,239,191,189,62,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,65,15,58,239,191,189,239,191,189,239,191,189,93,239,191,189,196,142,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,60,95,64,22,239,191,189,16,239,191,189,66,239,191,189,65,239,191,189,239,191,189,19,239,191,189,2,239,191,189,4,120,239,191,189,205,130,239,191,189,239,191,189,40,239,191,189,7,239,191,189,239,191,189,63,239,191,189,81,18,11,50,109,36,110,114,239,191,189,48,95,239,191,189,239,191,189,71,239,191,189,100,239,191,189,7,239,191,189,41,239,191,189,116,79,239,191,189,64,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,14,2,15,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,92,239,191,189,239,191,189,109,239,191,189,239,191,189,63,46,47,88,239,191,189,19,22,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,75,87,239,191,189,2,239,191,189,81,239,191,189,87,26,118,206,183,239,191,189,239,191,189,100,239,191,189,239,191,189,111,239,191,189,204,153,239,191,189,82,56,4,239,191,189,239,191,189,34,18,29,239,191,189,239,139,146,5,239,191,189,239,191,189,239,191,189,28,239,191,189,50,239,191,189,19,239,191,189,239,191,189,239,191,189,101,73,239,191,189,78,239,191,189,239,191,189,59,239,191,189,239,191,189,109,239,191,189,201,164,86,8,239,191,189,69,239,191,189,239,191,189,239,191,189,44,27,239,191,189,194,170,239,191,189,82,31,239,191,189,239,191,189,213,153,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,36,0,239,191,189,239,191,189,239,191,189,4,25,54,198,142,239,191,189,239,191,189,23,2,239,191,189,239,191,189,73,239,191,189,197,163,10,108,28,94,0,239,191,189,3,27,107,239,191,189,101,239,191,189,215,182,42,239,191,189,58,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,239,191,189,2,239,191,189,75,31,239,191,189,33,26,239,191,189,239,191,189,51,239,191,189,0,0,239,191,189,239,191,189,6,40,239,191,189,34,63,76,239,191,189,5,15,84,8,18,82,239,191,189,113,239,191,189,239,191,189,108,25,239,191,189,117,69,22,95,239,191,189,33,239,191,189,102,89,46,239,191,189,239,191,189,239,191,189,104,43,239,191,189,126,74,239,191,189,239,191,189,59,239,191,189,239,191,189,14,200,179,13,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,194,130,42,237,158,182,37,75,127,100,91,33,69,6,91,33,239,191,189,60,57,121,73,80,239,191,189,110,239,191,189,239,191,189,106,7,40,239,191,189,239,191,189,239,191,189,40,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,99,88,239,191,189,123,239,191,189,239,191,189,114,78,239,191,189,87,105,97,114,239,191,189,239,191,189,104,239,191,189,75,29,34,239,191,189,113,102,239,191,189,239,191,189,239,191,189,95,1,2,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,41,239,191,189,60,239,191,189,95,55,239,191,189,27,31,239,191,189,110,100,43,239,191,189,57,239,191,189,94,239,191,189,239,191,189,239,191,189,79,239,191,189,11,108,112,75,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,114,57,201,128,239,191,189,38,239,191,189,239,191,189,74,122,74,104,3,239,191,189,35,75,114,118,239,191,189,69,20,239,191,189,239,191,189,239,191,189,239,191,189,4,114,239,191,189,93,44,111,239,191,189,239,191,189,75,239,191,189,40,239,191,189,16,239,191,189,123,239,191,189,115,43,41,75,49,239,191,189,93,239,191,189,239,191,189,93,83,17,38,94,120,239,191,189,239,191,189,32,34,126,239,191,189,121,30,10,239,191,189,118,239,191,189,239,191,189,239,191,189,124,98,239,191,189,84,114,239,191,189,239,191,189,239,191,189,58,83,86,20,59,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,64,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,30,239,191,189,239,191,189,239,191,189,119,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,106,239,191,189,239,191,189,79,239,191,189,14,239,191,189,203,165,239,191,189,239,191,189,114,239,191,189,86,126,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,22,47,94,87,20,35,239,191,189,239,191,189,80,91,239,191,189,48,239,191,189,16,41,239,191,189,239,191,189,94,239,191,189,239,191,189,102,54,23,88,79,44,52,105,239,191,189,239,191,189,239,191,189,124,239,191,189,55,239,191,189,239,191,189,70,75,239,191,189,79,239,191,189,239,191,189,45,74,203,128,239,191,189,239,191,189,55,239,191,189,239,191,189,117,74,106,112,239,191,189,23,5,8,239,191,189,239,191,189,239,191,189,98,239,191,189,65,239,191,189,97,125,239,191,189,239,191,189,239,191,189,239,191,189,58,24,239,191,189,8,205,141,239,191,189,49,239,191,189,50,2,28,84,49,39,199,178,239,191,189,64,67,239,191,189,96,75,239,191,189,203,185,239,191,189,239,191,189,10,239,191,189,62,57,239,191,189,16,82,239,191,189,239,191,189,73,120,57,239,191,189,66,90,239,191,189,70,60,15,118,239,191,189,239,191,189,8,75,84,29,239,191,189,204,164,61,20,3,236,152,161,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,239,191,189,59,239,191,189,9,239,191,189,30,239,191,189,58,239,191,189,124,121,107,239,191,189,64,239,191,189,239,191,189,239,191,189,54,239,191,189,40,239,191,189,52,116,76,29,239,191,189,239,191,189,0,99,239,191,189,238,161,160,239,191,189,205,131,75,39,239,191,189,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,97,239,191,189,239,191,189,239,191,189,27,239,191,189,78,239,191,189,64,6,83,239,191,189,239,191,189,125,31,58,33,239,191,189,239,191,189,94,81,239,191,189,112,239,191,189,102,123,239,191,189,239,191,189,239,191,189,239,191,189,202,132,62,239,191,189,48,102,119,3,82,207,174,239,191,189,47,239,191,189,78,61,239,191,189,48,239,191,189,239,191,189,239,191,189,239,191,189,57,16,20,95,98,239,191,189,111,239,191,189,18,95,105,104,239,191,189,84,63,53,9,239,191,189,114,239,191,189,119,239,191,189,239,191,189,12,64,12,24,61,239,191,189,73,239,191,189,239,191,189,19,74,46,239,191,189,239,191,189,3,239,191,189,239,191,189,239,191,189,239,191,189,79,93,198,155,239,191,189,239,191,189,239,191,189,38,239,191,189,59,117,63,239,191,189,109,8,30,86,239,191,189,49,239,191,189,239,191,189,21,122,124,239,191,189,9,16,96,56,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,121,112,30,63,105,103,108,239,191,189,118,211,159,239,191,189,204,178,239,191,189,36,97,239,191,189,56,58,239,191,189,74,239,191,189,239,191,189,239,191,189,38,239,191,189,38,239,191,189,239,191,189,118,239,191,189,27,89,239,191,189,239,191,189,126,239,191,189,75,29,239,191,189,239,191,189,6,10,106,80,239,191,189,239,191,189,9,239,191,189,239,191,189,206,153,24,239,191,189,47,239,191,189,47,82,67,121,69,41,239,191,189,93,199,165,115,13,199,165,111,239,191,189,27,239,191,189,28,67,239,191,189,239,191,189,239,191,189,239,191,189,104,29,239,191,189,239,191,189,63,2,239,191,189,117,50,79,239,191,189,8,239,191,189,99,239,191,189,17,239,191,189,239,191,189,239,191,189,31,120,66,239,191,189,35,32,126,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,17,39,44,7,239,191,189,239,191,189,239,191,189,230,151,148,85,208,166,119,46,126,50,5,239,191,189,239,191,189,115,239,191,189,239,191,189,22,201,135,239,191,189,123,221,138,49,239,191,189,239,191,189,88,239,191,189,59,112,9,239,191,189,26,7,56,224,173,145,83,121,6,89,49,239,191,189,239,191,189,239,191,189,239,191,189,61,33,76,22,61,46,239,191,189,39,9,13,98,239,191,189,239,191,189,78,239,191,189,239,191,189,14,41,13,239,191,189,239,191,189,58,14,46,239,191,189,118,14,239,191,189,34,239,191,189,239,191,189,54,239,191,189,39,26,113,239,191,189,90,239,191,189,239,191,189,83,239,191,189,47,239,191,189,74,239,191,189,109,43,33,102,34,239,191,189,239,191,189,239,191,189,239,191,189,3,18,30,239,191,189,239,191,189,32,12,5,93,60,44,207,190,51,115,3,239,191,189,93,68,116,10,10,59,239,191,189,8,226,152,187,239,191,189,65,72,239,191,189,79,23,95,239,191,189,239,191,189,3,239,191,189,70,239,191,189,209,151,29,17,239,191,189,239,191,189,239,191,189,98,111,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,61,116,74,239,191,189,239,191,189,239,191,189,239,191,189,111,28,20,50,239,191,189,89,239,191,189,46,49,57,239,191,189,198,145,89,239,191,189,239,191,189,88,25,15,239,191,189,87,239,191,189,31,239,191,189,239,191,189,239,191,189,69,108,209,143,239,191,189,239,191,189,56,34,63,219,154,48,239,191,189,239,191,189,14,91,239,191,189,239,191,189,51,116,92,100,81,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,20,46,92,239,191,189,60,6,239,191,189,110,26,16,78,40,239,191,189,55,239,191,189,239,191,189,239,191,189,95,83,34,127,239,191,189,26,70,239,191,189,65,239,191,189,239,191,189,82,239,191,189,14,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,44,239,191,189,239,191,189,74,64,60,239,191,189,40,239,191,189,239,191,189,239,191,189,7,239,191,189,56,120,239,191,189,51,19,21,2,239,191,189,85,239,191,189,239,191,189,239,191,189,50,64,239,191,189,27,116,239,191,189,239,191,189,239,191,189,239,191,189,38,60,239,191,189,239,191,189,239,191,189,10,239,191,189,25,239,191,189,61,239,191,189,74,64,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,9,239,191,189,13,239,191,189,53,13,63,3,239,191,189,29,239,191,189,17,60,239,191,189,239,191,189,57,10,45,239,191,189,87,92,239,191,189,125,239,191,189,106,118,49,239,191,189,239,191,189,17,239,191,189,84,79,239,191,189,20,239,191,189,15,239,191,189,12,239,191,189,57,77,45,127,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,202,166,127,239,191,189,20,5,27,239,191,189,239,191,189,239,191,189,91,30,239,191,189,42,108,239,191,189,76,115,239,191,189,109,239,191,189,239,191,189,213,154,34,239,191,189,79,115,239,191,189,239,191,189,67,239,191,189,83,49,39,239,191,189,239,191,189,0,115,15,239,191,189,126,239,191,189,48,98,27,239,191,189,2,18,2,239,191,189,122,105,36,239,191,189,61,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,239,191,189,41,239,191,189,105,239,191,189,94,3,239,191,189,239,191,189,76,239,191,189,121,239,191,189,124,239,191,189,239,191,189,55,7,239,191,189,77,97,239,191,189,2,200,136,46,77,239,191,189,239,191,189,239,191,189,50,6,90,9,239,191,189,239,191,189,239,191,189,239,191,189,80,95,239,191,189,83,15,70,122,239,191,189,104,103,239,191,189,44,239,191,189,198,132,103,70,68,39,239,191,189,239,191,189,17,25,239,191,189,7,25,239,191,189,31,239,191,189,239,191,189,239,191,189,14,62,239,191,189,239,191,189,78,13,239,191,189,239,191,189,78,239,191,189,239,191,189,239,191,189,90,239,191,189,61,108,239,191,189,239,191,189,239,191,189,80,239,191,189,239,191,189,24,239,191,189,78,239,191,189,112,8,44,239,191,189,208,182,127,239,191,189,30,110,15,239,191,189,25,57,239,191,189,107,239,191,189,72,239,191,189,43,239,191,189,50})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=8192-12287",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21814 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21814_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21814_s.txt", Encoding.UTF8);

    public Test21814() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{202,173,120,44,239,191,189,104,71,38,3,59,104,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,102,194,146,239,191,189,92,239,191,189,217,137,239,191,189,35,68,239,191,189,239,191,189,34,39,62,61,127,8,239,191,189,239,191,189,239,191,189,47,239,191,189,71,11,239,191,189,239,191,189,239,191,189,35,220,181,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,239,191,189,83,102,239,191,189,69,2,87,39,24,64,94,78,15,239,191,189,36,73,126,239,191,189,239,191,189,239,191,189,80,239,191,189,39,239,191,189,124,70,239,191,189,78,19,93,43,239,191,189,65,46,23,79,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,112,61,239,191,189,239,191,189,239,191,189,92,126,70,103,239,191,189,117,239,191,189,42,44,122,122,239,191,189,115,8,20,239,191,189,20,239,191,189,12,239,191,189,239,191,189,234,142,169,239,191,189,108,32,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,23,195,185,239,191,189,47,239,191,189,35,239,191,189,116,239,191,189,96,239,191,189,239,191,189,239,191,189,91,125,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,222,146,10,116,239,191,189,210,134,239,191,189,22,126,239,191,189,80,7,64,239,191,189,239,191,189,239,191,189,6,26,239,191,189,239,191,189,239,191,189,239,191,189,51,91,49,239,191,189,91,106,1,96,5,239,191,189,239,191,189,239,191,189,25,239,191,189,100,239,191,189,239,191,189,81,72,11,118,239,191,189,60,239,191,189,214,141,239,191,189,239,191,189,118,47,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,121,239,191,189,125,67,75,75,81,20,239,191,189,2,239,191,189,119,90,239,191,189,239,191,189,75,239,191,189,80,239,191,189,90,79,215,147,116,239,191,189,6,69,239,191,189,239,191,189,12,239,191,189,127,239,191,189,105,19,35,239,191,189,5,239,191,189,42,53,40,239,191,189,211,160,37,239,191,189,124,81,239,191,189,239,191,189,239,191,189,222,150,239,191,189,239,191,189,25,8,239,191,189,68,6,239,191,189,109,239,191,189,109,109,239,191,189,239,191,189,239,191,189,119,229,144,144,36,39,48,239,191,189,211,156,98,239,191,189,109,239,191,189,33,203,160,26,239,191,189,113,10,203,132,123,36,239,191,189,239,191,189,239,191,189,101,51,96,239,191,189,239,191,189,239,191,189,51,5,57,78,114,239,191,189,113,89,52,239,191,189,239,191,189,61,37,114,239,191,189,239,191,189,204,171,50,117,239,191,189,239,191,189,97,20,107,239,191,189,108,88,90,239,191,189,60,239,191,189,52,239,191,189,239,191,189,28,239,191,189,81,239,191,189,57,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,71,41,239,191,189,102,239,191,189,239,191,189,31,230,136,164,37,239,191,189,239,191,189,23,24,239,191,189,239,191,189,239,191,189,50,9,79,239,191,189,239,191,189,17,122,2,239,191,189,117,239,191,189,20,239,191,189,122,239,191,189,6,37,47,239,191,189,57,239,191,189,45,21,239,191,189,63,120,108,110,239,191,189,33,239,191,189,2,239,191,189,102,239,191,189,45,239,191,189,239,191,189,239,191,189,236,178,135,239,191,189,239,191,189,115,239,191,189,94,239,191,189,239,191,189,239,191,189,103,90,31,5,239,191,189,94,106,25,239,191,189,11,74,215,141,76,17,239,191,189,19,239,191,189,216,135,239,191,189,239,191,189,77,213,166,107,9,204,148,239,191,189,16,239,191,189,46,239,191,189,74,239,191,189,239,191,189,97,239,191,189,239,191,189,50,125,13,239,191,189,103,239,191,189,28,239,191,189,97,28,239,191,189,239,191,189,17,106,81,239,191,189,12,74,94,239,191,189,85,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,1,105,236,177,188,10,85,25,239,191,189,108,109,239,191,189,78,109,107,120,43,88,239,191,189,196,173,199,155,239,191,189,3,97,121,239,191,189,239,191,189,43,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,6,21,55,239,191,189,239,191,189,239,191,189,103,58,239,191,189,51,12,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,57,239,191,189,92,239,191,189,91,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,114,72,70,94,239,191,189,239,191,189,117,28,239,191,189,239,191,189,239,191,189,38,239,191,189,96,239,191,189,116,66,43,34,239,191,189,95,42,239,191,189,55,239,191,189,117,84,23,239,191,189,23,90,119,123,18,239,191,189,239,191,189,112,68,9,54,107,28,209,169,18,53,239,191,189,96,52,55,69,86,239,191,189,17,116,72,116,14,239,191,189,64,90,94,29,239,191,189,88,35,239,191,189,126,239,191,189,39,4,239,191,189,34,239,191,189,66,66,88,41,36,105,118,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,106,239,191,189,119,79,97,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,81,238,138,128,239,191,189,12,51,70,52,239,191,189,239,191,189,49,239,191,189,75,239,191,189,85,239,191,189,103,123,85,17,84,121,65,239,191,189,40,215,162,121,89,16,54,67,107,239,191,189,53,239,191,189,239,191,189,51,214,148,239,191,189,239,191,189,200,155,108,239,191,189,4,119,46,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,117,72,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,209,152,239,191,189,115,239,191,189,118,239,191,189,51,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,43,74,90,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,4,239,191,189,239,191,189,239,191,189,3,127,4,239,191,189,194,184,42,64,239,191,189,239,191,189,87,119,196,163,44,239,191,189,97,101,239,191,189,127,52,239,191,189,83,239,191,189,239,191,189,239,191,189,125,239,191,189,3,239,191,189,196,144,239,191,189,239,191,189,239,191,189,65,104,239,191,189,48,91,239,191,189,239,191,189,55,100,239,191,189,239,191,189,42,239,191,189,63,239,191,189,62,116,239,191,189,16,43,15,239,191,189,239,191,189,217,173,239,191,189,239,191,189,43,239,191,189,239,191,189,10,2,55,93,31,239,191,189,239,191,189,79,239,191,189,59,239,191,189,239,191,189,51,239,191,189,239,191,189,83,239,191,189,239,191,189,29,239,191,189,27,239,191,189,239,191,189,200,139,72,239,191,189,239,191,189,239,191,189,239,191,189,206,134,239,191,189,125,239,191,189,239,191,189,239,191,189,69,32,239,191,189,79,37,239,191,189,212,139,82,239,191,189,239,191,189,239,191,189,89,239,191,189,37,13,13,239,191,189,18,113,110,239,191,189,239,191,189,96,54,239,191,189,36,109,26,26,239,191,189,6,239,191,189,96,239,191,189,239,191,189,123,54,239,191,189,13,239,191,189,61,57,239,191,189,239,191,189,239,191,189,41,2,239,191,189,120,239,191,189,239,191,189,239,191,189,126,239,191,189,115,72,65,25,88,239,191,189,102,112,55,15,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,48,239,191,189,84,239,191,189,105,239,191,189,33,196,162,239,191,189,3,39,126,239,191,189,60,90,58,29,239,191,189,72,85,239,191,189,1,114,239,191,189,239,191,189,48,1,38,239,191,189,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,206,179,12,239,191,189,113,28,239,191,189,40,87,239,191,189,54,239,191,189,95,99,239,191,189,225,159,139,114,31,239,191,189,239,191,189,239,191,189,37,77,239,191,189,239,191,189,97,102,239,191,189,109,232,165,179,239,191,189,77,102,84,108,19,61,239,191,189,239,191,189,4,239,191,189,29,105,239,191,189,67,18,8,36,66,239,191,189,3,18,239,191,189,239,191,189,87,239,191,189,239,191,189,98,239,191,189,239,191,189,75,78,22,239,191,189,99,73,123,75,31,95,239,191,189,45,239,191,189,125,48,75,239,191,189,29,83,239,191,189,73,239,191,189,34,239,191,189,239,191,189,96,127,239,191,189,239,191,189,127,239,191,189,60,201,184,89,7,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,239,191,189,98,239,191,189,44,105,39,112,239,191,189,68,109,58,2,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,78,110,239,191,189,6,100,99,8,35,41,239,191,189,12,34,239,191,189,239,191,189,68,239,191,189,239,191,189,77,8,52,21,239,191,189,63,239,191,189,239,191,189,206,143,239,191,189,239,191,189,19,239,191,189,21,18,239,191,189,110,239,191,189,3,239,191,189,239,191,189,239,191,189,35,70,239,191,189,239,191,189,239,191,189,33,239,191,189,109,239,191,189,239,191,189,113,239,191,189,110,239,191,189,239,191,189,121,47,91,110,239,191,189,239,191,189,82,114,21,239,191,189,239,191,189,16,33,93,239,191,189,239,191,189,239,191,189,79,239,191,189,16,239,191,189,239,191,189,93,239,191,189,117,29,33,239,191,189,202,161,18,239,191,189,94,239,191,189,239,191,189,103,239,191,189,43,103,239,191,189,239,191,189,239,191,189,239,191,189,20,239,191,189,16,239,191,189,16,15,40,239,191,189,95,239,191,189,22,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,89,239,191,189,115,239,191,189,78,239,191,189,107,104,71,22,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,73,239,191,189,100,239,191,189,17,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,50,239,191,189,239,191,189,119,44,117,89,239,191,189,94,36,239,191,189,239,191,189,17,239,191,189,119,11,99,26,239,191,189,239,191,189,44,239,191,189,239,191,189,113,6,92,7,239,191,189,239,191,189,239,191,189,21,239,191,189,54,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,239,191,189,6,105,105,31,239,191,189,71,60,239,191,189,88,239,191,189,239,191,189,14,239,191,189,239,191,189,4,87,6,37,24,81,29,104,88,239,191,189,23,239,191,189,71,127,41,239,191,189,75,61,239,191,189,59,239,191,189,239,191,189,56,81,118,20,239,191,189,215,158,69,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,211,158,16,239,191,189,8,239,191,189,0,239,191,189,239,191,189,239,191,189,58,95,118,121,16,239,191,189,30,239,191,189,239,191,189,3,239,191,189,69,239,191,189,19,25,116,90,93,239,191,189,239,191,189,217,161,239,191,189,239,191,189,103,239,191,189,111,96,72,239,191,189,20,14,74,239,191,189,11,24,44,8,239,191,189,110,107,13,239,191,189,91,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,48,239,191,189,227,152,129,124,17,32,20,239,191,189,107,239,191,189,239,191,189,119,239,191,189,239,191,189,7,0,71,81,239,191,189,29,51,204,167,239,191,189,239,191,189,239,191,189,27,113,239,191,189,239,191,189,104,114,239,191,189,92,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,13,108,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,8,28,19,239,191,189,23,239,191,189,239,191,189,239,191,189,56,5,239,191,189,27,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,105,239,191,189,90,239,191,189,195,134,42,239,191,189,22,65,70,46,123,239,191,189,103,96,85,202,162,231,130,151,21,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,6,239,191,189,3,98,85,239,191,189,239,191,189,78,80,52,239,191,189,86,239,191,189,88,239,191,189,239,191,189,39,55,79,36,38,239,191,189,239,191,189,1,17,209,130,239,191,189,27,11,239,191,189,63,17,38,58,83,42,24,239,191,189,239,191,189,239,191,189,6,121,109,239,191,189,43,239,191,189,239,191,189,239,191,189,218,143,89,239,191,189,100,239,191,189,55,239,191,189,1,80,239,191,189,51,18,51,68,64,239,191,189,69,239,191,189,30,239,191,189,239,191,189,14,239,191,189,239,191,189,114,31,85,239,191,189,7,239,191,189,34,239,191,189,239,191,189,64,123,239,191,189,239,191,189,239,191,189,92,3,92,40,239,191,189,10,126,239,191,189,239,191,189,52,45,77,239,191,189,239,191,189,47,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,106,98,109,67,239,191,189,200,165,8,239,191,189,101,26,65,239,191,189,70,239,191,189,30,239,191,189,76,32,96,239,191,189,0,53,39,239,191,189,18,239,191,189,233,168,185,239,191,189,33,239,191,189,46,93,239,191,189,17,92,239,191,189,107,239,191,189,68,76,239,191,189,239,191,189,239,191,189,59,18,239,191,189,32,93,239,191,189,7,64,106,44,69,239,191,189,239,191,189,206,188,95,223,178,239,191,189,77,85,239,191,189,239,191,189,13,118,106,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,202,153,85,97,239,191,189,239,191,189,239,191,189,123,203,184,1,239,191,189,239,191,189,239,191,189,108,212,139,239,191,189,85,82,28,208,170,239,191,189,11,46,202,181,125,239,191,189,239,191,189,120,15,239,191,189,69,92,239,191,189,96,102,239,191,189,122,65,239,191,189,105,23,12,239,191,189,71,239,191,189,24,18,17,108,239,191,189,239,191,189,239,191,189,99,85,239,191,189,35,61,239,191,189,41,199,136,239,191,189,239,191,189,79,38,119,239,191,189,63,239,191,189,93,239,191,189,239,191,189,239,191,189,239,191,189,33,58,110,239,191,189,239,191,189,239,191,189,103,239,191,189,43,239,191,189,86,239,191,189,65,239,191,189,67,239,191,189,123,24,239,191,189,239,191,189,38,65,33,98,35,239,191,189,34,15,23,106,2,239,191,189,97,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,32,234,186,178,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,38,118,239,191,189,239,191,189,105,239,191,189,239,191,189,76,63,102,12,69,239,191,189,19,50,83,30,239,191,189,5,89,239,191,189,32,120,13,239,191,189,239,191,189,108,239,191,189,81,239,191,189,113,52,118,106,239,191,189,239,191,189,12,51,239,191,189,239,191,189,239,191,189,27,57,239,191,189,239,191,189,86,239,191,189,239,191,189,124,95,209,152,82,239,191,189,6,239,191,189,239,191,189,239,191,189,201,142,107,239,191,189,91,239,191,189,239,191,189,239,191,189,41,34,62,71,239,191,189,239,191,189,99,105,102,4,63,49,239,191,189,74,239,191,189,13,212,132,239,191,189,239,191,189,36,239,191,189,239,191,189,239,191,189,34,76,45,19,239,191,189,239,191,189,239,191,189,68,3,12,44,239,191,189,65,53,116,239,191,189,53,239,191,189,85,2,239,191,189,239,191,189,1,127,239,191,189,93,39,239,191,189,84,59,239,191,189,123,56,72,36,239,191,189,239,191,189,79,239,191,189,239,191,189,68,239,191,189,45,239,191,189,29,64,203,158,15,239,191,189,102,60,88,239,191,189,55,107,74,239,191,189,73,39,96,239,191,189,239,191,189,239,191,189,98,239,191,189,75,239,191,189,16,239,191,189,43,239,191,189,2,118,239,191,189,194,137,41,98,239,191,189,239,191,189,239,191,189,199,155,239,191,189,110,34,81,17,239,191,189,83,15,6,239,191,189,126,91,10,101,118,108,239,191,189,210,141,57,239,191,189,239,191,189,57,239,191,189,41,116,239,191,189,33,75,239,191,189,239,191,189,239,191,189,33,84,239,191,189,239,191,189,239,191,189,239,191,189,87,239,191,189,28,239,191,189,68,239,191,189,98,239,191,189,35,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,84,53,64,39,239,191,189,239,191,189,50,239,191,189,70,41,239,191,189,58,239,191,189,115,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,112,239,191,189,239,191,189,239,191,189,199,188,239,191,189,110,85,42,239,191,189,221,147,69,239,191,189,239,191,189,78,239,191,189,75,127,80,88,239,191,189,27,81,39,2,239,191,189,48,23,239,191,189,239,191,189,239,191,189,213,158,239,191,189,64,86,96,239,191,189,26,239,191,189,110,27,83,201,167,112,239,191,189,195,143,39,239,191,189,239,191,189,103,23,7,216,152,239,191,189,239,191,189,12,61,61,239,191,189,0,24,239,191,189,239,191,189,239,191,189,126,239,191,189,113,107,100,239,191,189,239,191,189,125,200,135,127,239,191,189,239,191,189,109,239,191,189,115,53,13,110,239,191,189,239,191,189,104,239,191,189,239,191,189,37,13,239,191,189,48,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,69,239,191,189,239,191,189,52,82,239,191,189,45,239,191,189,16,17,32,40,49,208,180,28,239,191,189,11,79,31,60,22,58,239,191,189,69,86,7,239,191,189,239,191,189,117,214,149,239,191,189,239,191,189,40,239,191,189,0,239,191,189,239,191,189,90,35,87,239,191,189,239,191,189,239,191,189,220,180,123,111,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,47,93,4,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,59,239,191,189,97,65,239,191,189,239,191,189,95,239,191,189,80,239,191,189,239,191,189,24,239,191,189,239,191,189,16,72,121,82,61,239,191,189,239,191,189,48,239,191,189,28,64,239,191,189,239,191,189,239,191,189,17,239,191,189,239,191,189,230,140,188,113,22,239,191,189,239,191,189,11,239,191,189,15,239,191,189,84,239,191,189,239,191,189,112,239,191,189,243,166,130,128,53,20,239,191,189,10,239,191,189,69,0,239,191,189,47,239,191,189,239,191,189,239,191,189,239,191,189,222,140,1,28,239,191,189,239,191,189,239,191,189,70,239,191,189,115,49,239,191,189,27,53,239,191,189,239,191,189,239,191,189,239,191,189,106,60,62,239,191,189,119,15,102,239,191,189,86,239,191,189,92,239,191,189,104,2,239,191,189,239,191,189,7,9,111,239,191,189,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,123,47,115,15,86,39,106,239,191,189,78,86,239,191,189,45,20,239,191,189,115,86,68,239,191,189,239,191,189,10,46,25,55,46,239,191,189,24,18,239,191,189,112,239,191,189,4,1,214,148,54,18,70,67,52,30,239,191,189,239,191,189,107,38,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,94,79,239,191,189,239,191,189,76,22,60,239,191,189,14,87,21,222,189,239,191,189,43,62,93,127,96,15,1,239,191,189,222,131,122,239,191,189,16,83,239,191,189,239,191,189,23,70,239,191,189,58,239,191,189,78,64,72,32,239,191,189,101,239,191,189,37,239,191,189,113,213,174,111,239,191,189,239,191,189,32,123,36,239,191,189,93,239,191,189,239,191,189,18,239,191,189,105,43,239,191,189,10,115,63,239,191,189,17,239,191,189,2,239,191,189,239,191,189,20,95,239,191,189,239,191,189,116,239,191,189,22,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,239,191,189,34,56,239,191,189,28,122,45,118,239,191,189,239,191,189,215,129,239,191,189,239,191,189,239,191,189,239,191,189,43,108,209,184,11,27,239,191,189,239,191,189,239,191,189,8,239,191,189,0,44,106,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,216,165,239,191,189,98,208,157,239,191,189,239,191,189,239,191,189,239,191,189,221,143,112,239,191,189,239,191,189,52,239,191,189,60,111,127,239,191,189,79,239,191,189,19,239,191,189,45,74,75,33,239,191,189,107,239,191,189,239,191,189,239,191,189,235,133,134,110,239,191,189,110,114,239,191,189,22,239,191,189,42,46,239,191,189,74,239,191,189,84,20,217,136,36,36,239,191,189,239,191,189,210,166,239,191,189,82,92,239,191,189,239,191,189,35,239,191,189,121,239,191,189,77,239,191,189,100,84,1,12,239,191,189,57,239,191,189,232,142,157,0,239,191,189,239,191,189,218,146,49,239,191,189,239,191,189,98,212,179,239,191,189,68,27,22,239,191,189,51,110,7,239,191,189,22,84,74,239,191,189,239,191,189,239,191,189,239,191,189,23,88,80,239,191,189,239,191,189,24,5,82,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,11,239,191,189,239,191,189,105,38,42,14,239,191,189,239,191,189,121,17,33,201,176,63,239,191,189,109,15,42,123,21,239,191,189,110,239,191,189,208,171,20,116,239,191,189,33,239,191,189,74,34,9,12,126,239,191,189,63,239,191,189,239,191,189,239,191,189,72,71,46,239,191,189,88,49,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,20,239,191,189,119,25,239,191,189,122,22,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,33,46,70,76,239,191,189,239,191,189,77,63,62,120,122,40,239,191,189,239,191,189,239,191,189,239,191,189,110,14,62,239,191,189,101,239,191,189,239,191,189,78,239,191,189,75,64,239,191,189,64,239,191,189,89,113,71,15,239,191,189,91,119,239,191,189,126,239,191,189,41,217,172,31,0,239,191,189,239,191,189,239,191,189,239,191,189,32,88,239,191,189,15,91,100,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,239,191,189,31,9,225,148,136,60,86,223,143,64,107,239,191,189,16,239,191,189,78,239,191,189,85,239,191,189,239,191,189,31,97,105,239,191,189,56,239,191,189,239,191,189,239,191,189,127,10,52,112,239,191,189,239,191,189,39,0,239,191,189,12,97,239,191,189,239,191,189,239,191,189,120,97,65,239,191,189,239,191,189,84,1,239,191,189,239,191,189,239,191,189,208,184,239,191,189,34,239,191,189,26,239,191,189,239,191,189,239,191,189,104,239,191,189,239,191,189,90,239,191,189,205,177,239,191,189,87,239,191,189,239,191,189,239,191,189,33,86,239,191,189,8,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,97,63,239,191,189,239,191,189,239,191,189,5,74,239,191,189,98,239,191,189,9,73,239,191,189,6,112,239,191,189,29,107,124,81,239,191,189,2,15,239,191,189,239,191,189,57,239,191,189,107,20,239,191,189,239,191,189,239,191,189,0,115,27,49,239,191,189,239,191,189,58,123,107,112,239,191,189,239,191,189,99,69,2,61,239,191,189,239,191,189,239,191,189,85,239,191,189,239,191,189,61,239,191,189,79,113,203,157,112,78,239,191,189,91,239,191,189,239,191,189,47,239,191,189,63,239,191,189,103,239,191,189,65,239,191,189,111,239,191,189,87,239,191,189,38,239,191,189,46,87,49,239,191,189,65,123,239,191,189,222,161,239,191,189,69,23,239,191,189,10,29,239,191,189,92,38,112,21,23,239,191,189,239,191,189,96,78,20,239,191,189,23,239,191,189,55,239,191,189,75,239,191,189,239,191,189,65,239,191,189,86,239,191,189,112,119,66,12,239,191,189,86,34,113,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,222,147,49,239,191,189,209,137,45,239,191,189,239,191,189,50,105,7,239,191,189,64,239,191,189,239,191,189,38,239,191,189,216,181,239,191,189,239,191,189,10,94,119,62,239,191,189,111,239,191,189,239,191,189,2,60,239,191,189,239,191,189,239,191,189,94,16,110,239,191,189,239,191,189,67,239,191,189,107,239,191,189,52,79,40,48,239,191,189,3,43,24,34,239,191,189,11,239,191,189,239,191,189,16,239,191,189,239,191,189,239,191,189,239,191,189,17,47,45,13,99,71,76,239,191,189,239,191,189,11,239,191,189,113,78,104,48,41,40,22,239,191,189,117,239,191,189,239,191,189,26,23,239,191,189,239,191,189,239,191,189,61,94,239,191,189,78,239,191,189,239,191,189,90,239,191,189,7,65,239,191,189,239,191,189,75,115,12,67,112,109,239,191,189,88,239,191,189,239,191,189,124,239,191,189,71,8,119,69,19,239,191,189,239,191,189,90,118,122,89,24,239,191,189,239,191,189,13,239,191,189,34,239,191,189,81,239,191,189,200,149,37,239,191,189,214,167,109,74,125,239,191,189,118,118,79,62,239,191,189,239,191,189,100,239,191,189,75,59,239,191,189,54,239,191,189,26,239,191,189,239,191,189,239,191,189,209,134,0,42,59,127,115,81,104,61,78,28,16,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,42,34,46,239,191,189,22,52,239,191,189,239,191,189,11,239,191,189,33,34,239,191,189,239,191,189,239,191,189,13,117,76,20,239,191,189,69,239,191,189,239,191,189,239,191,189,239,191,189,31,126,60,239,191,189,55,83,116,239,191,189,14,107,239,191,189,88,101,20,6,239,191,189,69,239,191,189,27,43,239,191,189,91,78,239,191,189,109,85,43,237,140,152,39,119,239,191,189,239,191,189,239,191,189,84,239,191,189,212,149,239,191,189,74,125,73,239,191,189,239,191,189,16,55,14,208,150,75,123,239,191,189,210,143,34,239,191,189,18,239,191,189,239,191,189,73,239,191,189,210,135,239,191,189,239,191,189,29,79,239,191,189,239,191,189,113,239,191,189,111,239,191,189,18,18,81,34,93,29,29,28,239,191,189,76,239,191,189,239,191,189,239,191,189,102,239,191,189,101,239,191,189,10,239,191,189,98,95,239,191,189,118,117,239,191,189,72,25,239,191,189,55,239,191,189,218,145,44,239,191,189,125,16,239,191,189,239,191,189,108,239,191,189,44,206,139,239,191,189,239,191,189,5,239,191,189,239,191,189,239,191,189,51,13,102,83,12,239,191,189,21,239,191,189,239,191,189,78,20,3,94,239,191,189,52,114,26,239,191,189,239,191,189,239,191,189,239,191,189,215,158,239,191,189,54,239,191,189,112,239,191,189,239,191,189,76,98,2,3,239,191,189,115,61,31,112,103,116,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,87,19,239,191,189,85,34,239,191,189,56,107,54,200,156,239,191,189,239,165,171,67,126,199,160,92,239,191,189,239,191,189,220,144,105,239,191,189,14,7,53,69,239,191,189,104,239,191,189,25,239,191,189,239,191,189,122,41,239,191,189,201,151,125,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,125,35,239,191,189,61,113,7,239,191,189,20,239,191,189,196,185,76,41,100,0,239,191,189,239,191,189,109,71,239,191,189,239,191,189,108,4,239,191,189,11,239,191,189,73,2,84,59,70,239,191,189,69,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,111,72,239,191,189,51,124,39,239,191,189,239,191,189,56,54,239,191,189,17,30,239,191,189,49,222,189,239,191,189,239,191,189,239,191,189,126,209,141,239,191,189,239,191,189,239,191,189,239,191,189,40,118,239,191,189,74,6,122,79,46,239,191,189,239,191,189,21,239,191,189,44,93,106,239,191,189,239,191,189,74,120,239,191,189,239,191,189,105,25,239,191,189,110,7,71,55,239,191,189,239,191,189,239,191,189,89,239,191,189,89,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,111,239,191,189,77,239,191,189,76,19,34,4,239,191,189,97,239,191,189,10,239,191,189,93,239,191,189,239,191,189,239,191,189,51,23,239,191,189,7,55,239,191,189,239,191,189,210,167,5,29,239,191,189,86,239,191,189,36,239,191,189,239,191,189,46,59,32,114,239,191,189,36,123,239,191,189,34,239,191,189,239,191,189,78,239,191,189,7,239,191,189,16,239,191,189,99,239,191,189,50,103,239,191,189,239,191,189,85,239,191,189,239,191,189,13,4,104,66,127,239,191,189,10,239,191,189,47,239,191,189,239,191,189,239,191,189,56,239,191,189,20,81,20,239,191,189,100,239,191,189,239,191,189,239,191,189,79,239,191,189,98,127,108,204,147,122,79,203,177,85,22,119,78,239,191,189,121,239,191,189,68,52,239,191,189,69,85,103,42,239,191,189,30,22,239,191,189,39,239,191,189,61,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,105,62,48,239,191,189,56,239,191,189,239,191,189,239,191,189,220,157,2,51,74,239,191,189,63,123,36,9,55,239,191,189,84,239,191,189,239,191,189,124,239,191,189,40,239,191,189,116,96,6,239,191,189,114,0,121,84,5,4,35,13,100,239,191,189,72,239,191,189,19,107,239,191,189,75,239,191,189,121,235,172,164,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,22,102,239,191,189,239,191,189,220,144,51,239,191,189,81,57,119,1,239,191,189,239,191,189,109,11,239,191,189,46,105,110,75,239,191,189,119,239,191,189,27,21,239,191,189,26,205,147,118,81,72,239,191,189,78,38,239,191,189,18,239,191,189,239,191,189,56,11,239,191,189,239,191,189,1,239,191,189,239,191,189,119,239,191,189,1,97,73,108,197,136,239,154,185,239,191,189,239,191,189,24,3,239,191,189,239,191,189,38,239,191,189,239,191,189,239,191,189,71,69,239,191,189,239,191,189,239,191,189,54,63,239,191,189,239,191,189,239,191,189,50,101,239,191,189,239,191,189,45,239,191,189,21,7,239,191,189,55,239,191,189,54,43,89,239,191,189,239,191,189,31,8,59,0,239,191,189,49,239,191,189,78,47,90,85,239,191,189,100,54,239,191,189,239,191,189,59,239,191,189,239,191,189,97,239,191,189,117,239,191,189,44,239,191,189,31,239,191,189,200,189,17,26,83,239,191,189,37,22,54,89,239,191,189,11,1,239,191,189,239,191,189,115,239,191,189,60,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,124,239,191,189,239,191,189,50,14,81,239,191,189,85,239,191,189,30,64,1,42,62,31,79,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,28,1,2,239,191,189,112,124,53,23,239,191,189,22,239,191,189,239,191,189,48,45,107,4,75,97,80,239,191,189,239,191,189,26,85,239,191,189,58,19,100,239,191,189,97,57,114,239,191,189,75,239,191,189,219,169,48,29,239,191,189,62,32,208,166,7,239,191,189,127,239,191,189,16,239,191,189,75,77,38,89,239,191,189,239,191,189,2,239,191,189,110,239,191,189,93,24,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,54,95,82,239,191,189,239,191,189,45,127,17,239,191,189,239,191,189,115,77,239,191,189,239,191,189,24,83,239,191,189,22,239,191,189,75,115,112,239,191,189,239,191,189,239,191,189,239,191,189,104,239,191,189,38,113,27,239,191,189,99,239,191,189,73,239,191,189,239,191,189,239,191,189,119,32,239,191,189,71,79,239,191,189,94,120,239,191,189,68,239,191,189,219,158,239,191,189,88,98,239,191,189,108,120,239,191,189,17,239,191,189,239,191,189,239,191,189,25,239,191,189,126,239,191,189,47,113,125,239,191,189,239,191,189,203,164,44,33,19,75,239,191,189,73,109,63,97})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=12288-16383",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19325 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19325_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19325_s.txt", Encoding.UTF8);

    public Test19325() : base(recordedRequest, recordedResponse, "accounts8d43a02499eb9db")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{48,239,191,189,23,239,191,189,53,239,191,189,89,239,191,189,239,191,189,6,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,87,239,191,189,49,239,191,189,239,191,189,239,191,189,112,239,191,189,18,239,191,189,112,87,239,191,189,102,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,146,239,191,189,239,191,189,239,191,189,63,239,191,189,121,239,191,189,205,150,239,191,189,116,17,77,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,53,239,191,189,1,239,191,189,76,15,239,191,189,37,239,191,189,239,191,189,239,191,189,1,239,191,189,55,239,191,189,69,36,239,191,189,114,21,119,49,217,178,239,191,189,84,239,191,189,239,191,189,239,191,189,23,239,191,189,43,109,55,92,29,239,191,189,35,239,191,189,239,191,189,116,37,217,175,114,239,191,189,22,26,239,191,189,239,191,189,239,191,189,14,115,38,4,239,191,189,79,16,239,191,189,101,56,105,239,191,189,47,202,148,73,239,191,189,107,239,191,189,1,239,191,189,239,191,189,89,2,11,239,191,189,2,20,196,147,106,7,239,191,189,239,191,189,28,239,191,189,17,87,109,74,19,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,70,59,239,191,189,8,239,191,189,86,239,191,189,25,35,239,191,189,239,191,189,76,239,191,189,51,239,191,189,239,191,189,97,0,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,119,85,29,53,125,87,239,191,189,239,191,189,10,77,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,22,199,182,239,191,189,239,191,189,239,191,189,32,55,68,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,44,239,191,189,91,47,198,181,122,17,97,239,191,189,60,27,239,191,189,74,35,64,101,239,191,189,239,191,189,68,31,77,239,191,189,53,239,191,189,239,191,189,110,239,191,189,11,89,113,239,191,189,2,239,191,189,239,191,189,239,191,189,98,239,191,189,80,17,59,239,191,189,72,239,191,189,239,191,189,27,239,191,189,195,149,111,64,239,191,189,239,191,189,74,37,222,158,38,73,239,191,189,70,239,191,189,5,8,239,191,189,239,191,189,25,28,239,191,189,68,222,151,239,191,189,239,191,189,9,122,5,69,81,239,191,189,100,239,191,189,9,239,191,189,24,239,191,189,239,191,189,239,191,189,119,239,191,189,64,60,239,191,189,122,239,191,189,96,239,191,189,63,24,53,2,111,58,80,239,191,189,239,191,189,58,50,65,239,191,189,239,191,189,88,239,191,189,126,113,239,191,189,239,191,189,105,239,191,189,239,191,189,16,97,239,191,189,239,191,189,4,239,191,189,18,12,239,191,189,239,191,189,239,191,189,44,28,239,191,189,239,191,189,112,239,191,189,11,111,118,107,119,239,191,189,8,239,191,189,103,5,8,47,239,191,189,53,80,68,36,239,191,189,202,146,75,239,191,189,45,63,239,191,189,239,191,189,19,44,239,191,189,239,191,189,123,42,25,94,239,191,189,93,239,191,189,239,191,189,216,158,29,59,13,4,239,191,189,27,239,191,189,117,239,191,189,239,191,189,39,43,239,191,189,109,28,239,191,189,73,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,4,116,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,41,124,124,40,239,191,189,69,239,191,189,239,191,189,80,76,239,191,189,65,239,191,189,20,122,10,217,169,99,239,191,189,239,191,189,118,239,191,189,239,191,189,207,165,0,121,111,56,239,191,189,63,105,78,32,239,191,189,98,239,191,189,87,117,239,191,189,60,239,191,189,201,149,39,239,191,189,4,239,191,189,24,75,239,191,189,39,202,178,239,191,189,239,191,189,89,239,191,189,69,71,31,23,99,108,239,191,189,89,239,191,189,203,168,4,82})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a02499eb9db",
                        container: "$root",
                        blob: " a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21815 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21815_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21815_s.txt", Encoding.UTF8);

    public Test21815() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,124,48,10,100,239,191,189,46,69,46,102,91,239,191,189,92,53,239,191,189,15,115,72,239,191,189,239,191,189,47,239,191,189,0,239,191,189,239,191,189,54,239,191,189,88,45,36,239,191,189,87,239,191,189,239,191,189,239,191,189,100,78,239,191,189,239,191,189,239,191,189,78,78,239,191,189,56,112,239,191,189,239,191,189,239,191,189,20,59,44,1,239,191,189,120,49,239,191,189,124,54,85,46,239,191,189,239,191,189,24,9,239,191,189,3,239,191,189,210,177,239,191,189,239,191,189,239,191,189,126,239,191,189,120,239,191,189,73,200,137,239,191,189,102,239,191,189,67,239,191,189,239,191,189,239,191,189,115,66,88,239,191,189,239,191,189,23,239,191,189,239,191,189,13,120,54,239,191,189,239,191,189,108,7,239,191,189,58,123,122,239,191,189,239,191,189,72,0,80,80,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,38,17,216,144,239,191,189,121,200,177,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,47,28,239,191,189,104,124,239,191,189,119,95,67,42,65,7,239,191,189,51,106,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,239,191,189,89,239,191,189,114,239,191,189,208,144,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,95,239,191,189,201,175,239,191,189,239,191,189,101,108,114,47,126,63,24,14,239,191,189,24,239,191,189,9,110,64,90,239,191,189,10,239,191,189,239,191,189,207,162,112,64,97,239,191,189,239,191,189,11,116,58,28,96,239,191,189,42,119,239,191,189,17,66,75,239,191,189,119,239,191,189,18,239,191,189,11,239,191,189,22,80,239,191,189,122,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,43,16,71,239,191,189,101,12,239,191,189,109,239,191,189,58,36,67,239,191,189,109,239,191,189,199,178,21,87,16,94,88,86,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,81,87,3,56,239,191,189,239,191,189,0,239,191,189,122,43,107,239,191,189,239,191,189,239,191,189,208,129,210,135,28,239,191,189,239,191,189,24,239,191,189,239,191,189,210,186,3,58,219,140,239,191,189,212,170,239,191,189,32,11,70,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,23,239,191,189,108,239,191,189,239,191,189,239,191,189,2,99,84,239,191,189,57,101,120,85,239,191,189,239,191,189,70,239,191,189,63,80,239,191,189,88,239,191,189,65,239,191,189,96,239,191,189,65,112,239,191,189,13,239,191,189,8,239,191,189,239,191,189,239,191,189,101,52,65,119,239,191,189,40,75,21,113,125,239,191,189,239,191,189,90,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,239,191,189,42,239,191,189,97,239,191,189,239,191,189,239,191,189,89,92,218,139,15,239,191,189,18,239,191,189,239,191,189,119,239,191,189,13,239,191,189,239,191,189,112,239,191,189,17,239,191,189,70,56,239,191,189,111,239,191,189,11,239,191,189,58,239,191,189,239,191,189,123,23,53,239,191,189,99,23,33,239,191,189,42,74,52,121,31,48,33,86,239,191,189,48,90,40,239,191,189,239,191,189,239,191,189,64,58,121,114,239,191,189,73,127,29,78,118,239,191,189,77,96,239,191,189,67,86,239,191,189,78,239,191,189,239,191,189,126,239,191,189,25,239,191,189,78,57,90,239,191,189,239,191,189,116,54,239,191,189,61,239,191,189,239,191,189,52,239,191,189,239,191,189,45,239,191,189,3,73,239,191,189,239,191,189,239,191,189,110,217,161,217,190,2,61,239,191,189,108,96,239,191,189,239,191,189,16,37,92,109,2,239,191,189,239,191,189,34,239,191,189,239,191,189,109,20,25,103,60,111,239,191,189,239,191,189,239,191,189,211,140,100,239,191,189,239,191,189,63,239,191,189,120,239,191,189,239,191,189,51,35,239,191,189,239,191,189,115,239,191,189,239,191,189,120,0,239,191,189,37,239,191,189,72,239,191,189,107,239,191,189,239,191,189,86,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,17,239,191,189,57,116,46,103,38,47,35,89,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,31,239,191,189,36,239,191,189,239,191,189,28,48,123,239,191,189,239,191,189,33,239,191,189,48,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,75,91,74,239,191,189,239,191,189,239,191,189,123,239,191,189,43,239,191,189,97,61,98,13,48,9,239,191,189,109,59,35,239,191,189,9,239,191,189,124,239,191,189,4,103,239,191,189,79,15,239,191,189,44,239,191,189,44,108,66,239,191,189,48,239,191,189,239,191,189,114,45,4,239,191,189,80,239,191,189,239,191,189,239,191,189,0,0,239,191,189,239,191,189,239,191,189,97,56,65,98,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,28,239,191,189,53,63,53,239,191,189,239,191,189,51,239,191,189,205,132,239,191,189,97,4,4,44,239,191,189,68,239,191,189,239,191,189,79,104,100,104,239,191,189,239,191,189,43,239,191,189,8,36,31,40,239,191,189,239,191,189,93,26,94,239,191,189,24,18,239,191,189,239,191,189,239,191,189,62,239,191,189,239,191,189,60,94,239,191,189,27,59,239,191,189,80,239,191,189,50,204,163,65,118,13,43,239,191,189,239,191,189,92,239,191,189,239,191,189,29,239,191,189,17,239,191,189,239,191,189,239,191,189,223,130,106,239,191,189,42,239,191,189,28,239,191,189,104,9,239,191,189,71,82,62,50,42,78,239,191,189,72,239,191,189,5,239,191,189,121,12,239,191,189,239,191,189,4,31,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,239,191,189,74,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,123,239,191,189,20,116,239,191,189,239,191,189,123,239,191,189,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,72,2,23,239,191,189,239,191,189,239,191,189,126,98,239,191,189,239,191,189,112,232,161,172,3,34,26,120,239,191,189,239,191,189,65,239,191,189,116,111,52,60,203,180,14,87,239,191,189,239,191,189,88,239,191,189,89,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,104,23,239,191,189,36,2,239,191,189,22,239,191,189,79,239,191,189,97,2,239,191,189,90,123,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,84,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,83,78,21,97,239,191,189,239,191,189,0,217,181,239,191,189,74,50,97,239,191,189,239,191,189,126,123,239,191,189,100,239,191,189,239,191,189,38,100,31,53,239,191,189,50,20,113,28,239,191,189,114,38,195,131,57,119,239,191,189,14,239,191,189,239,191,189,239,191,189,93,103,43,88,239,191,189,39,65,239,191,189,43,33,116,39,239,191,189,65,239,191,189,24,239,191,189,239,191,189,68,125,239,191,189,239,191,189,59,239,191,189,93,239,191,189,6,239,191,189,239,191,189,113,18,25,50,7,239,191,189,9,239,191,189,73,127,73,239,191,189,6,71,5,78,92,239,191,189,54,41,239,191,189,36,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,102,239,191,189,14,33,112,239,191,189,239,191,189,15,91,239,191,189,239,191,189,119,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,120,53,239,191,189,1,239,191,189,208,167,239,191,189,77,86,239,191,189,239,191,189,83,16,24,29,239,191,189,112,40,105,71,239,191,189,239,191,189,239,191,189,103,223,172,239,191,189,98,239,191,189,117,239,191,189,239,191,189,15,47,239,191,189,194,137,17,80,239,191,189,239,191,189,108,239,191,189,239,191,189,55,85,121,94,119,239,191,189,239,191,189,239,191,189,57,92,239,191,189,63,239,191,189,239,191,189,29,35,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,68,239,191,189,94,90,52,95,215,160,108,32,62,49,47,239,191,189,50,82,239,191,189,214,160,239,191,189,239,191,189,239,191,189,67,123,18,239,191,189,239,191,189,44,239,191,189,87,239,191,189,215,175,77,17,239,191,189,0,28,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,1,126,106,239,191,189,239,191,189,239,191,189,64,96,81,239,191,189,239,191,189,239,191,189,71,70,106,239,191,189,239,191,189,21,99,102,239,191,189,239,191,189,120,239,191,189,81,239,191,189,67,43,239,191,189,0,239,191,189,121,122,239,191,189,239,191,189,96,59,48,239,191,189,239,191,189,78,239,191,189,127,239,191,189,30,239,191,189,76,10,81,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,27,86,80,201,149,21,239,191,189,81,239,191,189,36,103,239,191,189,239,191,189,10,110,239,191,189,85,127,239,191,189,51,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,32,100,51,239,191,189,18,239,191,189,239,191,189,69,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,239,191,189,239,191,189,215,183,33,239,191,189,0,239,191,189,47,239,191,189,239,191,189,239,191,189,200,163,34,239,191,189,29,207,158,239,191,189,69,29,239,191,189,17,239,191,189,27,239,191,189,197,137,239,191,189,94,48,76,239,191,189,57,73,239,191,189,123,239,191,189,109,31,239,191,189,4,98,43,20,239,191,189,86,34,44,239,191,189,39,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,48,5,239,191,189,59,89,114,38,239,191,189,127,57,105,239,191,189,239,191,189,239,191,189,48,239,191,189,239,191,189,24,239,191,189,239,191,189,114,76,113,239,191,189,92,239,191,189,55,127,239,191,189,47,239,191,189,239,191,189,2,75,210,171,239,191,189,39,239,191,189,59,116,239,191,189,239,191,189,239,191,189,73,60,32,48,239,191,189,239,191,189,239,191,189,117,65,223,189,239,191,189,80,239,191,189,239,191,189,120,239,191,189,56,239,191,189,10,239,191,189,87,239,191,189,85,36,239,191,189,239,191,189,74,113,222,182,239,191,189,89,31,239,191,189,7,239,191,189,6,239,191,189,53,64,34,239,191,189,25,91,74,42,25,75,60,211,139,46,239,191,189,79,239,191,189,11,239,191,189,239,191,189,0,239,191,189,239,191,189,109,239,191,189,2,239,191,189,63,221,157,239,191,189,57,239,191,189,119,239,191,189,22,239,191,189,239,191,189,10,42,239,191,189,112,109,239,191,189,53,10,43,85,103,239,191,189,15,239,191,189,3,64,239,191,189,70,73,239,191,189,239,191,189,23,239,191,189,11,77,123,99,2,25,19,239,191,189,218,132,3,1,239,191,189,30,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,119,239,191,189,12,239,191,189,239,191,189,53,121,239,191,189,65,239,191,189,21,22,239,191,189,35,239,191,189,51,239,191,189,24,239,191,189,239,191,189,75,12,239,191,189,50,34,3,239,191,189,82,125,239,191,189,65,23,51,65,239,191,189,119,205,160,47,100,13,111,239,191,189,14,53,239,191,189,108,239,191,189,92,4,239,191,189,239,191,189,75,239,191,189,239,191,189,239,191,189,2,87,239,191,189,123,122,239,191,189,58,239,191,189,239,191,189,104,239,191,189,4,35,102,80,239,191,189,75,126,239,191,189,31,239,191,189,239,191,189,239,191,189,239,191,189,55,239,191,189,120,239,191,189,239,191,189,79,239,191,189,127,107,239,191,189,239,191,189,73,78,239,191,189,214,177,92,239,191,189,26,239,191,189,239,191,189,56,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,98,6,5,239,191,189,73,68,239,191,189,32,65,46,53,239,191,189,98,239,191,189,239,191,189,239,191,189,7,239,191,189,98,239,191,189,5,109,239,191,189,76,239,191,189,12,239,191,189,239,191,189,239,191,189,103,239,191,189,239,191,189,28,239,191,189,8,126,197,145,4,239,191,189,14,239,191,189,112,46,123,239,191,189,40,239,191,189,2,239,191,189,60,25,239,191,189,239,191,189,239,191,189,119,239,191,189,50,61,239,191,189,239,191,189,70,218,129,98,99,199,144,32,239,191,189,117,239,191,189,239,191,189,239,191,189,78,239,191,189,96,239,191,189,239,191,189,239,191,189,35,239,191,189,239,191,189,113,239,191,189,59,239,191,189,19,6,12,95,239,191,189,13,70,112,239,191,189,239,191,189,24,54,96,96,121,44,20,239,191,189,90,3,239,191,189,239,191,189,23,239,191,189,71,89,218,163,111,239,191,189,16,239,191,189,40,13,124,25,239,191,189,22,205,177,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,93,56,40,27,239,191,189,37,23,109,51,239,191,189,0,239,191,189,239,191,189,110,14,83,239,191,189,96,98,239,191,189,217,169,109,239,191,189,239,191,189,100,46,239,191,189,239,191,189,125,239,191,189,239,191,189,52,70,76,239,191,189,239,191,189,96,42,239,191,189,239,191,189,96,126,239,191,189,239,191,189,239,191,189,22,74,239,191,189,47,120,73,72,239,191,189,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,101,86,33,29,110,239,191,189,53,239,191,189,239,191,189,121,43,122,239,191,189,239,191,189,77,239,191,189,239,191,189,5,239,191,189,124,104,85,239,191,189,37,112,213,159,239,191,189,123,239,191,189,239,191,189,73,239,191,189,104,239,191,189,41,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,118,239,191,189,81,239,191,189,239,191,189,60,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,98,48,53,91,239,191,189,239,191,189,100,239,191,189,16,239,191,189,239,191,189,239,191,189,15,239,191,189,239,191,189,14,98,239,191,189,239,191,189,239,191,189,25,81,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,72,125,121,74,239,191,189,38,32,103,108,239,191,189,87,51,8,239,191,189,92,239,191,189,97,33,120,36,42,239,191,189,51,118,239,191,189,239,191,189,72,239,191,189,83,239,191,189,239,191,189,26,239,191,189,35,239,191,189,30,120,81,23,239,191,189,107,239,191,189,239,191,189,67,239,191,189,239,191,189,121,239,191,189,20,10,239,191,189,40,107,239,191,189,239,191,189,74,2,239,191,189,239,191,189,239,191,189,65,19,124,239,191,189,61,94,239,191,189,239,191,189,61,84,15,9,239,191,189,113,239,191,189,239,191,189,126,51,239,191,189,1,239,191,189,239,191,189,63,239,191,189,50,239,191,189,105,239,191,189,30,239,191,189,118,239,191,189,36,10,113,87,37,239,191,189,5,81,238,161,183,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,216,172,239,191,189,207,187,239,191,189,14,87,212,151,239,191,189,75,239,191,189,88,239,191,189,104,239,191,189,105,239,191,189,239,191,189,103,215,169,45,239,191,189,18,45,50,126,239,191,189,88,110,239,191,189,113,8,239,191,189,239,191,189,50,239,191,189,25,239,191,189,239,191,189,41,239,191,189,91,239,191,189,239,191,189,79,226,145,174,20,239,191,189,113,239,191,189,34,239,191,189,29,239,191,189,239,191,189,37,85,239,191,189,12,239,191,189,72,96,55,125,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,115,65,123,69,239,191,189,88,239,191,189,68,116,65,239,191,189,239,191,189,4,239,191,189,83,27,239,191,189,45,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,19,239,191,189,239,191,189,20,239,191,189,239,191,189,239,191,189,46,239,191,189,100,239,191,189,66,239,191,189,84,27,239,191,189,18,99,239,191,189,122,51,239,191,189,94,108,239,191,189,106,100,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,95,239,191,189,17,68,239,191,189,239,191,189,239,128,176,116,239,191,189,1,25,194,141,239,191,189,116,119,99,239,191,189,31,34,239,191,189,32,61,239,191,189,111,239,191,189,239,191,189,78,239,191,189,15,37,239,191,189,239,191,189,239,191,189,239,191,189,54,93,239,191,189,111,239,191,189,65,65,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,87,239,191,189,61,239,191,189,239,191,189,6,82,239,191,189,21,239,191,189,98,239,191,189,123,239,191,189,35,15,239,191,189,89,61,26,239,191,189,46,50,239,191,189,65,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,78,45,239,191,189,93,117,212,170,47,11,61,89,98,223,148,99,239,191,189,109,239,191,189,30,88,66,95,62,41,102,93,68,239,191,189,44,96,239,191,189,56,70,239,191,189,94,77,13,198,154,9,239,191,189,14,15,101,239,191,189,239,191,189,1,1,239,191,189,83,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,239,191,189,2,239,191,189,127,33,28,75,54,21,121,239,191,189,1,21,239,191,189,51,80,239,191,189,84,239,191,189,92,67,239,191,189,239,191,189,219,148,121,90,8,111,94,104,207,130,121,239,191,189,11,100,229,178,179,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,66,87,239,191,189,22,79,97,239,191,189,76,44,42,239,191,189,239,191,189,239,191,189,66,199,183,16,239,191,189,126,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,119,6,239,191,189,239,191,189,109,239,191,189,24,239,191,189,239,191,189,71,24,109,239,191,189,45,239,191,189,239,191,189,239,191,189,10,239,191,189,115,3,17,239,191,189,4,239,191,189,14,75,48,239,191,189,35,239,191,189,126,21,239,191,189,37,43,239,191,189,125,215,169,239,191,189,239,191,189,112,239,191,189,106,239,191,189,109,111,69,86,239,191,189,239,191,189,239,191,189,50,116,239,191,189,53,239,191,189,239,191,189,239,191,189,205,128,30,35,107,239,191,189,89,97,239,191,189,239,191,189,124,50,71,239,191,189,13,239,191,189,208,153,239,191,189,239,191,189,239,191,189,91,43,22,239,191,189,239,191,189,96,47,239,191,189,213,185,21,239,191,189,17,239,191,189,77,239,191,189,123,6,20,14,239,191,189,239,191,189,123,100,239,191,189,80,102,84,100,97,239,191,189,33,239,191,189,239,191,189,239,191,189,85,97,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,28,106,239,191,189,53,84,68,30,239,191,189,239,191,189,90,201,176,239,191,189,239,191,189,239,191,189,219,144,116,239,191,189,239,191,189,239,191,189,122,20,85,55,26,55,27,239,191,189,207,161,239,191,189,71,62,127,49,0,32,66,239,191,189,36,59,239,191,189,71,239,191,189,125,60,239,191,189,85,47,124,239,191,189,40,127,86,32,239,191,189,12,4,239,191,189,111,239,191,189,40,239,191,189,105,239,191,189,19,239,191,189,239,191,189,112,49,239,191,189,94,239,191,189,63,27,13,239,191,189,239,191,189,239,191,189,28,239,191,189,239,191,189,37,239,191,189,31,239,191,189,40,16,1,19,62,51,38,52,239,191,189,239,191,189,80,58,239,191,189,40,55,122,239,191,189,74,239,191,189,202,185,22,5,239,191,189,121,103,239,191,189,83,105,239,191,189,2,26,74,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,55,239,191,189,239,191,189,73,239,191,189,89,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,0,84,5,17,10,16,239,191,189,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,62,127,239,191,189,98,88,16,239,191,189,39,239,191,189,239,191,189,50,31,239,191,189,239,191,189,110,92,12,40,25,239,191,189,239,191,189,216,173,239,191,189,239,191,189,27,80,100,239,191,189,239,191,189,123,239,191,189,106,212,148,101,108,125,239,191,189,239,191,189,239,191,189,222,138,77,239,191,189,122,53,239,191,189,100,110,239,191,189,239,191,189,28,239,191,189,15,101,239,191,189,215,160,60,239,191,189,45,96,239,191,189,65,239,191,189,239,191,189,239,191,189,81,8,239,191,189,239,191,189,40,52,3,78,95,239,191,189,72,239,191,189,0,88,19,239,191,189,107,112,239,191,189,46,239,191,189,239,191,189,239,191,189,69,48,239,191,189,125,239,191,189,12,51,239,191,189,104,68,91,126,40,239,191,189,239,191,189,239,191,189,11,23,114,239,191,189,87,86,5,45,8,239,191,189,108,63,69,7,34,116,91,239,191,189,96,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,239,191,189,125,118,239,191,189,239,191,189,239,191,189,239,191,189,119,239,191,189,239,191,189,23,33,239,191,189,239,191,189,239,191,189,43,102,116,35,239,191,189,239,191,189,127,97,34,239,191,189,34,118,239,191,189,239,191,189,36,239,191,189,239,191,189,31,52,239,191,189,216,142,239,191,189,46,239,191,189,239,191,189,199,153,77,10,83,239,191,189,44,113,239,191,189,58,17,93,239,191,189,239,191,189,4,28,84,239,191,189,239,191,189,116,54,123,239,191,189,51,239,191,189,2,116,239,191,189,22,239,191,189,239,191,189,69,101,10,44,239,191,189,19,23,239,191,189,110,73,45,47,239,191,189,116,57,108,112,208,188,58,239,191,189,118,74,95,75,18,25,239,191,189,80,63,123,90,47,92,239,191,189,239,191,189,239,191,189,239,191,189,30,8,61,42,73,43,9,76,239,191,189,239,191,189,71,239,191,189,3,239,191,189,90,98,19,239,191,189,26,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,47,239,191,189,239,191,189,0,239,191,189,239,191,189,64,239,191,189,216,177,239,191,189,239,191,189,239,191,189,45,31,86,239,191,189,116,90,65,239,191,189,59,239,191,189,239,191,189,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,74,15,239,191,189,239,191,189,25,93,53,75,15,21,7,239,191,189,43,47,239,191,189,101,116,239,191,189,239,191,189,83,239,191,189,95,239,191,189,75,239,191,189,239,191,189,50,239,191,189,52,69,239,191,189,99,239,191,189,33,103,239,191,189,77,239,191,189,20,239,191,189,32,239,191,189,101,69,58,239,191,189,16,107,88,102,239,191,189,91,239,191,189,239,191,189,239,191,189,112,100,96,37,42,98,23,239,191,189,105,239,191,189,9,9,239,191,189,2,24,239,191,189,239,191,189,57,50,44,239,191,189,89,16,239,191,189,239,191,189,239,191,189,122,239,191,189,113,80,239,191,189,29,75,125,52,239,191,189,87,238,151,189,239,191,189,239,191,189,219,151,239,191,189,6,239,191,189,86,78,24,207,168,118,239,191,189,239,191,189,22,83,239,191,189,66,98,239,191,189,73,88,25,33,239,191,189,74,239,191,189,47,100,239,191,189,239,191,189,116,239,191,189,93,125,121,239,191,189,239,191,189,35,36,126,89,239,191,189,217,166,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,52,239,191,189,83,67,239,191,189,117,239,191,189,72,89,239,191,189,31,239,191,189,49,6,1,25,239,191,189,239,191,189,239,191,189,7,102,63,239,191,189,239,191,189,239,191,189,239,191,189,72,68,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,60,26,239,191,189,3,198,147,201,156,95,239,191,189,79,210,164,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,17,239,191,189,68,42,44,239,191,189,43,239,191,189,213,132,239,191,189,62,239,191,189,98,239,191,189,121,239,191,189,239,191,189,65,239,191,189,118,39,106,89,72,118,239,191,189,239,191,189,239,191,189,45,239,191,189,68,239,191,189,120,239,191,189,239,191,189,214,144,239,191,189,21,104,45,239,191,189,239,191,189,239,191,189,16,58,66,239,191,189,126,239,191,189,239,191,189,75,114,126,239,191,189,30,239,191,189,239,191,189,16,239,191,189,212,168,239,191,189,239,191,189,239,191,189,31,239,191,189,42,239,191,189,77,239,191,189,43,106,72,96,239,191,189,239,191,189,55,60,93,239,191,189,71,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,32,4,239,191,189,88,30,56,37,127,26,110,239,191,189,239,191,189,89,239,191,189,31,7,53,239,191,189,239,191,189,85,239,191,189,122,239,191,189,239,191,189,239,191,189,33,239,191,189,239,191,189,86,37,47,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,65,86,112,239,191,189,33,239,191,189,104,107,45,27,239,191,189,51,239,191,189,26,5,239,191,189,3,239,191,189,81,33,239,191,189,239,191,189,239,191,189,127,41,239,191,189,62,239,191,189,36,239,191,189,3,239,191,189,109,70,72,56,239,191,189,239,191,189,88,239,191,189,70,33,239,191,189,239,191,189,34,96,21,239,191,189,33,239,191,189,56,239,191,189,120,36,69,239,191,189,239,191,189,44,239,191,189,126,71,115,23,239,191,189,239,191,189,126,239,191,189,205,178,17,77,239,191,189,219,169,8,9,239,191,189,6,239,191,189,41,89,3,29,239,191,189,34,239,191,189,34,3,116,239,191,189,99,44,20,239,191,189,218,128,114,239,191,189,92,239,191,189,67,239,191,189,111,239,191,189,239,191,189,73,239,191,189,122,60,239,191,189,62,239,191,189,239,191,189,239,191,189,36,68,86,76,239,191,189,239,191,189,92,239,191,189,89,239,191,189,239,191,189,32,119,19,207,135,239,191,189,198,170,239,191,189,229,150,148,239,191,189,239,191,189,239,191,189,87,239,191,189,198,185,239,191,189,219,149,239,191,189,239,191,189,239,191,189,42,37,46,239,191,189,239,191,189,116,105,239,191,189,239,191,189,239,191,189,210,137,239,191,189,239,191,189,35,119,239,191,189,227,161,141,239,191,189,239,191,189,109,239,191,189,122,239,191,189,8,239,191,189,10,210,138,239,191,189,112,57,93,113,239,191,189,32,45,113,45,239,191,189,20,6,239,191,189,239,191,189,17,239,191,189,60,239,191,189,239,191,189,239,191,189,22,239,191,189,103,239,191,189,72,15,239,191,189,108,201,165,10,63,239,191,189,25,113,87,239,191,189,222,189,239,191,189,47,96,239,191,189,12,89,222,173,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,89,83,239,191,189,239,191,189,79,16,93,5,99,62,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,93,63,239,191,189,239,191,189,239,191,189,25,90,95,106,98,24,117,239,191,189,239,191,189,53,103,239,191,189,29,97,239,191,189,239,191,189,239,191,189,88,42,239,191,189,239,191,189,96,239,191,189,239,191,189,239,191,189,44,60,39,112,239,191,189,239,191,189,64,239,191,189,57,239,191,189,90,239,191,189,68,239,191,189,239,191,189,103,118,109,50,239,191,189,109,88,239,191,189,206,146,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,218,169,104,239,191,189,56,239,191,189,102,239,191,189,239,191,189,239,191,189,28,239,191,189,197,158,239,191,189,239,191,189,19,239,191,189,88,37,239,191,189,23,239,191,189,6,239,191,189,239,191,189,62,239,191,189,3,57,239,191,189,234,172,161,127,59,69,88,87,12,0,239,191,189,239,191,189,215,137,239,191,189,74,36,239,191,189,239,191,189,239,191,189,96,103,15,239,191,189,26,98,44,84,89,197,156,80,239,191,189,50,55,35,31,110,239,191,189,239,191,189,66,76,36,18,51,8,47,54,80,239,191,189,124,112,239,191,189,239,191,189,239,191,189,68,239,191,189,239,191,189,32,239,191,189,44,3,239,191,189,59,58,239,191,189,239,191,189,239,191,189,81,111,43,239,191,189,239,191,189,212,180,20,66,239,191,189,239,191,189,18,50,239,191,189,3,102,72,44,239,191,189,70,239,191,189,239,191,189,98,77,214,142,63,239,191,189,239,191,189,215,160,127,239,191,189,239,191,189,239,191,189,239,191,189,198,150,239,191,189,2,117,1,239,191,189,44,14,239,191,189,53,0,76,239,191,189,14,239,191,189,66,239,191,189,94,239,191,189,239,191,189,105,2,69,117,122,89,37,239,147,168,17,33,239,191,189,239,191,189,239,191,189,239,191,189,68,50,239,191,189,239,191,189,54,63,37,89,62,77,239,191,189,200,178,61,239,191,189,239,191,189,2,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,110,61,122,7,35,222,174,111,121,29,239,191,189,239,191,189,108,239,191,189,41,239,191,189,239,191,189,54,44,98,92,60,85,27,239,191,189,31,239,191,189,37,1,63,239,191,189,55,72,239,191,189,239,191,189,239,191,189,30,53,95,239,191,189,239,191,189,79,239,191,189,63,239,191,189,26,33,108,51,239,191,189,239,191,189,86,239,191,189,69,17,0,37,236,153,191,15,73,119,239,191,189,70,239,191,189,36,83,239,191,189,101,239,191,189,239,191,189,214,141,239,191,189,13,239,191,189,22,87,112,239,191,189,50,239,191,189,74,239,191,189,96,104,3,123,239,191,189,239,191,189,50,239,191,189,239,191,189,239,191,189,60,216,183,239,191,189,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,65,105,4,89,14,239,191,189,40,239,191,189,239,191,189,87,44,65,239,191,189,42,32,216,161,197,140,27,54,239,191,189,239,191,189,52,239,191,189,29,38,122,48,96,37,82,239,191,189,239,191,189,38,239,191,189,118,239,191,189,239,191,189,239,191,189,115,222,179,239,191,189,117,17,6,239,191,189,239,191,189,48,8,107,239,191,189,73,67,239,191,189,239,191,189,104,239,191,189,109,239,191,189,239,191,189,124,50,218,145,6,3,239,191,189,97,2,52,239,191,189,88,74,239,191,189,239,191,189,122,11,31,239,191,189,59,47,28,239,191,189,223,150,239,191,189,207,166,54,239,191,189,48,239,191,189,76,54,239,191,189,239,191,189,239,191,189,11,3,77,239,191,189,45,239,191,189,124,41,239,191,189,239,191,189,17,71,239,191,189,239,191,189,77,8,86,77,21,239,191,189,112,32,239,191,189,239,191,189,204,148,239,191,189,239,191,189,11,20,5,239,191,189,239,191,189,0,28,87,239,191,189,1,73,107,239,191,189,239,191,189,239,191,189,94,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,97,62,239,191,189,71,239,191,189,239,191,189,12,239,191,189,88,239,191,189,49,239,191,189,239,191,189,75,204,135,239,191,189,239,191,189,55,239,191,189,91,239,191,189,239,191,189,239,191,189,36,21,42,102,239,191,189,98,101,57,239,191,189,205,160,10,239,191,189,110,239,191,189,3,239,191,189,239,191,189,239,191,189,214,177,11,70,239,191,189,239,191,189,87,55,208,171,239,191,189,125,239,191,189,101,239,191,189,35,208,186,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,239,191,189,217,141,11,51,73,239,191,189,239,191,189,2,42,24,207,140,239,191,189,239,191,189,43,239,191,189,239,191,189,38,80,196,164,239,191,189,75,239,191,189,73,11,23,239,191,189,88,239,191,189,28,100,239,191,189,15,125,239,191,189,239,191,189,120,81,239,191,189,70})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=16384-20479",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21816 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21816_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21816_s.txt", Encoding.UTF8);

    public Test21816() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{98,239,191,189,10,1,46,16,53,239,191,189,239,191,189,105,200,145,239,191,189,29,13,66,28,239,191,189,61,117,239,191,189,239,191,189,113,239,191,189,106,239,191,189,239,191,189,4,239,191,189,239,191,189,21,239,191,189,95,125,66,21,64,239,191,189,26,239,191,189,239,191,189,46,112,79,84,239,191,189,11,239,191,189,111,103,239,191,189,239,191,189,19,123,239,191,189,239,191,189,69,14,239,191,189,239,191,189,239,191,189,49,73,23,84,239,191,189,50,105,239,191,189,239,191,189,1,45,239,191,189,66,239,191,189,110,58,33,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,40,239,191,189,239,191,189,239,191,189,212,137,239,191,189,50,88,239,191,189,111,239,191,189,239,191,189,89,239,191,189,97,239,191,189,239,191,189,22,119,101,122,239,191,189,239,191,189,239,191,189,59,126,36,102,239,191,189,6,239,191,189,239,191,189,47,239,191,189,239,191,189,49,78,239,191,189,81,40,239,191,189,239,191,189,73,239,191,189,239,191,189,239,191,189,38,70,239,191,189,239,191,189,123,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,90,127,118,19,239,191,189,107,46,47,81,13,239,191,189,78,239,191,189,239,191,189,116,239,191,189,4,239,191,189,239,191,189,239,191,189,31,4,27,124,126,122,63,2,64,81,239,191,189,69,125,2,123,239,191,189,91,239,191,189,239,191,189,117,239,191,189,22,239,191,189,221,182,239,191,189,30,9,84,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,85,99,239,191,189,239,191,189,59,43,43,239,191,189,239,191,189,18,127,209,147,41,239,191,189,239,191,189,53,239,191,189,39,6,8,94,62,198,175,92,53,239,191,189,78,89,19,239,191,189,239,191,189,85,37,102,97,58,239,191,189,74,239,191,189,39,239,191,189,239,191,189,54,239,191,189,239,191,189,239,191,189,80,239,191,189,8,71,239,191,189,239,191,189,239,191,189,37,51,239,191,189,239,191,189,239,191,189,125,239,191,189,239,191,189,239,191,189,239,191,189,1,61,3,68,64,239,191,189,70,239,191,189,58,239,191,189,115,239,191,189,239,191,189,239,191,189,85,4,239,191,189,239,191,189,11,239,191,189,39,239,191,189,46,64,45,84,239,191,189,84,78,239,191,189,0,204,141,239,191,189,76,239,191,189,101,15,239,191,189,239,191,189,106,108,239,191,189,64,239,191,189,239,191,189,52,12,239,191,189,120,239,191,189,15,239,191,189,24,218,139,239,191,189,3,18,239,191,189,239,191,189,239,191,189,239,191,189,90,239,191,189,239,191,189,1,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,72,38,239,191,189,239,191,189,237,142,137,31,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,117,33,239,191,189,6,98,239,191,189,32,53,239,191,189,104,239,191,189,11,239,191,189,239,191,189,239,191,189,40,217,181,63,239,191,189,239,191,189,31,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,23,118,239,191,189,206,140,239,191,189,239,191,189,113,60,239,191,189,18,68,58,239,191,189,99,239,191,189,239,191,189,39,239,191,189,239,191,189,46,239,191,189,45,239,191,189,2,35,30,239,191,189,116,239,191,189,86,12,104,239,191,189,239,191,189,60,22,239,191,189,239,191,189,239,191,189,239,191,189,197,144,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189,73,28,72,19,239,191,189,8,239,191,189,239,191,189,82,79,123,22,239,191,189,56,209,149,239,191,189,70,209,177,103,239,191,189,93,105,32,239,191,189,239,191,189,28,14,239,191,189,239,191,189,211,175,239,191,189,239,191,189,76,239,191,189,239,191,189,239,191,189,13,92,30,100,77,73,122,239,191,189,116,20,239,191,189,239,191,189,239,191,189,55,80,118,239,191,189,239,191,189,239,191,189,11,50,116,239,191,189,239,191,189,84,239,191,189,102,28,117,239,191,189,239,191,189,239,191,189,239,191,189,85,72,111,16,32,239,191,189,239,191,189,97,8,239,191,189,239,191,189,78,2,120,78,76,239,191,189,201,191,239,191,189,239,191,189,232,138,172,239,191,189,239,191,189,19,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,1,12,239,191,189,7,7,239,191,189,239,191,189,75,82,239,191,189,107,6,5,6,239,191,189,239,191,189,239,191,189,41,239,191,189,34,44,25,239,191,189,108,239,191,189,239,191,189,23,127,239,191,189,239,191,189,98,120,239,191,189,239,191,189,76,239,191,189,239,191,189,71,69,239,191,189,9,115,62,10,124,239,191,189,239,191,189,239,191,189,239,191,189,37,239,191,189,213,152,113,239,191,189,239,191,189,36,117,74,68,239,191,189,63,239,191,189,88,110,239,191,189,13,76,239,191,189,239,191,189,86,239,191,189,239,191,189,21,25,239,191,189,239,191,189,239,191,189,239,191,189,57,28,37,239,191,189,109,8,239,191,189,239,191,189,239,191,189,100,239,191,189,33,239,191,189,1,74,201,186,229,155,137,119,89,57,74,239,191,189,106,239,191,189,88,20,13,70,239,191,189,16,39,112,239,191,189,75,80,239,191,189,18,239,191,189,97,85,239,191,189,53,239,191,189,239,191,189,239,191,189,79,239,191,189,239,191,189,66,103,239,191,189,239,191,189,239,191,189,58,239,191,189,239,191,189,239,191,189,92,47,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,15,110,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,109,239,191,189,239,191,189,14,239,191,189,8,22,24,4,29,78,100,239,191,189,127,239,191,189,239,191,189,71,239,191,189,87,239,191,189,239,191,189,80,239,191,189,239,191,189,9,239,191,189,64,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,8,239,191,189,4,239,191,189,239,191,189,239,191,189,38,239,191,189,62,239,191,189,239,191,189,239,191,189,116,86,239,191,189,239,191,189,239,191,189,114,239,191,189,239,191,189,108,239,191,189,28,2,68,5,239,191,189,200,135,239,191,189,123,44,125,239,191,189,123,239,191,189,239,191,189,239,191,189,239,191,189,16,48,204,191,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,22,48,55,94,34,239,191,189,2,119,239,191,189,239,191,189,94,56,239,191,189,12,83,31,239,191,189,239,191,189,239,191,189,23,236,184,175,105,239,191,189,38,84,239,191,189,68,112,45,24,239,191,189,59,100,239,191,189,70,59,88,3,239,191,189,127,50,51,210,147,56,239,191,189,239,191,189,224,185,191,211,181,239,191,189,94,239,191,189,205,190,239,191,189,91,23,50,22,239,191,189,70,126,75,239,191,189,87,216,158,239,191,189,239,191,189,112,109,239,191,189,124,239,191,189,12,239,191,189,38,100,239,191,189,110,68,3,239,191,189,6,123,121,125,92,239,191,189,239,191,189,76,28,239,191,189,239,191,189,20,239,191,189,20,108,7,27,61,239,191,189,69,35,239,191,189,4,54,239,191,189,14,239,191,189,239,191,189,239,191,189,95,66,1,123,239,191,189,239,191,189,239,191,189,95,33,37,50,239,191,189,32,105,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,49,74,239,191,189,239,191,189,45,118,66,239,191,189,78,239,191,189,125,239,191,189,64,239,191,189,239,191,189,77,115,239,191,189,239,191,189,239,191,189,23,239,191,189,100,2,111,11,44,239,191,189,14,64,55,114,239,191,189,17,239,191,189,239,191,189,24,115,101,29,86,239,191,189,78,66,239,191,189,239,191,189,239,191,189,127,94,239,191,189,16,40,239,191,189,239,191,189,25,239,191,189,89,239,191,189,239,191,189,107,22,16,63,239,191,189,102,11,239,191,189,47,239,191,189,239,191,189,52,239,191,189,43,239,191,189,239,191,189,64,121,33,95,239,191,189,82,239,191,189,92,91,47,14,239,191,189,33,239,191,189,52,99,239,191,189,239,191,189,239,191,189,6,69,239,191,189,239,191,189,219,151,239,191,189,239,191,189,239,191,189,239,191,189,126,16,239,191,189,40,239,191,189,239,191,189,9,55,37,239,191,189,25,106,239,191,189,239,191,189,116,87,77,239,191,189,55,239,191,189,119,239,191,189,74,50,239,191,189,93,239,191,189,239,191,189,70,239,191,189,13,239,191,189,0,239,191,189,239,191,189,31,17,239,191,189,34,31,42,44,110,239,191,189,239,191,189,239,191,189,239,191,189,54,239,191,189,74,239,191,189,81,12,10,239,191,189,239,191,189,202,164,239,191,189,46,58,239,191,189,93,239,191,189,80,105,239,191,189,6,85,69,239,191,189,239,191,189,24,116,75,49,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,125,47,119,239,191,189,239,191,189,239,191,189,89,71,239,191,189,239,191,189,239,191,189,58,17,204,143,51,239,191,189,239,191,189,239,191,189,62,239,191,189,42,56,239,191,189,239,191,189,239,191,189,53,120,239,191,189,239,191,189,55,239,191,189,47,239,191,189,239,191,189,117,10,6,239,191,189,239,191,189,239,191,189,51,39,239,191,189,17,32,239,191,189,194,180,18,74,239,191,189,239,191,189,239,191,189,4,63,92,16,83,36,239,191,189,51,239,191,189,239,191,189,77,10,48,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,63,239,191,189,239,191,189,16,18,239,191,189,239,191,189,113,239,191,189,9,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,110,55,6,239,191,189,10,239,191,189,100,239,191,189,239,191,189,68,33,12,46,73,99,198,179,25,42,239,191,189,239,191,189,96,94,59,83,30,239,191,189,239,191,189,239,191,189,14,16,53,109,239,191,189,218,166,239,191,189,239,191,189,239,191,189,17,96,73,27,103,211,173,107,207,149,239,191,189,36,22,106,239,191,189,239,191,189,215,168,239,191,189,98,239,191,189,83,239,191,189,239,191,189,239,191,189,51,236,159,140,111,239,191,189,41,239,191,189,110,24,239,191,189,239,191,189,69,239,191,189,103,239,191,189,239,191,189,239,191,189,31,6,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,89,51,239,191,189,13,239,191,189,96,239,191,189,239,191,189,43,239,191,189,82,33,33,239,191,189,239,191,189,75,239,191,189,58,127,239,191,189,239,191,189,239,191,189,57,33,216,142,108,239,191,189,64,239,191,189,239,191,189,89,239,191,189,239,191,189,239,191,189,196,128,239,191,189,239,191,189,115,71,68,239,191,189,82,119,239,191,189,239,191,189,113,77,239,191,189,239,191,189,239,191,189,63,33,239,191,189,239,191,189,239,191,189,53,80,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,78,56,239,191,189,239,191,189,239,191,189,34,101,11,72,101,25,239,191,189,49,239,191,189,239,191,189,113,239,191,189,3,44,26,239,191,189,239,191,189,106,202,186,99,239,191,189,127,45,239,191,189,50,91,126,88,239,191,189,239,191,189,97,239,191,189,121,30,51,217,138,103,18,27,3,239,191,189,239,191,189,239,191,189,222,137,239,191,189,222,156,63,59,34,17,239,191,189,239,191,189,26,239,191,189,239,191,189,43,239,191,189,13,47,16,208,137,14,239,191,189,239,191,189,111,2,239,191,189,239,191,189,96,228,134,134,227,168,144,239,191,189,239,191,189,99,239,191,189,62,239,191,189,239,191,189,60,239,191,189,239,191,189,231,128,134,239,191,189,42,239,191,189,202,151,13,0,239,191,189,239,191,189,239,191,189,239,191,189,56,106,114,95,239,191,189,6,239,191,189,239,191,189,62,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,16,239,191,189,239,191,189,64,24,239,191,189,239,191,189,49,239,191,189,53,83,239,191,189,239,191,189,213,168,211,169,239,191,189,239,191,189,87,239,191,189,78,91,63,239,191,189,43,40,65,239,191,189,101,12,239,191,189,42,239,191,189,239,191,189,49,234,182,172,73,239,191,189,57,239,191,189,41,239,191,189,73,239,191,189,239,191,189,39,239,191,189,39,22,71,239,191,189,239,191,189,115,239,191,189,239,191,189,239,191,189,95,65,239,191,189,73,40,107,239,191,189,39,239,191,189,119,239,191,189,239,191,189,73,74,239,191,189,239,191,189,239,191,189,49,239,191,189,87,239,191,189,63,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,87,23,239,191,189,239,191,189,116,239,191,189,122,0,61,239,191,189,125,16,30,61,239,191,189,239,191,189,204,166,97,55,66,239,191,189,71,103,31,239,191,189,66,239,191,189,67,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,219,137,96,45,8,15,48,88,239,191,189,7,47,239,191,189,37,239,191,189,7,4,60,104,4,123,90,239,191,189,87,239,191,189,239,191,189,80,239,191,189,239,191,189,239,191,189,10,31,115,100,239,191,189,19,83,108,121,88,40,17,239,191,189,239,191,189,96,239,191,189,9,28,49,59,239,191,189,114,239,191,189,239,191,189,62,54,11,49,239,191,189,78,239,191,189,90,114,239,191,189,239,191,189,239,191,189,40,121,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,106,239,191,189,38,239,191,189,239,191,189,239,191,189,52,239,191,189,239,191,189,12,239,191,189,42,239,191,189,37,117,8,34,239,191,189,42,239,191,189,205,158,239,191,189,20,120,52,224,162,176,239,191,189,239,191,189,239,191,189,239,191,189,212,128,239,191,189,58,239,191,189,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,2,4,120,239,191,189,239,191,189,239,191,189,110,14,239,191,189,239,191,189,17,126,239,191,189,239,191,189,239,191,189,239,191,189,15,239,191,189,68,30,81,239,191,189,35,239,191,189,28,239,191,189,30,239,191,189,239,191,189,70,24,239,191,189,85,222,158,55,239,191,189,59,21,119,239,191,189,9,239,191,189,211,187,21,239,191,189,239,191,189,5,239,191,189,19,120,239,191,189,239,191,189,15,85,239,191,189,239,191,189,239,191,189,79,25,28,239,191,189,239,191,189,239,191,189,80,21,239,191,189,6,239,191,189,239,191,189,239,191,189,112,72,60,79,44,7,42,44,239,191,189,5,67,239,191,189,45,239,191,189,239,191,189,75,239,191,189,44,39,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,112,239,191,189,106,239,191,189,239,191,189,63,239,191,189,80,105,239,191,189,6,125,239,191,189,239,191,189,35,40,99,239,191,189,239,191,189,126,239,191,189,239,191,189,100,239,191,189,239,191,189,61,239,191,189,239,191,189,239,191,189,91,4,117,51,66,239,191,189,45,239,191,189,239,191,189,239,191,189,197,153,67,196,187,239,191,189,239,191,189,239,191,189,109,4,107,239,191,189,99,239,191,189,122,8,239,191,189,239,191,189,239,191,189,51,239,191,189,239,191,189,5,116,13,206,144,74,91,4,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,120,36,239,191,189,239,191,189,239,191,189,68,57,239,191,189,111,210,161,239,191,189,239,191,189,58,49,239,191,189,212,152,95,45,239,191,189,207,182,239,191,189,75,239,191,189,239,191,189,104,14,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,99,239,191,189,239,191,189,70,68,94,99,5,58,44,239,191,189,239,191,189,32,239,191,189,98,239,191,189,239,191,189,239,191,189,1,81,239,191,189,109,239,191,189,239,191,189,105,239,191,189,208,146,239,191,189,239,191,189,42,239,191,189,35,239,191,189,206,161,0,81,27,239,191,189,48,239,191,189,124,239,191,189,75,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,53,67,220,157,239,191,189,239,191,189,94,88,1,38,109,118,4,239,191,189,206,173,113,49,33,239,191,189,239,191,189,239,191,189,69,119,42,59,239,191,189,239,191,189,64,36,239,191,189,239,191,189,239,191,189,107,239,191,189,117,126,66,94,107,36,239,191,189,37,239,191,189,5,239,191,189,239,191,189,44,69,120,239,191,189,33,7,5,58,239,191,189,101,115,82,239,191,189,105,239,191,189,1,239,191,189,239,191,189,44,85,17,56,239,191,189,239,191,189,239,191,189,115,239,191,189,61,31,239,191,189,36,239,191,189,239,191,189,239,191,189,239,191,189,200,159,239,191,189,239,191,189,239,191,189,49,239,191,189,15,11,239,191,189,114,239,191,189,239,191,189,239,191,189,35,239,191,189,82,100,239,191,189,26,13,239,191,189,239,191,189,95,239,191,189,57,239,191,189,239,191,189,113,78,239,191,189,239,191,189,50,239,191,189,239,191,189,98,239,191,189,239,191,189,90,36,83,40,239,191,189,239,191,189,79,239,191,189,17,64,239,191,189,239,191,189,239,191,189,69,100,101,239,191,189,66,10,95,40,239,191,189,52,223,157,239,191,189,72,239,191,189,239,191,189,239,191,189,4,239,191,189,40,92,9,113,239,191,189,228,158,150,15,239,191,189,40,239,191,189,239,191,189,117,125,98,239,191,189,239,191,189,34,239,191,189,87,111,239,191,189,239,191,189,239,191,189,115,239,191,189,43,239,191,189,239,191,189,50,22,59,57,239,191,189,117,60,242,158,184,164,115,80,79,112,119,239,191,189,40,63,239,191,189,239,191,189,239,191,189,78,106,239,191,189,239,191,189,71,239,191,189,84,90,114,239,191,189,65,239,191,189,18,239,191,189,239,191,189,239,191,189,8,38,239,191,189,46,106,18,239,191,189,31,125,82,120,118,98,239,191,189,239,191,189,239,191,189,120,61,239,191,189,239,191,189,27,239,191,189,239,191,189,113,73,94,49,239,191,189,14,239,191,189,93,239,191,189,82,239,191,189,55,239,191,189,90,239,191,189,110,59,239,191,189,239,191,189,16,239,191,189,9,239,191,189,239,191,189,239,191,189,15,103,46,212,148,218,134,33,49,41,239,191,189,12,239,191,189,79,16,239,191,189,239,191,189,35,219,181,17,127,239,191,189,206,177,72,239,191,189,239,191,189,239,191,189,104,108,102,239,191,189,239,191,189,239,191,189,123,239,191,189,98,120,0,21,239,191,189,48,239,191,189,98,91,54,239,191,189,60,0,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,65,6,239,191,189,5,75,49,239,191,189,119,239,191,189,53,239,191,189,104,89,107,32,239,191,189,218,159,239,191,189,78,68,108,86,18,239,191,189,239,191,189,239,191,189,239,191,189,74,218,134,239,191,189,57,239,191,189,127,239,191,189,239,191,189,239,191,189,92,111,47,239,191,189,38,107,32,239,191,189,102,14,65,48,122,239,191,189,239,191,189,239,191,189,239,191,189,127,14,239,191,189,50,239,191,189,239,191,189,91,90,69,239,191,189,31,239,191,189,239,191,189,239,191,189,239,191,189,39,239,191,189,20,239,191,189,48,239,191,189,214,182,105,122,239,191,189,8,239,191,189,11,39,59,239,191,189,239,191,189,103,239,191,189,24,41,239,191,189,106,97,239,191,189,38,119,195,173,239,191,189,74,97,91,83,239,191,189,239,191,189,239,191,189,92,239,191,189,55,239,191,189,239,191,189,101,32,82,239,191,189,57,239,191,189,239,191,189,239,191,189,239,191,189,91,239,191,189,239,191,189,79,239,191,189,78,100,239,191,189,94,239,191,189,89,239,191,189,78,239,191,189,109,82,239,191,189,239,191,189,239,191,189,239,191,189,29,95,41,73,14,27,239,191,189,239,191,189,223,174,24,239,191,189,111,239,191,189,84,106,62,239,191,189,239,191,189,88,239,191,189,8,14,239,191,189,199,172,97,239,191,189,20,239,191,189,0,22,239,191,189,60,239,191,189,239,191,189,37,96,64,72,239,191,189,104,19,12,239,191,189,106,55,239,191,189,99,3,20,98,239,191,189,55,239,191,189,20,80,119,239,191,189,98,239,191,189,107,239,191,189,78,239,191,189,2,34,50,239,191,189,239,191,189,68,239,191,189,91,239,191,189,239,191,189,112,239,191,189,1,23,93,116,239,191,189,29,17,124,239,191,189,119,239,191,189,96,239,191,189,78,239,191,189,239,191,189,222,141,40,239,191,189,239,191,189,94,239,191,189,71,5,239,191,189,239,191,189,239,191,189,53,6,239,191,189,114,108,31,79,96,36,239,191,189,8,78,239,191,189,239,191,189,17,239,191,189,239,191,189,239,191,189,116,103,239,191,189,239,191,189,125,34,239,191,189,239,191,189,48,239,191,189,126,21,111,1,111,83,70,239,191,189,239,191,189,34,239,191,189,106,239,191,189,76,239,191,189,239,191,189,217,184,239,191,189,77,13,239,191,189,51,59,70,38,53,239,191,189,239,191,189,214,131,239,191,189,239,191,189,15,126,7,239,191,189,124,239,191,189,122,2,107,239,191,189,10,104,75,70,239,191,189,239,191,189,239,191,189,48,61,86,113,91,59,239,191,189,41,44,16,13,239,191,189,75,112,123,82,106,239,191,189,114,125,239,191,189,59,103,239,191,189,11,79,85,49,239,191,189,239,191,189,239,191,189,239,191,189,47,19,83,239,191,189,85,112,239,191,189,66,65,239,191,189,79,122,108,70,31,109,239,191,189,21,239,191,189,27,31,239,191,189,239,191,189,214,131,102,12,239,191,189,76,81,33,18,239,191,189,55,29,239,191,189,239,191,189,239,191,189,239,191,189,47,60,71,239,191,189,239,191,189,101,239,191,189,48,239,191,189,239,191,189,239,191,189,83,239,191,189,16,77,94,239,191,189,239,191,189,10,239,191,189,92,239,191,189,103,239,191,189,88,90,239,191,189,239,191,189,79,239,191,189,24,239,191,189,239,191,189,239,191,189,127,8,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,86,239,191,189,49,123,239,191,189,239,191,189,42,239,191,189,79,211,143,239,191,189,239,191,189,11,10,72,239,191,189,223,175,20,239,191,189,239,191,189,45,239,191,189,85,239,191,189,104,239,191,189,94,239,191,189,226,167,138,40,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,86,24,82,239,191,189,26,84,18,239,191,189,239,191,189,100,17,239,191,189,66,32,61,77,28,105,239,191,189,118,239,191,189,239,191,189,116,239,191,189,239,191,189,70,10,239,191,189,239,191,189,76,8,12,239,191,189,29,87,239,191,189,239,191,189,46,58,239,191,189,239,191,189,239,191,189,55,239,191,189,239,191,189,12,100,106,239,191,189,239,191,189,239,191,189,38,239,191,189,119,111,209,163,126,239,191,189,239,191,189,73,48,239,191,189,70,91,5,20,37,239,191,189,97,114,239,191,189,47,96,211,181,76,123,41,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,54,73,239,191,189,239,191,189,56,92,239,191,189,102,83,113,6,239,191,189,239,191,189,63,239,191,189,239,191,189,126,239,191,189,239,191,189,117,239,191,189,239,191,189,239,191,189,40,85,239,191,189,239,191,189,57,239,191,189,239,191,189,121,239,191,189,239,191,189,119,66,40,22,97,239,191,189,12,98,239,191,189,91,221,133,239,191,189,239,191,189,239,191,189,108,92,124,239,191,189,239,191,189,239,191,189,239,191,189,0,16,7,239,191,189,115,239,191,189,56,23,23,36,239,191,189,44,239,191,189,96,97,103,239,191,189,45,104,65,12,42,75,207,184,81,239,191,189,204,146,93,239,191,189,13,38,239,191,189,65,24,15,239,191,189,86,98,41,239,191,189,67,239,191,189,239,191,189,239,191,189,217,157,10,239,191,189,239,191,189,89,99,239,191,189,239,191,189,239,191,189,55,35,34,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,5,67,30,73,88,10,239,191,189,6,24,117,239,191,189,32,239,191,189,119,14,194,157,112,207,180,194,159,106,82,239,191,189,98,52,100,239,191,189,18,239,191,189,34,239,191,189,198,150,126,239,191,189,239,191,189,239,191,189,239,191,189,83,75,111,239,191,189,50,23,55,239,191,189,239,191,189,239,191,189,73,239,191,189,20,67,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,90,99,94,112,56,37,239,191,189,1,0,239,191,189,239,191,189,97,119,47,121,31,239,191,189,43,239,191,189,117,20,42,62,90,210,131,239,191,189,239,191,189,239,191,189,28,58,68,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,17,239,191,189,95,239,191,189,239,191,189,223,179,239,191,189,116,58,215,191,124,24,43,69,56,31,21,102,239,191,189,239,191,189,239,191,189,54,239,191,189,84,239,191,189,239,191,189,239,191,189,35,239,191,189,93,239,191,189,25,239,191,189,22,107,68,239,191,189,122,31,239,191,189,125,239,191,189,239,191,189,92,239,191,189,43,239,191,189,239,191,189,239,191,189,114,239,191,189,120,111,217,153,113,1,102,60,3,70,81,82,121,239,191,189,99,87,21,239,191,189,239,191,189,239,191,189,70,239,191,189,113,54,67,239,191,189,239,191,189,119,41,239,191,189,80,116,239,191,189,105,239,191,189,239,191,189,124,239,191,189,66,29,62,28,112,44,60,121,126,90,239,191,189,112,239,191,189,239,191,189,239,191,189,17,50,239,191,189,104,99,45,121,239,191,189,239,191,189,239,191,189,107,0,239,191,189,239,191,189,116,239,191,189,112,239,191,189,223,177,126,92,42,121,68,239,191,189,239,191,189,9,60,239,191,189,239,191,189,8,113,239,191,189,239,191,189,55,36,126,24,239,191,189,239,191,189,78,121,65,4,43,94,239,191,189,10,239,191,189,99,239,191,189,239,191,189,44,89,239,191,189,7,11,36,105,98,112,239,191,189,32,32,99,239,191,189,64,41,60,239,191,189,239,191,189,18,239,191,189,47,239,191,189,239,191,189,117,24,239,191,189,26,239,191,189,239,191,189,64,239,191,189,22,68,68,239,191,189,47,24,90,239,191,189,105,88,239,191,189,89,33,239,191,189,239,191,189,29,239,191,189,239,191,189,9,113,86,239,191,189,67,41,239,191,189,31,239,191,189,12,239,191,189,72,114,239,191,189,239,191,189,61,76,74,239,191,189,63,12,125,239,191,189,208,168,239,191,189,115,239,191,189,239,191,189,239,191,189,123,125,239,191,189,48,239,191,189,207,140,55,1,26,24,15,239,191,189,77,239,191,189,33,239,191,189,239,191,189,121,239,191,189,84,82,33,70,239,191,189,239,191,189,217,133,54,239,191,189,239,191,189,71,88,194,144,80,239,191,189,66,98,15,239,191,189,21,73,239,191,189,39,239,191,189,239,191,189,74,239,135,171,239,191,189,16,239,191,189,127,41,92,77,110,6,239,191,189,7,0,78,100,208,183,239,191,189,239,191,189,239,191,189,108,239,191,189,100,105,50,62,9,63,31,196,146,239,191,189,239,191,189,239,191,189,7,8,55,117,67,103,239,191,189,103,239,191,189,91,24,239,191,189,21,239,191,189,124,86,69,57,239,191,189,94,27,7,72,239,191,189,239,191,189,64,31,28,45,239,191,189,116,104,113,81,70,92,239,191,189,66,125,85,239,191,189,4,239,191,189,9,80,239,191,189,41,14,239,191,189,239,191,189,126,88,1,55,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,3,71,239,191,189,58,40,239,191,189,56,195,180,32,239,191,189,3,239,191,189,55,239,191,189,22,55,63,86,39,22,17,89,99,43,28,102,57,239,191,189,70,239,191,189,9,125,121,13,239,191,189,202,167,34,239,191,189,80,102,89,239,191,189,13,123,239,191,189,239,191,189,118,125,200,128,57,239,191,189,239,191,189,54,126,239,191,189,239,191,189,239,191,189,74,239,191,189,5,109,239,191,189,239,191,189,239,191,189,66,41,239,191,189,75,239,191,189,29,239,191,189,215,176,239,191,189,239,191,189,86,239,191,189,239,191,189,239,191,189,239,191,189,64,125,28,239,191,189,239,191,189,239,191,189,70,239,191,189,87,85,82,96,239,191,189,31,90,239,191,189,88,239,191,189,123,49,57,98,239,191,189,239,191,189,59,126,200,128,76,74,239,191,189,59,239,191,189,239,191,189,103,226,164,181,81,239,191,189,88,239,191,189,239,191,189,96,239,191,189,80,203,151,239,191,189,239,191,189,39,239,191,189,72,14,68,239,191,189,76,27,81,89,126,115,94,13,239,191,189,23,239,191,189,239,191,189,239,191,189,119,80,239,191,189,79,239,191,189,239,191,189,85,239,191,189,35,65,239,191,189,48,239,191,189,239,191,189,34,239,191,189,243,182,171,173,239,191,189,239,191,189,99,239,191,189,54,228,133,184,239,191,189,108,239,191,189,239,191,189,223,132,106,239,191,189,239,191,189,239,191,189,52,239,191,189,28,40,239,191,189,102,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,36,239,191,189,81,10,239,191,189,239,191,189,63,87,239,191,189,239,191,189,239,191,189,239,191,189,106,239,191,189,54,239,191,189,81,239,191,189,38,239,191,189,9,113,239,191,189,239,191,189,239,191,189,110,239,191,189,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,125,212,163,239,191,189,68,83,239,191,189,63,32,55,239,191,189,5,48,239,191,189,239,191,189,239,191,189,77,239,191,189,98,239,191,189,122,114,22,67,5,239,191,189,1,23,24,239,191,189,239,191,189,101,103,124,91,239,191,189,89,239,191,189,126,66,239,191,189,89,239,191,189,239,191,189,204,144,239,191,189,3,16,127,220,148,110,239,191,189,90,49,239,191,189,1,78,75,62,8,31,26,120,239,191,189,89,239,191,189,239,191,189,37,239,191,189,52,52,31,239,191,189,32,239,191,189,108,118,116,239,191,189,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,127,33,42,239,191,189,87,103,51,4,239,191,189,58,239,191,189,50,0,54,107,110,235,139,167,95,78,239,191,189,57,110,32,239,191,189,217,144,64,2,239,191,189,82,239,191,189,239,191,189,239,191,189,94,106,48,239,191,189,239,191,189,0,27,102,239,191,189,44,58,117,62,79,239,191,189,27,13,31,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,204,141,239,191,189,196,145,239,191,189,67,239,191,189,44,92,13,4,239,191,189,239,191,189,239,191,189,94,51,239,191,189,83,66,239,191,189,20,239,191,189,65,239,191,189,239,191,189,120,50,239,191,189,44,71,118,239,191,189,92,239,191,189,63,93,86,239,191,189,50,239,191,189,73,239,191,189,65,239,191,189,97,30,69,57,116,10,239,191,189,121,239,191,189,239,191,189,98,18,239,191,189,58,17,239,191,189,0,20,239,191,189,85,93,30,239,191,189,1,220,177,32,89,93,203,186,239,191,189,39,239,191,189,90,239,191,189,239,191,189,61,239,191,189,52,111,24,77,239,191,189,68,42,239,191,189,215,190,72,204,171,52,3,0,239,191,189,55,239,191,189,88,115,31,239,191,189,239,191,189,56,99,239,191,189,37,239,191,189,36,27,72,215,180,32,239,191,189,6,77,6,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,239,191,189,84,239,191,189,89,66,118,31,239,191,189,110,21,239,191,189,43,21,239,191,189,89,5,22,239,191,189,239,191,189,0,239,191,189,239,191,189,19,21,239,191,189,93,49,239,191,189,239,191,189,74,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=20480-24575",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21817 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21817_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21817_s.txt", Encoding.UTF8);

    public Test21817() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,105,74,15,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,69,11,14,239,191,189,55,110,62,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,93,239,191,189,108,96,239,191,189,68,32,18,36,120,239,191,189,239,191,189,202,136,96,98,239,191,189,239,191,189,239,191,189,239,191,189,1,239,191,189,8,6,31,37,239,191,189,239,191,189,80,56,239,191,189,239,191,189,239,191,189,82,239,191,189,26,54,38,239,191,189,96,8,239,191,189,32,239,191,189,30,23,108,239,191,189,239,191,189,31,239,191,189,239,191,189,0,239,191,189,239,191,189,239,191,189,239,191,189,101,64,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,120,239,191,189,69,43,104,214,155,239,191,189,32,239,191,189,116,239,191,189,7,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,239,191,189,59,91,6,68,239,191,189,239,191,189,59,223,168,30,52,239,191,189,33,60,239,191,189,14,239,191,189,239,191,189,25,38,100,239,191,189,239,191,189,27,97,126,57,7,239,191,189,124,239,191,189,54,239,191,189,11,239,191,189,29,239,191,189,0,90,239,191,189,239,191,189,239,191,189,38,1,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,73,61,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,82,239,191,189,52,58,44,239,191,189,239,191,189,16,22,239,191,189,239,191,189,62,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,213,191,214,184,109,67,239,191,189,50,83,239,191,189,47,126,64,239,191,189,239,191,189,29,7,239,191,189,102,239,191,189,239,191,189,115,94,122,239,191,189,47,237,143,178,239,191,189,4,29,228,170,174,44,12,239,191,189,63,239,191,189,100,239,191,189,58,98,239,191,189,92,61,89,121,239,191,189,239,191,189,38,37,239,191,189,98,96,91,8,62,85,70,239,191,189,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,17,109,239,191,189,116,29,0,56,239,191,189,239,191,189,24,210,176,53,56,19,67,239,191,189,239,191,189,239,191,189,76,203,177,239,191,189,0,239,191,189,29,120,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,82,239,191,189,104,35,42,239,191,189,8,239,191,189,41,100,239,191,189,239,191,189,108,239,191,189,16,72,239,191,189,82,27,218,167,239,191,189,239,191,189,96,219,150,239,191,189,239,191,189,239,191,189,239,191,189,47,239,191,189,26,12,93,239,191,189,239,191,189,239,191,189,24,69,239,191,189,50,34,102,239,162,147,239,191,189,13,48,239,191,189,121,239,191,189,35,30,239,191,189,239,191,189,8,72,239,191,189,239,191,189,8,51,123,53,239,191,189,239,191,189,95,71,124,121,239,191,189,58,239,191,189,36,117,123,239,191,189,112,56,2,239,191,189,239,191,189,87,239,191,189,239,191,189,25,239,191,189,239,191,189,239,191,189,198,166,239,191,189,109,239,191,189,239,191,189,239,191,189,49,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,66,63,239,191,189,239,191,189,239,191,189,57,47,239,191,189,15,239,191,189,239,191,189,21,219,189,239,191,189,239,191,189,239,191,189,113,239,191,189,239,191,189,239,191,189,5,239,191,189,103,117,117,239,191,189,84,117,107,239,191,189,50,98,239,191,189,123,117,58,239,191,189,68,112,239,191,189,46,239,191,189,239,191,189,119,239,191,189,35,239,191,189,31,239,191,189,239,191,189,18,239,191,189,4,60,239,191,189,118,239,191,189,51,100,239,191,189,35,239,191,189,239,191,189,195,178,59,65,10,239,191,189,239,191,189,45,45,239,191,189,110,239,191,189,239,191,189,239,191,189,82,239,191,189,86,125,11,32,111,239,191,189,63,239,191,189,239,191,189,111,16,11,239,191,189,10,239,191,189,46,239,191,189,239,191,189,232,167,166,126,8,239,191,189,239,191,189,5,239,191,189,239,191,189,197,135,239,191,189,239,191,189,121,55,239,191,189,38,239,191,189,239,191,189,67,239,191,189,2,29,239,191,189,118,28,33,24,121,123,239,191,189,59,239,191,189,105,67,239,191,189,239,191,189,117,118,59,106,27,113,38,60,239,191,189,47,239,191,189,239,191,189,61,239,191,189,118,16,239,191,189,73,239,191,189,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,7,82,48,76,239,191,189,119,54,59,239,191,189,239,191,189,65,104,216,132,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,123,60,239,191,189,30,42,83,32,239,191,189,115,55,239,191,189,239,191,189,119,125,20,31,239,191,189,239,191,189,12,239,191,189,91,98,71,27,53,239,191,189,239,191,189,239,191,189,19,239,191,189,0,221,140,51,113,202,162,18,33,98,86,239,191,189,199,190,239,191,189,68,239,191,189,91,112,114,1,239,191,189,239,191,189,52,52,24,239,191,189,232,130,137,91,239,191,189,239,191,189,55,6,112,68,11,73,124,239,191,189,207,169,96,195,154,239,191,189,77,239,191,189,110,85,239,191,189,239,191,189,79,53,87,239,191,189,88,239,191,189,13,41,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,211,171,80,38,239,191,189,30,239,191,189,239,191,189,239,191,189,113,126,106,70,239,191,189,239,191,189,26,6,239,191,189,82,239,191,189,239,191,189,25,69,239,191,189,114,110,239,191,189,48,239,191,189,101,239,191,189,239,191,189,2,239,191,189,29,12,30,46,239,191,189,113,110,56,239,191,189,239,191,189,239,191,189,107,239,191,189,49,211,191,239,191,189,33,239,191,189,239,191,189,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,100,239,191,189,45,110,239,191,189,239,191,189,104,239,191,189,217,190,239,191,189,239,191,189,64,239,191,189,120,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,239,191,189,92,17,113,239,191,189,34,98,239,191,189,99,239,191,189,239,191,189,121,35,13,239,191,189,11,21,239,191,189,18,3,7,87,21,239,191,189,28,239,191,189,39,92,35,239,191,189,197,173,239,191,189,239,191,189,84,28,239,191,189,35,239,191,189,5,45,117,24,123,94,28,211,186,239,191,189,239,191,189,239,191,189,239,191,189,3,239,191,189,48,71,78,85,239,191,189,112,59,53,63,239,191,189,239,191,189,239,191,189,68,49,105,239,191,189,24,239,191,189,108,239,191,189,239,191,189,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,108,207,163,239,191,189,0,239,191,189,63,239,191,189,13,206,167,109,53,239,191,189,239,191,189,53,32,239,191,189,239,191,189,216,161,80,239,191,189,104,50,89,6,239,191,189,78,73,6,239,191,189,239,191,189,239,191,189,101,239,191,189,44,239,191,189,35,5,239,191,189,92,33,112,67,54,50,239,191,189,220,135,43,239,191,189,60,27,49,58,239,191,189,239,191,189,239,191,189,122,92,239,191,189,239,191,189,16,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,5,110,239,191,189,27,239,191,189,124,239,191,189,239,191,189,34,239,191,189,239,191,189,109,126,108,4,86,239,191,189,51,97,239,191,189,20,239,191,189,239,191,189,42,239,191,189,89,96,199,148,54,80,18,232,130,188,25,32,40,239,191,189,66,239,191,189,239,191,189,206,151,239,191,189,85,73,239,191,189,119,76,73,94,55,95,239,191,189,239,191,189,71,239,191,189,90,35,239,191,189,38,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,53,239,191,189,126,31,233,144,178,239,191,189,112,67,16,239,191,189,80,71,239,191,189,239,191,189,219,136,239,191,189,239,191,189,239,191,189,47,206,145,239,191,189,239,191,189,239,191,189,48,5,41,239,191,189,76,239,191,189,23,239,191,189,239,191,189,24,118,97,60,84,239,191,189,22,19,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,25,5,239,191,189,239,191,189,116,101,239,191,189,239,191,189,239,191,189,71,115,239,191,189,239,191,189,239,191,189,48,44,17,239,191,189,18,47,239,191,189,125,239,191,189,239,191,189,126,206,173,239,191,189,126,101,116,239,191,189,239,191,189,15,114,17,3,239,191,189,16,198,186,102,57,239,191,189,79,17,17,22,239,191,189,239,191,189,239,191,189,239,191,189,60,81,239,191,189,86,4,110,239,191,189,239,191,189,239,191,189,3,239,191,189,210,158,239,191,189,82,31,41,31,32,2,104,239,191,189,23,117,21,46,239,191,189,239,191,189,239,191,189,239,191,189,215,131,234,164,190,213,186,239,191,189,239,191,189,239,191,189,87,219,182,239,191,189,102,4,108,87,239,191,189,239,191,189,91,110,239,191,189,239,191,189,239,191,189,121,239,191,189,239,191,189,239,191,189,64,239,191,189,28,82,10,239,191,189,79,239,191,189,62,239,191,189,124,100,42,239,191,189,35,239,191,189,239,191,189,33,57,15,16,239,191,189,102,220,162,239,191,189,104,239,191,189,2,239,191,189,68,80,239,191,189,15,67,20,58,239,191,189,239,191,189,44,23,80,46,91,66,239,191,189,48,211,174,61,69,88,75,239,191,189,239,191,189,125,239,191,189,64,239,191,189,108,72,239,191,189,239,191,189,108,239,191,189,44,239,191,189,27,87,14,111,5,117,12,239,191,189,239,191,189,239,191,189,10,239,191,189,15,110,239,191,189,3,197,140,239,191,189,4,9,49,197,146,239,191,189,239,191,189,62,239,191,189,121,239,191,189,239,191,189,239,191,189,22,8,21,124,239,191,189,239,191,189,63,239,191,189,62,239,191,189,29,239,191,189,119,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,239,191,189,239,191,189,123,117,46,55,41,127,33,239,191,189,101,239,191,189,7,89,24,98,239,191,189,76,9,239,191,189,48,19,239,191,189,27,82,54,64,47,222,179,239,191,189,239,191,189,239,191,189,43,239,191,189,36,88,17,239,191,189,21,89,239,191,189,22,18,37,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,98,80,214,181,96,34,239,191,189,239,191,189,239,191,189,239,191,189,109,239,191,189,127,45,45,62,239,191,189,59,94,239,191,189,239,191,189,23,239,191,189,9,45,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,76,27,239,191,189,55,85,53,239,191,189,53,25,239,191,189,27,239,191,189,239,191,189,36,239,191,189,239,191,189,26,119,110,239,191,189,84,88,97,239,191,189,121,239,191,189,239,191,189,86,239,191,189,91,92,102,239,191,189,239,191,189,239,191,189,110,8,71,239,191,189,239,191,189,122,105,33,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,34,36,239,191,189,106,239,191,189,216,190,239,191,189,70,109,64,239,191,189,88,239,191,189,239,191,189,239,191,189,127,26,239,191,189,211,159,119,127,239,191,189,55,239,191,189,31,91,54,78,239,191,189,88,239,191,189,57,65,78,67,239,191,189,239,191,189,47,239,191,189,66,239,191,189,12,40,99,81,239,191,189,96,239,191,189,33,102,19,239,191,189,239,191,189,239,191,189,44,126,239,191,189,2,239,191,189,99,95,239,191,189,239,191,189,239,191,189,239,191,189,31,116,111,239,191,189,239,191,189,101,89,74,92,239,191,189,114,239,191,189,239,191,189,102,65,239,191,189,239,191,189,44,111,68,42,239,191,189,239,191,189,33,239,191,189,239,191,189,117,37,239,191,189,117,64,126,50,106,239,191,189,12,83,1,239,191,189,100,39,230,186,187,239,191,189,120,104,239,191,189,239,191,189,39,239,191,189,239,191,189,106,239,191,189,77,239,191,189,217,179,239,191,189,36,121,13,239,191,189,239,191,189,85,52,239,191,189,9,239,191,189,239,191,189,110,239,191,189,197,142,239,191,189,103,10,12,22,239,191,189,239,191,189,16,239,191,189,77,239,191,189,239,191,189,200,138,239,191,189,53,121,77,239,191,189,64,239,191,189,216,188,55,239,191,189,104,239,191,189,94,81,239,191,189,24,239,191,189,239,191,189,49,239,191,189,239,191,189,205,157,239,191,189,102,105,31,239,191,189,239,191,189,107,76,102,75,95,32,239,191,189,239,191,189,239,191,189,213,170,239,191,189,121,239,191,189,92,95,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,89,239,191,189,104,239,191,189,239,191,189,239,191,189,239,191,189,68,239,191,189,12,81,2,239,191,189,85,239,191,189,6,239,191,189,239,191,189,101,111,239,191,189,91,59,239,191,189,83,239,191,189,6,239,191,189,34,28,98,239,191,189,127,239,191,189,239,191,189,111,194,171,239,191,189,28,239,191,189,239,191,189,119,239,191,189,6,103,239,191,189,107,239,191,189,31,96,239,191,189,239,191,189,239,191,189,109,88,239,191,189,102,210,153,239,191,189,239,191,189,239,191,189,65,124,98,79,35,239,191,189,41,239,191,189,239,191,189,94,63,239,191,189,121,239,191,189,61,239,191,189,239,191,189,239,191,189,34,67,95,239,191,189,239,191,189,38,117,90,239,191,189,91,239,191,189,3,239,191,189,239,191,189,239,191,189,53,53,239,191,189,24,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,239,191,189,51,239,191,189,239,191,189,206,171,239,191,189,239,191,189,109,40,239,191,189,239,191,189,123,71,239,191,189,91,239,191,189,239,191,189,239,191,189,7,222,134,93,43,82,239,191,189,239,191,189,239,191,189,53,66,239,191,189,239,191,189,43,119,239,191,189,92,239,191,189,239,191,189,239,191,189,84,72,54,239,191,189,239,191,189,7,84,53,239,191,189,54,5,239,191,189,13,239,191,189,123,4,239,191,189,73,239,191,189,123,239,191,189,30,239,191,189,55,239,191,189,45,239,191,189,80,239,191,189,71,239,191,189,18,17,0,82,239,191,189,239,191,189,239,191,189,119,35,239,191,189,239,191,189,18,239,191,189,48,79,115,9,239,191,189,114,239,191,189,19,239,191,189,99,1,54,89,239,191,189,11,239,191,189,97,4,102,105,55,239,191,189,239,191,189,12,239,191,189,239,191,189,93,22,210,144,126,83,11,40,7,239,191,189,239,191,189,239,191,189,239,191,189,92,79,239,191,189,31,239,191,189,239,191,189,28,102,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,61,110,103,239,191,189,239,191,189,21,239,191,189,64,98,239,191,189,42,48,239,191,189,117,239,191,189,239,191,189,100,9,25,74,239,191,189,51,13,102,86,239,191,189,239,191,189,19,206,134,39,98,239,191,189,239,191,189,39,82,23,239,191,189,70,110,239,191,189,239,191,189,239,191,189,80,239,191,189,53,239,191,189,21,239,191,189,239,191,189,239,191,189,33,239,191,189,69,106,58,89,31,239,191,189,97,85,45,239,191,189,94,239,191,189,199,152,45,78,239,191,189,239,191,189,239,191,189,195,171,239,191,189,21,105,239,191,189,116,32,2,118,84,239,191,189,239,191,189,5,239,191,189,83,94,239,191,189,239,191,189,239,191,189,15,239,191,189,25,125,40,107,239,191,189,42,239,191,189,239,191,189,239,191,189,19,80,239,191,189,94,239,191,189,85,209,156,239,191,189,124,95,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,69,239,191,189,98,239,191,189,239,191,189,239,191,189,223,146,33,239,191,189,239,191,189,239,191,189,73,239,191,189,127,239,191,189,64,127,21,239,191,189,239,191,189,9,26,92,76,239,191,189,239,191,189,57,239,191,189,100,239,191,189,72,55,87,239,191,189,100,96,239,191,189,53,126,82,239,191,189,104,211,170,97,239,191,189,239,191,189,48,239,191,189,68,86,239,191,189,4,239,191,189,239,191,189,71,86,104,19,90,88,124,239,191,189,239,191,189,239,191,189,18,44,239,191,189,74,239,191,189,239,191,189,239,191,189,40,239,191,189,42,239,191,189,71,239,191,189,235,155,165,9,12,31,239,191,189,111,50,239,191,189,239,191,189,29,10,50,33,36,239,191,189,6,239,191,189,239,191,189,0,78,239,191,189,21,239,191,189,96,118,239,191,189,103,109,35,239,191,189,239,191,189,125,120,239,191,189,78,112,105,86,58,239,191,189,108,239,191,189,44,212,178,239,191,189,3,239,191,189,35,239,191,189,114,239,191,189,239,191,189,207,143,36,83,239,191,189,49,239,191,189,239,191,189,82,239,191,189,29,103,239,191,189,239,191,189,111,239,191,189,239,191,189,117,125,239,191,189,110,94,58,239,191,189,227,174,182,239,191,189,239,191,189,74,98,239,191,189,239,191,189,239,191,189,37,42,28,239,191,189,36,124,21,26,15,15,109,239,191,189,22,239,191,189,239,191,189,239,191,189,75,239,191,189,239,191,189,45,113,84,107,112,16,123,17,6,7,105,239,191,189,117,239,191,189,0,74,239,191,189,121,239,191,189,89,73,89,67,43,239,191,189,117,239,191,189,239,191,189,24,204,189,22,239,191,189,4,239,191,189,55,208,191,239,191,189,239,191,189,239,191,189,106,15,18,239,191,189,126,239,191,189,41,22,73,119,19,239,191,189,239,191,189,239,191,189,239,191,189,45,41,239,191,189,239,191,189,95,239,191,189,239,191,189,57,74,82,239,191,189,113,33,239,191,189,121,239,191,189,239,191,189,48,239,191,189,239,191,189,73,49,239,191,189,42,125,239,191,189,239,191,189,239,191,189,84,239,191,189,239,191,189,239,191,189,97,239,191,189,9,239,191,189,239,191,189,239,191,189,59,239,191,189,114,239,191,189,239,191,189,83,239,191,189,239,191,189,8,77,208,182,69,80,239,191,189,196,138,239,191,189,239,191,189,239,191,189,124,239,191,189,80,41,228,160,189,239,191,189,15,66,239,191,189,239,191,189,239,191,189,27,239,191,189,239,191,189,108,116,104,50,239,191,189,239,191,189,127,60,239,191,189,239,191,189,100,68,16,239,191,189,83,13,2,102,53,100,126,73,239,191,189,39,239,191,189,239,191,189,119,197,141,239,191,189,239,191,189,42,91,11,87,22,239,191,189,114,239,191,189,87,19,42,70,60,120,239,191,189,114,239,191,189,239,191,189,93,239,191,189,97,35,239,191,189,65,239,191,189,22,127,239,191,189,239,191,189,1,239,191,189,57,239,191,189,4,69,60,121,239,191,189,114,239,191,189,12,107,30,239,191,189,239,191,189,29,239,191,189,4,239,191,189,239,191,189,45,239,191,189,69,202,170,52,239,191,189,82,239,191,189,239,191,189,5,239,191,189,100,41,239,191,189,2,239,191,189,239,191,189,44,239,191,189,56,63,239,191,189,53,239,191,189,239,191,189,4,239,191,189,85,127,115,122,239,191,189,239,191,189,239,191,189,22,239,191,189,31,90,17,239,191,189,38,239,191,189,239,191,189,239,191,189,112,6,239,191,189,14,232,142,190,239,191,189,34,239,191,189,239,191,189,16,69,239,191,189,47,239,191,189,239,191,189,86,105,239,191,189,239,191,189,239,191,189,85,239,191,189,14,111,239,191,189,26,10,17,239,191,189,85,239,191,189,19,239,191,189,14,239,191,189,109,239,191,189,239,191,189,48,239,191,189,108,239,191,189,217,166,239,191,189,239,191,189,42,100,44,31,239,191,189,117,239,191,189,239,191,189,239,191,189,31,52,239,191,189,24,239,191,189,106,84,239,191,189,49,239,191,189,32,239,191,189,102,239,191,189,239,191,189,239,191,189,96,113,24,42,239,191,189,239,191,189,55,28,239,191,189,32,40,107,91,122,110,64,239,191,189,209,128,227,170,159,121,23,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,55,239,191,189,20,46,112,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,74,43,26,239,191,189,72,239,191,189,239,191,189,239,191,189,239,191,189,52,4,75,239,191,189,239,191,189,1,239,191,189,239,191,189,0,117,30,76,34,239,191,189,52,239,191,189,101,63,239,191,189,239,191,189,70,46,93,239,191,189,239,191,189,47,239,191,189,68,209,153,16,78,239,191,189,104,68,50,120,83,55,111,239,191,189,81,17,239,191,189,93,40,123,239,191,189,63,239,191,189,113,239,191,189,22,78,5,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,27,102,100,207,173,239,191,189,108,1,31,17,8,96,2,239,191,189,239,191,189,76,208,152,6,112,94,239,191,189,239,191,189,239,191,189,111,239,191,189,26,62,239,191,189,219,136,111,89,90,239,191,189,239,191,189,14,239,191,189,111,14,239,191,189,31,239,191,189,104,126,20,239,191,189,39,90,239,191,189,50,239,191,189,239,191,189,41,239,191,189,239,191,189,239,191,189,96,36,239,191,189,45,118,67,239,191,189,239,191,189,7,239,191,189,40,239,191,189,239,191,189,239,191,189,98,121,114,239,191,189,54,239,191,189,115,118,22,48,15,86,239,191,189,239,191,189,48,239,191,189,59,231,173,139,239,191,189,239,191,189,110,239,191,189,72,239,191,189,118,108,123,53,239,191,189,9,73,42,67,239,191,189,22,201,142,111,239,191,189,39,23,69,52,50,239,191,189,84,118,49,239,191,189,239,191,189,21,93,197,129,10,239,191,189,239,191,189,102,121,6,239,191,189,239,191,189,117,5,13,239,191,189,111,239,191,189,239,191,189,114,88,61,218,169,239,191,189,41,239,191,189,21,239,191,189,34,239,191,189,74,126,2,239,191,189,239,191,189,100,239,191,189,239,191,189,239,191,189,43,39,239,191,189,239,191,189,44,53,239,191,189,47,36,105,239,191,189,239,191,189,80,68,96,215,131,28,239,191,189,239,191,189,239,136,131,87,16,239,191,189,99,115,16,33,30,239,191,189,239,191,189,96,70,48,71,48,124,239,191,189,89,119,239,191,189,121,61,239,191,189,239,191,189,57,239,191,189,29,104,72,9,196,144,239,191,189,239,191,189,239,191,189,239,191,189,124,239,191,189,91,30,3,75,54,28,239,191,189,239,191,189,47,239,191,189,82,239,191,189,36,239,191,189,119,239,191,189,10,25,17,239,191,189,42,239,191,189,239,191,189,213,165,21,208,163,239,191,189,239,191,189,239,191,189,0,239,191,189,239,191,189,89,239,191,189,46,7,239,191,189,10,59,114,239,191,189,21,239,191,189,239,191,189,61,24,11,239,191,189,239,191,189,239,191,189,197,167,239,191,189,42,73,117,239,191,189,6,31,90,239,191,189,229,187,158,98,239,191,189,29,239,191,189,239,191,189,17,45,239,191,189,239,191,189,95,101,239,191,189,44,239,191,189,216,183,239,191,189,239,191,189,36,15,58,26,116,46,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,206,168,89,10,239,191,189,239,191,189,239,191,189,98,239,191,189,115,90,26,239,191,189,42,197,164,72,239,191,189,46,103,195,176,239,191,189,239,191,189,99,72,20,239,191,189,5,35,239,191,189,80,239,191,189,14,239,191,189,239,191,189,74,34,62,36,239,191,189,53,52,239,191,189,239,191,189,32,97,74,105,239,191,189,111,239,191,189,239,191,189,239,191,189,28,29,230,173,166,57,239,191,189,11,92,239,191,189,239,191,189,10,89,239,191,189,239,191,189,8,90,38,239,191,189,9,239,191,189,239,191,189,124,16,239,191,189,66,239,191,189,202,133,5,239,191,189,239,191,189,61,239,191,189,114,213,157,123,5,239,191,189,239,191,189,216,153,216,170,199,182,239,191,189,96,239,191,189,73,21,239,191,189,216,142,239,191,189,214,181,99,82,212,133,86,239,191,189,239,191,189,104,28,239,191,189,38,50,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,56,76,123,47,25,37,96,106,239,191,189,239,191,189,101,98,239,191,189,239,191,189,239,191,189,24,239,191,189,239,191,189,43,239,191,189,239,191,189,239,191,189,66,239,191,189,239,191,189,239,191,189,45,232,158,138,32,239,191,189,216,190,239,191,189,104,239,191,189,34,239,191,189,96,239,191,189,123,7,108,239,191,189,85,84,51,213,146,239,191,189,239,191,189,239,191,189,51,47,69,10,239,191,189,49,239,191,189,239,191,189,120,239,191,189,83,219,134,239,191,189,19,97,126,48,239,191,189,239,191,189,202,139,55,239,191,189,239,191,189,239,191,189,53,239,191,189,19,12,239,191,189,76,15,239,191,189,239,191,189,89,93,23,239,191,189,43,105,125,239,191,189,239,191,189,239,191,189,48,239,191,189,65,239,191,189,86,98,72,239,191,189,4,239,191,189,239,191,189,89,53,220,137,89,239,191,189,100,239,191,189,239,191,189,239,191,189,119,239,191,189,8,32,24,239,191,189,239,191,189,97,13,239,191,189,56,68,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,104,109,11,239,191,189,239,191,189,239,191,189,40,59,103,239,191,189,107,25,239,191,189,17,1,239,191,189,239,191,189,239,191,189,53,73,239,191,189,21,239,191,189,239,191,189,112,33,239,191,189,24,239,191,189,100,213,167,20,57,33,107,239,191,189,239,191,189,8,239,191,189,239,191,189,55,239,191,189,239,191,189,239,191,189,38,67,10,239,191,189,54,94,239,191,189,96,239,191,189,88,104,98,39,239,191,189,55,34,239,191,189,109,239,191,189,113,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,239,191,189,61,108,114,29,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,14,239,191,189,45,119,31,239,191,189,122,239,191,189,3,239,191,189,239,191,189,41,239,191,189,239,191,189,124,239,191,189,96,239,191,189,239,191,189,77,99,239,191,189,239,191,189,102,239,191,189,74,239,191,189,75,58,239,191,189,239,191,189,77,239,191,189,20,4,63,29,81,41,93,22,73,121,11,239,191,189,124,239,191,189,239,191,189,239,191,189,76,35,31,239,191,189,73,81,239,191,189,239,191,189,239,191,189,213,191,46,239,191,189,72,239,191,189,119,69,53,239,191,189,119,73,66,49,239,191,189,239,191,189,76,114,125,90,5,239,191,189,65,85,239,191,189,110,239,191,189,46,55,65,239,191,189,68,120,66,124,106,46,239,191,189,1,239,191,189,239,191,189,82,71,12,127,74,10,239,191,189,239,191,189,239,191,189,65,109,239,191,189,7,125,239,191,189,239,191,189,239,191,189,47,73,14,239,191,189,239,191,189,51,239,191,189,239,191,189,239,191,189,37,239,191,189,239,191,189,113,239,191,189,198,178,239,191,189,53,239,191,189,91,100,239,191,189,239,191,189,122,68,239,191,189,2,10,109,117,239,191,189,85,239,191,189,39,239,191,189,74,67,82,40,75,121,10,61,106,239,191,189,56,109,116,239,191,189,34,239,191,189,71,3,239,191,189,118,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,48,198,146,62,55,108,35,74,76,123,111,52,13,239,191,189,239,191,189,89,105,51,127,11,118,239,191,189,99,74,239,191,189,239,191,189,81,20,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,27,239,191,189,120,239,191,189,51,239,191,189,21,34,39,44,239,191,189,75,57,121,239,191,189,28,29,120,20,239,191,189,239,191,189,239,191,189,99,72,73,239,191,189,27,14,239,191,189,83,219,190,239,191,189,239,191,189,110,47,239,191,189,107,239,191,189,239,191,189,239,191,189,84,102,55,239,191,189,239,191,189,108,239,191,189,106,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,121,79,48,239,191,189,239,191,189,115,6,239,191,189,239,191,189,80,239,191,189,84,10,122,59,239,191,189,120,35,239,191,189,52,59,43,239,191,189,239,191,189,37,67,239,191,189,4,119,239,191,189,34,239,191,189,70,239,191,189,224,176,181,94,125,239,191,189,202,146,239,191,189,239,191,189,23,239,191,189,239,191,189,88,40,239,191,189,121,78,106,62,35,127,21,124,48,98,239,191,189,92,239,191,189,239,191,189,36,13,21,239,191,189,239,191,189,239,191,189,26,239,191,189,239,191,189,106,239,191,189,68,15,239,191,189,13,117,239,191,189,239,191,189,78,4,239,191,189,71,220,183,239,191,189,49,239,191,189,239,191,189,76,239,191,189,69,53,74,239,191,189,239,191,189,9,239,191,189,86,239,191,189,44,239,191,189,210,141,239,191,189,239,191,189,239,191,189,111,102,111,239,191,189,239,191,189,239,191,189,14,239,191,189,40,239,191,189,49,94,239,191,189,89,92,56,89,51,36,115,239,191,189,64,239,191,189,3,239,191,189,93,239,191,189,34,111,214,185,239,191,189,33,239,191,189,239,191,189,57,114,239,191,189,239,191,189,109,39,239,191,189,239,191,189,239,191,189,239,191,189,89,121,115,239,191,189,92,121,90,239,191,189,33,239,191,189,47,239,191,189,107,239,191,189,82,239,191,189,239,191,189,40,82,36,84,60,239,191,189,239,191,189,35,239,191,189,239,191,189,86,239,191,189,76,70,239,191,189,239,191,189,43,100,239,191,189,106,83,18,93,94,1,0,239,191,189,239,191,189,239,191,189,6,239,191,189,239,191,189,114,59,239,191,189,84,202,131,28,123,219,171,239,191,189,239,191,189,3,35,212,157,239,191,189,239,191,189,64,239,191,189,110,239,191,189,239,191,189,21,239,191,189,239,191,189,83,60,3,4,109,239,191,189,50,239,191,189,68,17,239,191,189,68,41,239,191,189,72,103,239,191,189,239,191,189,124,239,191,189,90,239,191,189,43,93,239,191,189,38,239,191,189,239,191,189,28,239,191,189,118,96,5,48,239,191,189,119,239,191,189,61,239,191,189,126,56,239,191,189,239,191,189,239,191,189,80,102,239,191,189,79,6,0,239,191,189,72,106,117,17,239,191,189,7,71,239,191,189,52,239,191,189,97,110,69,239,191,189,36,118,103,239,191,189,105,239,191,189,45,33,239,191,189,103,123,239,191,189,239,191,189,44,239,191,189,21,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,74,239,191,189,126,84,239,191,189,108,65,34,239,191,189,22,72,239,191,189,239,191,189,26,72,119,239,191,189,42,91,239,191,189,204,133,239,191,189,126,239,191,189,103,204,138,239,191,189,239,191,189,31,239,191,189,115,239,191,189,239,191,189,127,18,239,191,189,63,126,9,239,191,189,239,191,189,239,191,189,43,239,191,189,239,191,189,81,67,38,239,191,189,115,110,15,239,191,189,239,191,189,0,239,191,189,52,239,191,189,239,191,189,103,79,239,191,189,95,19,40,55,239,191,189,239,191,189,239,191,189,75,28,9,195,190,239,191,189,239,191,189,123,239,191,189,56,120,114,121,117,5,239,191,189,30,239,191,189,127,122,239,191,189,239,191,189,198,162,119,7,58,24,239,191,189,198,160,75,239,191,189,91,87,100,76,5,88,28,8,239,191,189,239,191,189,127,239,191,189,239,191,189,126,239,191,189,13,110,24,11,120,28,239,191,189,123,66,32,71,239,191,189,239,191,189,120,239,191,189,8,239,191,189,45,239,191,189,30,30,239,191,189,109,25,77,98,113,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,80,10,86,239,191,189,239,191,189,239,191,189,115,239,191,189,239,191,189,34,43,239,191,189,239,191,189,115,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,96,239,191,189,109,0,239,191,189,239,191,189,21,239,191,189,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=24576-28671",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21818 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21818_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21818_s.txt", Encoding.UTF8);

    public Test21818() : base(recordedRequest, recordedResponse, "accounts8d43a03fe3f3030")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{239,191,189,108,239,191,189,7,88,109,96,90,3,90,110,98,66,125,65,91,239,191,189,239,191,189,239,191,189,239,191,189,9,97,239,191,189,41,239,191,189,239,191,189,85,239,191,189,214,188,239,191,189,15,47,39,239,191,189,17,239,191,189,26,34,239,191,189,108,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,163,55,38,200,187,239,191,189,239,191,189,122,11,239,191,189,239,191,189,239,191,189,11,239,191,189,45,239,191,189,239,191,189,83,18,86,239,191,189,73,239,191,189,212,191,80,239,191,189,126,239,191,189,20,44,239,191,189,239,191,189,239,191,189,12,239,191,189,239,191,189,1,83,239,191,189,239,191,189,68,6,239,191,189,69,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,118,239,191,189,60,90,111,81,9,107,5,27,239,191,189,239,191,189,239,191,189,239,191,189,34,116,239,191,189,239,191,189,8,239,191,189,239,191,189,239,191,189,239,191,189,62,66,239,191,189,109,239,191,189,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,20,89,239,191,189,48,68,239,191,189,239,191,189,113,84,15,46,108,47,32,34,39,239,191,189,67,239,191,189,239,191,189,239,191,189,239,191,189,23,239,191,189,195,156,239,191,189,41,82,43,239,191,189,48,84,13,27,239,191,189,93,196,171,23,239,191,189,87,239,191,189,51,239,191,189,34,61,239,191,189,239,191,189,239,191,189,3,239,191,189,215,148,69,91,239,191,189,239,191,189,239,191,189,91,56,94,31,40,71,239,191,189,23,33,5,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,120,20,239,191,189,206,160,94,21,112,239,191,189,40,239,191,189,88,239,191,189,200,191,81,239,191,189,67,80,222,157,55,239,191,189,239,191,189,10,28,239,191,189,239,191,189,239,191,189,7,83,69,239,191,189,239,191,189,71,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,109,0,106,239,191,189,86,88,70,239,191,189,20,239,191,189,70,239,191,189,86,64,84,239,191,189,19,239,191,189,66,239,191,189,239,191,189,239,191,189,32,239,191,189,19,32,239,191,189,120,239,191,189,239,191,189,99,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,21,239,191,189,239,191,189,79,239,191,189,239,191,189,79,12,239,191,189,73,239,191,189,239,191,189,239,191,189,73,239,191,189,239,191,189,2,239,191,189,239,191,189,239,191,189,54,91,239,191,189,73,56,84,239,191,189,239,191,189,239,191,189,118,239,191,189,118,239,191,189,239,191,189,126,49,76,23,239,191,189,124,239,191,189,239,191,189,112,239,191,189,239,191,189,21,25,239,191,189,25,239,191,189,55,224,160,130,125,103,239,191,189,86,239,191,189,239,191,189,25,239,191,189,239,191,189,21,94,71,239,191,189,103,60,113,239,191,189,123,14,100,16,94,239,191,189,72,109,35,59,91,239,191,189,239,191,189,62,239,191,189,239,191,189,123,100,22,239,191,189,239,191,189,239,191,189,239,191,189,99,239,191,189,52,91,38,239,191,189,76,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,60,114,30,124,56,239,191,189,102,239,191,189,239,191,189,239,191,189,239,191,189,214,171,113,76,2,37,239,191,189,239,191,189,239,191,189,56,0,39,42,239,191,189,33,239,191,189,214,137,239,191,189,54,1,239,191,189,239,191,189,8,69,239,191,189,118,12,38,22,239,191,189,46,239,191,189,239,191,189,123,34,0,239,191,189,55,239,191,189,55,204,153,59,75,239,191,189,239,191,189,23,15,239,191,189,54,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,67,239,191,189,239,191,189,74,239,191,189,239,191,189,34,91,239,191,189,239,191,189,10,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,80,201,182,72,93,239,191,189,81,239,191,189,95,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,239,191,189,74,239,191,189,242,172,155,132,4,118,239,191,189,83,84,239,191,189,112,88,239,191,189,92,239,191,189,51,222,157,239,191,189,122,239,191,189,107,239,191,189,239,191,189,49,66,117,76,239,191,189,239,191,189,239,191,189,109,26,239,191,189,27,239,191,189,69,239,191,189,239,191,189,125,106,239,191,189,239,191,189,239,191,189,221,131,239,191,189,120,5,239,191,189,50,239,191,189,53,239,191,189,206,176,239,191,189,239,191,189,51,107,6,239,191,189,8,125,239,191,189,115,239,191,189,126,239,191,189,239,191,189,239,191,189,28,110,18,239,191,189,17,84,239,191,189,239,191,189,212,183,69,239,191,189,239,191,189,239,191,189,97,76,3,118,221,158,17,99,100,239,191,189,113,239,191,189,62,15,18,239,191,189,108,239,191,189,239,191,189,239,191,189,25,24,239,191,189,239,191,189,239,191,189,127,116,239,191,189,50,239,191,189,195,187,77,239,191,189,18,239,191,189,122,34,13,16,239,191,189,9,80,239,191,189,87,21,239,191,189,116,239,191,189,74,239,191,189,61,239,191,189,239,191,189,73,239,191,189,78,239,191,189,94,42,44,49,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,127,73,239,191,189,115,239,191,189,97,14,107,43,102,106,239,191,189,112,88,239,191,189,39,125,239,191,189,239,191,189,239,191,189,239,191,189,43,105,239,191,189,230,190,135,239,191,189,80,239,191,189,235,144,178,239,191,189,90,0,1,239,191,189,239,191,189,105,58,36,35,82,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,56,239,191,189,52,239,191,189,83,239,191,189,239,191,189,40,218,135,26,87,123,239,191,189,17,126,239,191,189,239,191,189,37,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,8,23,239,191,189,239,191,189,2,239,191,189,239,191,189,120,239,191,189,1,239,191,189,126,112,7,32,21,60,239,191,189,239,191,189,239,191,189,9,239,191,189,239,191,189,26,84,61,239,191,189,86,239,191,189,239,191,189,74,16,239,191,189,239,191,189,75,239,191,189,48,13,38,43,236,161,188,121,223,146,14,239,191,189,116,16,118,239,191,189,239,191,189,239,191,189,239,191,189,60,64,239,191,189,43,239,191,189,239,191,189,68,239,191,189,21,239,191,189,239,191,189,239,191,189,200,188,88,239,191,189,47,239,191,189,99,239,191,189,103,15,93,58,239,191,189,47,239,191,189,239,191,189,14,101,26,239,191,189,239,191,189,14,239,191,189,239,191,189,239,191,189,98,87,239,191,189,219,166,239,191,189,239,191,189,239,191,189,69,58,28,44,70,79,239,191,189,19,105,44,239,191,189,101,104,239,191,189,239,191,189,98,37,6,81,239,191,189,13,239,191,189,239,191,189,83,77,50,12,30,239,191,189,105,239,191,189,69,8,239,191,189,239,191,189,116,239,191,189,21,239,191,189,239,191,189,109,239,191,189,42,120,239,191,189,104,69,239,191,189,239,191,189,112,38,239,191,189,83,239,191,189,76,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,239,191,189,72,32,96,239,191,189,69,239,191,189,239,191,189,62,59,69,86,239,191,189,239,191,189,43,41,239,191,189,101,239,191,189,239,191,189,239,191,189,239,191,189,42,30,93,239,191,189,28,120,239,191,189,239,191,189,239,191,189,3,239,191,189,239,191,189,31,91,10,24,34,34,239,191,189,5,96,52,239,191,189,84,239,191,189,239,191,189,32,239,191,189,35,239,191,189,239,191,189,27,5,239,191,189,29,2,3,20,41,37,20,111,67,66,239,191,189,239,191,189,239,191,189,30,239,191,189,66,239,191,189,49,239,191,189,105,239,191,189,61,8,239,191,189,89,87,239,191,189,64,33,239,191,189,239,191,189,39,62,8,21,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,24,81,239,191,189,103,118,96,239,191,189,51,239,191,189,39,239,191,189,239,191,189,77,239,191,189,239,191,189,40,239,191,189,3,33,239,191,189,103,239,191,189,239,191,189,22,239,191,189,51,239,191,189,239,191,189,239,191,189,119,5,239,191,189,72,239,191,189,65,5,91,68,239,191,189,239,191,189,239,191,189,87,239,191,189,23,67,26,239,191,189,41,239,191,189,239,191,189,46,239,191,189,124,239,191,189,116,239,191,189,239,191,189,122,239,191,189,66,239,191,189,57,82,23,33,37,239,191,189,98,239,191,189,239,191,189,239,191,189,126,57,97,51,15,239,191,189,122,211,139,115,94,239,191,189,24,72,24,35,118,118,239,191,189,70,239,191,189,239,191,189,239,191,189,4,127,239,191,189,30,104,94,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,26,239,191,189,100,239,191,189,69,239,191,189,53,239,191,189,121,61,58,239,191,189,8,1,59,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,122,239,191,189,10,107,239,191,189,239,191,189,35,20,239,191,189,17,28,239,191,189,100,8,239,191,189,17,3,0,57,77,239,191,189,109,68,201,176,239,191,189,28,44,114,239,191,189,104,16,239,191,189,2,239,191,189,239,191,189,89,61,239,191,189,239,191,189,18,239,191,189,239,191,189,43,30,54,239,191,189,239,191,189,98,239,191,189,222,130,239,191,189,239,191,189,239,191,189,12,108,64,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,11,239,191,189,11,239,191,189,97,104,239,191,189,239,191,189,62,71,59,239,191,189,239,191,189,25,239,191,189,122,73,34,201,151,239,191,189,239,191,189,93,6,10,239,191,189,239,191,189,24,239,191,189,43,88,26,24,239,191,189,239,191,189,19,81,66,239,191,189,118,34,25,68,106,114,239,191,189,84,83,239,191,189,64,77,118,46,10,49,195,173,239,191,189,87,239,191,189,108,239,191,189,66,18,239,191,189,32,239,191,189,13,239,191,189,239,191,189,40,6,239,191,189,82,117,239,191,189,239,191,189,239,191,189,16,62,45,239,191,189,66,239,191,189,239,191,189,239,191,189,13,121,239,191,189,101,115,239,191,189,10,239,191,189,239,191,189,49,123,81,19,71,239,191,189,239,191,189,23,70,239,191,189,219,148,112,33,239,191,189,73,70,239,191,189,63,28,0,51,12,52,216,148,239,191,189,50,239,191,189,27,239,191,189,72,239,191,189,239,191,189,112,119,66,239,191,189,239,191,189,113,239,191,189,43,239,191,189,239,191,189,17,120,8,239,191,189,239,191,189,42,239,191,189,38,239,191,189,103,239,191,189,239,191,189,111,29,58,239,191,189,239,191,189,239,191,189,98,43,13,239,191,189,239,191,189,239,191,189,239,191,189,66,6,73,239,191,189,205,150,212,155,13,34,95,239,191,189,59,239,191,189,239,191,189,118,239,191,189,125,239,191,189,20,114,7,37,239,191,189,67,239,191,189,239,191,189,239,191,189,109,239,191,189,126,214,130,239,191,189,103,35,91,239,191,189,239,191,189,239,191,189,1,97,98,239,191,189,239,191,189,40,239,191,189,66,216,180,92,21,23,113,61,59,239,191,189,91,62,239,191,189,12,46,27,239,191,189,239,191,189,9,78,32,103,27,41,127,239,191,189,19,17,239,191,189,43,239,191,189,27,239,191,189,119,239,191,189,104,239,191,189,16,239,191,189,44,65,239,191,189,43,239,191,189,239,191,189,239,191,189,51,70,86,81,30,88,34,113,239,191,189,51,239,191,189,91,94,44,239,191,189,239,191,189,239,191,189,64,87,100,28,118,239,191,189,59,239,191,189,239,191,189,239,191,189,239,191,189,37,71,239,191,189,239,191,189,239,191,189,30,239,191,189,94,212,150,239,191,189,239,191,189,85,127,31,96,239,191,189,99,239,191,189,239,191,189,239,191,189,239,191,189,52,239,191,189,104,239,191,189,216,188,239,191,189,26,239,191,189,37,239,191,189,45,75,81,53,214,148,64,78,55,239,191,189,8,68,239,191,189,14,239,191,189,86,38,105,102,71,28,93,239,191,189,18,18,87,56,70,32,239,191,189,239,191,189,14,239,191,189,239,191,189,39,51,239,191,189,43,239,191,189,239,191,189,112,51,95,239,191,189,43,239,191,189,239,191,189,239,191,189,58,101,239,191,189,239,191,189,33,221,156,208,177,63,35,127,91,239,191,189,45,239,191,189,38,239,191,189,109,239,191,189,239,191,189,106,239,191,189,239,191,189,110,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,11,239,191,189,6,9,239,191,189,239,191,189,57,87,239,191,189,239,191,189,8,124,115,118,5,199,130,50,57,239,191,189,239,191,189,239,191,189,220,157,66,239,191,189,7,239,191,189,239,191,189,239,191,189,88,239,191,189,198,162,239,191,189,114,239,191,189,29,11,116,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,35,96,239,191,189,55,109,239,191,189,51,10,31,58,239,191,189,104,239,191,189,99,239,191,189,239,191,189,54,81,239,191,189,208,135,239,191,189,53,101,38,239,191,189,239,191,189,10,239,191,189,239,191,189,79,102,239,191,189,207,154,83,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,40,85,239,191,189,239,191,189,51,9,40,196,161,61,82,239,191,189,79,1,7,239,191,189,110,23,20,82,239,191,189,239,191,189,120,239,191,189,74,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,76,239,191,189,239,191,189,13,16,125,65,239,191,189,1,239,191,189,28,9,17,20,239,191,189,127,239,191,189,75,20,21,239,191,189,111,98,239,191,189,106,220,171,56,124,29,239,191,189,49,239,191,189,68,5,6,80,239,191,189,239,191,189,16,44,86,19,239,191,189,239,191,189,102,239,191,189,124,54,82,32,126,239,191,189,84,239,191,189,111,104,239,191,189,51,239,191,189,9,67,239,191,189,4,239,191,189,52,239,191,189,15,239,191,189,47,239,191,189,84,3,239,191,189,77,91,209,182,239,191,189,118,195,187,70,203,154,239,191,189,27,239,191,189,39,239,191,189,239,191,189,81,239,191,189,62,34,19,48,239,191,189,239,191,189,127,239,191,189,216,180,7,239,191,189,239,191,189,122,239,191,189,6,239,191,189,239,191,189,239,191,189,239,191,189,15,78,239,191,189,23,106,55,25,239,191,189,239,191,189,48,70,83,239,191,189,239,191,189,239,191,189,58,43,67,239,191,189,54,239,191,189,239,191,189,6,63,30,239,191,189,57,76,239,191,189,239,191,189,55,101,5,46,239,191,189,22,25,35,239,191,189,102,239,191,189,239,191,189,239,191,189,89,59,239,191,189,9,239,191,189,87,90,239,191,189,239,191,189,37,71,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,66,55,15,237,139,151,239,191,189,36,18,32,3,239,191,189,33,239,191,189,239,191,189,127,197,146,239,191,189,66,29,78,239,191,189,71,239,191,189,37,9,239,191,189,88,32,239,191,189,239,191,189,239,191,189,199,173,77,239,191,189,108,239,191,189,29,23,239,191,189,69,57,239,191,189,239,191,189,43,239,191,189,62,51,10,119,239,191,189,239,191,189,239,191,189,239,191,189,61,101,239,191,189,102,239,191,189,239,191,189,67,54,89,76,52,239,191,189,88,239,191,189,104,43,117,8,100,92,239,191,189,101,239,191,189,239,191,189,26,239,191,189,124,72,15,239,191,189,239,191,189,46,74,239,191,189,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,101,222,145,112,239,191,189,40,15,94,96,239,191,189,52,107,116,239,191,189,239,191,189,239,191,189,239,191,189,4,29,239,191,189,39,103,239,191,189,127,239,191,189,42,239,191,189,239,191,189,122,239,191,189,239,191,189,196,180,25,0,0,52,239,191,189,18,84,57,239,191,189,239,191,189,204,128,125,239,191,189,74,239,191,189,16,43,79,239,191,189,239,191,189,239,191,189,239,191,189,74,18,239,191,189,239,191,189,239,191,189,54,239,191,189,239,191,189,54,111,239,191,189,90,239,191,189,239,191,189,107,7,239,191,189,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,104,112,76,239,191,189,105,109,102,65,7,239,191,189,2,239,191,189,34,30,98,239,191,189,2,239,191,189,200,150,17,239,191,189,95,75,49,239,191,189,35,92,239,191,189,239,191,189,17,38,239,191,189,19,34,63,69,62,121,90,239,191,189,45,239,191,189,239,191,189,239,191,189,239,191,189,73,239,191,189,6,239,191,189,239,191,189,14,49,239,191,189,16,0,239,191,189,239,191,189,73,9,239,191,189,27,127,239,191,189,50,15,239,191,189,34,124,239,191,189,82,109,239,191,189,239,191,189,22,239,191,189,78,56,92,58,204,179,44,103,24,82,37,239,191,189,47,68,119,239,191,189,17,198,165,239,191,189,74,32,239,191,189,58,239,191,189,109,239,191,189,239,191,189,87,239,191,189,107,9,239,191,189,122,239,191,189,239,191,189,104,14,60,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,122,239,191,189,56,76,239,191,189,92,239,191,189,62,239,191,189,76,45,112,33,77,94,41,49,16,119,239,191,189,27,239,191,189,239,191,189,239,191,189,239,191,189,77,2,239,191,189,208,164,50,93,239,191,189,80,114,123,81,239,191,189,239,191,189,67,108,239,191,189,10,46,239,191,189,29,70,239,191,189,221,171,239,191,189,7,76,239,191,189,206,133,61,239,191,189,99,80,90,117,110,239,191,189,25,208,136,239,191,189,239,191,189,239,191,189,215,130,86,51,122,80,239,191,189,12,239,191,189,6,65,239,191,189,36,239,191,189,43,16,239,191,189,239,191,189,61,239,191,189,75,105,239,191,189,239,191,189,92,45,20,239,191,189,239,191,189,116,239,191,189,239,191,189,239,191,189,59,239,191,189,24,125,126,239,191,189,239,191,189,239,191,189,239,191,189,73,24,239,191,189,74,239,191,189,238,191,153,79,239,191,189,43,55,239,191,189,73,239,191,189,239,191,189,113,87,54,239,191,189,92,239,191,189,80,239,191,189,122,239,191,189,113,4,81,239,191,189,18,239,191,189,32,239,191,189,46,18,55,38,239,191,189,239,191,189,37,239,191,189,84,239,191,189,4,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,69,66,98,239,191,189,239,191,189,23,239,191,189,74,116,239,191,189,40,75,239,191,189,32,25,239,191,189,239,191,189,119,85,239,191,189,75,97,58,108,103,93,239,191,189,239,191,189,239,191,189,41,118,121,115,64,239,191,189,81,104,22,23,24,239,191,189,47,239,191,189,239,191,189,87,52,239,191,189,239,191,189,239,191,189,86,239,191,189,239,191,189,87,239,191,189,239,191,189,39,75,84,239,191,189,82,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,42,239,191,189,73,50,100,97,62,200,152,239,191,189,49,103,239,191,189,15,41,24,39,239,191,189,239,191,189,239,191,189,239,191,189,27,70,239,191,189,41,28,239,191,189,93,239,191,189,73,239,191,189,33,8,44,84,70,77,239,191,189,239,191,189,102,239,191,189,96,239,191,189,239,191,189,239,191,189,68,239,191,189,58,124,1,239,191,189,239,191,189,2,14,239,191,189,89,9,71,239,191,189,239,191,189,2,78,239,191,189,239,191,189,70,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,41,239,191,189,106,239,191,189,93,239,191,189,64,105,99,124,205,139,239,191,189,239,191,189,239,191,189,64,5,29,239,191,189,239,191,189,68,76,84,239,191,189,239,191,189,112,239,191,189,15,121,47,97,239,191,189,103,239,191,189,239,191,189,239,191,189,117,21,239,191,189,239,191,189,25,239,191,189,239,191,189,36,19,118,239,191,189,239,191,189,239,191,189,5,239,191,189,239,191,189,25,239,191,189,221,137,239,191,189,12,239,191,189,43,49,239,191,189,51,26,18,35,43,25,239,191,189,239,191,189,239,191,189,108,7,211,164,104,48,114,105,239,191,189,5,54,116,239,191,189,239,191,189,239,191,189,239,191,189,13,239,191,189,99,239,191,189,8,196,136,231,175,176,9,0,82,85,239,191,189,239,191,189,57,239,191,189,89,17,18,239,191,189,116,88,114,239,191,189,239,191,189,38,239,191,189,124,239,191,189,126,113,239,191,189,29,30,118,59,239,191,189,127,239,191,189,239,191,189,239,191,189,39,113,23,239,191,189,105,57,58,20,66,239,191,189,111,28,239,191,189,10,30,101,239,191,189,98,239,191,189,51,39,239,191,189,239,191,189,239,191,189,55,125,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,38,239,191,189,239,191,189,49,0,239,191,189,100,239,191,189,239,191,189,65,116,60,239,191,189,49,1,239,191,189,108,28,239,191,189,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,97,239,191,189,59,100,239,191,189,239,191,189,73,32,239,191,189,239,191,189,29,239,191,189,98,239,191,189,44,239,191,189,77,239,191,189,127,54,239,191,189,26,239,191,189,47,239,191,189,118,40,57,45,239,191,189,31,37,3,239,191,189,15,6,15,239,191,189,239,191,189,239,191,189,239,191,189,207,147,239,191,189,239,191,189,125,118,239,191,189,239,191,189,239,191,189,79,51,239,191,189,42,6,239,191,189,89,53,239,191,189,239,191,189,32,239,191,189,68,239,191,189,239,191,189,95,239,191,189,28,235,163,160,201,151,85,21,239,191,189,239,191,189,84,239,191,189,86,105,80,68,239,191,189,63,239,191,189,239,191,189,120,239,191,189,239,191,189,239,191,189,93,239,191,189,239,191,189,52,78,1,239,191,189,30,239,191,189,239,191,189,239,191,189,57,239,191,189,105,79,239,191,189,239,191,189,15,119,239,191,189,104,239,191,189,239,191,189,126,74,239,191,189,18,116,239,191,189,10,239,191,189,62,201,178,108,239,191,189,92,239,191,189,57,239,191,189,54,92,239,191,189,239,191,189,23,239,191,189,239,191,189,239,191,189,2,239,191,189,105,52,44,239,191,189,239,191,189,239,191,189,123,239,191,189,78,239,191,189,126,239,191,189,239,191,189,17,239,191,189,111,239,191,189,239,191,189,239,191,189,121,14,213,150,23,50,42,40,239,191,189,51,105,239,191,189,239,191,189,239,191,189,47,58,9,239,191,189,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,196,144,221,167,239,191,189,239,191,189,110,239,191,189,203,147,239,191,189,21,83,239,191,189,212,128,239,191,189,239,191,189,94,239,191,189,19,104,214,156,239,191,189,239,191,189,103,239,191,189,239,191,189,22,239,191,189,1,239,191,189,102,239,191,189,28,239,191,189,239,191,189,11,21,239,191,189,100,239,191,189,107,239,191,189,239,191,189,239,191,189,239,191,189,96,65,5,239,191,189,28,239,191,189,92,239,191,189,65,239,191,189,239,191,189,29,239,191,189,239,191,189,239,191,189,19,239,191,189,68,60,100,42,20,83,239,191,189,24,3,47,49,75,239,191,189,124,239,191,189,55,239,191,189,239,191,189,14,239,191,189,7,10,239,191,189,219,183,7,239,191,189,85,8,239,191,189,239,191,189,111,116,23,239,191,189,239,191,189,239,191,189,23,239,191,189,65,55,115,88,239,191,189,16,239,191,189,208,161,14,239,191,189,239,191,189,239,191,189,239,191,189,45,239,191,189,58,93,239,191,189,115,13,101,239,191,189,15,83,49,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,59,239,191,189,239,191,189,205,173,239,191,189,239,191,189,84,239,191,189,46,55,75,71,78,239,191,189,58,239,191,189,70,93,107,99,114,239,191,189,239,191,189,219,169,99,4,89,79,239,191,189,239,191,189,239,191,189,29,126,34,239,191,189,31,239,191,189,37,239,191,189,9,239,191,189,68,239,191,189,25,71,239,191,189,239,191,189,239,191,189,61,239,191,189,239,191,189,106,239,191,189,239,191,189,25,17,239,191,189,4,48,239,191,189,239,191,189,123,125,72,239,191,189,41,208,172,106,100,239,191,189,56,239,191,189,90,239,191,189,94,12,239,191,189,98,239,191,189,239,191,189,98,17,31,108,96,239,191,189,239,191,189,8,239,191,189,45,124,239,191,189,239,191,189,14,67,199,142,239,191,189,29,239,191,189,215,140,239,191,189,239,191,189,74,239,191,189,50,20,239,191,189,4,47,239,191,189,239,191,189,43,239,191,189,106,93,239,191,189,32,239,191,189,26,239,191,189,239,191,189,54,73,66,6,75,113,239,191,189,126,41,68,239,191,189,239,191,189,239,191,189,55,84,33,239,191,189,94,239,191,189,77,239,191,189,239,191,189,239,191,189,103,239,191,189,119,239,191,189,105,239,191,189,120,239,191,189,239,191,189,51,223,163,239,191,189,8,239,191,189,239,191,189,35,239,191,189,6,93,219,130,239,191,189,50,9,239,191,189,71,58,120,86,239,191,189,55,111,239,191,189,85,212,151,45,204,176,239,191,189,239,191,189,118,239,191,189,239,191,189,239,191,189,24,87,119,239,191,189,42,51,239,191,189,125,239,191,189,46,239,191,189,239,191,189,96,239,191,189,49,74,93,239,191,189,239,191,189,107,18,45,43,18,11,239,191,189,239,191,189,86,239,191,189,239,191,189,11,201,158,54,239,191,189,239,191,189,239,191,189,121,43,239,191,189,63,239,191,189,78,39,29,239,191,189,239,191,189,239,191,189,126,117,126,239,191,189,11,39,239,191,189,239,191,189,43,100,239,191,189,52,122,239,191,189,223,140,34,239,191,189,7,41,85,65,239,191,189,239,191,189,44,43,32,239,191,189,4,239,191,189,26,40,239,191,189,239,191,189,40,239,191,189,113,239,191,189,119,118,239,191,189,239,191,189,94,239,191,189,239,191,189,68,239,191,189,19,239,191,189,4,47,239,191,189,127,61,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,12,39,111,239,191,189,12,239,191,189,202,182,11,239,191,189,47,239,191,189,239,191,189,239,191,189,124,40,93,239,191,189,239,191,189,13,29,239,191,189,239,191,189,48,239,191,189,100,239,191,189,58,239,191,189,239,191,189,123,214,170,239,191,189,239,191,189,239,191,189,239,191,189,92,239,191,189,83,0,88,239,191,189,239,191,189,239,191,189,239,191,189,62,46,239,191,189,110,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,50,47,124,38,39,80,21,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,57,239,191,189,239,191,189,103,239,191,189,239,191,189,215,147,239,191,189,239,191,189,115,239,191,189,90,239,191,189,12,67,239,191,189,118,69,4,97,124,239,191,189,239,191,189,43,239,191,189,67,18,239,191,189,239,191,189,239,191,189,94,239,191,189,239,191,189,239,191,189,122,239,191,189,239,191,189,239,191,189,85,8,126,239,191,189,105,8,239,191,189,58,105,239,191,189,110,239,191,189,21,239,191,189,215,129,22,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,25,239,191,189,41,88,96,50,239,191,189,96,52,109,239,191,189,78,239,191,189,16,94,70,59,120,239,191,189,119,239,191,189,239,191,189,239,191,189,1,239,191,189,17,239,191,189,239,191,189,239,191,189,60,115,21,92,34,101,239,191,189,63,239,191,189,57,7,110,239,191,189,118,0,239,191,189,239,191,189,239,191,189,239,191,189,34,239,191,189,88,8,239,191,189,75,54,12,40,239,191,189,78,239,191,189,1,239,191,189,239,191,189,239,191,189,239,191,189,242,180,171,142,6,239,191,189,62,239,191,189,8,7,108,239,191,189,18,239,191,189,24,239,191,189,239,191,189,239,191,189,239,191,189,107,46,239,191,189,239,191,189,47,239,191,189,23,239,191,189,239,191,189,108,0,127,7,53,239,191,189,67,26,239,191,189,239,191,189,239,191,189,239,191,189,61,121,68,239,191,189,29,21,239,191,189,53,239,191,189,42,239,191,189,19,239,191,189,239,191,189,24,239,191,189,124,239,191,189,239,191,189,83,35,239,191,189,6,239,191,189,239,191,189,239,191,189,4,239,191,189,239,191,189,66,53,22,239,191,189,239,191,189,96,239,191,189,101,239,191,189,2,23,239,191,189,239,191,189,65,109,107,120,239,191,189,239,191,189,102,239,191,189,239,191,189,239,191,189,57,117,25,239,191,189,61,239,191,189,53,56,239,191,189,96,239,191,189,239,191,189,93,239,191,189,236,152,183,74,23,36,239,191,189,124,239,191,189,53,90,239,191,189,239,191,189,111,48,72,110,48,120,91,239,191,189,43,216,131,85,239,191,189,113,239,191,189,61,84,37,89,16,111,239,191,189,20,4,27,239,191,189,239,191,189,239,191,189,239,191,189,227,130,164,92,239,191,189,7,239,191,189,239,191,189,111,2,31,239,191,189,239,191,189,52,239,191,189,239,191,189,239,191,189,34,62,74,16,0,239,191,189,17,239,191,189,28,68,83,239,191,189,239,191,189,109,32,84,239,191,189,0,239,191,189,43,239,191,189,194,171,98,239,191,189,239,191,189,14,80,239,191,189,84,239,191,189,37,239,191,189,239,191,189,239,191,189,126,239,191,189,211,129,28,75,239,191,189,239,191,189,77,239,191,189,237,156,148,239,191,189,109,239,191,189,51,68,100,7,95,239,191,189,239,191,189,22,122,239,191,189,24,239,191,189,116,46,239,191,189,224,162,161,239,191,189,32,126,239,191,189,239,191,189,239,191,189,239,191,189,93,196,160,78,121,81,93,239,191,189,239,191,189,239,191,189,239,191,189,107,239,191,189,81,107,239,191,189,239,191,189,239,191,189,34,239,191,189,112,58,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,62,239,191,189,54,35,239,191,189,239,191,189,0,111,239,191,189,64,239,191,189,76,31,239,191,189,55,239,191,189,33,239,191,189,19,239,191,189,86,239,191,189,239,191,189,239,191,189,84,101,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,49,14,239,191,189,227,180,129,112,239,191,189,239,191,189,26,13,239,191,189,1,35,27,199,187,239,191,189,239,191,189,220,161,239,191,189,46,64,211,178,239,191,189,123,53,121,123,5,99,239,191,189,27,17,72,84,2,239,191,189,93,111,81,59,239,191,189,210,130,48,74,239,191,189,239,191,189,79,49,0,70,115,239,191,189,108,15,1,239,191,189,239,191,189,110,39,239,191,189,8,127,17,7,9,126,102,239,191,189,239,191,189,126,50,108,239,191,189,79,0,48,239,191,189,48,105,239,191,189,43,239,191,189,99,239,191,189,239,191,189,49,239,191,189,68,1,239,191,189,104,0,41,239,191,189,239,191,189,83,112,40,64,76,101,239,191,189,75,239,191,189,20,6,239,191,189,29,15,239,191,189,19,239,191,189,5,121,115,52,27,104,95,216,162,34,239,191,189,239,191,189,22,49,67,86,102,239,191,189,239,191,189,118,239,191,189,29,72,127,239,191,189,226,148,161,68,239,191,189,53,48,217,164,239,191,189,239,191,189,41,239,191,189,55,7,239,191,189,104,239,191,189,66,11,82,107,239,191,189,195,151,239,191,189,97,17,239,191,189,239,191,189,239,191,189,49,239,191,189,57,211,190,239,191,189,239,191,189,239,191,189,113,31,114,54,239,191,189,44,239,191,189,117,239,191,189,239,191,189,239,191,189,115,6,116,54,119,239,191,189,221,173,8,239,191,189,31,59,239,191,189,19,126,53,8,239,191,189,52,10,239,191,189,239,191,189,84,239,191,189,50,239,191,189,239,191,189,48,106,3,239,191,189,88,239,191,189,76,115,43,127,117,239,191,189,33,239,191,189,239,191,189,239,191,189,26,81,239,191,189,35,21,239,191,189,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a03fe3f3030",
                        container: "containersef0b0ab470c842759ffb08c73630605a",
                        blob: "Blob25a1aff944d048368affcdd432e412b9",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=28672-32767",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18951 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18951_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18951_s.txt", Encoding.UTF8);

    public Test18951() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{27,239,191,189,32,82,85,88,13,124,239,191,189,115,239,191,189,73,9,239,191,189,239,191,189,44,81,239,191,189,239,191,189,87,97,44,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,106,71,91,239,191,189,69,38,239,191,189,239,191,189,27,54,239,191,189,69,239,191,189,239,191,189,78,239,191,189,84,20,239,191,189,221,150,13,55,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,104,64,18,68,23,239,191,189,3,239,191,189,3,239,191,189,108,239,191,189,239,191,189,102,28,81,239,191,189,50,91,79,239,191,189,39,239,191,189,239,191,189,77,239,191,189,239,191,189,70,6,87,7,239,191,189,105,206,176,50,239,191,189,239,191,189,239,191,189,239,191,189,113,110,239,191,189,86,41,89,112,59,196,156,81,108,239,191,189,98,239,191,189,24,239,191,189,239,191,189,239,191,189,27,95,239,191,189,239,191,189,239,191,189,126,239,191,189,74,239,191,189,239,191,189,239,191,189,38,239,191,189,102,239,191,189,109,239,191,189,54,239,191,189,239,191,189,61,104,239,191,189,105,6,239,191,189,66,7,65,239,191,189,239,191,189,3,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,216,163,15,119,239,191,189,239,191,189,239,191,189,42,239,191,189,60,239,191,189,31,239,191,189,79,11,239,191,189,239,191,189,239,191,189,26,53,239,191,189,239,191,189,67,67,239,191,189,30,60,239,191,189,51,67,239,191,189,9,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,227,166,136,239,191,189,239,191,189,6,239,191,189,34,4,93,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,96,239,191,189,239,191,189,103,239,191,189,40,239,191,189,124,106,123,239,191,189,2,239,191,189,40,239,191,189,24,19,115,239,191,189,239,191,189,7,61,239,191,189,239,191,189,25,239,191,189,239,191,189,22,239,191,189,51,80,3,62,104,239,191,189,22,4,123,8,96,239,191,189,95,239,191,189,7,239,191,189,2,107,239,191,189,42,115,239,191,189,69,239,191,189,239,191,189,34,12,44,78,239,191,189,104,239,191,189,239,191,189,55,43,126,196,137,239,191,189,239,191,189,19,239,191,189,107,76,230,167,161,239,191,189,239,191,189,22,114,239,191,189,239,191,189,66,239,191,189,10,22,239,191,189,121,96,10,239,191,189,45,71,239,191,189,2,239,191,189,100,239,191,189,34,62,239,191,189,43,78,96,239,191,189,217,161,239,191,189,70,239,191,189,82,56,55,77,119,239,191,189,239,191,189,239,191,189,32,103,12,16,67,239,191,189,59,105,36,84,239,191,189,13,61,239,191,189,239,191,189,216,145,198,157,239,191,189,48,117,23,51,223,184,239,191,189,239,191,189,239,191,189,239,191,189,13,23,213,187,239,191,189,49,239,191,189,239,191,189,126,37,239,191,189,239,191,189,76,239,191,189,56,68,116,102,94,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,24,239,191,189,115,42,239,191,189,239,191,189,239,191,189,104,34,22,239,191,189,239,191,189,239,191,189,31,239,191,189,43,122,40,91,239,191,189,239,191,189,67,57,239,191,189,61,208,181,119,239,191,189,239,191,189,239,191,189,61,239,191,189,101,239,191,189,21,239,191,189,121,239,191,189,66,239,191,189,82,79,239,191,189,239,191,189,239,191,189,56,239,191,189,117,201,153,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,3,33,126,109,87,78,105,239,191,189,91,239,191,189,51,21,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,124,239,191,189,75,85,239,191,189,239,191,189,18,239,191,189,239,191,189,41,57,239,191,189,118,239,191,189,239,191,189,110,239,191,189,1,77,50,118,127,239,191,189,239,191,189,239,191,189,26,35,42,9,239,191,189,118,239,191,189,239,191,189,5,239,191,189,239,191,189,33})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4b6ccbd70ce54b43862febf1401d5a89",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19334 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19334_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19334_s.txt", Encoding.UTF8);

    public Test19334() : base(recordedRequest, recordedResponse, "accounts8d43a02499eb9db")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{48,239,191,189,23,239,191,189,53,239,191,189,89,239,191,189,239,191,189,6,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,87,239,191,189,49,239,191,189,239,191,189,239,191,189,112,239,191,189,18,239,191,189,112,87,239,191,189,102,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,146,239,191,189,239,191,189,239,191,189,63,239,191,189,121,239,191,189,205,150,239,191,189,116,17,77,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,53,239,191,189,1,239,191,189,76,15,239,191,189,37,239,191,189,239,191,189,239,191,189,1,239,191,189,55,239,191,189,69,36,239,191,189,114,21,119,49,217,178,239,191,189,84,239,191,189,239,191,189,239,191,189,23,239,191,189,43,109,55,92,29,239,191,189,35,239,191,189,239,191,189,116,37,217,175,114,239,191,189,22,26,239,191,189,239,191,189,239,191,189,14,115,38,4,239,191,189,79,16,239,191,189,101,56,105,239,191,189,47,202,148,73,239,191,189,107,239,191,189,1,239,191,189,239,191,189,89,2,11,239,191,189,2,20,196,147,106,7,239,191,189,239,191,189,28,239,191,189,17,87,109,74,19,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,70,59,239,191,189,8,239,191,189,86,239,191,189,25,35,239,191,189,239,191,189,76,239,191,189,51,239,191,189,239,191,189,97,0,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,119,85,29,53,125,87,239,191,189,239,191,189,10,77,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,22,199,182,239,191,189,239,191,189,239,191,189,32,55,68,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,44,239,191,189,91,47,198,181,122,17,97,239,191,189,60,27,239,191,189,74,35,64,101,239,191,189,239,191,189,68,31,77,239,191,189,53,239,191,189,239,191,189,110,239,191,189,11,89,113,239,191,189,2,239,191,189,239,191,189,239,191,189,98,239,191,189,80,17,59,239,191,189,72,239,191,189,239,191,189,27,239,191,189,195,149,111,64,239,191,189,239,191,189,74,37,222,158,38,73,239,191,189,70,239,191,189,5,8,239,191,189,239,191,189,25,28,239,191,189,68,222,151,239,191,189,239,191,189,9,122,5,69,81,239,191,189,100,239,191,189,9,239,191,189,24,239,191,189,239,191,189,239,191,189,119,239,191,189,64,60,239,191,189,122,239,191,189,96,239,191,189,63,24,53,2,111,58,80,239,191,189,239,191,189,58,50,65,239,191,189,239,191,189,88,239,191,189,126,113,239,191,189,239,191,189,105,239,191,189,239,191,189,16,97,239,191,189,239,191,189,4,239,191,189,18,12,239,191,189,239,191,189,239,191,189,44,28,239,191,189,239,191,189,112,239,191,189,11,111,118,107,119,239,191,189,8,239,191,189,103,5,8,47,239,191,189,53,80,68,36,239,191,189,202,146,75,239,191,189,45,63,239,191,189,239,191,189,19,44,239,191,189,239,191,189,123,42,25,94,239,191,189,93,239,191,189,239,191,189,216,158,29,59,13,4,239,191,189,27,239,191,189,117,239,191,189,239,191,189,39,43,239,191,189,109,28,239,191,189,73,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,4,116,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,41,124,124,40,239,191,189,69,239,191,189,239,191,189,80,76,239,191,189,65,239,191,189,20,122,10,217,169,99,239,191,189,239,191,189,118,239,191,189,239,191,189,207,165,0,121,111,56,239,191,189,63,105,78,32,239,191,189,98,239,191,189,87,117,239,191,189,60,239,191,189,201,149,39,239,191,189,4,239,191,189,24,75,239,191,189,39,202,178,239,191,189,239,191,189,89,239,191,189,69,71,31,23,99,108,239,191,189,89,239,191,189,203,168,4,82})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a02499eb9db",
                        container: "$root",
                        blob: "a ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23058 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23058_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23058_s.txt", Encoding.UTF8);

    public Test23058() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{115,116,44,196,142,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,22,239,191,189,11,239,191,189,239,191,189,74,108,239,191,189,22,70,75,126,115,239,191,189,239,191,189,17,239,191,189,52,25,118,44,41,239,191,189,239,191,189,201,146,70,67,95,201,173,239,191,189,239,191,189,83,239,191,189,239,191,189,49,239,191,189,239,191,189,19,239,191,189,239,191,189,40,239,191,189,239,191,189,63,217,150,88,102,110,15,239,191,189,103,113,239,191,189,2,239,191,189,37,239,191,189,82,76,239,191,189,195,129,31,239,191,189,239,191,189,239,191,189,194,175,51,239,191,189,25,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,6,106,239,191,189,112,71,25,239,191,189,106,43,239,191,189,88,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,35,100,117,239,191,189,78,21,239,191,189,239,191,189,239,191,189,59,46,239,191,189,207,146,4,47,239,191,189,30,65,239,191,189,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,67,239,191,189,239,191,189,239,191,189,114,239,191,189,88,84,239,191,189,112,94,64,239,191,189,85,18,218,143,222,191,239,191,189,91,239,191,189,84,239,191,189,239,191,189,56,104,209,186,239,191,189,239,191,189,239,191,189,47,239,191,189,239,191,189,239,191,189,53,119,123,216,147,209,156,102,239,191,189,117,1,239,191,189,239,191,189,239,191,189,26,106,86,50,54,239,191,189,239,191,189,81,31,239,191,189,239,191,189,123,92,47,239,191,189,239,191,189,41,239,191,189,21,239,191,189,34,239,191,189,20,239,191,189,239,191,189,83,59,239,191,189,239,191,189,102,15,239,191,189,14,239,191,189,29,122,239,191,189,122,239,191,189,239,191,189,239,191,189,88,239,191,189,239,191,189,239,191,189,85,63,54,104,239,191,189,239,191,189,7,239,191,189,73,239,191,189,239,191,189,65,114,89,239,191,189,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,109,239,191,189,18,9,239,191,189,239,191,189,28,239,191,189,239,191,189,80,37,239,191,189,20,4,82,48,239,191,189,8,55,239,191,189,210,146,56,239,191,189,33,68,100,78,239,191,189,10,22,21,239,191,189,36,95,239,191,189,40,47,239,191,189,239,191,189,44,58,28,239,191,189,209,137,239,191,189,68,44,239,191,189,208,144,239,191,189,239,191,189,127,239,191,189,92,239,191,189,239,191,189,239,191,189,87,239,191,189,69,15,205,159,104,239,191,189,239,191,189,102,217,157,33,239,191,189,88,28,239,191,189,80,239,191,189,239,191,189,9,239,191,189,19,69,239,191,189,63,234,165,142,79,239,191,189,239,191,189,239,191,189,76,93,239,191,189,13,239,191,189,49,33,239,191,189,81,239,191,189,239,191,189,239,191,189,239,191,189,27,38,239,191,189,97,61,239,191,189,239,191,189,77,0,49,239,191,189,71,96,125,58,100,53,239,191,189,61,239,191,189,239,191,189,72,99,15,57,30,239,191,189,35,239,191,189,38,239,191,189,78,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,92,239,191,189,239,191,189,239,191,189,92,239,191,189,67,121,209,163,118,239,191,189,114,196,186,54,239,191,189,239,191,189,195,165,39,31,62,239,191,189,239,191,189,218,174,123,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,110,121,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,77,239,191,189,239,191,189,203,180,239,191,189,239,191,189,92,6,239,191,189,239,191,189,52,239,191,189,61,239,191,189,60,106,239,191,189,20,239,191,189,239,191,189,42,239,191,189,239,191,189,97,43,85,65,120,239,191,189,239,191,189,35,239,191,189,103,239,191,189,73,19,239,191,189,37,239,191,189,239,191,189,88,239,191,189,239,191,189,0,86,239,191,189,49,239,191,189,107,106,239,191,189,3,239,191,189,35,239,191,189,239,191,189,106,239,191,189,105,82,239,191,189,41,22,239,191,189})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers30b14b311ab4433e8a93d576a9123d6f",
                        blob: "PageBlobcd3a1d18387644828c12856abe6945ff",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18960 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18960_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18960_s.txt", Encoding.UTF8);

    public Test18960() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{27,239,191,189,32,82,85,88,13,124,239,191,189,115,239,191,189,73,9,239,191,189,239,191,189,44,81,239,191,189,239,191,189,87,97,44,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,106,71,91,239,191,189,69,38,239,191,189,239,191,189,27,54,239,191,189,69,239,191,189,239,191,189,78,239,191,189,84,20,239,191,189,221,150,13,55,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,104,64,18,68,23,239,191,189,3,239,191,189,3,239,191,189,108,239,191,189,239,191,189,102,28,81,239,191,189,50,91,79,239,191,189,39,239,191,189,239,191,189,77,239,191,189,239,191,189,70,6,87,7,239,191,189,105,206,176,50,239,191,189,239,191,189,239,191,189,239,191,189,113,110,239,191,189,86,41,89,112,59,196,156,81,108,239,191,189,98,239,191,189,24,239,191,189,239,191,189,239,191,189,27,95,239,191,189,239,191,189,239,191,189,126,239,191,189,74,239,191,189,239,191,189,239,191,189,38,239,191,189,102,239,191,189,109,239,191,189,54,239,191,189,239,191,189,61,104,239,191,189,105,6,239,191,189,66,7,65,239,191,189,239,191,189,3,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,216,163,15,119,239,191,189,239,191,189,239,191,189,42,239,191,189,60,239,191,189,31,239,191,189,79,11,239,191,189,239,191,189,239,191,189,26,53,239,191,189,239,191,189,67,67,239,191,189,30,60,239,191,189,51,67,239,191,189,9,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,227,166,136,239,191,189,239,191,189,6,239,191,189,34,4,93,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,96,239,191,189,239,191,189,103,239,191,189,40,239,191,189,124,106,123,239,191,189,2,239,191,189,40,239,191,189,24,19,115,239,191,189,239,191,189,7,61,239,191,189,239,191,189,25,239,191,189,239,191,189,22,239,191,189,51,80,3,62,104,239,191,189,22,4,123,8,96,239,191,189,95,239,191,189,7,239,191,189,2,107,239,191,189,42,115,239,191,189,69,239,191,189,239,191,189,34,12,44,78,239,191,189,104,239,191,189,239,191,189,55,43,126,196,137,239,191,189,239,191,189,19,239,191,189,107,76,230,167,161,239,191,189,239,191,189,22,114,239,191,189,239,191,189,66,239,191,189,10,22,239,191,189,121,96,10,239,191,189,45,71,239,191,189,2,239,191,189,100,239,191,189,34,62,239,191,189,43,78,96,239,191,189,217,161,239,191,189,70,239,191,189,82,56,55,77,119,239,191,189,239,191,189,239,191,189,32,103,12,16,67,239,191,189,59,105,36,84,239,191,189,13,61,239,191,189,239,191,189,216,145,198,157,239,191,189,48,117,23,51,223,184,239,191,189,239,191,189,239,191,189,239,191,189,13,23,213,187,239,191,189,49,239,191,189,239,191,189,126,37,239,191,189,239,191,189,76,239,191,189,56,68,116,102,94,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,24,239,191,189,115,42,239,191,189,239,191,189,239,191,189,104,34,22,239,191,189,239,191,189,239,191,189,31,239,191,189,43,122,40,91,239,191,189,239,191,189,67,57,239,191,189,61,208,181,119,239,191,189,239,191,189,239,191,189,61,239,191,189,101,239,191,189,21,239,191,189,121,239,191,189,66,239,191,189,82,79,239,191,189,239,191,189,239,191,189,56,239,191,189,117,201,153,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,3,33,126,109,87,78,105,239,191,189,91,239,191,189,51,21,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,124,239,191,189,75,85,239,191,189,239,191,189,18,239,191,189,239,191,189,41,57,239,191,189,118,239,191,189,239,191,189,110,239,191,189,1,77,50,118,127,239,191,189,239,191,189,239,191,189,26,35,42,9,239,191,189,118,239,191,189,239,191,189,5,239,191,189,239,191,189,33})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4b6ccbd70ce54b43862febf1401d5a89",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23066 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23066_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23066_s.txt", Encoding.UTF8);

    public Test23066() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{112,239,191,189,45,239,191,189,239,191,189,24,90,239,191,189,114,85,239,191,189,239,191,189,126,111,239,191,189,239,191,189,239,191,189,33,239,191,189,67,16,239,191,189,239,191,189,103,28,239,191,189,13,105,239,191,189,44,239,191,189,208,147,31,94,239,191,189,239,191,189,10,37,101,9,74,239,191,189,67,56,239,191,189,239,191,189,66,239,191,189,10,21,239,191,189,64,239,191,189,80,24,197,163,239,191,189,11,239,191,189,239,191,189,69,101,239,191,189,95,95,16,239,191,189,87,239,191,189,23,239,191,189,239,191,189,7,118,5,35,239,191,189,31,46,38,239,191,189,34,239,191,189,30,82,239,191,189,14,204,186,63,47,26,117,20,4,40,91,239,191,189,66,239,191,189,99,106,31,239,191,189,239,191,189,98,239,191,189,239,191,189,18,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,37,34,239,191,189,239,191,189,12,239,191,189,2,18,239,191,189,239,191,189,239,191,189,104,239,191,189,113,239,191,189,239,191,189,10,239,191,189,95,239,191,189,101,3,239,191,189,52,239,191,189,1,52,239,191,189,24,127,116,61,239,191,189,239,191,189,226,157,145,239,191,189,111,239,191,189,80,239,191,189,116,22,61,239,191,189,239,191,189,104,54,217,181,239,191,189,125,6,239,191,189,31,239,191,189,239,191,189,28,239,191,189,239,191,189,88,239,191,189,43,115,111,239,191,189,4,239,191,189,63,54,61,109,239,191,189,114,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,104,203,131,62,202,149,239,191,189,239,191,189,46,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,71,73,239,191,189,239,191,189,60,239,191,189,239,191,189,239,191,189,239,191,189,120,112,239,191,189,39,239,191,189,239,191,189,38,105,2,239,191,189,70,96,221,176,24,239,191,189,239,191,189,80,58,239,191,189,208,149,122,81,69,35,41,239,191,189,239,191,189,239,191,189,82,37,239,191,189,17,7,50,5,93,239,191,189,52,239,191,189,34,1,239,191,189,239,191,189,29,36,239,191,189,12,239,191,189,105,239,191,189,83,25,239,191,189,74,239,191,189,117,109,239,191,189,16,73,239,191,189,14,239,191,189,239,191,189,6,206,153,75,239,191,189,3,239,191,189,239,191,189,87,80,93,95,12,239,191,189,21,239,191,189,239,191,189,49,103,239,191,189,239,191,189,239,191,189,49,239,191,189,63,239,191,189,27,239,191,189,239,191,189,239,191,189,85,239,191,189,12,67,29,239,191,189,115,90,239,191,189,239,191,189,4,239,191,189,194,133,239,191,189,102,104,239,191,189,127,43,99,121,239,191,189,51,86,15,239,191,189,239,191,189,12,239,191,189,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,83,239,191,189,118,37,113,239,191,189,239,191,189,127,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,127,66,31,239,191,189,117,239,191,189,50,239,191,189,239,191,189,14,82,239,191,189,78,239,191,189,239,191,189,7,10,67,239,191,189,105,18,239,191,189,98,89,239,191,189,239,191,189,239,191,189,39,239,191,189,239,191,189,239,191,189,239,191,189,50,115,239,191,189,239,191,189,239,191,189,8,30,80,122,239,191,189,104,210,175,60,11,239,191,189,121,239,191,189,239,191,189,32,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,7,239,191,189,7,11,38,94,51,97,13,27,37,90,42,28,59,109,24,239,191,189,239,191,189,239,191,189,239,191,189,9,239,191,189,201,167,56,239,191,189,239,191,189,239,191,189,34,107,239,191,189,239,191,189,22,239,191,189,106,23,69,83,124,52,113,239,191,189,32,239,191,189,38,79,239,191,189,239,191,189,239,191,189,121,46,26,239,191,189,62,239,191,189,2,61,100,239,191,189,75,239,191,189,235,176,145,239,191,189,19,53,239,191,189,86,239,191,189,68,71,239,191,189,22,103,122})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers51855202970f4e22980bf278d06d99f6",
                        blob: "PageBlobd624413c76ea424a81eb56b925219862",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19343 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19343_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19343_s.txt", Encoding.UTF8);

    public Test19343() : base(recordedRequest, recordedResponse, "accounts8d43a02499eb9db")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{48,239,191,189,23,239,191,189,53,239,191,189,89,239,191,189,239,191,189,6,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,87,239,191,189,49,239,191,189,239,191,189,239,191,189,112,239,191,189,18,239,191,189,112,87,239,191,189,102,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,146,239,191,189,239,191,189,239,191,189,63,239,191,189,121,239,191,189,205,150,239,191,189,116,17,77,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,53,239,191,189,1,239,191,189,76,15,239,191,189,37,239,191,189,239,191,189,239,191,189,1,239,191,189,55,239,191,189,69,36,239,191,189,114,21,119,49,217,178,239,191,189,84,239,191,189,239,191,189,239,191,189,23,239,191,189,43,109,55,92,29,239,191,189,35,239,191,189,239,191,189,116,37,217,175,114,239,191,189,22,26,239,191,189,239,191,189,239,191,189,14,115,38,4,239,191,189,79,16,239,191,189,101,56,105,239,191,189,47,202,148,73,239,191,189,107,239,191,189,1,239,191,189,239,191,189,89,2,11,239,191,189,2,20,196,147,106,7,239,191,189,239,191,189,28,239,191,189,17,87,109,74,19,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,70,59,239,191,189,8,239,191,189,86,239,191,189,25,35,239,191,189,239,191,189,76,239,191,189,51,239,191,189,239,191,189,97,0,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,119,85,29,53,125,87,239,191,189,239,191,189,10,77,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,22,199,182,239,191,189,239,191,189,239,191,189,32,55,68,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,44,239,191,189,91,47,198,181,122,17,97,239,191,189,60,27,239,191,189,74,35,64,101,239,191,189,239,191,189,68,31,77,239,191,189,53,239,191,189,239,191,189,110,239,191,189,11,89,113,239,191,189,2,239,191,189,239,191,189,239,191,189,98,239,191,189,80,17,59,239,191,189,72,239,191,189,239,191,189,27,239,191,189,195,149,111,64,239,191,189,239,191,189,74,37,222,158,38,73,239,191,189,70,239,191,189,5,8,239,191,189,239,191,189,25,28,239,191,189,68,222,151,239,191,189,239,191,189,9,122,5,69,81,239,191,189,100,239,191,189,9,239,191,189,24,239,191,189,239,191,189,239,191,189,119,239,191,189,64,60,239,191,189,122,239,191,189,96,239,191,189,63,24,53,2,111,58,80,239,191,189,239,191,189,58,50,65,239,191,189,239,191,189,88,239,191,189,126,113,239,191,189,239,191,189,105,239,191,189,239,191,189,16,97,239,191,189,239,191,189,4,239,191,189,18,12,239,191,189,239,191,189,239,191,189,44,28,239,191,189,239,191,189,112,239,191,189,11,111,118,107,119,239,191,189,8,239,191,189,103,5,8,47,239,191,189,53,80,68,36,239,191,189,202,146,75,239,191,189,45,63,239,191,189,239,191,189,19,44,239,191,189,239,191,189,123,42,25,94,239,191,189,93,239,191,189,239,191,189,216,158,29,59,13,4,239,191,189,27,239,191,189,117,239,191,189,239,191,189,39,43,239,191,189,109,28,239,191,189,73,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,4,116,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,41,124,124,40,239,191,189,69,239,191,189,239,191,189,80,76,239,191,189,65,239,191,189,20,122,10,217,169,99,239,191,189,239,191,189,118,239,191,189,239,191,189,207,165,0,121,111,56,239,191,189,63,105,78,32,239,191,189,98,239,191,189,87,117,239,191,189,60,239,191,189,201,149,39,239,191,189,4,239,191,189,24,75,239,191,189,39,202,178,239,191,189,239,191,189,89,239,191,189,69,71,31,23,99,108,239,191,189,89,239,191,189,203,168,4,82})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a02499eb9db",
                        container: "$root",
                        blob: "  a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test18969 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18969_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\18969_s.txt", Encoding.UTF8);

    public Test18969() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{27,239,191,189,32,82,85,88,13,124,239,191,189,115,239,191,189,73,9,239,191,189,239,191,189,44,81,239,191,189,239,191,189,87,97,44,239,191,189,239,191,189,83,239,191,189,239,191,189,239,191,189,106,71,91,239,191,189,69,38,239,191,189,239,191,189,27,54,239,191,189,69,239,191,189,239,191,189,78,239,191,189,84,20,239,191,189,221,150,13,55,239,191,189,239,191,189,239,191,189,53,239,191,189,239,191,189,239,191,189,104,64,18,68,23,239,191,189,3,239,191,189,3,239,191,189,108,239,191,189,239,191,189,102,28,81,239,191,189,50,91,79,239,191,189,39,239,191,189,239,191,189,77,239,191,189,239,191,189,70,6,87,7,239,191,189,105,206,176,50,239,191,189,239,191,189,239,191,189,239,191,189,113,110,239,191,189,86,41,89,112,59,196,156,81,108,239,191,189,98,239,191,189,24,239,191,189,239,191,189,239,191,189,27,95,239,191,189,239,191,189,239,191,189,126,239,191,189,74,239,191,189,239,191,189,239,191,189,38,239,191,189,102,239,191,189,109,239,191,189,54,239,191,189,239,191,189,61,104,239,191,189,105,6,239,191,189,66,7,65,239,191,189,239,191,189,3,239,191,189,106,239,191,189,239,191,189,239,191,189,239,191,189,216,163,15,119,239,191,189,239,191,189,239,191,189,42,239,191,189,60,239,191,189,31,239,191,189,79,11,239,191,189,239,191,189,239,191,189,26,53,239,191,189,239,191,189,67,67,239,191,189,30,60,239,191,189,51,67,239,191,189,9,239,191,189,239,191,189,93,239,191,189,239,191,189,239,191,189,227,166,136,239,191,189,239,191,189,6,239,191,189,34,4,93,239,191,189,28,239,191,189,239,191,189,239,191,189,239,191,189,81,239,191,189,96,239,191,189,239,191,189,103,239,191,189,40,239,191,189,124,106,123,239,191,189,2,239,191,189,40,239,191,189,24,19,115,239,191,189,239,191,189,7,61,239,191,189,239,191,189,25,239,191,189,239,191,189,22,239,191,189,51,80,3,62,104,239,191,189,22,4,123,8,96,239,191,189,95,239,191,189,7,239,191,189,2,107,239,191,189,42,115,239,191,189,69,239,191,189,239,191,189,34,12,44,78,239,191,189,104,239,191,189,239,191,189,55,43,126,196,137,239,191,189,239,191,189,19,239,191,189,107,76,230,167,161,239,191,189,239,191,189,22,114,239,191,189,239,191,189,66,239,191,189,10,22,239,191,189,121,96,10,239,191,189,45,71,239,191,189,2,239,191,189,100,239,191,189,34,62,239,191,189,43,78,96,239,191,189,217,161,239,191,189,70,239,191,189,82,56,55,77,119,239,191,189,239,191,189,239,191,189,32,103,12,16,67,239,191,189,59,105,36,84,239,191,189,13,61,239,191,189,239,191,189,216,145,198,157,239,191,189,48,117,23,51,223,184,239,191,189,239,191,189,239,191,189,239,191,189,13,23,213,187,239,191,189,49,239,191,189,239,191,189,126,37,239,191,189,239,191,189,76,239,191,189,56,68,116,102,94,239,191,189,239,191,189,87,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,100,24,239,191,189,115,42,239,191,189,239,191,189,239,191,189,104,34,22,239,191,189,239,191,189,239,191,189,31,239,191,189,43,122,40,91,239,191,189,239,191,189,67,57,239,191,189,61,208,181,119,239,191,189,239,191,189,239,191,189,61,239,191,189,101,239,191,189,21,239,191,189,121,239,191,189,66,239,191,189,82,79,239,191,189,239,191,189,239,191,189,56,239,191,189,117,201,153,239,191,189,239,191,189,239,191,189,96,239,191,189,239,191,189,3,33,126,109,87,78,105,239,191,189,91,239,191,189,51,21,239,191,189,117,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,64,239,191,189,124,239,191,189,75,85,239,191,189,239,191,189,18,239,191,189,239,191,189,41,57,239,191,189,118,239,191,189,239,191,189,110,239,191,189,1,77,50,118,127,239,191,189,239,191,189,239,191,189,26,35,42,9,239,191,189,118,239,191,189,239,191,189,5,239,191,189,239,191,189,33})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4b6ccbd70ce54b43862febf1401d5a89",
                        blob: "a",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19352 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19352_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19352_s.txt", Encoding.UTF8);

    public Test19352() : base(recordedRequest, recordedResponse, "accounts8d43a02499eb9db")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{48,239,191,189,23,239,191,189,53,239,191,189,89,239,191,189,239,191,189,6,239,191,189,239,191,189,107,239,191,189,239,191,189,239,191,189,87,239,191,189,49,239,191,189,239,191,189,239,191,189,112,239,191,189,18,239,191,189,112,87,239,191,189,102,239,191,189,40,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,146,239,191,189,239,191,189,239,191,189,63,239,191,189,121,239,191,189,205,150,239,191,189,116,17,77,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,239,191,189,53,239,191,189,1,239,191,189,76,15,239,191,189,37,239,191,189,239,191,189,239,191,189,1,239,191,189,55,239,191,189,69,36,239,191,189,114,21,119,49,217,178,239,191,189,84,239,191,189,239,191,189,239,191,189,23,239,191,189,43,109,55,92,29,239,191,189,35,239,191,189,239,191,189,116,37,217,175,114,239,191,189,22,26,239,191,189,239,191,189,239,191,189,14,115,38,4,239,191,189,79,16,239,191,189,101,56,105,239,191,189,47,202,148,73,239,191,189,107,239,191,189,1,239,191,189,239,191,189,89,2,11,239,191,189,2,20,196,147,106,7,239,191,189,239,191,189,28,239,191,189,17,87,109,74,19,239,191,189,239,191,189,239,191,189,11,239,191,189,239,191,189,239,191,189,239,191,189,70,59,239,191,189,8,239,191,189,86,239,191,189,25,35,239,191,189,239,191,189,76,239,191,189,51,239,191,189,239,191,189,97,0,239,191,189,239,191,189,239,191,189,56,239,191,189,239,191,189,98,239,191,189,239,191,189,239,191,189,239,191,189,119,85,29,53,125,87,239,191,189,239,191,189,10,77,239,191,189,239,191,189,239,191,189,95,239,191,189,239,191,189,22,199,182,239,191,189,239,191,189,239,191,189,32,55,68,14,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,68,44,239,191,189,91,47,198,181,122,17,97,239,191,189,60,27,239,191,189,74,35,64,101,239,191,189,239,191,189,68,31,77,239,191,189,53,239,191,189,239,191,189,110,239,191,189,11,89,113,239,191,189,2,239,191,189,239,191,189,239,191,189,98,239,191,189,80,17,59,239,191,189,72,239,191,189,239,191,189,27,239,191,189,195,149,111,64,239,191,189,239,191,189,74,37,222,158,38,73,239,191,189,70,239,191,189,5,8,239,191,189,239,191,189,25,28,239,191,189,68,222,151,239,191,189,239,191,189,9,122,5,69,81,239,191,189,100,239,191,189,9,239,191,189,24,239,191,189,239,191,189,239,191,189,119,239,191,189,64,60,239,191,189,122,239,191,189,96,239,191,189,63,24,53,2,111,58,80,239,191,189,239,191,189,58,50,65,239,191,189,239,191,189,88,239,191,189,126,113,239,191,189,239,191,189,105,239,191,189,239,191,189,16,97,239,191,189,239,191,189,4,239,191,189,18,12,239,191,189,239,191,189,239,191,189,44,28,239,191,189,239,191,189,112,239,191,189,11,111,118,107,119,239,191,189,8,239,191,189,103,5,8,47,239,191,189,53,80,68,36,239,191,189,202,146,75,239,191,189,45,63,239,191,189,239,191,189,19,44,239,191,189,239,191,189,123,42,25,94,239,191,189,93,239,191,189,239,191,189,216,158,29,59,13,4,239,191,189,27,239,191,189,117,239,191,189,239,191,189,39,43,239,191,189,109,28,239,191,189,73,43,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,78,239,191,189,4,116,239,191,189,239,191,189,239,191,189,126,239,191,189,239,191,189,239,191,189,46,239,191,189,239,191,189,41,124,124,40,239,191,189,69,239,191,189,239,191,189,80,76,239,191,189,65,239,191,189,20,122,10,217,169,99,239,191,189,239,191,189,118,239,191,189,239,191,189,207,165,0,121,111,56,239,191,189,63,105,78,32,239,191,189,98,239,191,189,87,117,239,191,189,60,239,191,189,201,149,39,239,191,189,4,239,191,189,24,75,239,191,189,39,202,178,239,191,189,239,191,189,89,239,191,189,69,71,31,23,99,108,239,191,189,89,239,191,189,203,168,4,82})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a02499eb9db",
                        container: "$root",
                        blob: " a ",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19098 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19098_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19098_s.txt", Encoding.UTF8);

    public Test19098() : base(recordedRequest, recordedResponse, "accounts8d43a0248897754")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            System.IO.Stream body; body = new MemoryStream(Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(new byte[]{40,10,239,191,189,79,56,239,191,189,239,191,189,80,239,191,189,239,191,189,13,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,127,232,175,172,239,191,189,60,239,191,189,113,32,239,191,189,76,239,191,189,239,191,189,239,191,189,123,239,191,189,87,239,191,189,239,191,189,55,239,191,189,114,54,239,191,189,239,191,189,106,239,191,189,126,239,191,189,1,111,51,106,70,239,191,189,239,191,189,123,87,239,191,189,92,198,145,23,4,239,191,189,53,9,239,191,189,239,191,189,239,191,189,67,239,191,189,2,13,239,191,189,239,191,189,239,191,189,36,239,191,189,84,239,191,189,121,239,191,189,239,191,189,239,191,189,72,65,239,191,189,239,191,189,239,191,189,76,30,239,191,189,27,239,191,189,30,239,191,189,239,191,189,87,96,11,239,191,189,0,239,191,189,123,239,191,189,104,57,29,239,191,189,239,191,189,50,239,191,189,7,239,191,189,23,61,40,53,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,214,186,239,191,189,43,239,191,189,66,239,191,189,239,191,189,113,73,38,121,28,97,40,239,191,189,8,239,191,189,239,191,189,30,26,80,239,191,189,71,239,191,189,225,140,190,106,239,191,189,36,239,191,189,53,199,164,239,191,189,13,239,191,189,239,191,189,239,191,189,101,92,239,191,189,239,191,189,239,191,189,32,239,191,189,13,13,239,191,189,88,239,191,189,219,133,239,191,189,98,239,191,189,239,191,189,11,98,239,191,189,36,40,68,84,239,191,189,69,93,239,191,189,3,47,42,239,191,189,239,191,189,22,239,191,189,43,239,191,189,197,176,92,239,191,189,239,191,189,24,239,191,189,239,191,189,30,239,191,189,239,191,189,239,191,189,2,239,191,189,3,239,191,189,239,191,189,239,191,189,90,239,191,189,10,199,175,239,191,189,85,239,191,189,239,191,189,38,239,191,189,239,191,189,4,54,239,191,189,239,191,189,90,6,0,88,16,239,191,189,104,239,191,189,73,122,79,41,45,67,239,191,189,112,125,21,239,191,189,239,191,189,239,191,189,239,191,189,19,118,98,6,197,141,45,239,191,189,116,239,191,189,17,239,191,189,239,191,189,239,191,189,65,116,239,191,189,99,109,126,53,116,44,239,191,189,63,117,32,82,239,191,189,101,239,191,189,54,113,89,239,191,189,226,174,181,239,191,189,16,27,239,191,189,239,191,189,64,28,239,191,189,239,191,189,239,191,189,59,239,191,189,50,239,191,189,76,106,119,239,191,189,73,239,191,189,239,191,189,80,108,239,191,189,239,191,189,15,239,191,189,239,191,189,27,239,191,189,239,191,189,95,239,191,189,239,191,189,239,191,189,93,98,239,191,189,239,191,189,239,191,189,108,239,191,189,239,191,189,51,22,76,50,105,239,191,189,7,239,191,189,77,239,191,189,239,191,189,239,191,189,82,239,191,189,65,239,191,189,239,191,189,82,65,239,191,189,17,86,239,191,189,239,191,189,74,239,191,189,239,191,189,7,239,191,189,5,93,109,62,239,191,189,56,195,163,220,132,239,191,189,19,239,191,189,73,239,191,189,239,191,189,239,191,189,109,239,191,189,33,239,191,189,205,153,43,239,191,189,239,191,189,58,113,239,191,189,239,191,189,239,191,189,4,72,58,102,239,191,189,239,191,189,107,125,8,239,191,189,239,191,189,80,239,191,189,81,12,21,239,191,189,79,99,54,239,191,189,239,191,189,55,239,191,189,66,81,239,191,189,91,239,191,189,50,239,191,189,239,191,189,239,191,189,20,239,191,189,0,239,191,189,239,191,189,74,239,191,189,77,239,191,189,239,191,189,239,191,189,239,191,189,239,191,189,102,93,239,191,189,37,239,191,189,239,191,189,52,239,191,189,24,19,17,118,35,94,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,89,114,239,191,189,12,239,191,189,93,4,239,191,189,239,191,189,66,11,87,239,191,189,103,235,130,139,100,239,191,189,91,239,191,189,51,239,191,189,239,191,189,239,191,189,21,103,239,191,189,239,191,189,62,239,191,189,15,239,191,189,239,191,189,239,191,189,239,191,189,195,155})));
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.PageBlobs.PutPageWithHttpMessagesAsync(
                        accountName: "accounts8d43a0248897754",
                        container: "$root",
                        blob: "validBlobName",
                        pageWrite: "Update".ParsePageWrite() ?? (PageWrite)Enum.Parse(typeof(PageWrite), "Update"),
                        body: body,
                        timeout: 30,
                        range: "bytes=0-511",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}
