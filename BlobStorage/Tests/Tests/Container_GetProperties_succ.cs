// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// 

using Microsoft.Rest;
using System;
using System.Diagnostics;
using System.Linq;
using System.IO;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Xml.Linq;
using Xunit;
using BlobStorageTest.Client;
using BlobStorageTest.Client.Models;
using BlobStorageTest.Tests;
using Microsoft.Rest.Azure;

//<dump disabled/>

public class Test000023 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000023_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:10 GMT
ETag: ""0x8D43A665E1D4204""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e86e2c-0001-0008-244f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:12 GMT

0

";

    public Test000023() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcc7df4da71239455288caf55f02ba8ca4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000029 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000029_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:13 GMT
ETag: ""0x8D43A6660132CB8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e870e4-0001-0008-224f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:13 GMT

0

";

    public Test000029() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc706236f0a1fd45e0b33fac0f9c6ff6e6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000045 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000045_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:16 GMT
ETag: ""0x8D43A6661BBDB01""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e875a5-0001-0008-054f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:14 GMT

0

";

    public Test000045() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testca8a0bcae1bb540f4b21c69fc28a75f79",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000040 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000040_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:16 GMT
ETag: ""0x8D43A66617466E7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e87432-0001-0008-354f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 21:11:14 GMT

0

";

    public Test000040() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testca8a0bcae1bb540f4b21c69fc28a75f79",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000050 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000050_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:17 GMT
ETag: ""0x8D43A6661FEE193""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e8771b-0001-0008-5d4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: blob
Date: Wed, 11 Jan 2017 21:11:15 GMT

0

";

    public Test000050() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testca8a0bcae1bb540f4b21c69fc28a75f79",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000107 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000107_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:22 GMT
ETag: ""0x8D43A66651F4D15""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e896e0-0001-0008-414f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:27 GMT

0

";

    public Test000107() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcd7cc5e5bb711450abe51096be2da3de9",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000137 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000137_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:28 GMT
ETag: ""0x8D43A66687B4B21""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e89c1d-0001-0008-744f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:29 GMT

0

";

    public Test000137() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc60628ce5af02432b9660b3c019be6194",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000143 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000143_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:29 GMT
ETag: ""0x8D43A6669500044""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18df073d-0001-00d2-224f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:29 GMT

0

";

    public Test000143() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc6bcad2100bd245a4b2c75feee0584c63",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000163 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000163_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:31 GMT
ETag: ""0x8D43A666A9B6D48""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18df0a7f-0001-00d2-794f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:31 GMT

0

";

    public Test000163() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc5737103db6e2493c8834f169c961266a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000158 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000158_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:29 GMT
ETag: ""0x8D43A666984003D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18df0a1f-0001-00d2-2b4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:30 GMT

0

";

    public Test000158() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc85dc948338514bfaa5f449ef554097c7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000080 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000080_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:19 GMT
ETag: ""0x8D43A66633B8E28""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e88981-0001-0008-6a4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:22 GMT

0

";

    public Test000080() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc6a096ade6acc4ddbb0b96fa8a2c2d3a4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000067 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000067_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:11:16 GMT
ETag: ""0x8D43A666194471C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e87f68-0001-0008-094f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:11:18 GMT

0

";

    public Test000067() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc34dc0a100f0149e6beb73e7ff73eb393",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000384 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000384_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:13:28 GMT
ETag: ""0x8D43A66B08446E9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e9a03e-0001-0008-784f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:13:45 GMT

0

";

    public Test000384() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc6e8f1d7c8a3c4eb9b73002fd62ea9eed",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000417 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000417_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:13:47 GMT
ETag: ""0x8D43A66BBEA9F58""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e9a838-0001-0008-124f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:13:50 GMT

0

";

    public Test000417() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testca481f5bd5a5245328f32715d90e7a20c",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000543 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000543_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:05 GMT
ETag: ""0x8D43A66C6A70675""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e9c4e3-0001-0008-384f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 21:14:05 GMT

0

";

    public Test000543() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc6f81402a023c4360b24770293d38704a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000587 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000587_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:10 GMT
ETag: ""0x8D43A66C919C8A7""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e476c4-0001-00f0-414f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:10 GMT

0

";

    public Test000587() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc9ffdd366a5c34a3bb774f316074fb913",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000540 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000540_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:05 GMT
ETag: ""0x8D43A66C6A70675""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e9c4cd-0001-0008-224f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 21:14:05 GMT

0

";

    public Test000540() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc6f81402a023c4360b24770293d38704a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000533 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000533_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:13:55 GMT
ETag: ""0x8D43A66C086F972""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e9c483-0001-0008-634f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:05 GMT

0

";

    public Test000533() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcec35583db2564bbca88eeaf7d45b7674",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000559 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000559_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:06 GMT
ETag: ""0x8D43A66C6DE4D3E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e47108-0001-00f0-424f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:06 GMT

0

";

    public Test000559() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "bbtestc3012aff7573643288f691f37cc6c715d",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000391 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000391_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:13:45 GMT
ETag: ""0x8D43A66BA8ACEB3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e9a094-0001-0008-414f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:13:45 GMT

0

";

    public Test000391() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcc159d452d26c465aa88b955b374ba4ec",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000679 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000679_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:20 GMT
ETag: ""0x8D43A66CF77CBDA""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e48629-0001-00f0-194f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:22 GMT

0

";

    public Test000679() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc1daf5150f40342528c2b11be85b4cb86",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000728 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000728_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:24 GMT
ETag: ""0x8D43A66D19D30DE""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e49593-0001-00f0-754f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:28 GMT

0

";

    public Test000728() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8efc5232e7b6430f99a03b37e2b43acd",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000544 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000544_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:05 GMT
ETag: ""0x8D43A66C6A70675""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68e9c4f2-0001-0008-424f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 21:14:05 GMT

0

";

    public Test000544() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc6f81402a023c4360b24770293d38704a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000689 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000689_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:23 GMT
ETag: ""0x8D43A66D1567E46""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4885b-0001-00f0-1d4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:23 GMT

0

";

    public Test000689() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testca6b327f44bb144eb8b97e78d45db2427",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test000601 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\000601_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:11 GMT
ETag: ""0x8D43A66C9E5C893""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e47880-0001-00f0-3f4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:12 GMT

0

";

    public Test000601() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcf75041e0b1004a6f9226e3654a468643",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001204 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001204_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:49 GMT
ETag: ""0x8D43A66E07ACAFD""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4c5bf-0001-00f0-6b4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:49 GMT

0

";

    public Test001204() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc83597f5e0bee40baad88cd977db1a706",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001174 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001174_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:48 GMT
ETag: ""0x8D43A66E016C731""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4c445-0001-00f0-164f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:48 GMT

0

";

    public Test001174() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc67d98aceb5544ce895ef33b7baac1ff7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001190 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001190_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:48 GMT
ETag: ""0x8D43A66E045CED7""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4c522-0001-00f0-5f4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: blob
Date: Wed, 11 Jan 2017 21:14:48 GMT

0

";

    public Test001190() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcd1d1e8c1479748a7acad9071420d7879",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001329 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001329_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:57 GMT
ETag: ""0x8D43A66E598C20F""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4d10c-0001-00f0-214f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:58 GMT

0

";

    public Test001329() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcab7d96c5fd3745b7a69c4233860d8c7e",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001388 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001388_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:08 GMT
ETag: ""0x8D43A66EBE7BA76""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4da5d-0001-00f0-2d4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-meta-ETagConditionalName: ETagConditionalValue
x-ms-meta-DateConditionalName: DateConditionalValue2
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:06 GMT

0

";

    public Test001388() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcb6a6cfb6b1e8412798c31fde6f328b45",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001179 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001179_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:48 GMT
ETag: ""0x8D43A66E02D3963""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4c479-0001-00f0-464f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:48 GMT

0

";

    public Test001179() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc9b2dfa23e9f845418de3e498815ee865",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001408 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001408_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:08 GMT
ETag: ""0x8D43A66EBA0F2A3""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e04b42-0001-00d2-1d4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 21:15:07 GMT

0

";

    public Test001408() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcfa02c68304624f459069f7a00d444a36",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001381 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001381_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:07 GMT
ETag: ""0x8D43A66EB422212""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4da1b-0001-00f0-724f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:06 GMT

0

";

    public Test001381() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcb6a6cfb6b1e8412798c31fde6f328b45",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001248 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001248_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:55 GMT
ETag: ""0x8D43A66E4296017""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4cc47-0001-00f0-714f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:54 GMT

0

";

    public Test001248() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc5780a37d2cde4bc98f80fd4fac669ac0",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001389 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001389_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:08 GMT
ETag: ""0x8D43A66EBE7BA76""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4da68-0001-00f0-374f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-meta-ETagConditionalName: ETagConditionalValue
x-ms-meta-DateConditionalName: DateConditionalValue2
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:06 GMT

0

";

    public Test001389() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcb6a6cfb6b1e8412798c31fde6f328b45",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001467 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001467_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:13 GMT
ETag: ""0x8D43A66EEE20CF3""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea3741-0001-0008-2f4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: blob
Date: Wed, 11 Jan 2017 21:15:13 GMT

0

";

    public Test001467() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcf5dee7c19bf94da5a9609c7bcbe0aa5b",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001522 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001522_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:14 GMT
ETag: ""0x8D43A66EF9471F6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 61de0d43-0001-0002-624f-6c562e000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:15 GMT

0

";

    public Test001522() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcc9c34ac9336c460b914307e29257f66c",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001216 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001216_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:51 GMT
ETag: ""0x8D43A66E180DE32""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4c987-0001-00f0-094f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 21:14:52 GMT

0

";

    public Test001216() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcca1a42d2bc5f495a80ad0e6921a2e9eb",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00162 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00162_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:31 GMT
ETag: ""0x8D439FDEC35548E""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa543-0001-0000-73e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:31 GMT

0

";

    public Test00162() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7175298da97e428bae91212bc3b19054",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001542 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001542_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:14 GMT
ETag: ""0x8D43A66EF510A86""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e05425-0001-00d2-0e4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:14 GMT

0

";

    public Test001542() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc7bea81bb946c452dbbe0abe9da1d9ea4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001523 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001523_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:14 GMT
ETag: ""0x8D43A66EF74F053""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea39b2-0001-0008-784f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:14 GMT

0

";

    public Test001523() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc1efa7efdc08044428193f76a0847db33",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001244 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001244_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:55 GMT
ETag: ""0x8D43A66E40CAB33""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4cc23-0001-00f0-524f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:54 GMT

0

";

    public Test001244() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testceb1ffa59e32542ce9352e3c407ac0d80",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001596 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001596_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:22 GMT
ETag: ""0x8D43A66F438C73B""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e05fa4-0001-00d2-684f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:21 GMT

0

";

    public Test001596() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc74d67243fc2842ca816487d968326f34",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001524 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001524_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:14 GMT
ETag: ""0x8D43A66EF86FBB2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b3349c-0001-010d-534f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:14 GMT

0

";

    public Test001524() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcc17ef84fd0824c5ba14aa43c7baa3f44",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001383 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001383_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:08 GMT
ETag: ""0x8D43A66EBD51A04""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4da26-0001-00f0-7d4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-meta-ETagConditionalName: ETagConditionalValue
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:06 GMT

0

";

    public Test001383() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcb6a6cfb6b1e8412798c31fde6f328b45",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001210 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001210_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:49 GMT
ETag: ""0x8D43A66E0D41E7B""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4c5f5-0001-00f0-184f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:49 GMT

0

";

    public Test001210() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcaee6f386af0a4796aeb10b0a606e5c8c",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001369 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001369_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:06 GMT
ETag: ""0x8D43A66EAD91454""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4d9b9-0001-00f0-194f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:06 GMT

0

";

    public Test001369() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcff79497db7274e1692ef7808f63f40b4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001398 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001398_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:07 GMT
ETag: ""0x8D43A66EB6DA6AB""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e04ae0-0001-00d2-484f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:07 GMT

0

";

    public Test001398() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc5e0a273e309143b691604ee0ccb14645",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001287 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001287_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:55 GMT
ETag: ""0x8D43A66E43C764B""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4cdb2-0001-00f0-294f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:55 GMT

0

";

    public Test001287() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc07eb3ab28c4940b6aca107a3023abf1a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00161 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00161_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:31 GMT
ETag: ""0x8D439FDEC35548E""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa542-0001-0000-72e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:31 GMT

0

";

    public Test00161() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7175298da97e428bae91212bc3b19054",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00163 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00163_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:31 GMT
ETag: ""0x8D439FDEC35548E""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa544-0001-0000-74e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:31 GMT

0

";

    public Test00163() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7175298da97e428bae91212bc3b19054",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001744 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001744_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB3FAC8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4fbfd-0001-00f0-804f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001744() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001728 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001728_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAA7EB09""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4fbe8-0001-00f0-6e4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001728() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001608 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001608_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:22 GMT
ETag: ""0x8D43A66F45729F6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e071c7-0001-00d2-3a4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:30 GMT

0

";

    public Test001608() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "c910cbb1262aa45b6ba9d0b1acc4cbc67",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001538 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001538_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:14 GMT
ETag: ""0x8D43A66EF8D093B""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4e355-0001-00f0-244f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:14 GMT

0

";

    public Test001538() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc5cdab66404c44c388d5673a475886d9e",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001755 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001755_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB7CBF0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e072a4-0001-00d2-7e4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001755() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001762 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001762_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABBC426""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1a6c0-0001-0093-364f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001762() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001745 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001745_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB3FAC8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828fcc4-0001-00e3-084f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001745() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001828 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001828_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB640484""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65ddac-0001-008c-514f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001828() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001589 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001589_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:22 GMT
ETag: ""0x8D43A66F41904B7""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e05f39-0001-00d2-0d4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:21 GMT

0

";

    public Test001589() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testca12385c7f23a4f2e85a2758905ba7710",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001766 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001766_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABF4722""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4fc1e-0001-00f0-1d4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001766() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001525 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001525_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:14 GMT
ETag: ""0x8D43A66EF8437EB""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee17ae3-0001-0093-764f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:14 GMT

0

";

    public Test001525() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc1ae6156f4d7e4a2c961ce9b467a4a8ab",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001316 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001316_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:57 GMT
ETag: ""0x8D43A66E53756CB""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4cf0f-0001-00f0-5b4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:57 GMT

0

";

    public Test001316() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc888b692166b540b28ba8b1285b7528a1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001806 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001806_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB5ED39B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1a980-0001-0093-304f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001806() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001781 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001781_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB4FB61C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea5ca9-0001-0008-5d4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001781() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001443 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001443_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:10 GMT
ETag: ""0x8D43A66ED255C0E""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea30f8-0001-0008-614f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:10 GMT

0

";

    public Test001443() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc9d1fb339a22b48ac9ea9b007032ff598",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001722 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001722_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAAD1BEE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7a777-0001-0133-0c4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001722() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001732 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001732_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAA83939""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1c3f-0001-00e2-564f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001732() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001422 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001422_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:08 GMT
ETag: ""0x8D43A66EBD0212F""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea2f8c-0001-0008-134f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:09 GMT

0

";

    public Test001422() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcfc4b423491f14d4987f8616b9ec6a90c",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001759 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001759_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABB00B8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af27617d-0001-000d-7b4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001759() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001229 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001229_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:14:53 GMT
ETag: ""0x8D43A66E2CFD3FA""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4cb9b-0001-00f0-584f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:14:54 GMT

0

";

    public Test001229() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc8c7124f764f04d48bf7b2dadfc57326a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001355 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001355_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:06 GMT
ETag: ""0x8D43A66EA9F8379""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4d944-0001-00f0-334f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:05 GMT

0

";

    public Test001355() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc775950c16dc4414ba00faa68e503b17a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001773 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001773_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FACA454C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea5af6-0001-0008-614f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001773() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001405 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001405_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:08 GMT
ETag: ""0x8D43A66EBA0F2A3""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e04b1f-0001-00d2-7f4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 21:15:07 GMT

0

";

    public Test001405() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcfa02c68304624f459069f7a00d444a36",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001802 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001802_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB5B9ECE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65dd6a-0001-008c-1a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001802() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001842 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001842_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB69D1C5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828fea2-0001-00e3-344f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001842() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001774 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001774_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FACA454C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af2761a2-0001-000d-1c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001774() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001483 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001483_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:14 GMT
ETag: ""0x8D43A66EF54629D""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea383f-0001-0008-1f4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:13 GMT

0

";

    public Test001483() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcbbddebc6b30a47018b5c231c156bb1ca",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001843 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001843_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6A1FFD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea5d15-0001-0008-354f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001843() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001844 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001844_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6BCDE2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1dc2-0001-00e2-1e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001844() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001864 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001864_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FBF5AC2D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7abc8-0001-0133-614f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001864() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001853 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001853_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB725E90""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e0755e-0001-00d2-704f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001853() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001767 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001767_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABF4722""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1c5c-0001-00e2-714f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001767() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001763 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001763_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABB75FE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828fcdc-0001-00e3-1d4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001763() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001846 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001846_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6DA2E9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65ddd6-0001-008c-774f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001846() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001882 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001882_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC02CD93""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af27651b-0001-000d-2c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001882() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001868 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001868_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FBF97D51""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7abd2-0001-0133-684f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001868() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001709 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001709_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FA9E73B6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1a642-0001-0093-4b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001709() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001829 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001829_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB642B9A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828fe93-0001-00e3-264f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001829() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001879 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001879_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FBFEFC6B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4ff5b-0001-00f0-664f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001879() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001818 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001818_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB5F9708""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea5ced-0001-0008-154f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001818() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001807 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001807_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB5EFAC6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1da2-0001-00e2-034f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001807() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001915 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001915_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC0E6810""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 38290025-0001-00e3-0f4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001915() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001845 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001845_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6CDF7B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af27637f-0001-000d-3d4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001845() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001749 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001749_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB3FAC8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e0729f-0001-00d2-7b4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001749() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001703 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001703_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FA9D6220""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1c1d-0001-00e2-384f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001703() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001922 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001922_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC11C3F7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66178e81-0001-00c4-564f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001922() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001854 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001854_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB732202""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7a9df-0001-0133-1e4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001854() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001378 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001378_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:07 GMT
ETag: ""0x8D43A66EB122FE7""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4da0d-0001-00f0-654f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:06 GMT

0

";

    public Test001378() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testcefcef6837bba4d3c982215bfb6c68a1a",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001847 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001847_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6DF121""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4fe07-0001-00f0-414f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001847() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001933 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001933_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC15BC31""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1f37-0001-00e2-484f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001933() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001793 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001793_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB57CDAF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e074fe-0001-00d2-1d4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001793() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001770 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001770_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAC36676""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828fce5-0001-00e3-254f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001770() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001916 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001916_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC0E8F26""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276545-0001-000d-4e4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001916() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002002 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002002_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB744BD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1afeb-0001-0093-654f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002002() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001880 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001880_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC00351A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828ffee-0001-00e3-5f4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001880() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001862 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001862_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FBF44C6C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1abe6-0001-0093-4e4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001862() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001757 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001757_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB7CBF0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7a7bd-0001-0133-484f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001757() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001999 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001999_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB3C1C5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ae38-0001-0133-0c4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test001999() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001905 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001905_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC0B3344""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3829001b-0001-00e3-074f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001905() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002013 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002013_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCBD1203""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862203-0001-007d-604f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002013() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001427 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001427_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:10 GMT
ETag: ""0x8D43A66ED0E264A""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea2fd7-0001-0008-5b4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:10 GMT

0

";

    public Test001427() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc245c72583b954b34a4fc53ce0bd10ca8",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001855 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001855_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB74A8D9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828feb2-0001-00e3-444f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001855() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001923 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001923_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC11279B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1f2e-0001-00e2-424f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001923() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001836 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001836_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB67AE92""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1db8-0001-00e2-164f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001836() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002014 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002014_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCBCEAED""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ae56-0001-0133-284f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002014() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001764 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001764_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABD7217""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65daa1-0001-008c-0d4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001764() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001967 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001967_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCA8EAB5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098621b1-0001-007d-1d4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001967() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002017 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002017_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCDF452C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af2767b1-0001-000d-6c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002017() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002024 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002024_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD3D03C2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af2768be-0001-000d-5c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002024() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001758 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001758_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABA8B7F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65da89-0001-008c-774f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001758() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002042 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002042_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD4961B1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098623be-0001-007d-6d4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002042() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001805 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001805_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB5E3743""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276348-0001-000d-0b4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001805() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002046 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002046_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD4D8101""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d21c5-0001-00e2-684f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002046() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001949 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001949_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FC9DC575""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276716-0001-000d-674f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001949() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002043 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002043_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD4BFA26""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b356d0-0001-010d-7f4f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002043() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001924 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001924_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC12121E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ac23-0001-0133-354f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001924() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002068 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002068_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5A060B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b078-0001-0133-144f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002068() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001771 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001771_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAC36676""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65dab9-0001-008c-214f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001771() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002104 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002104_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDE14BE2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d22fd-0001-00e2-654f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002104() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002111 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002111_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDE6A3E5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1b628-0001-0093-714f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002111() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001930 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001930_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC14837D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4ffac-0001-00f0-2a4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001930() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002086 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002086_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD618138""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50348-0001-00f0-4a4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002086() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001934 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001934_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC176A19""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276563-0001-000d-694f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001934() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001760 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001760_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABB27D2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea5acc-0001-0008-3d4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001760() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002015 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002015_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCBDFC86""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35535-0001-010d-054f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002015() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002072 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002072_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5B3EB6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 382903df-0001-00e3-544f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002072() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001881 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001881_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC02A67D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4ff60-0001-00f0-6b4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001881() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001925 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001925_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC12AE72""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e077bf-0001-00d2-7e4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001925() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002048 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002048_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD4D8101""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098623ca-0001-007d-794f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002048() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001873 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001873_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FBFBEEB9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ac0d-0001-0093-704f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001873() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002083 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002083_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5EC1B2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 382903e8-0001-00e3-5c4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002083() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002093 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002093_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD65A084""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65e75d-0001-008c-394f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002093() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002137 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002137_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDF8F627""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e5050a-0001-00f0-5a4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002137() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002073 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002073_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5C293D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea63ac-0001-0008-734f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002073() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001772 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001772_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAC75EDB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e072fe-0001-00d2-514f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:31 GMT

0

";

    public Test001772() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002094 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002094_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD6615CA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1b3ce-0001-0093-524f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002094() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002058 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002058_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD560DCC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098623ed-0001-007d-184f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002058() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001907 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001907_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC0C9309""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65e0af-0001-008c-164f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001907() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001832 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001832_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6675E7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7a9b5-0001-0133-7d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001832() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001945 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001945_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FC9A1B67""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e5010f-0001-00f0-5d4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001945() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002148 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002148_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDFF1194""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 382905ab-0001-00e3-694f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002148() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001926 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001926_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC12604A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3829002d-0001-00e3-144f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001926() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001761 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001761_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FABB75FE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7a7ca-0001-0133-534f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001761() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002049 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002049_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5067A1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea637e-0001-0008-474f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002049() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001935 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001935_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC187BB3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4ffba-0001-00f0-344f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001935() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002127 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002127_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDF1A20B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e504f4-0001-00f0-474f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002127() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002106 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002106_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDE1E839""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e504b6-0001-00f0-0e4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002106() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001931 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001931_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC156E01""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea5f43-0001-0008-134f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001931() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001783 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001783_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB507993""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276314-0001-000d-5e4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001783() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001753 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001753_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB756AA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3828fcca-0001-00e3-0e4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001753() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002162 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002162_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE03F451""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65ea25-0001-008c-444f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002162() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002069 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002069_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5AC974""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35708-0001-010d-324f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002069() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002056 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002056_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5486F1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07c06-0001-00d2-4a4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002056() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002016 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002016_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCBF0E20""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07a12-0001-00d2-094f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test002016() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002084 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002084_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD615A22""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b091-0001-0133-2c4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002084() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002080 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002080_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD5DB014""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 0986240c-0001-007d-314f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002080() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002095 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002095_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD672763""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2203-0001-00e2-194f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002095() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002149 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002149_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDFF5FC0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d233c-0001-00e2-174f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002149() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002010 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002010_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB8F2B7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea616b-0001-0008-744f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002010() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001936 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001936_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC19180F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1acb9-0001-0093-0a4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001936() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002173 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002173_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE0A5DEA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862627-0001-007d-0b4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002173() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002030 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002030_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD41BF69""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b038-0001-0133-574f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002030() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002202 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002202_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE8D8475""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35a56-0001-010d-054f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002202() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002191 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002191_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE8A0181""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea67f2-0001-0008-4a4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002191() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001885 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001885_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC031BBF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7abed-0001-0133-024f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001885() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001830 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001830_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB658B5F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e4fdf2-0001-00f0-2f4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001830() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002217 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002217_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE9CA1EF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50708-0001-00f0-1f4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002217() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002228 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002228_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA1ABC7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1b9ea-0001-0093-694f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002228() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002239 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002239_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA778FF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2487-0001-00e2-2b4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002239() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002129 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002129_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDF328E6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3829058f-0001-00e3-504f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002129() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002229 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002229_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA3329E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276cec-0001-000d-7b4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002229() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002163 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002163_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE0505E6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1b6c0-0001-0093-7d4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002163() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002203 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002203_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE8E47E3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea681b-0001-0008-6f4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002203() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001998 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001998_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB3E8DF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50166-0001-00f0-2a4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001998() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002011 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002011_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB8F2B7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2099-0001-00e2-6e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002011() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001849 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001849_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6E8D6C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09861da4-0001-007d-134f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001849() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002210 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002210_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE97710A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276ccd-0001-000d-5e4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002210() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002257 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002257_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FEB13E7E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ba39-0001-0093-334f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002257() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002174 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002174_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE0D1D74""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea661f-0001-0008-2b4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002174() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001903 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001903_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC0AE518""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e077a8-0001-00d2-6b4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001903() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002085 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002085_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD615A22""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179251-0001-00c4-204f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002085() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001892 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001892_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC073B0A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e0778f-0001-00d2-564f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001892() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002293 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002293_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF3D8E31""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1bcaa-0001-0093-6a4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002293() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001943 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001943_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FC986D76""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1af47-0001-0093-4e4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001943() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001841 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001841_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB69AAAB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1a9b5-0001-0093-5c4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001841() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002247 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002247_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA9EA5E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ba11-0001-0093-0d4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002247() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002175 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002175_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE0D448A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b3590b-0001-010d-6d4f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002175() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002308 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002308_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF461AF4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50908-0001-00f0-5e4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002308() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002337 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002337_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF54EA46""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b76c-0001-0133-2b4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002337() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002026 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002026_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD3DEE45""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 0986239c-0001-007d-4b4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002026() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002098 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002098_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FD83663A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d224f-0001-00e2-574f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002098() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002012 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002012_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCBB640D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea617d-0001-0008-064f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002012() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002298 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002298_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF3FFF87""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276ece-0001-000d-354f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002298() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002037 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002037_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD471768""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07bcf-0001-00d2-154f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002037() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002287 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002287_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF38AB6F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f093-0001-008c-1d4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002287() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001750 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001750_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB421E2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65da73-0001-008c-624f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001750() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002362 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002362_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFDA0CEF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af2770bc-0001-000d-5c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002362() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002204 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002204_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE91CADB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d246d-0001-00e2-174f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002204() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002240 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002240_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA7C72F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65ed9e-0001-008c-6f4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002240() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002373 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002373_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFE112DF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b966-0001-0133-5b4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002373() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002290 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002290_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF3AF5BC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e508dd-0001-00f0-374f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002290() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002176 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002176_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE0D92B6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2359-0001-00e2-2f4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002176() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002230 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002230_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA380C9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e5071f-0001-00f0-334f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002230() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002351 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002351_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFD4B4F0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50aa2-0001-00f0-394f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002351() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002338 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002338_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF555F88""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1bd02-0001-0093-384f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002338() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002131 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002131_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDF4AFBD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65e9e5-0001-008c-0a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002131() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002161 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002161_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE03CD44""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b2f7-0001-0133-434f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002161() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002366 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002366_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFDCA563""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1bfe0-0001-0093-484f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002366() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001928 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001928_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:35 GMT
ETag: ""0x8D43A66FC134ACE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65e0d4-0001-008c-374f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001928() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002395 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002395_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFEBC2D9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1c015-0001-0093-7b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002395() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002205 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002205_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE948A65""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862815-0001-007d-3b4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002205() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002118 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002118_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDEA9C1B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07e2a-0001-00d2-334f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002118() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002363 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002363_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFDC090C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35d2b-0001-010d-754f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002363() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002266 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002266_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF2918B4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1bc71-0001-0093-3b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002266() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002460 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002460_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670084BEA3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea7116-0001-0008-1d4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002460() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001984 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001984_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB08CFD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e079f0-0001-00d2-6a4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001984() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001452 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001452_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:11 GMT
ETag: ""0x8D43A66ED8344C1""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea33ce-0001-0008-014f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 21:15:11 GMT

0

";

    public Test001452() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "testc15012f04d72e432d908c08c19ba0f211",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002367 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002367_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFDC5737""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50abd-0001-00f0-514f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002367() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002288 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002288_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF38F99B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276eb1-0001-000d-194f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002288() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002417 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002417_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF86EF8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2745-0001-00e2-674f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002417() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001851 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001851_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB6F77F0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1a9c7-0001-0093-6b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001851() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002389 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002389_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFE9C6C0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e08533-0001-00d2-6e4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002389() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002008 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002008_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB8565B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3829020d-0001-00e3-3d4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002008() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002352 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002352_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFD4B4F0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b938-0001-0133-2f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002352() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002486 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002486_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700949F93""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 38290cb3-0001-00e3-6b4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002486() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002442 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002442_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67007E2DF9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d286e-0001-00e2-5e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002442() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001742 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001742_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:33 GMT
ETag: ""0x8D43A66FAB3D3B6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7a799-0001-0133-2c4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001742() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002005 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002005_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB7E119""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50175-0001-00f0-384f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002005() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002446 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002446_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700809F57""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e0872c-0001-00d2-374f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002446() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002382 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002382_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFE6E020""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50adc-0001-00f0-6e4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002382() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002475 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002475_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700905929""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179b40-0001-00c4-584f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002475() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002139 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002139_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDFA07C0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07e6d-0001-00d2-6f4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002139() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002375 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002375_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFE2C0CC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862c98-0001-007d-184f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002375() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002476 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002476_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670090803F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1c30e-0001-0093-154f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002476() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002519 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002519_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A6701224EFE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7be08-0001-0133-714f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002519() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002009 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002009_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB82F45""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617908a-0001-00c4-084f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002009() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002526 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002526_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A6701264738""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65fa35-0001-008c-4d4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002526() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002207 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002207_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE954DCF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1b9ac-0001-0093-314f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002207() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002392 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002392_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFEAD85A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea6e75-0001-0008-3c4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002392() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002267 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002267_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF293FC5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e508b1-0001-00f0-104f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002267() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002447 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002447_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700809F57""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1c2d2-0001-0093-604f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002447() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002461 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002461_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670087A543""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277300-0001-000d-574f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002461() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002418 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002418_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF8960E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862cef-0001-007d-634f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002418() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002500 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002500_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67009D0544""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7bc2b-0001-0133-584f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002500() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002577 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002577_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67013F031B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277566-0001-000d-714f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002577() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002580 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002580_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67014089F6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea7351-0001-0008-0f4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002580() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002034 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002034_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD451B50""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea6347-0001-0008-184f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002034() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001985 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001985_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB0DB3A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1afb5-0001-0093-334f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001985() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002440 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002440_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670078D5F5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f6e4-0001-008c-4e4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002440() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002465 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002465_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67008B012E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50d70-0001-00f0-354f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002465() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002540 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002540_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012D9B6E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098630ee-0001-007d-444f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002540() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002301 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002301_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF42BF16""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862a6a-0001-007d-354f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002301() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002551 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002551_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A670130A90F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277548-0001-000d-564f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002551() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002179 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002179_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE27D570""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2392-0001-00e2-5e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002179() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002581 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002581_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A670141747A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09863132-0001-007d-014f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002581() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001787 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001787_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB5471C8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65dd53-0001-008c-0a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:33 GMT

0

";

    public Test001787() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002146 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002146_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDFE2710""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1b6a0-0001-0093-5e4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002146() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002541 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002541_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012DE984""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7be29-0001-0133-0d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002541() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002563 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002563_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A6701347A33""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179d48-0001-00c4-154f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002563() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002254 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002254_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEAE09B2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b53d-0001-0133-454f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002254() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002168 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002168_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE08FE24""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276b91-0001-000d-4f4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002168() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002584 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002584_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A6701694DCE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098631cf-0001-007d-0f4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002584() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001957 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001957_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCA31D75""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea6101-0001-0008-154f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001957() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001954 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001954_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCA00FBE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d205e-0001-00e2-384f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001954() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002567 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002567_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A670138997E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e08986-0001-00d2-494f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002567() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002312 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002312_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF472C92""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b73a-0001-0133-7f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002312() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002620 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002620_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701D2CDF7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179f1e-0001-00c4-314f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002620() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002280 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002280_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF3576A7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862a4d-0001-007d-1d4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002280() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002365 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002365_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFDC5737""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2701-0001-00e2-2f4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002365() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002599 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002599_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701C7CFD2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09863320-0001-007d-3b4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002599() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002334 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002334_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF514034""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862a9c-0001-007d-644f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002334() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002606 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002606_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701CA6842""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc08f7-0001-0106-434f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002606() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002419 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002419_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF8E43A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f46f-0001-008c-1a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002419() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002283 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002283_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF37E802""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea6b0f-0001-0008-244f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002283() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002578 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002578_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67013F9F73""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65faba-0001-008c-494f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002578() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002408 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002408_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF1B730""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f459-0001-008c-054f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002408() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002165 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002165_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE057B28""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07e88-0001-00d2-064f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002165() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002564 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002564_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A670138C098""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2a6d-0001-00e2-264f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002564() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002646 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002646_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701DDF33C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc0938-0001-0106-7a4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002646() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002631 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002631_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701D84D11""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2c49-0001-00e2-554f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002631() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002441 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002441_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700792425""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862ea4-0001-007d-524f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002441() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002114 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002114_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDE91540""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65e9aa-0001-008c-554f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002114() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002462 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002462_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700866C98""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35eb5-0001-010d-444f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002462() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002255 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002255_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FEB0A226""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 0986288e-0001-007d-1d4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002255() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002602 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002602_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701C86C29""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea7559-0001-0008-484f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002602() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002212 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002212_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE99E265""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65ed4e-0001-008c-284f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002212() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002542 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002542_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012E37B0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1c5c4-0001-0093-764f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002542() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001798 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001798_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:34 GMT
ETag: ""0x8D43A66FB5B50B8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d1d92-0001-00e2-754f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:32 GMT

0

";

    public Test001798() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002621 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002621_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701D39169""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e08ba4-0001-00d2-214f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002621() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002153 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002153_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE00E6B0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617942f-0001-00c4-404f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002153() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002543 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002543_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012E37B0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65fa61-0001-008c-774f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002543() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002682 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002682_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67026DECF4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e51352-0001-00f0-4b4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002682() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002503 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002503_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700C41B2F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7bca3-0001-0133-404f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002503() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002445 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002445_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67007FB4CF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179b1c-0001-00c4-394f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002445() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002284 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002284_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF388462""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e082a0-0001-00d2-204f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002284() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002579 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002579_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67013F7859""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7be66-0001-0133-454f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002579() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002686 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002686_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67026EB062""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af27796e-0001-000d-7c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002686() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002285 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002285_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FF388462""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b702-0001-0133-4d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002285() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002622 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002622_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701D4F12F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b361ce-0001-010d-6c4f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002622() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002733 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002733_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67028D3986""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c2b1-0001-0133-134f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002733() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002220 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002220_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE9E28CF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e080b0-0001-00d2-634f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002220() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002766 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002766_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A6703123521""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c482-0001-0133-324f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002766() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002697 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002697_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A6702756826""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c255-0001-0133-434f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002697() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002256 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002256_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FEB0C93C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50757-0001-00f0-624f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002256() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002683 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002683_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67026DC5E2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b36348-0001-010d-204f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002683() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002726 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002726_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670288CC0A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6600bd-0001-008c-4f4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002726() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002544 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002544_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012ED408""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b36041-0001-010d-134f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002544() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002520 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002520_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012227E8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b36022-0001-010d-754f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002520() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002568 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002568_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A670133DDDB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e51007-0001-00f0-7d4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002568() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002647 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002647_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701DE6879""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af27779d-0001-000d-6b4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002647() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002565 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002565_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A670138726D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1c5f4-0001-0093-214f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002565() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002245 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002245_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA9C348""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e080cc-0001-00d2-7c4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002245() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002824 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002824_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67034189AB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c539-0001-0133-4f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002824() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001979 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001979_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCB03ED1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098621cb-0001-007d-334f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001979() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002813 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002813_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67032F375D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1cee7-0001-0093-4e4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002813() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002600 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002600_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701C8E16B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c03d-0001-0133-644f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002600() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002604 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002604_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701C956A9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b361b2-0001-010d-544f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002604() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002680 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002680_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67026DC5E2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1cb9b-0001-0093-404f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002680() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002806 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002806_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67032E4CD5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3038-0001-00e2-454f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002806() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002727 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002727_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670288089C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b3639e-0001-010d-674f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002727() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002846 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002846_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703B93CC3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c726-0001-0133-084f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002846() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002648 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002648_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701DE6879""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65fd9a-0001-008c-674f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002648() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002569 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002569_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A670139AB1C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 38290e68-0001-00e3-5b4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002569() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002185 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002185_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE8545D6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2440-0001-00e2-744f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002185() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002651 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002651_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701DFC843""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c074-0001-0133-124f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002651() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002792 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002792_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A670328CDC4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e51580-0001-00f0-244f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002792() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002605 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002605_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701C97DC3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e51195-0001-00f0-4e4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002605() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001972 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001972_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCAC4698""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098621bb-0001-007d-254f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001972() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002897 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002897_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A670465C37E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a660a40-0001-008c-0d4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002897() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002875 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002875_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703D7C5E6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc0f9c-0001-0106-764f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002875() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002853 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002853_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703C1F0A4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277d81-0001-000d-0d4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002853() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002449 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002449_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670080C676""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862eb4-0001-007d-5d4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002449() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002329 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002329_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF4DE456""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862a8e-0001-007d-564f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002329() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002684 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002684_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67026E140E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 382911a2-0001-00e3-084f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002684() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002521 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002521_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A6701247235""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179d1f-0001-00c4-774f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002521() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002847 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002847_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703B963D8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b36676-0001-010d-624f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002847() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002926 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002926_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A6704D75B31""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a84f-0001-00c4-3f4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002926() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002601 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002601_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701C84513""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65fd3f-0001-008c-164f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002601() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002122 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002122_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDEDD105""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07e35-0001-00d2-3d4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002122() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001961 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001961_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCA4CB66""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1af84-0001-0093-064f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001961() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002665 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002665_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A67020E0B34""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc09de-0001-0106-064f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002665() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002729 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002729_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670287E186""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc0b9e-0001-0106-034f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002729() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002911 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002911_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A6704842587""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a72f-0001-00c4-454f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002911() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002814 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002814_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A670330BE38""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea79f8-0001-0008-6c4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002814() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002649 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002649_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701DE8F93""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179f41-0001-00c4-514f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002649() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002415 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002415_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF5885C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35d6d-0001-010d-2a4f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002415() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002416 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002416_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF64BC6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277119-0001-000d-304f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002416() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002260 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002260_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:40 GMT
ETag: ""0x8D43A66FECC1D90""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1bac1-0001-0093-324f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002260() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002652 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002652_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701E0D9D8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2c71-0001-00e2-764f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002652() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002944 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002944_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A670510EA7C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a660d75-0001-008c-754f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002944() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002394 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002394_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFEB9BC7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d271f-0001-00e2-474f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002394() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002854 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002854_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703C1F0A4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b36689-0001-010d-734f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002854() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003002 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003002_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705CED8FA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1dbe5-0001-0093-314f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test003002() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002898 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002898_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A67046C5430""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a6ee-0001-00c4-104f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002898() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002187 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002187_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FE85BB17""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35a2d-0001-010d-614f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002187() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002995 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002995_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BC3888""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66108a-0001-008c-494f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002995() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002369 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002369_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FFDD68D1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b960-0001-0133-554f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002369() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002522 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002522_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012535A3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50fde-0001-00f0-564f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002522() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002685 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002685_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67026E3B24""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc0b27-0001-0106-1e4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002685() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002959 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002959_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A670527F86A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09863f65-0001-007d-0f4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002959() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002401 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002401_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFEEA982""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277104-0001-000d-1e4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002401() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002658 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002658_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701E32425""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b361e9-0001-010d-044f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002658() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002736 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002736_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67028DD5DD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6600cd-0001-008c-5d4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002736() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002310 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002310_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF470577""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276ee7-0001-000d-494f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002310() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002808 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002808_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67032E25C7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e5159d-0001-00f0-3c4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002808() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001962 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001962_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCA6C78B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50135-0001-00f0-7f4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:34 GMT

0

";

    public Test001962() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002324 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002324_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF4CF9D2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e082f6-0001-00d2-6a4f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002324() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003013 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003013_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A670624F548""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1dd4a-0001-0093-724f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test003013() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002991 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002991_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BBC34A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3694-0001-00e2-4a4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002991() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002482 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002482_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670092CA88""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d28aa-0001-00e2-104f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002482() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002379 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002379_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFE3AB54""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea6e56-0001-0008-1f4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002379() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002570 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002570_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A6701331A6D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc0703-0001-0106-0a4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002570() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002654 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002654_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701DFC843""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea759b-0001-0008-034f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002654() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002470 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002470_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67008D7284""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7bbf4-0001-0133-274f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002470() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002945 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002945_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A67051138A8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1d85d-0001-0093-724f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002945() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002336 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002336_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF54EA46""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af276f30-0001-000d-014f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002336() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002778 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002778_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67031C21A9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a2f6-0001-00c4-104f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002778() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002855 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002855_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703C32957""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e51737-0001-00f0-1b4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002855() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002172 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002172_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FE0A0FBA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e5052f-0001-00f0-794f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002172() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002233 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002233_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEA4B979""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 0986285c-0001-007d-754f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002233() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002741 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002741_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A6702921C3F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 382911fd-0001-00e3-564f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002741() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002314 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002314_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF486541""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1bcd4-0001-0093-0f4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002314() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002779 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002779_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67031C48BF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277b7c-0001-000d-4f4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002779() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002946 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002946_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A670511ADEA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d353d-0001-00e2-244f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002946() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002770 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002770_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A6703147F61""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 38291350-0001-00e3-754f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002770() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002690 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002690_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67026FE911""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c242-0001-0133-304f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002690() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002320 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002320_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF4AD6A0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f0e0-0001-008c-634f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002320() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002571 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002571_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67013B31F7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b3606b-0001-010d-374f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002571() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002992 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002992_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BBC34A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1db7c-0001-0093-504f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002992() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003035 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003035_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A670662A3E3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea857a-0001-0008-3a4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003035() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002809 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002809_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67032E73EB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277bc3-0001-000d-0c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002809() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002402 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002402_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFEF1EBF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1c023-0001-0093-084f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002402() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003003 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003003_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705CF0014""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864222-0001-007d-694f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test003003() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002659 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002659_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701E5BC9E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 38291055-0001-00e3-7d4f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002659() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002523 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002523_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012583CF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e0894f-0001-00d2-174f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002523() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003004 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003004_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705D20DCA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66111c-0001-008c-4b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test003004() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003014 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003014_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A6706251C62""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864338-0001-007d-594f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test003014() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002899 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002899_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A670468D134""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1d536-0001-0093-114f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002899() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002341 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002341_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF73E8A3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1bd8a-0001-0093-364f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002341() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003082 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003082_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A6707062891""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66174e-0001-008c-684f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003082() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003093 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003093_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A670722B594""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864682-0001-007d-3e4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003093() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002970 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002970_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A67057E89F5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7cd4c-0001-0133-0f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002970() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002947 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002947_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A670511118E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea80cf-0001-0008-054f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002947() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002730 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002730_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A6702882FB2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 382911ee-0001-00e3-484f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002730() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002742 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002742_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A6702959F3B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b363d4-0001-010d-154f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002742() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003151 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003151_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6708179AE8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1e686-0001-0093-374f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003151() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003094 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003094_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A6707243C73""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7d305-0001-0133-224f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003094() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003083 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003083_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A670706EBFA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7d2b5-0001-0133-5a4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003083() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003015 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003015_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A6706267C23""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6612a4-0001-008c-2e4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003015() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002746 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002746_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A6702B40141""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277a59-0001-000d-504f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002746() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002993 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002993_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BC5FBC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864196-0001-007d-734f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002993() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002738 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002738_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67028F35A7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1cc2f-0001-0093-4b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002738() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003036 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003036_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A6706627CCD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7d088-0001-0133-6a4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003036() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002124 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002124_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:38 GMT
ETag: ""0x8D43A66FDF01B30""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2323-0001-00e2-034f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002124() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test001964 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\001964_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:36 GMT
ETag: ""0x8D43A66FCA84E5E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179043-0001-00c4-4c4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test001964() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002321 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002321_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF4B72F7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35bd9-0001-010d-4f4f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002321() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003137 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003137_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707C59DEE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3c46-0001-00e2-3b4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003137() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002699 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002699_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670276C7F0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2e2a-0001-00e2-764f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002699() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002771 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002771_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A6703147F61""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b36505-0001-010d-1f4f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002771() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002411 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002411_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF42897""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7b9c7-0001-0133-354f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002411() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003130 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003130_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AFA19A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3c19-0001-00e2-154f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003130() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002472 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002472_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67008E8422""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862ef4-0001-007d-164f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002472() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002731 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002731_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A6702894154""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e513a5-0001-00f0-104f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002731() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002948 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002948_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A670511D4FB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc135c-0001-0106-3a4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002948() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002660 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002660_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701E6A71D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc095d-0001-0106-1b4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002660() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003170 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003170_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A670852B10A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b2ec-0001-00c4-084f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003170() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003016 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003016_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A67062A9B73""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d37af-0001-00e2-394f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test003016() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002450 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002450_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670080C676""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35e96-0001-010d-274f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002450() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002971 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002971_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705805EFC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1489-0001-0106-414f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002971() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003037 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003037_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A670662A3E3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617ace2-0001-00c4-2e4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003037() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003213 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003213_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708F6D214""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3f5d-0001-00e2-754f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003213() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002816 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002816_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A670331CFD1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 382913c2-0001-00e3-594f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002816() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002518 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002518_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:44 GMT
ETag: ""0x8D43A67012200D2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098630cc-0001-007d-244f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002518() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003220 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003220_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708FB66AA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1fd4-0001-0106-4d4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003220() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002743 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002743_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A6702959F3B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277a27-0001-000d-214f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002743() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002661 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002661_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701E791A1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e511eb-0001-00f0-134f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002661() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002842 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002842_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703B963D8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea7c5c-0001-0008-144f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002842() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003138 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003138_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707C6886D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b105-0001-00c4-544f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003138() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002330 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002330_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF507CCF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea6b92-0001-0008-244f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002330() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002918 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002918_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A6704C44581""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1270-0001-0106-754f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002918() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003228 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003228_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A67091D4BB9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2033-0001-0106-1e4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003228() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002994 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002994_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BC5FBC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea82f7-0001-0008-714f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002994() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002949 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002949_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A6705115FBE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09863f1e-0001-007d-524f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002949() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003184 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003184_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A67086A5B50""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864b79-0001-007d-1a4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003184() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003084 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003084_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A670707D682""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc19ad-0001-0106-534f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003084() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002900 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002900_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A67045E2136""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c9b4-0001-0133-554f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002900() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003171 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003171_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A670852D820""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3da0-0001-00e2-664f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003171() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003214 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003214_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708F6F92A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6620ef-0001-008c-5e4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003214() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002817 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002817_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67033356AC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c4fe-0001-0133-1c4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002817() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002818 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002818_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A6703361637""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277bdb-0001-000d-214f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002818() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003172 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003172_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A670853264C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7d6d0-0001-0133-734f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003172() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002878 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002878_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6704021095""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d329d-0001-00e2-4e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002878() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003173 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003173_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A670852D820""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a661ddb-0001-008c-7e4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003173() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003038 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003038_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A670662CAF9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864411-0001-007d-174f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003038() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002901 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002901_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A67046686EB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09863cb8-0001-007d-494f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002901() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003257 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003257_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099A7DDC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b70f-0001-00c4-3a4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003257() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002331 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002331_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:41 GMT
ETag: ""0x8D43A66FF50A3E0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d25b8-0001-00e2-214f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:39 GMT

0

";

    public Test002331() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003264 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003264_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099CC821""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662449-0001-008c-024f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003264() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003215 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003215_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708F76E6C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864d1f-0001-007d-804f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003215() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003139 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003139_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707CA80AC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea8c03-0001-0008-214f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003139() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002844 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002844_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703B93CC3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277d69-0001-000d-764f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002844() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002700 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002700_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670277161B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a660061-0001-008c-794f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002700() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002827 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002827_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A670357D423""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7c585-0001-0133-134f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002827() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002823 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002823_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A670341628D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277c06-0001-000d-474f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002823() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003308 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003308_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A3FFEAC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea943b-0001-0008-744f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003308() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003123 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003123_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AE8FFC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1b7d-0001-0106-704f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003123() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002250 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002250_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEACD0FE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e080d6-0001-00d2-054f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:37 GMT

0

";

    public Test002250() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002404 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002404_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A66FFF07E85""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50af9-0001-00f0-084f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:40 GMT

0

";

    public Test002404() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003058 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003058_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A6706CEBC7D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1e06d-0001-0093-484f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003058() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003229 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003229_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A67091CFD7C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1eb04-0001-0093-4c4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003229() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002662 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002662_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701E76A8B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1c931-0001-0093-0b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002662() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003174 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003174_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A6708545EF7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1de0-0001-0106-194f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003174() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002422 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002422_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:42 GMT
ETag: ""0x8D43A67001830CC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f532-0001-008c-454f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002422() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002895 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002895_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A670465C37E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1143-0001-0106-744f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002895() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002902 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002902_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A67045E6F66""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d33bf-0001-00e2-524f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002902() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003286 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003286_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A0759EC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4207-0001-00e2-454f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003286() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003265 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003265_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099EEB54""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4119-0001-00e2-7c4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003265() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003085 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003085_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A670706C4E9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864632-0001-007d-784f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003085() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002896 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002896_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A67045E4865""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea7f00-0001-0008-5e4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002896() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003330 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003330_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AAAB78D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617ba2c-0001-00c4-754f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003330() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002091 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002091_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD632F29""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d21fb-0001-00e2-144f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:36 GMT

0

";

    public Test002091() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003348 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003348_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AE271C0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1f3ba-0001-0093-324f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003348() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003309 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003309_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A409B03""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1f057-0001-0093-114f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003309() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002950 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002950_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A67051334C5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7cbea-0001-0133-4b4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002950() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003059 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003059_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A6706CEBC7D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc18f1-0001-0106-294f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003059() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003039 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003039_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A670662F20B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1de67-0001-0093-704f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003039() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003362 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003362_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670B0C2024""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d43f3-0001-00e2-5a4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003362() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003355 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003355_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AEB4CB7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d43a5-0001-00e2-1d4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003355() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003258 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003258_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099B1A34""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ed6f-0001-0093-7c4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003258() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003124 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003124_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AEB716""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a661aa7-0001-008c-0b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003124() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002871 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002871_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703D3CDA8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09863abc-0001-007d-0d4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002871() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002810 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002810_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67032E9B05""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a660410-0001-008c-574f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002810() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002496 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002496_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700990D0A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 66179b5f-0001-00c4-704f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:42 GMT

0

";

    public Test002496() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002485 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002485_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A6700933FC9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f754-0001-008c-344f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002485() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm5",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003216 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003216_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708F79586""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7d8df-0001-0133-4d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003216() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002845 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002845_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703B963D8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6606e4-0001-008c-7b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002845() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003349 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003349_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AE298DA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9649-0001-0008-454f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003349() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002780 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002780_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67031C48BF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e51565-0001-00f0-0b4f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002780() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003391 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003391_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B85CF65""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d44b8-0001-00e2-804f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003391() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003370 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003370_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B4AE054""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e0d0-0001-0133-4b4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003370() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003259 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003259_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099B1A34""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea921a-0001-0008-0c4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003259() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003363 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003363_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670B0D58D3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662b79-0001-008c-1e4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003363() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003125 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003125_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AE8FFC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864897-0001-007d-094f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003125() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003420 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003420_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670BF4A789""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617be1a-0001-00c4-534f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003420() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003175 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003175_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A6708552269""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864af7-0001-007d-294f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003175() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003364 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003364_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670B0FCA2E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e004-0001-0133-1f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003364() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003331 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003331_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AAB53D8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09865298-0001-007d-344f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003331() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002811 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002811_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67032F1047""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc0d8e-0001-0106-324f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002811() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002497 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002497_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670099A962""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09862f21-0001-007d-3b4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002497() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002701 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002701_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670276C7F0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a129-0001-00c4-754f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002701() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003421 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003421_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670BF4F5B5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e2c9-0001-0133-064f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003421() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003442 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003442_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C2F2154""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617beac-0001-00c4-524f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003442() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002092 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002092_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:37 GMT
ETag: ""0x8D43A66FD65A084""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e07c43-0001-00d2-014f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:35 GMT

0

";

    public Test002092() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003392 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003392_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B861D8C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e195-0001-0133-734f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003392() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002781 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002781_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67031E6BF6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 38291385-0001-00e3-234f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002781() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003310 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003310_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A42E54C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b903-0001-00c4-704f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003310() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003464 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003464_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670C980525""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617bfb9-0001-00c4-3c4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003464() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002872 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002872_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:48 GMT
ETag: ""0x8D43A6703D098DC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a52e-0001-00c4-084f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:47 GMT

0

";

    public Test002872() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003217 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003217_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708F7BC9C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b53c-0001-00c4-1b4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003217() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003486 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003486_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CD230C0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9c73-0001-0008-304f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003486() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003060 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003060_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A6706CF7FEA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864552-0001-007d-2f4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003060() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003126 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003126_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AE8FFC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7d4af-0001-0133-164f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003126() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002805 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002805_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67032E25C7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a33a-0001-00c4-484f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002805() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003261 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003261_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099B414A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc219f-0001-0106-554f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003261() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003127 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003127_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AF7A88""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1e4bf-0001-0093-264f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003127() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003128 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003128_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AF7A88""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b0c6-0001-00c4-1b4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003128() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003415 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003415_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670BEEDA4C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662ff1-0001-008c-3b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003415() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003350 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003350_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AE30E18""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc24e7-0001-0106-364f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003350() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003040 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003040_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A670663403B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc179b-0001-0106-744f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003040() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003061 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003061_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A6706CFA700""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617ae06-0001-00c4-234f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003061() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003465 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003465_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670C987A67""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1fb8f-0001-0093-334f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003465() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003544 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003544_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670DA1AE1A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66384f-0001-008c-664f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003544() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002782 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002782_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A670320680A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277b88-0001-000d-5a4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002782() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002498 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002498_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67009BCC90""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a65f77a-0001-008c-564f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002498() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003573 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003573_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670E18017E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee201bb-0001-0093-2b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003573() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003580 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003580_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E326B49""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663b25-0001-008c-0b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003580() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003466 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003466_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670C987A67""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d474e-0001-00e2-274f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003466() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003262 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003262_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099B8F72""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d410d-0001-00e2-724f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003262() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002702 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002702_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670279394A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e5136b-0001-00f0-614f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002702() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003302 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003302_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A3E77D5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4269-0001-00e2-154f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003302() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003218 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003218_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708F8CE31""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ea5e-0001-0093-324f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003218() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002644 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002644_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701DD7DFA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e511bf-0001-00f0-724f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002644() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003393 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003393_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B861D8C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1f699-0001-0093-4c4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003393() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003588 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003588_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E4580FD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c4f6-0001-00c4-504f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003588() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003129 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003129_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6707AFA19A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea8b8b-0001-0008-344f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003129() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002723 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002723_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670287BA71""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a171-0001-00c4-394f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002723() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003487 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003487_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CD2A602""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2a59-0001-0106-664f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003487() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003263 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003263_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A67099C52DF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864f09-0001-007d-1f4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003263() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003394 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003394_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B8644A2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc26b9-0001-0106-4d4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003394() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003574 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003574_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670E1716F1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaa118-0001-0008-514f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003574() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003352 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003352_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AE446CB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7df76-0001-0133-1d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003352() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003193 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003193_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A6708BA5C31""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864c6c-0001-007d-684f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003193() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002491 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002491_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670095FF54""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 18e08755-0001-00d2-594f-6cea8c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002491() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask4",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003303 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003303_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A3E9EE6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7dd40-0001-0133-314f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003303() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002762 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002762_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A67031198BC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b36501-0001-010d-1b4f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002762() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003617 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003617_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670EBBAD57""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaa402-0001-0008-734f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003617() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003589 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003589_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E4028FE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2e53-0001-0106-5b4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003589() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003509 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003509_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D3CC28B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2b7f-0001-0106-684f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003509() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003646 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003646_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670F31D986""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66406a-0001-008c-724f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003646() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003575 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003575_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670E189DD1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2dc4-0001-0106-594f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003575() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003530 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003530_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D747CC7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66377f-0001-008c-284f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003530() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003272 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003272_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A6709C3B6FA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4180-0001-00e2-4f4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003272() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002499 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002499_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A67009D0544""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 19b35ef0-0001-010d-754f-6cfd8d000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002499() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002492 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002492_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:43 GMT
ETag: ""0x8D43A670097D457""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 40e50db3-0001-00f0-734f-6c84ba000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:41 GMT

0

";

    public Test002492() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003353 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003353_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AE446CB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662a69-0001-008c-2b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003353() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003395 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003395_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B872F22""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662df6-0001-008c-664f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003395() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003194 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003194_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A6708BC3134""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3ed0-0001-00e2-744f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003194() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002943 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002943_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A6705109C54""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617a91a-0001-00c4-6d4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002943() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003195 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003195_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A6708BCF4A1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a661ff4-0001-008c-6f4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003195() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003304 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003304_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A3EED12""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662755-0001-008c-4f4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003304() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003033 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003033_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A670660CED8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d385d-0001-00e2-504f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003033() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003237 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003237_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A67095E7D37""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc20ec-0001-0106-3e4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003237() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003219 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003219_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6708F8F543""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea8ffb-0001-0008-224f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003219() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003660 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003660_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F5EE3C8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a664155-0001-008c-4b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003660() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003451 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003451_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C54D775""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d46ad-0001-00e2-254f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003451() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003407 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003407_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670BB0412E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662ed1-0001-008c-314f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003407() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002924 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002924_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A6704D3B134""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d349a-0001-00e2-174f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002924() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002763 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002763_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A670311BFD6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277b66-0001-000d-3c4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002763() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003531 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003531_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D756753""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ff13-0001-0093-4d4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003531() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003396 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003396_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B875640""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9822-0001-0008-604f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003396() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003196 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003196_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A6708BD1BB7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1f2b-0001-0106-374f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003196() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003661 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003661_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F5F31F4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaa68c-0001-0008-434f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003661() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002764 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002764_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A6703123521""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ce6a-0001-0093-5b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002764() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003755 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003755_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710A8FAE3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617cb64-0001-00c4-054f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003755() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003282 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003282_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A0201ED""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66263d-0001-008c-4f4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003282() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002618 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002618_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701D1954C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: af277779-0001-000d-4a4f-6cbbd8000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002618() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003510 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003510_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D3CE99D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c1ae-0001-00c4-714f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003510() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003576 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003576_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670E18C4E7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c491-0001-00c4-764f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003576() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003273 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003273_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A6709C42C3C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864f84-0001-007d-0a4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003273() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003460 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003460_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670C92860C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663346-0001-008c-564f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003460() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003733 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003733_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A6710758708""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaaac9-0001-0008-144f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003733() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003397 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003397_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B8840BF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9829-0001-0008-674f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003397() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003034 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003034_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:52 GMT
ETag: ""0x8D43A6706622E9D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6613fa-0001-008c-654f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003034() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003711 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003711_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A671005EB76""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc336e-0001-0106-444f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003711() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003756 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003756_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710AA0C80""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee20d98-0001-0093-634f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003756() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003662 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003662_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F5F8031""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc318c-0001-0106-234f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003662() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002925 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002925_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A6704D510EC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a660c43-0001-008c-5a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002925() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003408 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003408_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670BB152CC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea989b-0001-0008-474f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003408() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003532 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003532_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D762AB8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d496a-0001-00e2-704f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003532() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003436 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003436_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C2B7746""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2873-0001-0106-4c4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003436() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002765 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002765_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:47 GMT
ETag: ""0x8D43A6703125C2E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a660365-0001-008c-3e4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:46 GMT

0

";

    public Test002765() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003274 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003274_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:58 GMT
ETag: ""0x8D43A6709C42C3C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66250a-0001-008c-374f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003274() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003663 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003663_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F5FA731""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee2078b-0001-0093-784f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003663() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003619 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003619_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670EBB8641""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c639-0001-00c4-774f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003619() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003757 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003757_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710AB1E1A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5094-0001-00e2-024f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003757() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002252 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002252_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:39 GMT
ETag: ""0x8D43A66FEAD1F2E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea6883-0001-0008-514f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:38 GMT

0

";

    public Test002252() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003690 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003690_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670FD49ACB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c940-0001-00c4-174f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003690() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003795 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003795_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67114DB840""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a664b90-0001-008c-6a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003795() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003409 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003409_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670BB3C42A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662ee5-0001-008c-414f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003409() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003712 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003712_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A671007724D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f056-0001-0133-604f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003712() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003437 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003437_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C2B7746""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9a03-0001-0008-154f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003437() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003505 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003505_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D368000""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663681-0001-008c-454f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003505() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002909 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002909_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A670480C9A9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d33ee-0001-00e2-7d4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002909() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003831 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003831_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6711F20060""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f67f-0001-0133-564f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003831() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003691 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003691_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670FD5FA94""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4e9d-0001-00e2-514f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003691() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003438 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003438_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C2B9E60""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663135-0001-008c-6a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003438() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003346 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003346_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AE22394""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 0986533a-0001-007d-424f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003346() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003775 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003775_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A671118E4A0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee20fac-0001-0093-454f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003775() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003620 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003620_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670EBBFB6D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee204c8-0001-0093-6e4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003620() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003400 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003400_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B9513F0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662e3f-0001-008c-2c4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003400() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002725 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002725_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A670288F324""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d2e60-0001-00e2-264f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:44 GMT

0

";

    public Test002725() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm1",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003047 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003047_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A67067BFC11""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc17f2-0001-0106-404f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003047() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002619 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002619_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:45 GMT
ETag: ""0x8D43A6701D27FCC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3829101a-0001-00e3-454f-6cb15b000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:43 GMT

0

";

    public Test002619() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003832 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003832_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6711F3602D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee213cd-0001-0093-034f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003832() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003048 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003048_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A67067E1F48""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864470-0001-007d-6e4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003048() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003577 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003577_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670E1BAB87""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663a7f-0001-008c-6d4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003577() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003511 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003511_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D3CE99D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9dd8-0001-0008-5e4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003511() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003868 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003868_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712966F9E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f8ff-0001-0133-094f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003868() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003796 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003796_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67114EF0F3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f42a-0001-0133-454f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003796() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003347 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003347_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AE24AAA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617bade-0001-00c4-114f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003347() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003621 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003621_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670EBCBEDF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4c28-0001-00e2-444f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003621() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003439 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003439_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C2B7746""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e383-0001-0133-2f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003439() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003049 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003049_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A67067E465E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1dee4-0001-0093-644f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test003049() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003933 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003933_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A6713DCDCA6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d431-0001-00c4-1c4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003933() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003705 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003705_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A67100304D2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4ee8-0001-00e2-114f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003705() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002957 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002957_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A670525AE1D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7cc15-0001-0133-724f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002957() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003706 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003706_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A67100352FD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee20a62-0001-0093-024f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003706() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003597 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003597_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E7E9B06""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c57e-0001-00c4-464f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003597() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003869 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003869_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712975A19""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a665229-0001-008c-6a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003869() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003541 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003541_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670D9C5624""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d49b0-0001-00e2-2e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003541() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003625 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003625_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670EDA848D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663e98-0001-008c-424f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003625() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003317 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003317_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A67FF1A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1f10f-0001-0093-3b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003317() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003962 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003962_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A67141CD586""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d4cd-0001-00c4-234f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003962() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003955 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003955_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A67140A3514""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7fded-0001-0133-724f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003955() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002910 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002910_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:49 GMT
ETag: ""0x8D43A67048313FB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a660aa1-0001-008c-644f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:48 GMT

0

";

    public Test002910() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003091 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003091_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A67071FA7DD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc19e4-0001-0106-044f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003091() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003632 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003632_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670EE9C918""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663eef-0001-008c-154f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003632() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003991 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003991_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A6714B07951""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee222f6-0001-0093-3a4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003991() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003148 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003148_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A670816894F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea8d29-0001-0008-2d4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003148() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003239 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003239_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6709602B23""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ec47-0001-0093-694f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003239() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003633 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003633_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670EEA8C8A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c6ad-0001-00c4-614f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003633() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004017 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004017_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A67152741E9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d75a-0001-00c4-644f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004017() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004053 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004053_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A6715CB3BE1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e803aa-0001-0133-194f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004053() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003622 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003622_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670EBFA57B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663e07-0001-008c-3a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003622() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002958 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002958_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:50 GMT
ETag: ""0x8D43A670529A65F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc138c-0001-0106-664f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002958() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003912 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003912_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A6713696FF1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d2d7-0001-00c4-714f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003912() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003306 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003306_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A3F3B3E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2348-0001-0106-484f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003306() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002988 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002988_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BAD8C7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1599-0001-0106-294f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002988() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003670 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003670_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F7EA592""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c83f-0001-00c4-454f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003670() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003934 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003934_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A6713DD78FE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc3df5-0001-0106-6b4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003934() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003445 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003445_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C445A3A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663198-0001-008c-454f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003445() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003490 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003490_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CE93EB6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2aa5-0001-0106-284f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003490() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003182 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003182_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A67086A0D24""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1e38-0001-0106-644f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:55 GMT

0

";

    public Test003182() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003453 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003453_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C55E913""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617bf14-0001-00c4-2a4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003453() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003318 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003318_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A682630""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b970-0001-00c4-4d4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003318() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003707 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003707_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A67100352FD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66446e-0001-008c-294f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003707() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003665 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003665_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F6091EC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ee30-0001-0133-734f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003665() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003454 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003454_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C591DDB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66322c-0001-008c-514f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003454() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003721 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003721_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A671031E41A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f0c0-0001-0133-3e4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003721() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003835 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003835_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A671214F6FB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee2147c-0001-0093-234f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003835() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004054 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004054_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A6715CC748C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc43c5-0001-0106-094f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004054() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003307 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003307_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A3F3B3E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09865113-0001-007d-614f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003307() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003078 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003078_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A6707053E0D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617aeb8-0001-00c4-424f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003078() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003440 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003440_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C2CAFF5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1f9a3-0001-0093-7f4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003440() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004018 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004018_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A671527B733""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee224e9-0001-0093-074f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004018() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003284 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003284_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A03D6F0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09865062-0001-007d-4b4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:57 GMT

0

";

    public Test003284() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003935 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003935_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A6713DDA014""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee21e6d-0001-0093-1d4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003935() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003079 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003079_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:53 GMT
ETag: ""0x8D43A67070676BD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3a4d-0001-00e2-0e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003079() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004019 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004019_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A671528C8C8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc41e4-0001-0106-624f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004019() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003957 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003957_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A67140E7B7A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d4a4-0001-00c4-804f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003957() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003481 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003481_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CCF230E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d47d8-0001-00e2-1c4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003481() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003543 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003543_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670D9E2B22""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1ffb1-0001-0093-574f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003543() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003496 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003496_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CF8D16D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2ad1-0001-0106-4e4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003496() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003634 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003634_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670EEBC535""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4c80-0001-00e2-0e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003634() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003666 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003666_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F621894""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4d83-0001-00e2-684f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003666() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003708 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003708_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A67100352FD""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c9ce-0001-00c4-174f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003708() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004032 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004032_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A67155D2722""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d7f7-0001-00c4-694f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004032() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003898 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003898_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67133909C4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6655a8-0001-008c-294f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003898() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003441 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003441_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670C2EAC12""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4655-0001-00e2-534f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:01 GMT

0

";

    public Test003441() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002716 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002716_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:46 GMT
ETag: ""0x8D43A67027D3188""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc0b8a-0001-0106-734f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:45 GMT

0

";

    public Test002716() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003183 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003183_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A67086E538A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3df2-0001-00e2-304f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003183() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003149 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003149_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6708174CBC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b248-0001-00c4-734f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003149() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003419 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003419_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:02 GMT
ETag: ""0x8D43A670BF4595D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9955-0001-0008-704f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003419() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003227 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003227_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A67091CFD7C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea907b-0001-0008-194f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003227() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003993 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003993_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A6714B29C84""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ffe8-0001-0133-3a4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test003993() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003285 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003285_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A06485B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7dc96-0001-0133-1d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003285() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003760 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003760_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710CA1C8C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d50c5-0001-00e2-314f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003760() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003103 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003103_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A6707728F5B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7d3f9-0001-0133-7e4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003103() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003319 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003319_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:59 GMT
ETag: ""0x8D43A670A6B8212""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b97f-0001-00c4-5b4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003319() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003535 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003535_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D8DADE8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d499a-0001-00e2-1a4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003535() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002989 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002989_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BC5FBC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ce1a-0001-0133-434f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:51 GMT

0

";

    public Test002989() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003240 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003240_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A67096163DB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9161-0001-0008-654f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003240() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004055 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004055_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A6715CC9BA6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d958-0001-00c4-1a4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004055() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003936 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003936_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A6713DE155A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7fd5f-0001-0133-774f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003936() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003914 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003914_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A6713704EC2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc3ccd-0001-0106-684f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003914() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003482 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003482_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CCFBF61""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1fc8a-0001-0093-074f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003482() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003805 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003805_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67117989D2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f4e8-0001-0133-674f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003805() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003735 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003735_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A6710793116""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f1a3-0001-0133-034f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003735() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003978 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003978_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A67148172F6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d595f-0001-00e2-734f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003978() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003080 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003080_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A670706C4E9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1e1b3-0001-0093-724f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003080() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003811 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003811_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A6711BCDE98""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617cea1-0001-00c4-4c4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003811() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003483 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003483_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CD082D3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e5e5-0001-0133-434f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003483() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003920 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003920_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A6713A8CC70""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d383-0001-00c4-034f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003920() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003667 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003667_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F63C689""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c7e3-0001-00c4-754f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003667() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003937 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003937_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A6713DE8A93""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eab5fd-0001-0008-744f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003937() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003554 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003554_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670DE0E391""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4a5b-0001-00e2-414f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003554() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003081 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003081_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A6707071314""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea8877-0001-0008-6a4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:52 GMT

0

";

    public Test003081() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003979 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003979_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A6714819A08""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d5b8-0001-00c4-714f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003979() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003677 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003677_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F8DEA26""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c866-0001-00c4-644f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003677() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003899 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003899_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67133957F8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d56a3-0001-00e2-164f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003899() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003799 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003799_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67117087C5""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f4cb-0001-0133-4e4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003799() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003765 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003765_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710D5B6F4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d50eb-0001-00e2-524f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003765() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003736 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003736_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A67107A69C1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617cafe-0001-00c4-284f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003736() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003550 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003550_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670DDAC824""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663934-0001-008c-3e4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003550() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003150 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003150_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:55 GMT
ETag: ""0x8D43A6708179AE8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d3d18-0001-00e2-734f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003150() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004061 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004061_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A6715F7F7F3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc4438-0001-0106-724f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004061() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004025 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004025_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A67155228FC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc4259-0001-0106-4c4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004025() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003327 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003327_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AA69834""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617ba23-0001-00c4-6c4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003327() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003241 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003241_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:57 GMT
ETag: ""0x8D43A6709627570""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617b69d-0001-00c4-514f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:56 GMT

0

";

    public Test003241() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003642 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003642_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670F25C9C2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee206a6-0001-0093-2d4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003642() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003723 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003723_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A671034074D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc33d3-0001-0106-1e4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003723() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003484 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003484_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CD0A9E9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c07c-0001-00c4-614f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003484() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003715 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003715_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A671025AD41""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f09c-0001-0133-1f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003715() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003938 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003938_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A6713DF751F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5826-0001-00e2-5c4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003938() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003104 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003104_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A670772B671""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 09864792-0001-007d-2c4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003104() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003884 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003884_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67130547C2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6654b3-0001-008c-414f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003884() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003848 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003848_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A671260D88C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6650da-0001-008c-394f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003848() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003555 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003555_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670DE0E391""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e97a-0001-0133-524f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003555() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004001 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004001_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A6714F0E76E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e800ac-0001-0133-6d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004001() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003678 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003678_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F8ED4AE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4de1-0001-00e2-354f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003678() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003679 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003679_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670F900D59""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7eec5-0001-0133-7d4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003679() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003374 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003374_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B50AD95""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a662cda-0001-008c-614f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003374() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003599 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003599_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E85049B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c58d-0001-00c4-544f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003599() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003965 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003965_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A67144CED7E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d53f-0001-00c4-084f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003965() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003980 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003980_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A6714823664""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eab7f6-0001-0008-334f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003980() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004062 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004062_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A6715F8E27A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d9ce-0001-00c4-7d4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004062() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003724 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003724_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A6710365196""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaa99c-0001-0008-084f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003724() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003587 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003587_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E41D6EB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663b76-0001-008c-584f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003587() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004014 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004014_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A671524F7A0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e80167-0001-0133-144f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004014() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00595 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00595_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEF11C5C5""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa773-0001-0000-3be6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:36 GMT

0

";

    public Test00595() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers2c6dc881d9b64b7aa073991441f34e2f",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003375 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003375_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B50D4A7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d445b-0001-00e2-334f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:59 GMT

0

";

    public Test003375() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003485 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003485_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CD0D0FF""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66349e-0001-008c-0f4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003485() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003105 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003105_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A6707732BB2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc1ac4-0001-0106-4a4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003105() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002990 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002990_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705BC86B8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617aae5-0001-00c4-7d4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002990() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00539 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00539_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEEAEE48F""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa726-0001-0000-02e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:35 GMT

0

";

    public Test00539() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersca1b9a6d051b496ab550ef0b279cb71c",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003556 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003556_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670DE10AAB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee200c8-0001-0093-524f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003556() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002968 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002968_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A6705716898""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc147b-0001-0106-374f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:50 GMT

0

";

    public Test002968() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004015 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004015_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A671525BB16""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaba2d-0001-0008-274f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004015() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003954 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003954_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A67140A3514""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eab69d-0001-0008-024f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003954() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003376 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003376_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:01 GMT
ETag: ""0x8D43A670B50AD95""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2626-0001-0106-4b4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:00 GMT

0

";

    public Test003376() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004016 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004016_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A6715251EC7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5acd-0001-00e2-224f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004016() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003981 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003981_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A6714825D75""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ff31-0001-0133-104f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test003981() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00572 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00572_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEEE907CA""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa750-0001-0000-22e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:35 GMT

0

";

    public Test00572() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerscac7716e1c2d4447ae454c4d747d06da",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004034 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004034_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A671564542C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5b64-0001-00e2-264f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004034() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00565 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00565_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEEDF6AC9""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa748-0001-0000-1ce6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:35 GMT

0

";

    public Test00565() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersc116a400f07e4be3a7e25bcc394fff8a",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00604 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00604_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEF228EC5""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa77f-0001-0000-44e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:36 GMT

0

";

    public Test00604() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers50e63bf7fe584df9a4c8b91e8c9eea61",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00611 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00611_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEF2D3D37""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa788-0001-0000-4be6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:36 GMT

0

";

    public Test00611() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersf79e2698aa2d4f0c942dda885827014f",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003498 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003498_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:03 GMT
ETag: ""0x8D43A670CFA7F67""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9cff-0001-0008-294f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003498() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003877 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003877_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712C2684B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66531a-0001-008c-4f4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003877() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003106 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003106_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:54 GMT
ETag: ""0x8D43A67077379DE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66198b-0001-008c-024f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:53 GMT

0

";

    public Test003106() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003807 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003807_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67117D8215""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a664c5d-0001-008c-254f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003807() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003790 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003790_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67114BBC27""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee210a2-0001-0093-234f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003790() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004106 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004106_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A6716ABF9E8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee22c0f-0001-0093-074f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004106() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003917 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003917_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67137902AC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d304-0001-00c4-164f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003917() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004070 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004070_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A671608C362""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e8044b-0001-0133-1b4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004070() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003808 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003808_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67117FF36F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617ce0a-0001-00c4-464f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003808() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test002969 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\002969_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:51 GMT
ETag: ""0x8D43A67057B2E13""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 098640b0-0001-007d-2f4f-6cc81c000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:49 GMT

0

";

    public Test002969() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003710 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003710_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A6710043D81""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaa8e4-0001-0008-5e4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003710() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004127 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004127_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:21 GMT
ETag: ""0x8D43A67171F1876""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5f0b-0001-00e2-4c4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:19 GMT

0

";

    public Test004127() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003791 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003791_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67114CA6AB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5217-0001-00e2-434f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003791() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00598 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00598_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEF19B519""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa777-0001-0000-3ee6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:36 GMT

0

";

    public Test00598() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers78997d8139e8408694957de9e36f32ec",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003982 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003982_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A671483BD3B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee22204-0001-0093-604f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003982() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003499 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003499_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670CFD17D3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a66357c-0001-008c-514f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:02 GMT

0

";

    public Test003499() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003600 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003600_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E8579DC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a663caf-0001-008c-7d4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003600() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003878 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003878_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712C5EB36""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5590-0001-00e2-2a4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003878() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003996 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003996_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A6714B92D32""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d59ed-0001-00e2-664f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003996() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003983 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003983_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A671484A7C3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5967-0001-00e2-784f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003983() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003792 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003792_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67114CCDC1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaad26-0001-0008-3c4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003792() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003601 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003601_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670E88FCD0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2f1b-0001-0106-024f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003601() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003826 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003826_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6711F05277""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617cf21-0001-00c4-424f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003826() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003960 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003960_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:15 GMT
ETag: ""0x8D43A671415F6AC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d58a5-0001-00e2-494f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003960() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003827 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003827_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6711F13CFB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaaf58-0001-0008-2c4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003827() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00558 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00558_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEED5A6B8""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa740-0001-0000-16e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:35 GMT

0

";

    public Test00558() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers6405927489f64fa4b4f6ea53080d5b65",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004109 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004109_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A6716DB275D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee22cd4-0001-0093-3d4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004109() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004090 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004090_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A67167466BE""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617daf9-0001-00c4-7d4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004090() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003828 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003828_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6711F1D952""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc38a1-0001-0106-444f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003828() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003687 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003687_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670FD18D14""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7efbd-0001-0133-564f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003687() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003644 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003644_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670F2DE150""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4d1a-0001-00e2-174f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003644() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003751 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003751_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710A7E952""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7f236-0001-0133-0a4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003751() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003793 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003793_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67114D1BEC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617cd7e-0001-00c4-554f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003793() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003900 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003900_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67133A1B62""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eab3bb-0001-0008-054f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003900() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00552 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00552_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEEC9718A""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa738-0001-0000-10e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:35 GMT

0

";

    public Test00552() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers09de4071897643149fbf4a100820101e",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004037 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004037_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A6715946C24""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5bd9-0001-00e2-0e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004037() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004091 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004091_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A671673F17C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee22b3c-0001-0093-474f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004091() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003732 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003732_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:09 GMT
ETag: ""0x8D43A67107538E1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc3468-0001-0106-234f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003732() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003829 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003829_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6711F18B26""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a664e73-0001-008c-0c4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003829() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003688 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003688_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:08 GMT
ETag: ""0x8D43A670FD2025E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee2095d-0001-0093-1a4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:07 GMT

0

";

    public Test003688() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003570 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003570_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670E16A1B4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ea3e-0001-0133-7b4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:05 GMT

0

";

    public Test003570() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003752 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003752_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710A8ACBB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a664797-0001-008c-0b4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003752() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003872 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003872_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712BA0288""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a6652e8-0001-008c-214f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003872() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003645 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003645_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:07 GMT
ETag: ""0x8D43A670F302B95""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c768-0001-00c4-074f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003645() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004027 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004027_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A6715542519""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee225c3-0001-0093-4b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004027() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003329 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003329_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:00 GMT
ETag: ""0x8D43A670AA8BB8E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea95a9-0001-0008-344f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:58 GMT

0

";

    public Test003329() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm6",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003840 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003840_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A67121DD1F2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5414-0001-00e2-6d4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003840() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003794 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003794_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:11 GMT
ETag: ""0x8D43A67114D1BEC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc36bc-0001-0106-294f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003794() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003768 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003768_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710D9FD67""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee20e89-0001-0093-3a4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003768() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003901 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003901_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67133A1B62""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee21a20-0001-0093-254f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003901() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00577 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00577_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEEF1E17F""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa758-0001-0000-28e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:36 GMT

0

";

    public Test00577() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers83463da440b947fdb1ad7b396ce19cbd",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003571 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003571_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:05 GMT
ETag: ""0x8D43A670E16EFE0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d4ad6-0001-00e2-274f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003571() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004065 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004065_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A6715FCB39E""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e8040e-0001-0133-6f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004065() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004029 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004029_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A671558B9A6""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d7ec-0001-00c4-5f4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test004029() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003902 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003902_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67133A69A3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7fb41-0001-0133-184f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003902() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003753 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003753_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710A8ACBB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc350d-0001-0106-354f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003753() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003998 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003998_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:17 GMT
ETag: ""0x8D43A6714C0A860""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e8001c-0001-0133-6b4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:16 GMT

0

";

    public Test003998() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003769 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003769_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710DC47A7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaabf5-0001-0008-264f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:09 GMT

0

";

    public Test003769() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003842 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003842_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6712221860""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee214b8-0001-0093-5b4f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003842() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003863 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003863_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A671293FE3F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a665211-0001-008c-554f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003863() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003903 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003903_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67133B540D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617d25c-0001-00c4-044f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003903() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003908 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003908_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67135D873F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7fbdd-0001-0133-254f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:14 GMT

0

";

    public Test003908() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00545 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00545_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:36 GMT
ETag: ""0x8D439FDEEB944EA""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa72f-0001-0000-09e6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:35 GMT

0

";

    public Test00545() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4342350d5e0e4dda93cb3498165d69fe",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003754 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003754_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:10 GMT
ETag: ""0x8D43A6710A921F8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eaab6d-0001-0008-284f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:08 GMT

0

";

    public Test003754() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003989 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003989_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:16 GMT
ETag: ""0x8D43A6714AE07F2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d59d5-0001-00e2-514f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:15 GMT

0

";

    public Test003989() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003909 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003909_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:14 GMT
ETag: ""0x8D43A67135E2396""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc3cb2-0001-0106-504f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:13 GMT

0

";

    public Test003909() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003526 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003526_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D72F5EC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617c267-0001-00c4-144f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003526() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004073 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004073_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A67163817EC""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e804a5-0001-0133-6a4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004073() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003615 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003615_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670EBAE9D4""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2fc3-0001-0106-194f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003615() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003864 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003864_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A67129536EA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee216cc-0001-0093-324f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003864() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003865 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003865_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A671295FA5C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d551c-0001-00e2-4e4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003865() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003866 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003866_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712962169""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eab196-0001-0008-204f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003866() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003867 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003867_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712962169""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc3a6a-0001-0106-5c4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003867() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003830 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003830_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A6711F20060""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d53bb-0001-00e2-234f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:10 GMT

0

";

    public Test003830() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003168 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003168_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A67085214B3""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee1e766-0001-0093-044f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003168() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003527 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003527_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D734418""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea9eb3-0001-0008-1b4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003527() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003616 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003616_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:06 GMT
ETag: ""0x8D43A670EBB5F16""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7ec1f-0001-0133-1c4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:06 GMT

0

";

    public Test003616() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003881 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003881_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:13 GMT
ETag: ""0x8D43A6712D52FCA""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a665389-0001-008c-354f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:12 GMT

0

";

    public Test003881() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003169 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003169_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:15:56 GMT
ETag: ""0x8D43A670852B10A""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68ea8dda-0001-0008-494f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:15:54 GMT

0

";

    public Test003169() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004067 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004067_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A671600D2F2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5d11-0001-00e2-204f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004067() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003528 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003528_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D73B959""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc2c0c-0001-0106-654f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:03 GMT

0

";

    public Test003528() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003845 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003845_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:12 GMT
ETag: ""0x8D43A671228A90B""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 2a664fbb-0001-008c-3a4f-6c198f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:11 GMT

0

";

    public Test003845() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004086 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004086_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A67167306F9""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e80540-0001-0133-724f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:19 GMT

0

";

    public Test004086() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test00897 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\00897_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:43:53 GMT
ETag: ""0x8D439FDF940CEFF""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaa95b-0001-0000-2de6-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:43:53 GMT

0

";

    public Test00897() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers504be5e4792646d4a19fd8e81066b7d0",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004050 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004050_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A6715CE70B1""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee22822-0001-0093-784f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004050() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test003529 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\003529_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:04 GMT
ETag: ""0x8D43A670D747CC7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e7e81f-0001-0133-314f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:04 GMT

0

";

    public Test003529() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004051 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004051_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A6715CC2660""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5c91-0001-00e2-314f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004051() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004121 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004121_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A6717168BA7""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee22dd8-0001-0093-264f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:19 GMT

0

";

    public Test004121() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004087 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004087_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A671673F17C""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eabef4-0001-0008-7a4f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004087() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004088 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004088_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A6716743FA8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 898d5de8-0001-00e2-4f4f-6cb0a6000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004088() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004097 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004097_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A67169BF1EB""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc45f8-0001-0106-7b4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:19 GMT

0

";

    public Test004097() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004052 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004052_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:18 GMT
ETag: ""0x8D43A6715CAC69F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eabccf-0001-0008-054f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:17 GMT

0

";

    public Test004052() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004122 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004122_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A6717179D49""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617dc6d-0001-00c4-464f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:19 GMT

0

";

    public Test004122() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquireapm3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004089 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004089_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:19 GMT
ETag: ""0x8D43A6716743FA8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc458b-0001-0106-1a4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004089() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004123 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004123_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A67171860B2""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 05e80711-0001-0133-0f4f-6c4bac000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:20 GMT

0

";

    public Test004123() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewtask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004133 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004133_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:21 GMT
ETag: ""0x8D43A67173F769D""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc47aa-0001-0106-7d4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:20 GMT

0

";

    public Test004133() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004124 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004124_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A67171887C8""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 9efc473a-0001-0106-1a4f-6ce5f9000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:20 GMT

0

";

    public Test004124() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004125 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004125_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A6717192420""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 68eac0ec-0001-0008-424f-6c4fa7000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:19 GMT

0

";

    public Test004125() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiretask2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004100 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004100_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A67169CDC73""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617db50-0001-00c4-474f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004100() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004101 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004101_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A6716A0113F""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 3ee22be3-0001-0093-604f-6cc29f000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004101() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-acquiresync3",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test004103 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\004103_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 21:16:20 GMT
ETag: ""0x8D43A6716A457A0""
Vary: Origin
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 6617db66-0001-00c4-5b4f-6c2b12000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 21:16:18 GMT

0

";

    public Test004103() : base(recordedRequest, recordedResponse, "xclientdev3")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "xclientdev3",
                        container: "e0a0099a632748dcbf374a843e1c2eb4-renewsync2",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04308 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04308_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:48:42 GMT
ETag: ""0x8D439FEA5963CA8""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac059-0001-0000-57e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: blob
Date: Wed, 11 Jan 2017 08:48:42 GMT

0

";

    public Test04308() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers94b785c60842411c88f14c5b8f52175a",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04515 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04515_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:49 GMT
ETag: ""0x8D439FEF0FED121""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac30e-0001-0000-1ae7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:49 GMT

0

";

    public Test04515() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers28095d2166c54f6b85449d9a56203899",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04467 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04467_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE4C5689""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2be-0001-0000-5be7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04467() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersf705c85de29d45eba2301aae16cfcf66",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04420 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04420_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEDF694BE""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac27f-0001-0000-2ae7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04420() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0895fbbec40d43e38be0b49b02b5c9e5",
                        timeout: 30,
                        leaseId: "7b32199f-3db1-4fb8-ba6f-0e1f4bb93a24",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04361 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04361_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:13 GMT
ETag: ""0x8D439FEDBA7B6D6""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac1a5-0001-0000-73e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:50:12 GMT

0

";

    public Test04361() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers6f6ba1e9b52a4ed48fd91c411d5ec30d",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04438 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04438_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE189BCF""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac295-0001-0000-3ce7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04438() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers32dc119e408444b3ab19aa66e908dadb",
                        timeout: 30,
                        leaseId: "51bb0709-c2d4-4c2b-968d-464e4df41d2f",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04533 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04533_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:51 GMT
ETag: ""0x8D439FEF24E84FF""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac332-0001-0000-36e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:52 GMT

0

";

    public Test04533() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7a3f3d08b6364110ae63bf68783834eb",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04473 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04473_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE564187""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2c6-0001-0000-61e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04473() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers54c04cef62b94c3097b39dc69080b45c",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04455 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04455_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE38801A""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2ae-0001-0000-4fe7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04455() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers9748fcbcb11e499bb7353a6a65de0f9a",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04485 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04485_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:45 GMT
ETag: ""0x8D439FEEE6A65F7""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2e0-0001-0000-76e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:46 GMT

0

";

    public Test04485() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers23770acfab984d1887c84477e3bf5777",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04503 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04503_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:49 GMT
ETag: ""0x8D439FEF0EBBE33""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2fe-0001-0000-0ee7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:49 GMT

0

";

    public Test04503() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers80d8ddd2c85d4aaeab553e92935d64ef",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04521 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04521_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:49 GMT
ETag: ""0x8D439FEF1090A4C""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac316-0001-0000-20e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:49 GMT

0

";

    public Test04521() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerscb6570df2cd74c15b20de7e02e3be72a",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04313 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04313_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:48:42 GMT
ETag: ""0x8D439FEA5A027E4""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac05f-0001-0000-5ce7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 08:48:42 GMT

0

";

    public Test04313() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containerse395d85621764902813537af8934b9a5",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04347 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04347_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:13 GMT
ETag: ""0x8D439FEDB8895E5""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac193-0001-0000-65e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:50:12 GMT

0

";

    public Test04347() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers38a0e0c6999047cbab4f244f4e4e66e5",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04056 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04056_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:48:40 GMT
ETag: ""0x8D439FEA404765A""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aabf2d-0001-0000-52e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 08:48:39 GMT

0

";

    public Test04056() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers36689e70fe33448e93ec28ff855c90bf",
                        timeout: 30,
                        leaseId: "be5475b3-a520-4327-96f6-5386f4c3cef7",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04443 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04443_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE214E86""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac29d-0001-0000-42e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04443() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersa8d8fece8011412ab4334a85f6fb8a76",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04426 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04426_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE07ABD6""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac287-0001-0000-30e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04426() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers3c7b2f923c164f48ba072ebe35698d7f",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04354 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04354_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:13 GMT
ETag: ""0x8D439FEDB98C29C""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac19c-0001-0000-6ce7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:50:12 GMT

0

";

    public Test04354() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersc80779b6c79f46d5bda216c809bc76f5",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04479 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04479_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE607ABF""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2ce-0001-0000-67e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04479() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers77d1301cbbef4e309407d04a2b77cb9d",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test03900 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\03900_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:48:38 GMT
ETag: ""0x8D439FEA2F5004E""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aabe5e-0001-0000-30e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:48:38 GMT

0

";

    public Test03900() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5fe0438f88404597b844990419125c1e",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05773 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05773_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:52:10 GMT
ETag: ""0x8D439FF216E7371""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac995-0001-0000-2ae7-6b3467000000
x-ms-version: 2016-05-31
x-ms-meta-color: blue
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:52:10 GMT

0

";

    public Test05773() : base(recordedRequest, recordedResponse, "accounts8d439ff2165249e")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d439ff2165249e",
                        container: "containers3022d866d3f04b6d852e8b5e70ea8607",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04461 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04461_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE429259""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2b6-0001-0000-55e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04461() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers4c3d684cd6ac4e02a77a6125b9475a76",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04527 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04527_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:49 GMT
ETag: ""0x8D439FEF112F56D""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac324-0001-0000-2be7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:51 GMT

0

";

    public Test04527() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers253df0bc805e4a2e9047a4d527d0e815",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04429 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04429_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE07ABD6""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac28a-0001-0000-33e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04429() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers3c7b2f923c164f48ba072ebe35698d7f",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04491 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04491_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:47 GMT
ETag: ""0x8D439FEEFA58046""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2ed-0001-0000-01e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: broken
Date: Wed, 11 Jan 2017 08:50:49 GMT

0

";

    public Test04491() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers65082cee6afd47ef9122555118a6eb43",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05749 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05749_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:52:10 GMT
ETag: ""0x8D439FF2124E6D0""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac970-0001-0000-0fe7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:52:09 GMT

0

";

    public Test05749() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers3e2bd403dcfa461ca22af747ae14b149",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04509 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04509_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:49 GMT
ETag: ""0x8D439FEF0F58244""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac306-0001-0000-14e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:49 GMT

0

";

    public Test04509() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersd648274f07ae4256ab318bc19e203ba2",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04300 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04300_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:48:42 GMT
ETag: ""0x8D439FEA58DD843""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac051-0001-0000-4fe7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
x-ms-blob-public-access: container
Date: Wed, 11 Jan 2017 08:48:42 GMT

0

";

    public Test04300() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers94b785c60842411c88f14c5b8f52175a",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04414 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04414_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEDF694BE""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac278-0001-0000-23e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04414() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0895fbbec40d43e38be0b49b02b5c9e5",
                        timeout: 30,
                        leaseId: "798aa128-3775-4be0-9183-470e4924bb85",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05901 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05901_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:52:19 GMT
ETag: ""0x8D439FF26C75ACF""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aaca68-0001-0000-4be8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:52:21 GMT

0

";

    public Test05901() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers3904bbdec9804af6ad4b8f194fbf19d2",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04433 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04433_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE07ABD6""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac28e-0001-0000-37e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04433() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers3c7b2f923c164f48ba072ebe35698d7f",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04417 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04417_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEDF694BE""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac27c-0001-0000-27e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04417() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0895fbbec40d43e38be0b49b02b5c9e5",
                        timeout: 30,
                        leaseId: "3a7dc269-d3b1-430c-8042-3254a6704028",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04337 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04337_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:13 GMT
ETag: ""0x8D439FEDB77F415""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac185-0001-0000-5be7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:50:12 GMT

0

";

    public Test04337() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0a8979c0769f400b9109512eb61e3769",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04450 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04450_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:44 GMT
ETag: ""0x8D439FEEE2CC032""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2a7-0001-0000-4ae7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: fixed
Date: Wed, 11 Jan 2017 08:50:44 GMT

0

";

    public Test04450() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersc1b9e24e04974b6cb09a370784756947",
                        timeout: 30,
                        leaseId: "8398491c-55dc-4b80-ae70-bbb8a5be7003",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04304 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04304_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:48:42 GMT
ETag: ""0x8D439FEA5926C10""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac055-0001-0000-53e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:48:42 GMT

0

";

    public Test04304() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers94b785c60842411c88f14c5b8f52175a",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04497 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04497_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:50:49 GMT
ETag: ""0x8D439FEF0E184ED""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac2f6-0001-0000-08e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: breaking
Date: Wed, 11 Jan 2017 08:50:49 GMT

0

";

    public Test04497() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers7ad12cfc061a4062b5e25fef340227b8",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test04050 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\04050_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:48:40 GMT
ETag: ""0x8D439FEA3F9C7FA""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aabf27-0001-0000-4ce7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 08:48:39 GMT

0

";

    public Test04050() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers36689e70fe33448e93ec28ff855c90bf",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07211 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07211_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:31 GMT
ETag: ""0x8D439FFE09A66AF""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad2f0-0001-0000-25e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:32 GMT

0

";

    public Test07211() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersd672d77d627248eca0e50821a838ba3c",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07147 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07147_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:24 GMT
ETag: ""0x8D439FFDC9A81EC""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad293-0001-0000-52e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:25 GMT

0

";

    public Test07147() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers5f95f33153e648bebfde1c9b606122ef",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07133 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07133_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:22 GMT
ETag: ""0x8D439FFDB546B0B""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad27c-0001-0000-3ee8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:24 GMT

0

";

    public Test07133() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersd67dcbdb8970497fb98d971662070b74",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07103 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07103_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:21 GMT
ETag: ""0x8D439FFDAFEA968""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad247-0001-0000-16e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:21 GMT

0

";

    public Test07103() : base(recordedRequest, recordedResponse, "accounts8d439ffdaf5f6b6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d439ffdaf5f6b6",
                        container: "containers2d9b0995385f4be29bfb7b6c94c681c1",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07200 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07200_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:31 GMT
ETag: ""0x8D439FFE08CAAED""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad2d7-0001-0000-10e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:30 GMT

0

";

    public Test07200() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers554d6fad5c294f39a17c049ed4f0968e",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test05813 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\05813_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:52:12 GMT
ETag: ""0x8D439FF2260EB7C""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aac9c3-0001-0000-51e7-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:52:11 GMT

0

";

    public Test05813() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers734aed706d214e43a49edd5867dc4474",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07170 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07170_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:26 GMT
ETag: ""0x8D439FFDDE357F0""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad2ad-0001-0000-6ae8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:28 GMT

0

";

    public Test07170() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers0cebed1086394e99b2c40c89fcd40cb7",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07110 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07110_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:22 GMT
ETag: ""0x8D439FFDB12A6B2""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad251-0001-0000-1de8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:21 GMT

0

";

    public Test07110() : base(recordedRequest, recordedResponse, "accounts8d439ffdb0a4225")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d439ffdb0a4225",
                        container: "containers4b532a9214e340e691655e121d39c9db",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07222 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07222_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:33 GMT
ETag: ""0x8D439FFE1E1DD02""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad300-0001-0000-32e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:35 GMT

0

";

    public Test07222() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers175310d22b4448bf801cb74c8b273047",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07253 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07253_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:35 GMT
ETag: ""0x8D439FFE3419679""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad32a-0001-0000-54e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:35 GMT

0

";

    public Test07253() : base(recordedRequest, recordedResponse, "accounts8d439ffe3390af6")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d439ffe3390af6",
                        container: "containersfe5fb7027d7e448aaad759a3fbd1880a",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07117 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07117_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:22 GMT
ETag: ""0x8D439FFDB26F21C""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad25b-0001-0000-24e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:21 GMT

0

";

    public Test07117() : base(recordedRequest, recordedResponse, "accounts8d439ffdb1eb4b1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d439ffdb1eb4b1",
                        container: "containersc92e25d856ae4d32a49561628f2bea0d",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07123 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07123_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:22 GMT
ETag: ""0x8D439FFDB49476D""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad264-0001-0000-2ae8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:21 GMT

0

";

    public Test07123() : base(recordedRequest, recordedResponse, "accounts8d439ffdb354a23")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d439ffdb354a23",
                        container: "containers0166234d07a244669b451b04f724e20c",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test07193 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\07193_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 08:57:29 GMT
ETag: ""0x8D439FFDF368E5C""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11aad2ce-0001-0000-09e8-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 08:57:30 GMT

0

";

    public Test07193() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers133b9a8264fe4390a99e09b957d11df1",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test17764 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\17764_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:14:19 GMT
ETag: ""0x8D43A02393F055B""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab0bb5-0001-0000-0eeb-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 09:14:18 GMT

0

";

    public Test17764() : base(recordedRequest, recordedResponse, "accounts8d43a0239360495")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a0239360495",
                        container: "containers53cc09707a3c4988bc049522b7310679",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19713 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19713_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:14:50 GMT
ETag: ""0x8D43A024C0FBE43""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab157a-0001-0000-3feb-6b3467000000
x-ms-version: 2016-05-31
x-ms-meta-Key: Value
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:14:50 GMT

0

";

    public Test19713() : base(recordedRequest, recordedResponse, "accounts8d43a024c06bd90")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a024c06bd90",
                        container: "abc",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test22366 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\22366_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:30:53 GMT
ETag: ""0x8D43A048A2E03F3""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab2b5d-0001-0000-7aed-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:30:53 GMT

0

";

    public Test22366() : base(recordedRequest, recordedResponse, "accounts8d43a048a252a2c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a048a252a2c",
                        container: "$logs",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21761 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21761_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:26:57 GMT
ETag: ""0x8D43A03FD8506A4""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab2724-0001-0000-5cec-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:26:57 GMT

0

";

    public Test21761() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersb7bf83a536064ad9b8561121acfff0e7",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test22368 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\22368_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:30:53 GMT
ETag: ""0x8D43A048A3FB777""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab2b67-0001-0000-7ded-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:30:53 GMT

0

";

    public Test22368() : base(recordedRequest, recordedResponse, "accounts8d43a048a372bba")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a048a372bba",
                        container: "$logs",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test22370 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\22370_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:30:54 GMT
ETag: ""0x8D43A048A505932""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab2b70-0001-0000-7fed-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:30:53 GMT

0

";

    public Test22370() : base(recordedRequest, recordedResponse, "accounts8d43a048a48b81d")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a048a48b81d",
                        container: "$logs",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21767 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21767_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:26:57 GMT
ETag: ""0x8D43A03FD8F66E0""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab272c-0001-0000-62ec-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:26:57 GMT

0

";

    public Test21767() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containersfcf61cbd503f48aba509e8c729770af6",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21773 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21773_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:26:58 GMT
ETag: ""0x8D43A03FD9951FC""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab2734-0001-0000-68ec-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:26:57 GMT

0

";

    public Test21773() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers1e268c48cabe4056922d87352e1f92ab",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test17772 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\17772_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:14:19 GMT
ETag: ""0x8D43A02394A9E3B""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab0bbd-0001-0000-16eb-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: locked
x-ms-lease-state: leased
x-ms-lease-duration: infinite
Date: Wed, 11 Jan 2017 09:14:18 GMT

0

";

    public Test17772() : base(recordedRequest, recordedResponse, "accounts8d43a0239360495")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a0239360495",
                        container: "containers53cc09707a3c4988bc049522b7310679",
                        timeout: 30,
                        leaseId: "83c00cac-555e-4ce2-94b6-9cf43c42fecc",
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23020 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23020_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23020_s.txt", Encoding.UTF8);

    public Test23020() : base(recordedRequest, recordedResponse, "accounts8d43a0494d01b0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a0494d01b0c",
                        container: "$logs",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23022 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23022_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23022_s.txt", Encoding.UTF8);

    public Test23022() : base(recordedRequest, recordedResponse, "accounts8d43a0494d01b0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a0494d01b0c",
                        container: "$logs",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test23024 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23024_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = File.ReadAllText("E:\\BlobStorageTests\\ALL\\23024_s.txt", Encoding.UTF8);

    public Test23024() : base(recordedRequest, recordedResponse, "accounts8d43a0494d01b0c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a0494d01b0c",
                        container: "$logs",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test21429 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\21429_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:26:25 GMT
ETag: ""0x8D43A03EA56759A""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab24b7-0001-0000-0dec-6b3467000000
x-ms-version: 2016-05-31
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:26:24 GMT

0

";

    public Test21429() : base(recordedRequest, recordedResponse, "testaccount1")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "testaccount1",
                        container: "containers8cf03223cadf44db83e560a184935803",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}

//<dump disabled/>

public class Test19596 : TestBase
{
    private static readonly string recordedRequest = File.ReadAllText("E:\\BlobStorageTests\\ALL\\19596_c.txt", Encoding.UTF8);
    private static readonly string recordedResponse = @"HTTP/1.1 200 OK
Transfer-Encoding: chunked
Last-Modified: Wed, 11 Jan 2017 09:14:49 GMT
ETag: ""0x8D43A024BA4C6B6""
Server: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0
x-ms-request-id: 11ab14fd-0001-0000-45eb-6b3467000000
x-ms-version: 2016-05-31
x-ms-meta-Key: Value
x-ms-lease-status: unlocked
x-ms-lease-state: available
Date: Wed, 11 Jan 2017 09:14:49 GMT

0

";

    public Test19596() : base(recordedRequest, recordedResponse, "accounts8d43a024b9a186c")
    { }

    [Fact]
    public void Execute()
    {
        // start server
        StartServer();

        try
        {
            // create and use client
            var serviceClient = new AzureStorageClient(this.Credentials);
            serviceClient.BaseUri = new UriBuilder("http", "localhost", Port).Uri.ToString();
            //<bodyParamInit/>
            try
            {
                serviceClient.HttpClient.DefaultRequestHeaders.ExpectContinue = false;
                var cancellationToken = Debugger.IsAttached
                    ? new CancellationToken()
                    : new CancellationTokenSource(3000).Token;
                var result = serviceClient.Container.GetPropertiesWithHttpMessagesAsync(
                        accountName: "accounts8d43a024b9a186c",
                        container: "foo",
                        timeout: 30,
                        cancellationToken: cancellationToken).GetAwaiter().GetResult();
                
                
            }
            catch (CloudException)
            {
                throw; // expected success

                // validate e.Body or similar?
            }
            catch (ValidationException)
            {
                throw; // expected success
            }
            catch (ArgumentException)
            {
                throw; // expected success
            }
        }
        catch
        {
            // prioritize! The server exception might have caused the exception on this thread (but get's swallowed by VS and such)
            if (ServerException != null)
                /*<*/throw ServerException/*></assertServerFail>*/;
            else
                throw;
        }
        finally
        {
            // stop server
            StopServer();
        }
    }
}
